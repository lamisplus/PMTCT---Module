[{"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\index.js":"1","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\App.js":"2","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\reportWebVitals.js":"3","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\context\\ThemeContext.js":"4","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Home.js":"5","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Patient\\EnrollPatient.js":"6","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Patient\\UpdatePatientEnrollment.js":"7","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDetail.js":"8","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\context\\ThemeDemo.js":"9","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Patient\\RegisterPatient.js":"10","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\api.js":"11","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Patient\\PatientList.js":"12","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Patient\\ActiveANCPatientList.js":"13","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Patient\\PmtctPatients.js":"14","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Patient\\SubMenu.js":"15","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Patient\\PatientCard.js":"16","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PmtctServices\\PmtctEnrollment.js":"17","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PmtctServices\\AncEnrollement.js":"18","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PmtctServices\\LabourDelivery.js":"19","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PmtctServices\\Partners\\Index.js":"20","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Consultation\\Index.js":"21","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PmtctServices\\Infants\\InfantRegistration.js":"22","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PmtctServices\\Infants\\Index.js":"23","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PmtctServices\\Partners\\AddNewPartner.js":"24","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\Index.js":"25","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\History\\RecentHistory.js":"26","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\History\\PatientHistory.js":"27","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PmtctServices\\PmtctEntryPoint\\index.js":"28","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\RiskStratification.js":"29","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\PostTest.js":"30","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\RecencyTesting.js":"31","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\Others.js":"32","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\HivTestResult.js":"33","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\BasicInfo.js":"34","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\PreTest.js":"35","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\Elicitation\\Index.js":"36","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Consultation\\Home.js":"37","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Consultation\\InfantVisit.js":"38","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\Elicitation\\AddIndexContact.js":"39","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\Elicitation\\IndexContactList.js":"40"},{"size":729,"mtime":1701787775054,"results":"41","hashOfConfig":"42"},{"size":1644,"mtime":1702246245975,"results":"43","hashOfConfig":"42"},{"size":362,"mtime":1701787777194,"results":"44","hashOfConfig":"42"},{"size":8947,"mtime":1701787777214,"results":"45","hashOfConfig":"42"},{"size":3021,"mtime":1701805231244,"results":"46","hashOfConfig":"42"},{"size":45616,"mtime":1701789105858,"results":"47","hashOfConfig":"42"},{"size":39442,"mtime":1702247651933,"results":"48","hashOfConfig":"42"},{"size":8123,"mtime":1702474548025,"results":"49","hashOfConfig":"42"},{"size":2920,"mtime":1701787777224,"results":"50","hashOfConfig":"42"},{"size":104501,"mtime":1702223859865,"results":"51","hashOfConfig":"42"},{"size":427,"mtime":1702475155498,"results":"52","hashOfConfig":"42"},{"size":10946,"mtime":1701855036170,"results":"53","hashOfConfig":"42"},{"size":8766,"mtime":1701858227832,"results":"54","hashOfConfig":"42"},{"size":8815,"mtime":1701858232416,"results":"55","hashOfConfig":"42"},{"size":4857,"mtime":1702475086217,"results":"56","hashOfConfig":"42"},{"size":12743,"mtime":1702244718578,"results":"57","hashOfConfig":"42"},{"size":26491,"mtime":1702161022795,"results":"58","hashOfConfig":"42"},{"size":25956,"mtime":1701787815604,"results":"59","hashOfConfig":"42"},{"size":37119,"mtime":1701789105877,"results":"60","hashOfConfig":"42"},{"size":9522,"mtime":1701787815668,"results":"61","hashOfConfig":"42"},{"size":3175,"mtime":1702391837218,"results":"62","hashOfConfig":"42"},{"size":17859,"mtime":1702391444738,"results":"63","hashOfConfig":"42"},{"size":12148,"mtime":1701789105874,"results":"64","hashOfConfig":"42"},{"size":22734,"mtime":1701787815658,"results":"65","hashOfConfig":"42"},{"size":13505,"mtime":1701787815361,"results":"66","hashOfConfig":"42"},{"size":30148,"mtime":1702373755830,"results":"67","hashOfConfig":"42"},{"size":16388,"mtime":1702245813641,"results":"68","hashOfConfig":"42"},{"size":4663,"mtime":1701789105877,"results":"69","hashOfConfig":"42"},{"size":65944,"mtime":1701787815422,"results":"70","hashOfConfig":"42"},{"size":30282,"mtime":1701787815391,"results":"71","hashOfConfig":"42"},{"size":31414,"mtime":1701787815411,"results":"72","hashOfConfig":"42"},{"size":12541,"mtime":1701787815381,"results":"73","hashOfConfig":"42"},{"size":58967,"mtime":1701787815358,"results":"74","hashOfConfig":"42"},{"size":34572,"mtime":1701787815340,"results":"75","hashOfConfig":"42"},{"size":77391,"mtime":1701787815401,"results":"76","hashOfConfig":"42"},{"size":1966,"mtime":1701787815453,"results":"77","hashOfConfig":"42"},{"size":31248,"mtime":1702251136153,"results":"78","hashOfConfig":"42"},{"size":48845,"mtime":1702391941113,"results":"79","hashOfConfig":"42"},{"size":33346,"mtime":1701787815442,"results":"80","hashOfConfig":"42"},{"size":8405,"mtime":1701787815463,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1bra3ro",{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":5,"source":null},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":5,"source":null},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":5,"source":null},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"122","usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"126","usedDeprecatedRules":"123"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"123"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"132","usedDeprecatedRules":"123"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"135","usedDeprecatedRules":"123"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"123"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"123"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"144","usedDeprecatedRules":"123"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"123"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"123"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":6,"source":"155","usedDeprecatedRules":"123"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"123"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"123"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"123"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"123"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"123"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":4,"source":"173","usedDeprecatedRules":"123"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"123"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"123"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"123"},"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\index.js",["183"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\App.js",[],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\reportWebVitals.js",[],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\context\\ThemeContext.js",[],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Home.js",["184","185"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Patient\\EnrollPatient.js",["186","187","188","189","190","191","192","193","194","195","196"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Patient\\UpdatePatientEnrollment.js",["197","198","199","200","201","202","203","204","205","206","207","208","209"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDetail.js",["210","211","212"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\context\\ThemeDemo.js",[],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Patient\\RegisterPatient.js",["213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\api.js",[],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Patient\\PatientList.js",["233","234"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Patient\\ActiveANCPatientList.js",["235"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Patient\\PmtctPatients.js",["236"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Patient\\SubMenu.js",["237","238","239","240","241","242","243","244","245","246"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Patient\\PatientCard.js",["247","248","249","250","251","252","253","254","255","256"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PmtctServices\\PmtctEnrollment.js",["257","258","259","260","261","262","263","264","265","266","267","268","269"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PmtctServices\\AncEnrollement.js",["270","271","272","273"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PmtctServices\\LabourDelivery.js",["274","275","276","277"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PmtctServices\\Partners\\Index.js",["278","279"],"import React, { useEffect, useState } from 'react'\nimport MaterialTable from 'material-table';\nimport axios from \"axios\";\nimport { url as baseUrl , token as token} from \"./../../../../api\";\nimport { forwardRef } from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { toast} from \"react-toastify\";\nimport {FaUserPlus} from 'react-icons/fa'\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport 'react-toastify/dist/ReactToastify.css';\n//import {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\nimport \"@reach/menu-button/styles.css\";\nimport {  Modal } from \"react-bootstrap\";\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\n\n\nconst tableIcons = {\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nconst PatientnHistory = (props) => {\n    const [partners, setPartners] = useState([])\n    const [loading, setLoading] = useState(true)\n    const [open, setOpen] = React.useState(false)\n    const [saving, setSaving] = useState(false)\n    const [record, setRecord] = useState(null)\n    const toggle = () => setOpen(!open);\n    useEffect(() => {\n        PatientHistory()\n      }, [props.patientObj.id]);\n        ///GET LIST OF Patients\n        const PatientHistory =()=>{\n            setLoading(true)\n            axios\n               .get(`${baseUrl}pmtct/anc/${props.patientObj.id}`,\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\n               )\n               .then((response) => {\n                setLoading(false)\n                //console.log(response.data.partnerInformation)\n                setPartners(response.data.partnerInformation!==null ? [response.data.partnerInformation] : [])\n                })\n\n               .catch((error) => {\n               //console.log(error);\n               });\n           \n          }\n    \n    const LoadPage =(row,activePage)=>{    \n            props.setActiveContent({...props.activeContent, route:'add-partner', id:row, actionType:activePage, obj:row})\n    }\n    const LoadDeletePage =(row)=>{\n\n            setSaving(true)       \n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\n            axios\n            .delete(`${baseUrl}pmtct/anc/delete/partnerinfo/${props.patientObj.id}`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                toast.success(\"Record Deleted Successfully\");\n                PatientHistory()\n                toggle()\n                setSaving(false) \n            })\n            .catch((error) => {\n                setSaving(false) \n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage);\n                  }\n                  else{\n                    toast.error(\"Something went wrong. Please try again...\");\n                  }\n            });  \n        \n    }\n    const LoadModal =(row)=>{\n        toggle()\n        setRecord(row)\n    }\n\n\n  return (\n    <div>\n        {partners && partners.length<= 0 && (\n        <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className=\" float-end  mr-2 mt-2\"\n            onClick={()=>LoadPage()}\n            style={{backgroundColor:\"#014d88\"}}\n            startIcon={<FaUserPlus size=\"10\"/>}\n        >\n            <span style={{ textTransform: \"capitalize\" }}>New Partner</span>\n        </Button>\n        )}\n        <br/><br/><br/><br/>\n\n            <MaterialTable\n            icons={tableIcons}\n              title=\"List of Partners \"\n              columns={[\n                { title: \"Partner Name\", field: \"name\" },\n                { title: \"Partner Age\", field: \"age\" },\n                { title: \"Pre-test Counseled\", field: \"pre\" },\n                { title: \"Partner Accept HIV Test\", field: \"hiv\" },             \n                { title: \"Post-Test Counseled\", field: \"post\" },\n                { title: \"HBV Status\", field: \"hbv\" },\n                { title: \"HCV Status\", field: \"hcv\" },\n                { title: \"Syphillis Status\", field: \"syphillis\" },\n                { title: \"Referred To\", field: \"referred\", filtering: false },        \n                { title: \"Actions\", field: \"actions\", filtering: false }, \n              ]}\n              isLoading={loading}\n              data={partners.map((row) => ({\n                   name: row.fullName,\n                   age: row.age,\n                   pre: row.preTestCounseled,\n                   hiv: row.acceptHivTest,\n                   post: row.postTestCounseled,\n                   hbv: row.hbStatus,\n                   hcv: row.hbStatus,\n                   syphillis: row.syphillisStatus,\n                   referred: row.referredTo,\n                   actions:\n            \n                    <div>\n                        <Menu.Menu position='right'  >\n                        <Menu.Item >\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\n                            <Dropdown item text='Action'>\n\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\n                            <Dropdown.Item onClick={()=>LoadPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>\n                                <Dropdown.Item  onClick={()=>LoadPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>\n                                <Dropdown.Item  onClick={()=>LoadModal(row, 'delete')}> <Icon name='trash' /> Delete</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                            </Button>\n                        </Menu.Item>\n                        </Menu.Menu>\n                    </div>\n                  \n                  }))}\n            \n                        options={{\n                          headerStyle: {\n                              backgroundColor: \"#014d88\",\n                              color: \"#fff\",\n                          },\n                          searchFieldStyle: {\n                              width : '200%',\n                              margingLeft: '250px',\n                          },\n                          filtering: false,\n                          exportButton: false,\n                          searchFieldAlignment: 'left',\n                          pageSizeOptions:[10,20,100],\n                          pageSize:10,\n                          debounceInterval: 400\n                      }}\n            />\n         <Modal show={open} toggle={toggle} className=\"fade\" size=\"md\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered backdrop=\"static\">\n            <Modal.Header >\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n            Notification!\n        </Modal.Title>\n        </Modal.Header>\n            <Modal.Body>\n                <h4>Are you Sure you want to delete - <b>{record && record.fullName}</b></h4>\n                \n            </Modal.Body>\n        <Modal.Footer>\n            <Button onClick={()=>LoadDeletePage(record)}  style={{backgroundColor:\"red\", color:\"#fff\"}} disabled={saving}>{saving===false ? \"Yes\": \"Deleting...\"}</Button>\n            <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}} disabled={saving}>No</Button>\n            \n        </Modal.Footer>\n        </Modal>    \n    </div>\n  );\n}\n\nexport default PatientnHistory;\n\n\n",["280","281"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Consultation\\Index.js",["282","283"],"import React, { useState, Fragment, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Row, Col, Card, Tab, Tabs } from \"react-bootstrap\";\nimport ConsultationPage from \"./Home\";\nimport InfantVisit from \"./InfantVisit\";\nimport { url as baseUrl, token as token } from \"./../../../api\";\n\nconst divStyle = {\n  borderRadius: \"2px\",\n  fontSize: 14,\n};\n\nconst ClinicVisitPage = (props) => {\n  const [key, setKey] = useState(\"home\");\n  const patientObj = props.patientObj;\n  const [aliveChild, setAliveChild] = useState(0);\n  useEffect(() => {\n    setKey(props.activeContent.activeTab);\n    DeliveryInfo();\n  }, [props.patientObj.id, props.activeContent.activeTab]);\n  ///GET Delivery Object\n  const DeliveryInfo = () => {\n    if (props.patientObj.ancNo) {\n      axios\n        .get(`${baseUrl}pmtct/anc/view-delivery2/${props.patientObj.ancNo}`, {\n          headers: { Authorization: `Bearer ${token}` },\n        })\n        .then((response) => {\n          console.log(response.data);\n          setAliveChild(\n            response.data && response.data.numberOfInfantsAlive\n              ? response.data.numberOfInfantsAlive\n              : 0\n          );\n        })\n        .catch((error) => {\n          //console.log(error);\n        });\n    } else {\n      axios\n        .get(`${baseUrl}view-delivery-with-uuid/${props.patientObj.uuid}`, {\n          headers: { Authorization: `Bearer ${token}` },\n        })\n        .then((response) => {\n          console.log(response.data);\n          setAliveChild(\n            response.data && response.data.numberOfInfantsAlive\n              ? response.data.numberOfInfantsAlive\n              : 0\n          );\n        })\n        .catch((error) => {\n          //console.log(error);\n        });\n    }\n  };\n\n  return (\n    <Fragment>\n      <Row>\n        <Col xl={12}>\n          <Card style={divStyle}>\n            <Card.Body>\n              {/* <!-- Nav tabs --> */}\n              <div className=\"custom-tab-1\">\n                <Tabs\n                  id=\"controlled-tab-example\"\n                  activeKey={key}\n                  onSelect={(k) => setKey(k)}\n                  className=\"mb-3\"\n                >\n                  <Tab eventKey=\"home\" title=\"MOTHER FOLLOW UP VISIT \">\n                    <ConsultationPage\n                      patientObj={patientObj}\n                      setActiveContent={props.setActiveContent}\n                      activeContent={props.activeContent}\n                    />\n                  </Tab>\n                  {console.log(aliveChild)}\n\n                  {console.log(aliveChild !== 0 && aliveChild > 0)}\n                  {aliveChild !== 0 && aliveChild > 0 && (\n                    <Tab eventKey=\"child\" title=\"CHILD FOLLOW UP VISIT\">\n                      <InfantVisit\n                        patientObj={patientObj}\n                        setActiveContent={props.setActiveContent}\n                        activeContent={props.activeContent}\n                      />\n                    </Tab>\n                  )}\n                </Tabs>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  );\n};\n\nexport default ClinicVisitPage;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PmtctServices\\Infants\\InfantRegistration.js",["284","285","286","287","288"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  InputGroup,\r\n} from \"reactstrap\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport axios from \"axios\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"./../../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"react-summernote/dist/react-summernote.css\"; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\nimport moment from \"moment\";\r\nimport { NoStroller } from \"@mui/icons-material\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    flexGrow: 1,\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst LabourinfantInfo = (props) => {\r\n  const patientObj = props.patientObj;\r\n  //let history = useHistory();\r\n  const classes = useStyles();\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [disabledField, setDisabledField] = useState(false);\r\n  const [genders, setGenders] = useState([]);\r\n  const [newDateOfDelivery, setNewDateOfDelivery] = useState(\"\");\r\n\r\n  const [hospitalNumStatus, setHospitalNumStatus] = useState(false);\r\n  const [infantInfo, setInfantInfo] = useState({\r\n    ancNo: patientObj?.ancNo,\r\n    dateOfinfantInfo: \"\",\r\n    firstName: \"\",\r\n    middleName: \"\",\r\n    nin: \"\",\r\n    sex: \"\",\r\n    surname: \"\",\r\n    uuid: patientObj.ancUuid,\r\n    dateOfDelivery: \"\",\r\n    // hospitalNumber: patientObj?.hospitalNumber,\r\n    hospitalNumber: \"\",\r\n\r\n    personUuid: patientObj?.person_uuid,\r\n  });\r\n\r\n  useEffect(() => {\r\n    SEX();\r\n    //console.log(props.activeContent.obj)\r\n    if (props.activeContent && props.activeContent.actionType === \"create\") {\r\n      infantInfo.dateOfDelivery = props.activeContent.obj;\r\n    }\r\n    if (props.activeContent && props.activeContent.id) {\r\n      setInfantInfo({ ...infantInfo, ...props.activeContent.obj });\r\n      setDisabledField(\r\n        props.activeContent.actionType === \"view\" ? true : false\r\n      );\r\n      //props.activeContent.obj.hospitalNumber2=props.activeContent.obj.hospitalNumber\r\n    }\r\n  }, [props.patientObj.id, props.activeContent.id]);\r\n\r\n  const SEX = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SEX`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setGenders(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const handleInputChangeinfantInfoDto = (e) => {\r\n    setErrors({ ...errors, [e.target.name]: \"\" });\r\n    if (e.target.name === \"hospitalNumber\" && e.target.value !== \"\") {\r\n      async function getHosiptalNumber() {\r\n        const hosiptalNumber = e.target.value;\r\n        const response = await axios.post(\r\n          `${baseUrl}pmtct/anc/exist/infant-hospital-number`,\r\n          hosiptalNumber,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"text/plain\",\r\n            },\r\n          }\r\n        );\r\n        if (response.data !== true) {\r\n          setHospitalNumStatus(false);\r\n          errors.hospitalNumber = \"\";\r\n        } else {\r\n          errors.hospitalNumber = \"\";\r\n          toast.error(\"Error! Hosiptal Number already exist\");\r\n          setHospitalNumStatus(true);\r\n        }\r\n      }\r\n      getHosiptalNumber();\r\n    }\r\n    setInfantInfo({ ...infantInfo, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  //FORM VALIDATION\r\n  const validate = () => {\r\n    let temp = { ...errors };\r\n    temp.firstName = infantInfo.firstName ? \"\" : \"This field is required\";\r\n    temp.surname = infantInfo.surname ? \"\" : \"This field is required\";\r\n    temp.hospitalNumber = infantInfo.hospitalNumber\r\n      ? \"\"\r\n      : \"This field is required\";\r\n    //temp.dateOfinfantInfo = infantInfo.dateOfinfantInfo ? \"\" : \"This field is required\"\r\n    temp.sex = infantInfo.sex ? \"\" : \"This field is required\";\r\n    //temp.bookingStatus = infantInfo.bookingStatus ? \"\" : \"This field is required\"\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n  /**** Submit Button Processing  */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      setSaving(true);\r\n      if (props.activeContent && props.activeContent.actionType === \"update\") {\r\n        axios\r\n          .put(\r\n            `${baseUrl}pmtct/anc/update-infant/${props.activeContent.id}`,\r\n            infantInfo,\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          )\r\n          .then((response) => {\r\n            setSaving(false);\r\n            //props.patientObj.commenced=true\r\n            toast.success(\"Record save successful\", {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: \"infants\",\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            setSaving(false);\r\n            toast.error(\"Something went wrong\", {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n          });\r\n      } else {\r\n        axios\r\n          .post(`${baseUrl}pmtct/anc/add-infants`, infantInfo, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then((response) => {\r\n            setSaving(false);\r\n            //props.patientObj.commenced=true\r\n            toast.success(\"Record save successful\", {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: \"infants\",\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            setSaving(false);\r\n            toast.error(\"Something went wrong\", {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n          });\r\n      }\r\n    } else {\r\n      toast.error(\"All field are required\", {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n      });\r\n    }\r\n  };\r\n\r\n  const LoadPage = () => {\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: \"infants\",\r\n      id: \"\",\r\n      actionType: \"\",\r\n    });\r\n  };\r\n\r\n  console.log(\"date Of Delivery\", patientObj);\r\n  console.log(\"date Of Delivery\", props.activeContent.obj);\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className=\" float-end  mr-2 mt-2\"\r\n        onClick={() => LoadPage()}\r\n        style={{ backgroundColor: \"#014d88\" }}\r\n        //startIcon={<FaUserPlus size=\"10\"/>}\r\n      >\r\n        <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n      </Button>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <form>\r\n            <div className=\"row\">\r\n              <h2>New Infant Registration</h2>\r\n              <div className=\"row\">\r\n                {patientObj?.ancNo && (\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label>ANC Number</Label>\r\n                      <InputGroup>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"ancNo\"\r\n                          id=\"ancNo\"\r\n                          onChange={handleInputChangeinfantInfoDto}\r\n                          value={patientObj.ancNo}\r\n                          disabled\r\n                        />\r\n                      </InputGroup>\r\n                      {errors.ancNo !== \"\" ? (\r\n                        <span className={classes.error}>{errors.ancNo}</span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Hospital Number <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"hospitalNumber\"\r\n                        id=\"hospitalNumber\"\r\n                        onChange={handleInputChangeinfantInfoDto}\r\n                        value={infantInfo.hospitalNumber}\r\n                        // disabled={true}\r\n                      />\r\n                    </InputGroup>\r\n                    {errors.hospitalNumber !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.hospitalNumber}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    {hospitalNumStatus === true ? (\r\n                      <span className={classes.error}>\r\n                        {\"Hospital number already exist\"}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Date of Delivery <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"date\"\r\n                        name=\"dateOfDelivery\"\r\n                        id=\"dateOfDelivery\"\r\n                        onChange={handleInputChangeinfantInfoDto}\r\n                        min={props.patientObj.firstAncDate}\r\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                        value={\r\n                          infantInfo.dateOfDelivery\r\n                            ? infantInfo.dateOfDelivery\r\n                            : newDateOfDelivery\r\n                        }\r\n                        // disabled={infantInfo.dateOfDelivery ? true : false}\r\n                      />\r\n                    </InputGroup>\r\n                    {errors.dateOfDelivery !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.dateOfDelivery}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Infant Given Name <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"firstName\"\r\n                        id=\"firstName\"\r\n                        onChange={handleInputChangeinfantInfoDto}\r\n                        value={infantInfo.firstName}\r\n                        disabled={disabledField}\r\n                      />\r\n                    </InputGroup>\r\n                    {errors.firstName !== \"\" ? (\r\n                      <span className={classes.error}>{errors.firstName}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>Infant Surname</Label>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"input\"\r\n                        name=\"surname\"\r\n                        id=\"surname\"\r\n                        onChange={handleInputChangeinfantInfoDto}\r\n                        value={infantInfo.surname}\r\n                        disabled={disabledField}\r\n                      ></Input>\r\n                    </InputGroup>\r\n                    {errors.surname !== \"\" ? (\r\n                      <span className={classes.error}>{errors.surname}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Sex <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"sex\"\r\n                        id=\"sex\"\r\n                        onChange={handleInputChangeinfantInfoDto}\r\n                        value={infantInfo.sex}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value=\"\">Select </option>\r\n\r\n                        {genders.map((value) => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                    </InputGroup>\r\n                    {errors.sex !== \"\" ? (\r\n                      <span className={classes.error}>{errors.sex}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                {/*  */}\r\n              </div>\r\n\r\n              {/* <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >National Identity  Number(NIN)</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"nin\"\r\n                                    id=\"nin\"\r\n                                    onChange={handleInputChangeinfantInfoDto}\r\n                                    value={infantInfo.nin} \r\n                                    disabled={disabledField}\r\n                                />\r\n\r\n                            </InputGroup>\r\n                            {errors.nin !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.nin}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                    </div> */}\r\n            </div>\r\n\r\n            {saving ? <Spinner /> : \"\"}\r\n            <br />\r\n            {props.activeContent &&\r\n            props.activeContent.actionType === \"update\" ? (\r\n              <>\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  disabled={saving}\r\n                  startIcon={<SaveIcon />}\r\n                  style={{ backgroundColor: \"#014d88\" }}\r\n                  onClick={handleSubmit}\r\n                >\r\n                  {!saving ? (\r\n                    <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                  ) : (\r\n                    <span style={{ textTransform: \"capitalize\" }}>\r\n                      Updating\r\n                    </span>\r\n                  )}\r\n                </MatButton>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  hidden={disabledField || hospitalNumStatus}\r\n                  className={classes.button}\r\n                  disabled={saving}\r\n                  startIcon={<SaveIcon />}\r\n                  style={{ backgroundColor: \"#014d88\" }}\r\n                  onClick={handleSubmit}\r\n                >\r\n                  {!saving ? (\r\n                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                  ) : (\r\n                    <span style={{ textTransform: \"capitalize\" }}>Saving</span>\r\n                  )}\r\n                </MatButton>\r\n              </>\r\n            )}\r\n            <MatButton\r\n              variant=\"contained\"\r\n              className={classes.button}\r\n              startIcon={<CancelIcon />}\r\n              style={{ backgroundColor: \"#992E62\" }}\r\n              onClick={() => LoadPage()}\r\n            >\r\n              <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n            </MatButton>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LabourinfantInfo;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PmtctServices\\Infants\\Index.js",["289","290"],"import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token as token } from \"./../../../../api\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { Dropdown, Button, Menu, Icon } from \"semantic-ui-react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst InfantInformation = (props) => {\r\n  const [infants, setInfants] = useState([]);\r\n  const [delivery, setDelivery] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [aliveChild, setAliveChild] = useState(0);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [saving, setSaving] = useState(false);\r\n  const [record, setRecord] = useState(null);\r\n  const toggle = () => setOpen(!open);\r\n  useEffect(() => {\r\n    if (props.patientObj.ancNo) {\r\n      InfantInfo();\r\n      console.log(\"it has anc \");\r\n    } else {\r\n      InfantInfoByUuid(0);\r\n      console.log(\"it has  no anc \");\r\n    }\r\n    DeliveryInfo();\r\n  }, []);\r\n  ///GET LIST OF Infants\r\n  const InfantInfo = () => {\r\n    setLoading(true);\r\n    axios\r\n      .get(\r\n        `${baseUrl}pmtct/anc/get-infant-by-ancno/${props.patientObj.ancNo}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setLoading(false);\r\n        setInfants(response.data);\r\n      })\r\n\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const InfantInfoByUuid = () => {\r\n    setLoading(true);\r\n    axios\r\n      .get(\r\n        `${baseUrl}pmtct/anc/get-infant-by-mother-person-uuid/${\r\n          props.patientObj.person_uuid\r\n            ? props.patientObj.person_uuid\r\n            : props.patientObj.personUuid\r\n        }`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setLoading(false);\r\n        setInfants(response.data);\r\n      })\r\n\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  ///GET Delivery Object\r\n  const DeliveryInfo = () => {\r\n    setLoading(true);\r\n    if (props.patientObj.ancNo) {\r\n      axios\r\n        .get(`${baseUrl}pmtct/anc/view-delivery2/${props.patientObj.ancNo}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          setLoading(false);\r\n          setDelivery(response.data.dateOfDelivery);\r\n          setAliveChild(\r\n            response.data && response.data.numberOfInfantsAlive\r\n              ? response.data.numberOfInfantsAlive\r\n              : 0\r\n          );\r\n        })\r\n\r\n        .catch((error) => {\r\n          //console.log(error);\r\n        });\r\n    } else {\r\n      axios\r\n        .get(\r\n          `${baseUrl}pmtct/anc/view-delivery-with-uuid/${\r\n            props.patientObj.person_uuid\r\n              ? props.patientObj.person_uuid\r\n              : props.patientObj.personUuid\r\n          }`,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          setLoading(false);\r\n          setDelivery(response.data.dateOfDelivery);\r\n          setAliveChild(\r\n            response.data && response.data.numberOfInfantsAlive\r\n              ? response.data.numberOfInfantsAlive\r\n              : 0\r\n          );\r\n        })\r\n\r\n        .catch((error) => {\r\n          //console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const LoadPage = (obj, actionType) => {\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: \"add-infant\",\r\n      id: obj?.id,\r\n      actionType: actionType,\r\n      obj: obj,\r\n    });\r\n  };\r\n  const LoadDeletePage = (row) => {\r\n    setSaving(true);\r\n    //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n    axios\r\n      .delete(`${baseUrl}pmtct/anc/delete/infantinfo/${row.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        toast.success(\"Record Deleted Successfully\");\r\n        InfantInfo();\r\n        toggle();\r\n        setSaving(false);\r\n      })\r\n      .catch((error) => {\r\n        setSaving(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n      });\r\n  };\r\n  const LoadModal = (row) => {\r\n    toggle();\r\n    setRecord(row);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {infants.length < aliveChild &&\r\n        aliveChild > infants.length &&\r\n        props.patientObj.entryPoint !== \"POINT_ENTRY_PMTCT_POSTNATAL_WARD\" &&\r\n        props.patientObj.entryPoint !== \"621\" && (\r\n          <>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className=\" float-end  mr-2 mt-2\"\r\n              onClick={() => LoadPage(delivery, \"create\")}\r\n              style={{ backgroundColor: \"#014d88\" }}\r\n              startIcon={<FaUserPlus size=\"10\" />}\r\n            >\r\n              <span style={{ textTransform: \"capitalize\" }}>New Infant</span>\r\n            </Button>\r\n          </>\r\n        )}\r\n      {props.patientObj.entryPoint === \"POINT_ENTRY_PMTCT_POSTNATAL_WARD\" ||\r\n        (props.patientObj.entryPoint === \"621\" && (\r\n          <>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className=\" float-end  mr-2 mt-2\"\r\n              onClick={() => LoadPage(delivery, \"create\")}\r\n              style={{ backgroundColor: \"#014d88\" }}\r\n              startIcon={<FaUserPlus size=\"10\" />}\r\n            >\r\n              <span style={{ textTransform: \"capitalize\" }}>New Infant</span>\r\n            </Button>\r\n          </>\r\n        ))}\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"List of Infants \"\r\n        columns={[\r\n          { title: \"Infant Name\", field: \"name\" },\r\n          {\r\n            title: \"Hospital No.\",\r\n            field: \"hospital\",\r\n          },\r\n          { title: \"ANC NO.\", field: \"anc\" },\r\n          { title: \"Age\", field: \"nin\" },\r\n          { title: \"Date of Delivery\", field: \"date\" },\r\n          { title: \"Sex\", field: \"sex\", filtering: false },\r\n          { title: \"Actions\", field: \"actions\", filtering: false },\r\n        ]}\r\n        isLoading={loading}\r\n        data={infants.map((row) => ({\r\n          name: row.firstName + \" \" + row.surname,\r\n          hospital: row.hospitalNumber,\r\n          anc: row.ancNo,\r\n          nin:\r\n            row.nin !== \"0\" && row.nin !== \"1\"\r\n              ? row.nin + \" Months\"\r\n              : row.nin + \" Month\",\r\n          sex: row.sex,\r\n          date: row.dateOfDelivery,\r\n          actions: (\r\n            <div>\r\n              <Menu.Menu position=\"right\">\r\n                <Menu.Item>\r\n                  <Button style={{ backgroundColor: \"rgb(153,46,98)\" }} primary>\r\n                    <Dropdown item text=\"Action\">\r\n                      <Dropdown.Menu style={{ marginTop: \"10px\" }}>\r\n                        <Dropdown.Item onClick={() => LoadPage(row, \"view\")}>\r\n                          {\" \"}\r\n                          <Icon name=\"eye\" />\r\n                          View{\" \"}\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => LoadPage(row, \"update\")}>\r\n                          <Icon name=\"edit\" />\r\n                          Edit\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => LoadModal(row, \"delete\")}>\r\n                          {\" \"}\r\n                          <Icon name=\"trash\" /> Delete\r\n                        </Dropdown.Item>\r\n                      </Dropdown.Menu>\r\n                    </Dropdown>\r\n                  </Button>\r\n                </Menu.Item>\r\n              </Menu.Menu>\r\n            </div>\r\n          ),\r\n        }))}\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: \"#014d88\",\r\n            color: \"#fff\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"200%\",\r\n            margingLeft: \"250px\",\r\n          },\r\n          filtering: false,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: 10,\r\n          debounceInterval: 400,\r\n        }}\r\n      />\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>\r\n            Are you Sure you want to delete -{\" \"}\r\n            <b>{record && record.firstName + \" \" + record.surname}</b>\r\n          </h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={() => LoadDeletePage(record)}\r\n            style={{ backgroundColor: \"red\", color: \"#fff\" }}\r\n            disabled={saving}\r\n          >\r\n            {saving === false ? \"Yes\" : \"Deleting...\"}\r\n          </Button>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n            disabled={saving}\r\n          >\r\n            No\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfantInformation;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PmtctServices\\Partners\\AddNewPartner.js",["291","292","293"],"import React, {useState, useEffect} from 'react';\nimport {Card,CardBody, FormGroup, Label, Input, InputGroup} from 'reactstrap';\nimport MatButton from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport SaveIcon from '@material-ui/icons/Save'\nimport CancelIcon from '@material-ui/icons/Cancel'\nimport axios from \"axios\";\nimport { toast} from \"react-toastify\";\nimport { url as baseUrl, token } from \"./../../../../api\";\n//import { useHistory } from \"react-router-dom\";\nimport 'react-summernote/dist/react-summernote.css'; // import styles\nimport { Spinner } from \"reactstrap\";\nimport { Button,  } from 'semantic-ui-react'\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n\n    root: {\n        flexGrow: 1,\n        \"& .card-title\":{\n            color:'#fff',\n            fontWeight:'bold'\n        },\n        \"& .form-control\":{\n            borderRadius:'0.25rem',\n            height:'41px'\n        },\n        \"& .card-header:first-child\": {\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\n        },\n        \"& .dropdown-toggle::after\": {\n            display: \" block !important\"\n        },\n        \"& select\":{\n            \"-webkit-appearance\": \"listbox !important\"\n        },\n        \"& p\":{\n            color:'red'\n        },\n        \"& label\":{\n            fontSize:'14px',\n            color:'#014d88',\n            fontWeight:'bold'\n        }\n    },\n    input: {\n        display: 'none'\n    }, \n    error: {\n        color: \"#f85032\",\n        fontSize: \"11px\",\n    },\n    success: {\n        color: \"#4BB543 \",\n        fontSize: \"11px\",\n    },\n}))\n\nconst Labourpartner = (props) => {\n    const patientObj = props.patientObj;\n    //let history = useHistory();\n    const classes = useStyles()\n    const [saving, setSaving] = useState(false);\n    const [disabledField, setDisabledField] = useState(false);\n    const [errors, setErrors] = useState({});\n    const [syphills, setSyphills] = useState([]);\n    const [referred, setReferred] = useState([]);\n    const [partner, setpartner]= useState({\n                age: \"\",\n                dateOfBirth: \"\",\n                fullName: \"\",\n                hbStatus: \"\",\n                hcStatus: \"\",\n                postTestCounseled: \"\",\n                referredTo: \"\",\n                syphillsStatus: \"\",\n                referredToOthers:\"\"\n    })\n    useEffect(() => {  \n        PARTNER_SYPHILIS_STATUS();\n        PARTNER_REFERRED_PMTCT(); \n        if(props.activeContent && props.activeContent.id) {\n            setpartner(props.activeContent.obj)\n            setDisabledField(props.activeContent.actionType===\"view\"? true : false)\n            \n        }       \n    }, [props.patientObj.id, props.activeContent]);\n    //Get list \n    const PARTNER_SYPHILIS_STATUS =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/PARTNER_SYPHILIS_STATUS`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            //console.log(response.data);\n            setSyphills(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    const PARTNER_REFERRED_PMTCT =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/PARTNER_REFERRED_PMTCT`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            //console.log(response.data);\n            setReferred(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    const handleInputChangepartnerDto = e => {  \n        setErrors({...errors, [e.target.name]: \"\"})            \n        setpartner ({...partner,  [e.target.name]: e.target.value});\n        if(e.target.name==='referredTo' && partner.referredTo!=='OTHERS'){\n            partner.referredToOthers=\"\"\n            setpartner ({...partner,  ['referredToOthers']: \"\"});\n            setpartner ({...partner,  [e.target.name]: e.target.value});\n        }\n        setpartner ({...partner,  [e.target.name]: e.target.value});\n    }\n\n    //FORM VALIDATION\n    const validate = () => {\n        let temp = { ...errors }\n        temp.age = partner.age ? \"\" : \"This field is required\"\n        //temp.hbStatus = partner.hbStatus ? \"\" : \"This field is required\"\n        //temp.hcStatus = partner.hcStatus ? \"\" : \"This field is required\"\n        temp.postTestCounseled = partner.postTestCounseled ? \"\" : \"This field is required\"\n        temp.fullName = partner.fullName ? \"\" : \"This field is required\" \n        //temp.syphillisStatus = partner.syphillisStatus ? \"\" : \"This field is required\"\n        setErrors({\n            ...temp\n            })    \n        return Object.values(temp).every(x => x == \"\")\n    }\n    /**** Submit Button Processing  */\n    const handleSubmit = (e) => {        \n        e.preventDefault();  \n        if(validate()){\n        setSaving(true);\n        axios.put(`${baseUrl}pmtct/anc/update-partnerinformation-in-anc/${props.patientObj.id}`, partner,\n        { headers: {\"Authorization\" : `Bearer ${token}`}},\n        \n        )\n            .then(response => {\n                setSaving(false);\n                //props.patientObj.commenced=true\n                toast.success(\"Record save successful\", {position: toast.POSITION.BOTTOM_CENTER});\n                props.setActiveContent({...props.activeContent, route:'partners'})\n            })\n            .catch(error => {\n                setSaving(false);\n                toast.error(\"Something went wrong\", {position: toast.POSITION.BOTTOM_CENTER});\n                \n            });\n        }else{\n            toast.error(\"All field are required\", {position: toast.POSITION.BOTTOM_CENTER});\n        } \n    }\n    const LoadPage =()=>{    \n        props.setActiveContent({...props.activeContent, route:'partners', id:\"\", actionType:\"\"})\n    }\n    \n\n  return (      \n      <div >\n         <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className=\" float-end  mr-2 mt-2\"\n            onClick={()=>LoadPage()}\n            style={{backgroundColor:\"#014d88\"}}\n            //startIcon={<FaUserPlus size=\"10\"/>}\n        >\n            <span style={{ textTransform: \"capitalize\" }}> Back</span>\n        </Button>\n        <br/><br/><br/>          \n        <Card className={classes.root}>\n            <CardBody>\n            <form >\n                <div className=\"row\">\n                    <h2>New Partner </h2>\n                    \n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >ANC Number <span style={{ color:\"red\"}}> *</span></Label>\n                            <InputGroup> \n                                <Input \n                                    type=\"text\"\n                                    name=\"ancNo\"\n                                    id=\"ancNo\"\n                                    onChange={handleInputChangepartnerDto}\n                                    value={props.patientObj.ancNo} \n                                    disabled\n                                />\n                            </InputGroup>\n                            {errors.ancNo !==\"\" ? (\n                                    <span className={classes.error}>{errors.ancNo}</span>\n                            ) : \"\" }\n                            </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Partner HIV Status </Label>\n                            <InputGroup> \n                                <Input \n                                    type=\"text\"\n                                    name=\"partnerHivSTatus\"\n                                    id=\"partnerHivSTatus\"\n                                    //onChange={handleInputChangepartnerDto}\n                                    value={props.patientObj.dynamicHivStatus!==\"Unknown\"  ? props.patientObj.dynamicHivStatus : props.patientObj.staticHivStatus}\n                                    disabled\n                                />\n                            </InputGroup>\n                            {errors.ancNo !==\"\" ? (\n                                    <span className={classes.error}>{errors.ancNo}</span>\n                            ) : \"\" }\n                            </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Partner  Full Name <span style={{ color:\"red\"}}> *</span></Label>\n                            <InputGroup> \n                                <Input \n                                    type=\"text\"\n                                    name=\"fullName\"\n                                    id=\"fullName\"\n                                    onChange={handleInputChangepartnerDto}\n                                    value={partner.fullName} \n                                    disabled={disabledField}\n                                    \n                                />\n                            </InputGroup>\n                            {errors.fullName !==\"\" ? (\n                                    <span className={classes.error}>{errors.fullName}</span>\n                            ) : \"\" }\n                            </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Partner  age <span style={{ color:\"red\"}}> *</span></Label>\n                            <InputGroup> \n                                <Input \n                                    type=\"Number\"\n                                    name=\"age\"\n                                    id=\"age\"\n                                    min={10}\n                                    onChange={handleInputChangepartnerDto}\n                                    value={partner.age} \n                                    disabled={disabledField}\n                                />\n                            </InputGroup>\n                            {errors.ancNo !==\"\" ? (\n                                    <span className={classes.error}>{errors.ancNo}</span>\n                            ) : \"\" }\n                            </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Pre-test Counseled <span style={{ color:\"red\"}}> *</span></Label>\n                            <InputGroup> \n                            <Input \n                                    type=\"select\"\n                                    name=\"preTestCounseled\"\n                                    id=\"preTestCounseled\"\n                                    onChange={handleInputChangepartnerDto}\n                                    value={partner.preTestCounseled}\n                                    disabled={disabledField} \n                                >\n                                    <option value=\"\" >Select</option>\n                                    <option value=\"Yes\" >Yes</option>\n                                    <option value=\"No\" >No</option>\n                                </Input>\n                            </InputGroup>\n                            {errors.preTestCounseled !==\"\" ? (\n                                    <span className={classes.error}>{errors.preTestCounseled}</span>\n                            ) : \"\" }\n                            </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Partner accepts  HIV test</Label>\n                            <InputGroup> \n                            <Input \n                                    type=\"select\"\n                                    name=\"acceptHivTest\"\n                                    id=\"acceptHivTest\"\n                                    onChange={handleInputChangepartnerDto}\n                                    value={partner.acceptHivTest}\n                                    disabled={disabledField} \n                                >\n                                    <option value=\"\" >Select</option>\n                                    <option value=\"Yes\" >Yes</option>\n                                    <option value=\"No\" >No</option>\n                                </Input>\n                            </InputGroup>\n                            {errors.acceptHivTest !==\"\" ? (\n                                    <span className={classes.error}>{errors.acceptHivTest}</span>\n                            ) : \"\" }\n                            </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Post-test counseled/ received test result</Label>\n                            <InputGroup> \n                            <Input \n                                    type=\"select\"\n                                    name=\"postTestCounseled\"\n                                    id=\"postTestCounseled\"\n                                    onChange={handleInputChangepartnerDto}\n                                    value={partner.postTestCounseled} \n                                    disabled={disabledField}\n                                >\n                                    <option value=\"\" >Select</option>\n                                    <option value=\"Yes\" >Yes</option>\n                                    <option value=\"No\" >No</option>\n                                </Input>\n\n                            </InputGroup>\n                            {errors.postTestCounseled !==\"\" ? (\n                                    <span className={classes.error}>{errors.postTestCounseled}</span>\n                            ) : \"\" }\n                            </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >HBV status </Label>\n                            <InputGroup> \n                            <Input \n                                    type=\"select\"\n                                    name=\"hbStatus\"\n                                    id=\"hbStatus\"\n                                    onChange={handleInputChangepartnerDto}\n                                    value={partner.hbStatus} \n                                    disabled={disabledField}\n                                >\n                                    <option value=\"\" >Select</option>\n                                    <option value=\"Positive\" >Positive</option>\n                                    <option value=\"Negative\" >Negative</option>\n                                </Input>\n\n                            </InputGroup>\n                            {errors.hbStatus !==\"\" ? (\n                                    <span className={classes.error}>{errors.hbStatus}</span>\n                            ) : \"\" }\n                            </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >HCV status </Label>\n                            <InputGroup> \n                            <Input \n                                    type=\"select\"\n                                    name=\"hcStatus\"\n                                    id=\"hcStatus\"\n                                    onChange={handleInputChangepartnerDto}\n                                    value={partner.hcStatus} \n                                    disabled={disabledField}\n                                >\n                                    <option value=\"\" >Select</option>\n                                    <option value=\"Positive\" >Positive</option>\n                                    <option value=\"Negative\" >Negative</option>\n                                </Input>\n\n                            </InputGroup>\n                            {errors.hcStatus !==\"\" ? (\n                                    <span className={classes.error}>{errors.hcStatus}</span>\n                            ) : \"\" }\n                            </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Syphillis Status </Label>\n                            <InputGroup> \n                            <Input \n                                    type=\"select\"\n                                    name=\"syphillisStatus\"\n                                    id=\"syphillisStatus\"\n                                    onChange={handleInputChangepartnerDto}\n                                    value={partner.syphillisStatus}\n                                    disabled={disabledField} \n                                >\n                                    <option value=\"\" >Select</option>                                    \n                                    {syphills.map((value) => (\n                                        <option key={value.id} value={value.display}>\n                                            {value.display}\n                                        </option>\n                                    ))}\n                                </Input>\n\n                            </InputGroup>\n                            {errors.syphillisStatus !==\"\" ? (\n                                    <span className={classes.error}>{errors.syphillisStatus}</span>\n                            ) : \"\" }\n                            </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Referred To</Label>\n                            <InputGroup> \n                                <Input \n                                    type=\"select\"\n                                    name=\"referredTo\"\n                                    id=\"referredTo\"\n                                    onChange={handleInputChangepartnerDto}\n                                    value={partner.referredTo} \n                                    disabled={disabledField}\n                                >\n                                    <option value=\"\" >Select</option> \n                                     {referred.map((value) => (\n                                        <option key={value.id} value={value.display}>\n                                            {value.display}\n                                        </option>\n                                    ))}\n                                </Input>\n                            </InputGroup>\n                            {errors.referredTo !==\"\" ? (\n                                    <span className={classes.error}>{errors.referredTo}</span>\n                            ) : \"\" }\n                            </FormGroup>\n                    </div>\n                    {partner.referredTo==='OTHERS' && (\n                        <div className=\"form-group mb-3 col-md-6\">\n                        <FormGroup>\n                        <Label >Referred To Others (Please specify)</Label>\n                        <InputGroup> \n                            <Input \n                                type=\"text\"\n                                name=\"referredToOthers\"\n                                id=\"referredToOthers\"\n                                onChange={handleInputChangepartnerDto}\n                                value={partner.referredToOthers} \n                                disabled={disabledField}\n                            >\n                                \n                            </Input>\n                        </InputGroup>\n                       \n                        </FormGroup>\n                </div>\n                    )}\n  \n            </div>\n                \n                {saving ? <Spinner /> : \"\"}\n            <br />\n            {props.activeContent && props.activeContent.actionType ===\"update\" ? (<>\n                <MatButton\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    \n                    className={classes.button}\n                    disabled={saving}\n                    startIcon={<SaveIcon />}\n                    style={{backgroundColor:\"#014d88\"}}\n                    onClick={handleSubmit}\n                    >\n                        {!saving ? (\n                        <span style={{ textTransform: \"capitalize\" }}>Update</span>\n                        ) : (\n                        <span style={{ textTransform: \"capitalize\" }}>Updating</span>\n                        )}\n                    </MatButton>\n            </>)\n            :\n            (<>\n            \n                <MatButton\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                hidden={disabledField}\n                className={classes.button}\n                disabled={saving}\n                startIcon={<SaveIcon />}\n                style={{backgroundColor:\"#014d88\"}}\n                onClick={handleSubmit}\n                >\n                    {!saving ? (\n                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\n                    ) : (\n                    <span style={{ textTransform: \"capitalize\" }}>Saving</span>\n                    )}\n                </MatButton>\n                </>)\n            }\n            \n            <MatButton\n                variant=\"contained\"\n                className={classes.button}\n                startIcon={<CancelIcon />}\n                style={{backgroundColor:'#992E62'}}\n                onClick={()=>LoadPage()}\n            >\n                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\n            </MatButton>\n            \n                </form>\n            </CardBody>\n        </Card> \n                  \n    </div>\n  );\n}\n\nexport default Labourpartner;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\Index.js",["294","295","296","297","298","299","300","301","302","303","304"],"import React, {useCallback, useEffect, useState} from \"react\";\nimport { Button} from 'semantic-ui-react'\nimport {Card, CardBody} from \"reactstrap\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {ToastContainer, toast} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\n\nimport 'react-phone-input-2/lib/style.css'\nimport { Icon, Menu, Sticky } from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css';\nimport BasicInfo from './BasicInfo'\nimport PreTest from './PreTest'\nimport HivTestResult from './HivTestResult'\nimport IndexingContactTracing from './Elicitation/Index'\nimport Others from './Others'\nimport PostTest from './PostTest'\nimport RecencyTesting from './RecencyTesting'\nimport RiskStratification from './RiskStratification'\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    },  \n    success: {\n        color: \"#4BB543 \",\n        fontSize: \"11px\",\n    },\n}));\n\n\nconst PmtctHts = (props) => {\n    const classes = useStyles();\n    const history = useHistory();\n    const location = useLocation();\n    const locationState = location.state;\n    const [saving, setSaving] = useState(false);\n    const [activeItem, setactiveItem] = useState('hiv-test');\n    const [completed, setCompleted] = useState([]);\n    const [hideOtherMenu, setHideOtherMenu] = useState(true);\n    const [patientObj, setPatientObj] = useState({\n        breastFeeding: \"\",\n        capturedBy: \"\",\n        cd4: {},\n        clientCode: \"\",\n        riskStratificationCode:\"\",\n        confirmatoryTest: {},\n        dateVisit: \"\",\n        extra: {},\n        firstTimeVisit: \"\",\n        hepatitisTesting: {},\n        hivTestResult: \"\",\n        id: \"\",\n        indexClient: \"\",\n        indexClientCode: \"\",\n        indexElicitation: [\n          {\n            address: \"\",\n            altPhoneNumber: \"\",\n            archived: 0,\n            currentlyLiveWithPartner: true,\n            datePartnerCameForTesting: \"\",\n            dob: \"\",\n            extra: {},\n            facilityId: 0,\n            firstName: \"\",\n            hangOutSpots: \"\",\n            htsClient: {\n              archived: 0,\n              breastFeeding: 0,\n              capturedBy: \"\",\n              cd4: {},\n              clientCode: \"\",\n              confirmatoryTest: {},\n              dateVisit: \"\",\n              extra: {},\n              facilityId: 0,\n              firstTimeVisit: true,\n              hepatitisTesting: {},\n              hivTestResult: \"\",\n              id: 0,\n              indexClient: true,\n              indexClientCode: \"\",\n              indexNotificationServicesElicitation: {},\n              knowledgeAssessment: {},\n              numChildren: 0,\n              numWives: 0,\n              others: {},\n              person: {\n                active: \"\",\n                address: {},\n                archived: 0,\n                contact: {},\n                contactPoint: {},\n                createdDate: \"\",\n                dateOfBirth: \"\",\n                dateOfRegistration: \"\",\n                deceased: true,\n                deceasedDateTime: \"\",\n                education: {},\n                employmentStatus: {},\n                emrId: \"\",\n                facilityId: 0,\n                firstName: \"string\",\n                gender: {},\n                hospitalNumber: \"\",\n                id: \"\",\n                identifier: {},\n                isDateOfBirthEstimated: true,\n                lastModifiedDate: \"\",\n                maritalStatus: {},\n                new: true,\n                ninNumber: \"\",\n                organization: {},\n                otherName: \"\",\n                sex: \"\",\n                surname: \"\",\n                uuid: \"\"\n              },\n              personUuid: \"\",\n              postTestCounselingKnowledgeAssessment: {},\n              pregnant: \"\",\n              previouslyTested: true,\n              recency: {},\n              referredFrom: \"\",\n              relationWithIndexClient: \"\",\n              riskAssessment: {},\n              sexPartnerRiskAssessment: {},\n              stiScreening: {},\n              syphilisTesting: {},\n              targetGroup: 0,\n              tbScreening: {},\n              test1: {},\n              testingSetting: \"\",\n              tieBreakerTest: {},\n              typeCounseling: \"\",\n              uuid: \"\"\n            },\n            htsClientUuid: \"\",\n            id: \"\",\n            isDateOfBirthEstimated: true,\n            lastName: \"\",\n            middleName: \"\",\n            notificationMethod: \"\",\n            partnerTestedPositive: \"\",\n            phoneNumber: \"\",\n            physicalHurt: \"\",\n            relationshipToIndexClient: \"\",\n            sex: \"\",\n            sexuallyUncomfortable: \"\",\n            threatenToHurt: \"\",\n            uuid: \"\"\n          }\n        ],\n        indexNotificationServicesElicitation: {},\n        knowledgeAssessment: {},\n        numChildren: \"\",\n        numWives: \"\",\n        others: {},\n        personId: props.patientObj.personId,\n        personResponseDto: {\n          active: true,\n          \n        address: {\n            address: [\n              {\n                city: \"\",\n                line: [\n                  \"\"\n                ],\n                stateId: \"\",\n                district: \"\",\n                countryId: 1,\n                postalCode: \"\",\n                organisationUnitId: 0\n              }\n            ]\n          },\n          biometricStatus: true,\n          checkInDate: \"\",\n          contact: {},\n          contactPoint:{contactPoint:[\n            {\n                type: \"phone\",\n                value: \"\"\n            }\n            ]},\n          dateOfBirth: \"\",\n          dateOfRegistration: \"\",\n          deceased: true,\n          deceasedDateTime: \"\",\n          education: {},\n          employmentStatus: {},\n          emrId: \"\",\n          encounterDate: \"\",\n          facilityId: \"\",\n          firstName: \"\",\n          gender: {},\n          id: \"\",\n          identifier: {},\n          isDateOfBirthEstimated: true,\n          maritalStatus: {},\n          ninNumber: \"\",\n          organization: {},\n          otherName: \"\",\n          sex: \"\",\n          surname: \"\",\n          visitId: \"\"\n        },\n        postTestCounselingKnowledgeAssessment: {},\n        pregnant: \"\",\n        previouslyTested: \"\",\n        recency: {},\n        referredFrom: \"\",\n        relationWithIndexClient: \"\",\n        riskAssessment: {},\n        sexPartnerRiskAssessment: {},\n        stiScreening: {},\n        syphilisTesting: {},\n        targetGroup: \"\",\n        tbScreening: {},\n        test1: {},\n        test2: {},\n        testingSetting: \"\",\n        tieBreakerTest: {},\n        typeCounseling: \"\",\n        riskStratificationResponseDto:null\n        \n    });\n    const [extra, setExtra] = useState({\n    risk:\"\",\n    index:\"\",\n    pre:\"\",\n    post:\"\",\n    recency:\"\",\n    elicitation:\"\"\n});\n    const handleItemClick =(activeItem)=>{\n        setactiveItem(activeItem)\n        //setCompleted({...completed, ...completedMenu})\n    }\n    useEffect(() => { \n        // if(locationState && locationState.patientObj){\n        //     setPatientObj(locationState.patientObject)           \n        // }\n    }, []);\n\n\n    return (\n        <>\n            <ToastContainer autoClose={3000} hideProgressBar />\n           \n            <Card >\n                <CardBody>\n                <form >\n                    <div className=\"row\">\n                    <h3>PMTCT - HIV COUNSELLING AND TESTING \n                    </h3>\n                        <br/>\n                        <br/>\n                        \n                        <div className=\"col-md-3 col-sm-3 col-lg-3\">                       \n                        <Menu  size='large'  vertical  style={{backgroundColor:\"#014D88\"}}>\n                            <Menu.Item\n                                name='inbox'\n                                active={activeItem === 'hiv-test'}\n                                onClick={()=>handleItemClick('hiv-test')}\n                                style={{backgroundColor:activeItem === 'hiv-test' ? '#000': \"\"}}\n                                //disabled={activeItem !== 'hiv-test' ? true : false}\n                            >               \n                                <span style={{color:'#fff'}}>Request {\"&\"} Result Form\n                                {completed.includes('hiv-test') && (\n                                    <Icon name='check' color='green' />\n                                )}\n                                </span>\n                                \n                                {/* <Label color='teal'>3</Label> */}\n                            </Menu.Item>                            \n                            <Menu.Item\n                                name='spam'\n                                active={activeItem === 'recency-testing'}\n                                onClick={()=>handleItemClick('recency-testing')}\n                                style={{backgroundColor:activeItem === 'recency-testing' ? '#000': \"\"}}\n                                //disabled={activeItem !== 'recency-testing' ? true : false}\n                            >\n                            {/* <Label>4</Label> */}\n                            <span style={{color:'#fff'}}>HIV Recency Testing\n                                {completed.includes('recency-testing') && (\n                                    <Icon name='check' color='green' />\n                                )}\n                            </span>\n                           \n                            </Menu.Item>\n                            <Menu.Item\n                                name='spam'\n                                active={activeItem === 'indexing'}\n                                onClick={()=>handleItemClick('indexing')}\n                                style={{backgroundColor:activeItem === 'indexing' ? '#000': \"\"}}\n                                //disabled={activeItem !== 'indexing' ? true : false}\n                            >\n                            {/* <Label>4</Label> */}\n                            <span style={{color:'#fff'}}>Index Notification Services - Elicitation\n                            {completed.includes('indexing') && (\n                                <Icon name='check' color='green' />\n                            )}\n                            </span>\n                            \n                            </Menu.Item>\n                        </Menu>\n                        </div>\n                        \n                        <div className=\"col-md-9 col-sm-9 col-lg-9 \" style={{ backgroundColor:\"#fff\", margingLeft:\"-50px\", paddingLeft:\"-20px\"}}>\n                            {activeItem==='risk' && (<RiskStratification handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj}  setHideOtherMenu={setHideOtherMenu} patientAge={props.patientObj.age} setExtra={setExtra} extra={extra} activePage={props.activePage} setActivePage={props.setActivePage}/>)}\n                            {activeItem==='basic' && (<BasicInfo handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} clientCode={props.clientCode} patientAge={props.patientObj.age} setExtra={setExtra} extra={extra}/>)}\n                            {activeItem==='pre-test-counsel' && (<PreTest handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} clientCode={props.clientCode} patientAge={props.patientObj.age}/>)}\n                            {activeItem==='hiv-test' && (<HivTestResult handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} clientCode={props.clientCode} patientAge={props.patientObj.age}/>)}\n                            {activeItem==='post-test' && (<PostTest handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} clientCode={props.clientCode} patientAge={props.patientObj.age} patientsHistory={props.patients}/>)}\n                            {activeItem==='indexing' && (<IndexingContactTracing handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} clientCode={props.clientCode} patientAge={props.patientObj.age}/>)}\n                            {activeItem==='recency-testing' && (<RecencyTesting  handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} clientCode={props.clientCode} patientAge={props.patientObj.age}/>)}\n                            {activeItem==='others' && (<Others handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} clientCode={props.clientCode} patientAge={props.patientObj.age}/>)}\n                            \n                        </div>                                   \n                    </div>\n\n                \n                    </form>\n                </CardBody>\n            </Card>                                 \n        </>\n    );\n};\n\nexport default PmtctHts","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\History\\RecentHistory.js",["305","306","307"],"import React, { Fragment, useState, useEffect } from \"react\";\r\n// BS\r\nimport { Dropdown } from \"react-bootstrap\";\r\n/// Scroll\r\n//import { makeStyles } from '@material-ui/core/styles';\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n//import { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n//import { Alert } from \"react-bootstrap\";\r\nimport { Card, Accordion } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nconst RecentHistory = (props) => {\r\n  let history = useHistory();\r\n  const [recentActivities, setRecentActivities] = useState([]);\r\n  const [infants, setInfants] = useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [saving, setSaving] = useState(false);\r\n  const [record, setRecord] = useState(null);\r\n  const toggle = () => setOpen(!open);\r\n  let notToBeUpdated = [\"pmtct_infant_information\"];\r\n  const [summartChart, setSummaryChart] = useState({\r\n    motherVisit: 0,\r\n    childVisit: 1,\r\n    childAlive: 0,\r\n    childDead: 0,\r\n  });\r\n  const [activeAccordionHeaderShadow, setActiveAccordionHeaderShadow] =\r\n    useState(0);\r\n\r\n  useEffect(() => {\r\n    InfantInfo();\r\n    RecentActivities();\r\n    SummaryChart();\r\n  }, [props.patientObj.id]);\r\n  ///GET LIST OF Infants\r\n\r\n  const InfantInfo = () => {\r\n    if (props.patientObj.ancNo) {\r\n      axios\r\n        .get(\r\n          `${baseUrl}pmtct/anc/get-infant-by-ancno/${props.patientObj.ancNo}`,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n          setInfants(response.data);\r\n        })\r\n\r\n        .catch((error) => {\r\n          //console.log(error);\r\n        });\r\n    } else {\r\n      axios\r\n        .get(\r\n          `${baseUrl}pmtct/anc/get-infant-by-mother-person-uuid/${\r\n            props.patientObj.person_uuid\r\n              ? props.patientObj.person_uuid\r\n              : props.patientObj.personUuid\r\n          }`,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n          setInfants(response.data);\r\n        })\r\n\r\n        .catch((error) => {\r\n          //console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const RecentActivities = () => {\r\n    // if patient has ANC No\r\n    // if (props.patientObj.ancNo) {\r\n    //   axios\r\n    //     .get(`${baseUrl}${props.patientObj.ancNo}`, {\r\n    //       headers: { Authorization: `Bearer ${token}` },\r\n    //     })\r\n    //     .then((response) => {\r\n    //       setRecentActivities(response.data);\r\n    //     })\r\n    //     .catch((error) => {\r\n    //     });\r\n    // } else {\r\n    axios\r\n      .get(\r\n        `${baseUrl}pmtct/anc/getAllActivities/${\r\n          props.patientObj.person_uuid\r\n            ? props.patientObj.person_uuid\r\n            : props.patientObj.personUuid\r\n        }`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setRecentActivities(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n    // }\r\n  };\r\n  const SummaryChart = () => {\r\n    // if patient has ANC No\r\n\r\n    if (props.patientObj.ancNo) {\r\n      axios\r\n        .get(\r\n          `${baseUrl}pmtct/anc/get-summary-chart/${props.patientObj.ancNo}`,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          setSummaryChart(response.data);\r\n        })\r\n        .catch((error) => {\r\n          //console.log(error);\r\n        });\r\n    } else {\r\n      axios\r\n        .get(\r\n          `${baseUrl}pmtct/anc/get-pmtct-summary-chart/${\r\n            props.patientObj.person_uuid\r\n              ? props.patientObj.person_uuid\r\n              : props.patientObj.personUuid\r\n          }`,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          setSummaryChart(response.data);\r\n        })\r\n        .catch((error) => {\r\n          //console.log(error);\r\n        });\r\n    }\r\n  };\r\n  const ActivityName = (name) => {\r\n    if (name === \"pmtct-enrollment\") {\r\n      return \"PE\";\r\n    } else if (name === \"anc-enrollment\") {\r\n      return \"AE\";\r\n    } else if (name === \"anc-delivery\") {\r\n      return \"AD\";\r\n    } else if (name === \"anc-mother-visit\") {\r\n      return \"MV\";\r\n    } else if (name === \"pmtct_infant_visit\") {\r\n      return \"IV\";\r\n    } else if (name === \"pmtct_infant_information\") {\r\n      return \"II\";\r\n    } else {\r\n      return \"RA\";\r\n    }\r\n  };\r\n\r\n  const LoadViewPage = (row, action) => {\r\n    if (row.path === \"anc-enrollment\") {\r\n      //props.setActiveContent({...props.activeContent, route:'anc-enrollment', id:row.id, actionType:action})\r\n      history.push({\r\n        pathname: \"/update-patient\",\r\n        state: {\r\n          id: row.recordId,\r\n          patientObj: props.patientObj,\r\n          actionType: action,\r\n        },\r\n      });\r\n    } else if (row.path === \"anc-delivery\") {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: \"labour-delivery\",\r\n        id: row.recordId,\r\n        actionType: action,\r\n      });\r\n    } else if (row.path === \"pmtct-enrollment\") {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: \"anc-pnc\",\r\n        id: row.recordId,\r\n        activeTab: \"history\",\r\n        actionType: action,\r\n      });\r\n    } else if (row.path === \"anc-mother-visit\") {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: \"consultation\",\r\n        id: row.recordId,\r\n        activeTab: \"home\",\r\n        actionType: action,\r\n      });\r\n    } else if (row.path === \"pmtct_infant_visit\") {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: \"consultation\",\r\n        id: row.recordId,\r\n        activeTab: \"child\",\r\n        actionType: action,\r\n      });\r\n    } else if (row.path === \"pmtct_infant_information\") {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: \"add-infant\",\r\n        id: row.recordId,\r\n        activeTab: \"home\",\r\n        actionType: action,\r\n      });\r\n    } else {\r\n    }\r\n  };\r\n  const LoadDeletePage = (row) => {\r\n    if (row.path === \"anc-enrollment\") {\r\n      setSaving(true);\r\n      //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n      axios\r\n        .delete(`${baseUrl}pmtct/anc/delete/anc/${row.recordId}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          toast.success(\"Record Deleted Successfully\");\r\n          RecentActivities();\r\n          toggle();\r\n          setSaving(false);\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\");\r\n          }\r\n        });\r\n    } else if (row.path === \"pmtct-enrollment\") {\r\n      setSaving(true);\r\n      //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n      axios\r\n        .delete(`${baseUrl}pmtct/anc/delete/pmtct/${row.recordId}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          toast.success(\"Record Deleted Successfully\");\r\n          RecentActivities();\r\n          toggle();\r\n          setSaving(false);\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\");\r\n          }\r\n        });\r\n    } else if (row.path === \"anc-delivery\") {\r\n      setSaving(false);\r\n      //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n      axios\r\n        .delete(`${baseUrl}pmtct/anc/delete/delivery/${row.recordId}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          toast.success(\"Record Deleted Successfully\");\r\n          RecentActivities();\r\n          toggle();\r\n          setSaving(false);\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\");\r\n          }\r\n        });\r\n    } else if (row.path === \"anc-mother-visit\") {\r\n      setSaving(true);\r\n      //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n      axios\r\n        .delete(`${baseUrl}pmtct/anc/delete/delivery/${row.recordId}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          toast.success(\"Record Deleted Successfully\");\r\n          RecentActivities();\r\n          toggle();\r\n          setSaving(false);\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\");\r\n          }\r\n        });\r\n    } else if (row.path === \"pmtct_infant_visit\") {\r\n      setSaving(true);\r\n      //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n      axios\r\n        .delete(`${baseUrl}pmtct/anc/delete/infantvisit/${row.recordId}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          toast.success(\"Record Deleted Successfully\");\r\n          RecentActivities();\r\n          toggle();\r\n          setSaving(false);\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\");\r\n          }\r\n        });\r\n    } else if (row.path === \"pmtct_infant_information\") {\r\n      setSaving(true);\r\n      //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n      axios\r\n        .delete(`${baseUrl}pmtct/anc/delete/infantinfo/${row.recordId}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          toast.success(\"Record Deleted Successfully\");\r\n          RecentActivities();\r\n          toggle();\r\n          setSaving(false);\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\");\r\n          }\r\n        });\r\n    } else {\r\n    }\r\n  };\r\n  const LoadModal = (row) => {\r\n    toggle();\r\n    setRecord(row);\r\n  };\r\n  const index = 0;\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* <Ext /> */}\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-xl-4 col-xxl-4 col-lg-4\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header  border-0 pb-0\">\r\n              <h4 className=\"card-title\"> Recent Activities</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <PerfectScrollbar\r\n                style={{ height: \"370px\" }}\r\n                id=\"DZ_W_Todo1\"\r\n                className=\"widget-media dz-scroll ps ps--active-y\"\r\n              >\r\n                <Accordion\r\n                  className=\"accordion accordion-header-bg accordion-header-shadow accordion-rounded \"\r\n                  defaultActiveKey=\"0\"\r\n                >\r\n                  <>\r\n                    {recentActivities &&\r\n                      recentActivities.map((data, i) => (\r\n                        <div className=\"accordion-item\" key={i}>\r\n                          <Accordion.Toggle\r\n                            as={Card.Text}\r\n                            eventKey={`${i}`}\r\n                            className={`accordion-header ${\r\n                              activeAccordionHeaderShadow === 1\r\n                                ? \"\"\r\n                                : \"collapsed\"\r\n                            } accordion-header-info`}\r\n                            onClick={() =>\r\n                              setActiveAccordionHeaderShadow(\r\n                                activeAccordionHeaderShadow === 1 ? -1 : i\r\n                              )\r\n                            }\r\n                          >\r\n                            <span className=\"accordion-header-icon\"></span>\r\n                            <span className=\"accordion-header-text\">\r\n                              Visit Date :{\" \"}\r\n                              <span className=\"\">{data.activityName}</span>{\" \"}\r\n                            </span>\r\n                            <span className=\"accordion-header-indicator\"></span>\r\n                          </Accordion.Toggle>\r\n                          <Accordion.Collapse\r\n                            eventKey={`${i}`}\r\n                            className=\"accordion__body\"\r\n                          >\r\n                            <div className=\"accordion-body-text\">\r\n                              <ul className=\"timeline\">\r\n                                <li>\r\n                                  <div className=\"timeline-panel\">\r\n                                    <div\r\n                                      className={\r\n                                        i % 2 == 0\r\n                                          ? \"media me-2 media-info\"\r\n                                          : \"media me-2 media-success\"\r\n                                      }\r\n                                    >\r\n                                      {ActivityName(data.path)}\r\n                                    </div>\r\n                                    <div className=\"media-body\">\r\n                                      <h5 className=\"mb-1\">\r\n                                        {data.activityName}\r\n                                      </h5>\r\n                                      <small className=\"d-block\">\r\n                                        {data.activityDate}\r\n                                      </small>\r\n                                    </div>\r\n                                    {!notToBeUpdated.includes(data.path) ? (\r\n                                      <Dropdown className=\"dropdown\">\r\n                                        <Dropdown.Toggle\r\n                                          variant=\" light\"\r\n                                          className=\"i-false p-0 btn-info sharp\"\r\n                                        >\r\n                                          <svg\r\n                                            width=\"18px\"\r\n                                            height=\"18px\"\r\n                                            viewBox=\"0 0 24 24\"\r\n                                            version=\"1.1\"\r\n                                          >\r\n                                            <g\r\n                                              stroke=\"none\"\r\n                                              strokeWidth=\"1\"\r\n                                              fill=\"none\"\r\n                                              fillRule=\"evenodd\"\r\n                                            >\r\n                                              <rect\r\n                                                x=\"0\"\r\n                                                y=\"0\"\r\n                                                width=\"24\"\r\n                                                height=\"24\"\r\n                                              />\r\n                                              <circle\r\n                                                fill=\"#000000\"\r\n                                                cx=\"5\"\r\n                                                cy=\"12\"\r\n                                                r=\"2\"\r\n                                              />\r\n                                              <circle\r\n                                                fill=\"#000000\"\r\n                                                cx=\"12\"\r\n                                                cy=\"12\"\r\n                                                r=\"2\"\r\n                                              />\r\n                                              <circle\r\n                                                fill=\"#000000\"\r\n                                                cx=\"19\"\r\n                                                cy=\"12\"\r\n                                                r=\"2\"\r\n                                              />\r\n                                            </g>\r\n                                          </svg>\r\n                                        </Dropdown.Toggle>\r\n                                        <Dropdown.Menu className=\"dropdown-menu\">\r\n                                          <Dropdown.Item\r\n                                            className=\"dropdown-item\"\r\n                                            onClick={() =>\r\n                                              LoadViewPage(data, \"view\")\r\n                                            }\r\n                                          >\r\n                                            View\r\n                                          </Dropdown.Item>\r\n                                          <Dropdown.Item\r\n                                            className=\"dropdown-item\"\r\n                                            onClick={() =>\r\n                                              LoadViewPage(data, \"update\")\r\n                                            }\r\n                                          >\r\n                                            Update\r\n                                          </Dropdown.Item>\r\n                                          <Dropdown.Item\r\n                                            className=\"dropdown-item\"\r\n                                            onClick={() =>\r\n                                              LoadModal(data, \"delete\")\r\n                                            }\r\n                                          >\r\n                                            Delete\r\n                                          </Dropdown.Item>\r\n                                        </Dropdown.Menu>\r\n                                      </Dropdown>\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )}\r\n                                  </div>\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </Accordion.Collapse>\r\n                        </div>\r\n                      ))}\r\n                  </>\r\n                </Accordion>\r\n              </PerfectScrollbar>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {props.patientObj.dynamicHivStatus === \"Positive\" ||\r\n        props.patientObj.hivStatus === \"Positive\" ? (\r\n          <>\r\n            <div className=\"col-xl-8 col-xxl-8 col-lg-8\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header border-0 pb-0\">\r\n                  <h4 className=\"card-title\">Patient Chart</h4>\r\n                </div>\r\n                <br />\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-6 col-md-6 col-lg-6\">\r\n                    <div className=\"col-xl-12 col-xxl-12 col-sm-12\">\r\n                      <div className=\"card overflow-hidden\">\r\n                        <div className=\"social-graph-wrapper widget-facebook\">\r\n                          <span className=\"s-icon\">\r\n                            <span style={{ fontSize: \"16px\" }}>\r\n                              Total Clinic Visit\r\n                            </span>\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                          <div className=\"col-6 border-right\">\r\n                            <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                              <h4 className=\"m-1\">\r\n                                <span className=\"counter\">\r\n                                  <b>{summartChart.motherVisit}</b>\r\n                                </span>\r\n                              </h4>\r\n                              <p className=\"m-0\">\r\n                                <b>Mother Visit</b>\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                          {infants.length > 0 && (\r\n                            <div className=\"col-6\">\r\n                              <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                                <h4 className=\"m-1\">\r\n                                  <span className=\"counter\">\r\n                                    <b>{summartChart.childVisit}</b>\r\n                                  </span>\r\n                                </h4>\r\n                                <p className=\"m-0\">\r\n                                  <b>Infant's Visit</b>\r\n                                </p>\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-xl-12 col-xxl-12 col-sm-12\">\r\n                      <div className=\"card overflow-hidden\">\r\n                        <div className=\"social-graph-wrapper widget-linkedin\">\r\n                          <span className=\"s-icon\">\r\n                            <span style={{ fontSize: \"16px\" }}>\r\n                              No. of Infants{\" \"}\r\n                              {infants.length > 0 ? \" : \" + infants.length : \"\"}\r\n                            </span>\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                          {infants.length > 0 ? (\r\n                            <>\r\n                              <div className=\"col-6 border-right\">\r\n                                <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                                  <h4 className=\"m-1\">\r\n                                    <span className=\"counter\">\r\n                                      {summartChart.childAlive}\r\n                                    </span>\r\n                                  </h4>\r\n                                  <p className=\"m-0\">\r\n                                    <b>Alive </b>\r\n                                  </p>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"col-6\">\r\n                                <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                                  <h4 className=\"m-1\">\r\n                                    <span className=\"counter\">\r\n                                      {summartChart.childDead}\r\n                                    </span>\r\n                                  </h4>\r\n                                  <p className=\"m-0\">\r\n                                    <b>Dead </b>\r\n                                  </p>\r\n                                </div>\r\n                              </div>\r\n                            </>\r\n                          ) : (\r\n                            <p>No Record</p>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-sm-6 col-md-6 col-lg-6\">\r\n                    <div className=\"card-body\">\r\n                      <h3>Current Infant's Details</h3>\r\n                      {infants.length > 0 ? (\r\n                        <PerfectScrollbar\r\n                          style={{ height: \"370px\" }}\r\n                          id=\"DZ_W_TimeLine1\"\r\n                          className=\"widget-timeline dz-scroll style-1 height370 ps ps--active-y\"\r\n                        >\r\n                          <ul className=\"timeline\">\r\n                            {infants.length > 0\r\n                              ? infants.map((obj) => (\r\n                                  <li key={index}>\r\n                                    <div\r\n                                      className={\r\n                                        index % 2 == 0\r\n                                          ? \"timeline-badge info\"\r\n                                          : \"timeline-badge success\"\r\n                                      }\r\n                                    ></div>\r\n                                    <span\r\n                                      className=\"timeline-panel text-muted\"\r\n                                      //onClick={()=>redirectLink()}\r\n                                      //to=\"\"\r\n                                    >\r\n                                      <h6 className=\"mb-0\">\r\n                                        Infant Given Name\r\n                                        <br />\r\n                                        {obj.firstName}\r\n                                      </h6>\r\n                                      <strong className=\"text-teal\">\r\n                                        Infant DOB\r\n                                        <br />\r\n                                        {obj.dateOfDelivery}\r\n                                      </strong>\r\n                                      <br />\r\n                                      <strong className=\"text-warning\">\r\n                                        Gender\r\n                                        <br />\r\n                                        {obj.sex}\r\n                                      </strong>\r\n                                    </span>\r\n                                  </li>\r\n                                ))\r\n                              : \"\"}\r\n                          </ul>\r\n                        </PerfectScrollbar>\r\n                      ) : (\r\n                        <p>No Record</p>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {console.log(\r\n          props.patientObj.dynamicHivStatus === \"Unknown\",\r\n          props.patientObj.hivStatus === \"Unknown\"\r\n        )}\r\n        {/* props.patientObj.dynamicHivStatus === \"Unknown\" || */}\r\n        <>\r\n          <div className=\"col-sm-6 col-md-6 col-lg-6\">\r\n            <div className=\"card-body\">\r\n              {props.patientObj.hivStatus === \"Unknown\" ||\r\n              props.patientObj.staticHivStatus === \"Unknown\" ? (\r\n                <b>Patient has no HTS record. Please refer for testing...</b>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          </div>\r\n        </>\r\n\r\n        <Modal\r\n          show={open}\r\n          toggle={toggle}\r\n          className=\"fade\"\r\n          size=\"md\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          backdrop=\"static\"\r\n        >\r\n          <Modal.Header>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Notification!\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <h4>\r\n              Are you Sure you want to delete{\" \"}\r\n              <b>{record && record.activityName}</b>\r\n            </h4>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              onClick={() => LoadDeletePage(record)}\r\n              style={{ backgroundColor: \"red\", color: \"#fff\" }}\r\n              disabled={saving}\r\n            >\r\n              {saving === false ? \"Yes\" : \"Deleting...\"}\r\n            </Button>\r\n            <Button\r\n              onClick={toggle}\r\n              style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n              disabled={saving}\r\n            >\r\n              No\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RecentHistory;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\History\\PatientHistory.js",["308","309"],"import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n//import { makeStyles } from '@material-ui/core/styles'\r\nimport { useHistory } from \"react-router-dom\";\r\n//import {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Dropdown, Button, Menu, Icon } from \"semantic-ui-react\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst PatientnHistory = (props) => {\r\n  const [recentActivities, setRecentActivities] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  let history = useHistory();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [saving, setSaving] = useState(false);\r\n  const [record, setRecord] = useState(null);\r\n  const toggle = () => setOpen(!open);\r\n  let notToBeUpdated = [\"pmtct_infant_information\"];\r\n  useEffect(() => {\r\n    PatientHistory();\r\n  }, [props.patientObj.id]);\r\n  ///GET LIST OF Patients\r\n  const PatientHistory = () => {\r\n    setLoading(true);\r\n\r\n    // if (props.patientObj.ancNo) {\r\n    //   axios\r\n    //     .get(`${baseUrl}pmtct/anc/activities/${props.patientObj.ancNo}`, {\r\n    //       headers: { Authorization: `Bearer ${token}` },\r\n    //     })\r\n    //     .then((response) => {\r\n\r\n    //       setRecentActivities(response.data);\r\n    //     })\r\n\r\n    //     .catch((error) => {\r\n    //     });\r\n    // } else {\r\n    axios\r\n      .get(\r\n        `${baseUrl}pmtct/anc/getAllActivities/${\r\n          props.patientObj.person_uuid\r\n            ? props.patientObj.person_uuid\r\n            : props.patientObj.personUuid\r\n        }`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        setLoading(false);\r\n        setRecentActivities(response.data);\r\n      })\r\n\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n    // }\r\n  };\r\n\r\n  const LoadViewPage = (row, action) => {\r\n    if (row.path === \"anc-enrollment\") {\r\n      //props.setActiveContent({...props.activeContent, route:'anc-enrollment', id:row.id, actionType:action})\r\n      history.push({\r\n        pathname: \"/update-patient\",\r\n        state: {\r\n          id: row.recordId,\r\n          patientObj: props.patientObj,\r\n          actionType: action,\r\n        },\r\n      });\r\n    } else if (row.path === \"anc-delivery\") {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: \"labour-delivery\",\r\n        id: row.recordId,\r\n        actionType: action,\r\n      });\r\n    } else if (row.path === \"pmtct-enrollment\") {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: \"anc-pnc\",\r\n        id: row.recordId,\r\n        activeTab: \"history\",\r\n        actionType: action,\r\n      });\r\n    } else if (row.path === \"anc-mother-visit\") {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: \"consultation\",\r\n        id: row.recordId,\r\n        activeTab: \"home\",\r\n        actionType: action,\r\n      });\r\n    } else if (row.path === \"pmtct_infant_visit\") {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: \"consultation\",\r\n        id: row.recordId,\r\n        activeTab: \"child\",\r\n        actionType: action,\r\n      });\r\n    } else if (row.path === \"pmtct_infant_information\") {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: \"add-infant\",\r\n        id: row.recordId,\r\n        activeTab: \"home\",\r\n        actionType: action,\r\n      });\r\n    } else {\r\n    }\r\n  };\r\n  const LoadDeletePage = (row) => {\r\n    if (row.path === \"anc-enrollment\") {\r\n      setSaving(true);\r\n      //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n      axios\r\n        .delete(`${baseUrl}pmtct/anc/delete/anc/${row.recordId}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          toast.success(\"Record Deleted Successfully\");\r\n          PatientHistory();\r\n          toggle();\r\n          setSaving(false);\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\");\r\n          }\r\n        });\r\n    } else if (row.path === \"pmtct-enrollment\") {\r\n      setSaving(true);\r\n      //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n      axios\r\n        .delete(`${baseUrl}pmtct/anc/delete/pmtct/${row.recordId}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          toast.success(\"Record Deleted Successfully\");\r\n          PatientHistory();\r\n          toggle();\r\n          setSaving(false);\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\");\r\n          }\r\n        });\r\n    } else if (row.path === \"anc-delivery\") {\r\n      setSaving(false);\r\n      //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n      axios\r\n        .delete(`${baseUrl}pmtct/anc/delete/delivery/${row.recordId}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          toast.success(\"Record Deleted Successfully\");\r\n          PatientHistory();\r\n          toggle();\r\n          setSaving(false);\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\");\r\n          }\r\n        });\r\n    } else if (row.path === \"anc-mother-visit\") {\r\n      setSaving(true);\r\n      //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n      axios\r\n        .delete(`${baseUrl}pmtct/anc/delete/delivery/${row.recordId}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          toast.success(\"Record Deleted Successfully\");\r\n          PatientHistory();\r\n          toggle();\r\n          setSaving(false);\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\");\r\n          }\r\n        });\r\n    } else if (row.path === \"pmtct_infant_visit\") {\r\n      setSaving(true);\r\n      //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n      axios\r\n        .delete(`${baseUrl}pmtct/anc/delete/infantvisit/${row.recordId}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          toast.success(\"Record Deleted Successfully\");\r\n          PatientHistory();\r\n          toggle();\r\n          setSaving(false);\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\");\r\n          }\r\n        });\r\n    } else if (row.path === \"pmtct_infant_information\") {\r\n      setSaving(true);\r\n      //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n      axios\r\n        .delete(`${baseUrl}pmtct/anc/delete/infantinfo/${row.recordId}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          toast.success(\"Record Deleted Successfully\");\r\n          PatientHistory();\r\n          toggle();\r\n          setSaving(false);\r\n        })\r\n        .catch((error) => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\");\r\n          }\r\n        });\r\n    } else {\r\n    }\r\n  };\r\n  const LoadModal = (row) => {\r\n    toggle();\r\n    setRecord(row);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <br />\r\n\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Patient History \"\r\n        columns={[\r\n          { title: \"Description\", field: \"name\" },\r\n          {\r\n            title: \"Encounter Date\",\r\n            field: \"date\",\r\n          },\r\n          // { title: \"Status\", field: \"status\", filtering: false },\r\n          { title: \"Actions\", field: \"actions\", filtering: false },\r\n        ]}\r\n        isLoading={loading}\r\n        data={\r\n          recentActivities &&\r\n          recentActivities.map((row) => ({\r\n            name: row.activityName,\r\n            date: row.activityDate,\r\n            actions: !notToBeUpdated.includes(row.path) ? (\r\n              <div>\r\n                <Menu.Menu position=\"right\">\r\n                  <Menu.Item>\r\n                    <Button\r\n                      style={{ backgroundColor: \"rgb(153,46,98)\" }}\r\n                      primary\r\n                    >\r\n                      <Dropdown item text=\"Action\">\r\n                        <Dropdown.Menu style={{ marginTop: \"10px\" }}>\r\n                          {row.viewable && (\r\n                            <Dropdown.Item\r\n                              onClick={() => LoadViewPage(row, \"view\")}\r\n                            >\r\n                              {\" \"}\r\n                              <Icon name=\"eye\" />\r\n                              View{\" \"}\r\n                            </Dropdown.Item>\r\n                          )}\r\n                          {row.viewable && (\r\n                            <Dropdown.Item\r\n                              onClick={() => LoadViewPage(row, \"update\")}\r\n                            >\r\n                              <Icon name=\"edit\" />\r\n                              Edit\r\n                            </Dropdown.Item>\r\n                          )}\r\n                          <Dropdown.Item\r\n                            onClick={() => LoadModal(row, \"delete\")}\r\n                          >\r\n                            {\" \"}\r\n                            <Icon name=\"trash\" /> Delete\r\n                          </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                      </Dropdown>\r\n                    </Button>\r\n                  </Menu.Item>\r\n                </Menu.Menu>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            ),\r\n          }))\r\n        }\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: \"#014d88\",\r\n            color: \"#fff\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"200%\",\r\n            margingLeft: \"250px\",\r\n          },\r\n          filtering: false,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: 10,\r\n          debounceInterval: 400,\r\n        }}\r\n      />\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>\r\n            Are you Sure you want to delete{\" \"}\r\n            <b>{record && record.activityName}</b>\r\n          </h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={() => LoadDeletePage(record)}\r\n            style={{ backgroundColor: \"red\", color: \"#fff\" }}\r\n            disabled={saving}\r\n          >\r\n            {saving === false ? \"Yes\" : \"Deleting...\"}\r\n          </Button>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n            disabled={saving}\r\n          >\r\n            No\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientnHistory;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PmtctServices\\PmtctEntryPoint\\index.js",["310","311","312","313","314","315","316","317","318","319"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\RiskStratification.js",["320","321","322","323","324","325"],"\nimport React, { useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\nimport * as moment from 'moment';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card,} from \"@material-ui/core\";\nimport { toast} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { useHistory, } from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport {token, url as baseUrl } from \"../../../api\";\nimport 'react-phone-input-2/lib/style.css'\nimport 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport 'react-phone-input-2/lib/style.css'\nimport { Button} from 'semantic-ui-react'\nimport {  Modal } from \"react-bootstrap\";\nimport {Label as LabelRibbon, Message} from 'semantic-ui-react'\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        },\n        \"& .card-title\":{\n            color:'#fff',\n            fontWeight:'bold'\n        },\n        \"& .form-control\":{\n            borderRadius:'0.25rem',\n            height:'41px'\n        },\n        \"& .card-header:first-child\": {\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\n        },\n        \"& .dropdown-toggle::after\": {\n            display: \" block !important\"\n        },\n        \"& select\":{\n            \"-webkit-appearance\": \"listbox !important\"\n        },\n        \"& p\":{\n            color:'red'\n        },\n        \"& label\":{\n            fontSize:'14px',\n            color:'#014d88',\n            fontWeight:'bold'\n        }\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    },\n    success:{\n        color: 'green',\n        fontSize: '12.8px',\n        fontWeight:'bold'\n    }\n}));\n\n\nconst RiskStratification = (props) => {\n    const classes = useStyles();\n    const history = useHistory();\n    console.log(props)\n    const [enrollSetting, setEnrollSetting] = useState([]);\n    let riskCountQuestion=[]\n    const [kP, setKP] = useState([]);\n    const [errors, setErrors] = useState({});\n    const [saving, setSaving] = useState(false);\n    let temp = { ...errors }\n    const [open, setOpen] = React.useState(false)\n    const toggle = () => setOpen(!open);\n    const [setting, setSetting] = useState([]);\n    const [riskCount, setRiskCount] = useState(0);\n    const [objValues, setObjValues]= useState(\n        {\n            age:props.patientAge,\n            dob:\"\",//props.patientObj.dateOfBirth && props.patientObj.dateOfBirth!==null ? props.patientObj.dateOfBirth :\"\",\n            visitDate: \"\",         \n            dateOfBirth: \"\",//props.patientObj.dateOfBirth && props.patientObj.dateOfBirth!==null ? props.patientObj.dateOfBirth :\"\",\n            dateOfRegistration: \"\",//props.patientObj.dateOfRegistration,\n            isDateOfBirthEstimated: \"\",//props.patientObj.isDateOfBirthEstimated,//\n            targetGroup:\"\",\n            testingSetting:\"\",//\n            modality  :\"\", //\n            code:\"\",\n            personId: props.patientObj.personId,\n            riskAssessment: {},\n            entryPoint:\"\"\n\n        }\n    )\n    const [riskAssessment, setRiskAssessment]= useState(\n        {\n            everHadSexualIntercourse:\"\",\n            bloodtransInlastThreeMonths:\"\",\n            uprotectedSexWithCasualLastThreeMonths:\"\",\n            uprotectedSexWithRegularPartnerLastThreeMonths:\"\", \n            unprotectedVaginalSex:\"\",  \n            uprotectedAnalSex:\"\",   \n            stiLastThreeMonths:\"\",\n            sexUnderInfluence :\"\",\n            moreThanOneSexPartnerLastThreeMonths:\"\",\n            experiencePain:\"\",\n            haveSexWithoutCondom:\"\",\n            abuseDrug:\"\",\n            bloodTransfusion:\"\",\n            consistentWeightFeverNightCough:\"\",\n            soldPaidVaginalSex:\"\",\n            //New Question\n            lastHivTestForceToHaveSex:\"\", \n            lastHivTestHadAnal:\"\",\n            lastHivTestInjectedDrugs:\"\",\n            whatWasTheResult:\"\",\n            lastHivTestDone:\"\",\n            diagnosedWithTb:\"\",\n            lastHivTestPainfulUrination:\"\",\n            lastHivTestBloodTransfusion:\"\",\n            lastHivTestVaginalOral:\"\",\n            lastHivTestBasedOnRequest:\"\"\n        }\n    )\n    useEffect(() => { \n        KP();\n        EnrollmentSetting();\n    }, [props.patientObj]);\n    //Get list of HIV STATUS ENROLLMENT\n    const EnrollmentSetting =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/TEST_SETTING`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            //console.log(response.data);\n            setEnrollSetting(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    //Get list of KP\n    const KP =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setKP(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    const handleInputChange = e => { \n        setErrors({...temp, [e.target.name]:\"\"})\n        if(e.target.name==='testingSetting' && e.target.value!==\"\"){\n            SettingModality(e.target.value)\n            setObjValues ({...objValues,  [e.target.name]: e.target.value}); \n        }\n        if(e.target.name==='modality' && e.target.value!==\"\"){\n            //SettingModality(e.target.value)\n            if(e.target.value===\"TEST_SETTING_STANDALONE_HTS_PMTCT_(ANC1_ONLY)\"){\n                setRiskCount(1)\n                setObjValues ({...objValues,  [e.target.name]: e.target.value}); \n            }else if(e.target.value===\"TEST_SETTING_STANDALONE_HTS_EMERGENCY\"){\n                //setRiskCount(1)\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\n            }else if(e.target.value===\"TEST_SETTING_STANDALONE_HTS_INDEX\"){\n                setRiskCount(1)\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\n            }else if(e.target.value===\"TEST_SETTING_STANDALONE_HTS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\"){\n                setRiskCount(1)\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\n            }else if(e.target.value===\"TEST_SETTING_STANDALONE_HTS_STI\"){\n                setRiskCount(1)\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\n            }else if(e.target.value===\"TEST_SETTING_STANDALONE_HTS_TB\"){\n                setRiskCount(1)\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\n            }else if(e.target.value===\"TEST_SETTING_CT_STI\"){\n                setRiskCount(1)\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\n            }else if(e.target.value===\"TEST_SETTING_CT_PMTCT\"){\n                setRiskCount(1)\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\n            }else if(e.target.value===\"TEST_SETTING_CT_TB\"){\n                setRiskCount(1)\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\n            }else if(e.target.value===\"TEST_SETTING_TB_TB\"){\n                setRiskCount(1)\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\n            }else if(e.target.value===\"TEST_SETTING_STI_STI\"){\n                setRiskCount(1)\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\n            }else if(e.target.value===\"TEST_SETTING_OPD_STI\"){\n                //setRiskCount(1)\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\n            }else if(e.target.value===\"TEST_SETTING_OUTREACH_INDEX\"){\n                setRiskCount(1)\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\n            }else{\n                setRiskCount(0)\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\n            }\n            \n        }\n        \n        setObjValues ({...objValues,  [e.target.name]: e.target.value});            \n    }\n    //Date of Birth and Age handle \n    //Get list of DSD Model Type\n    function SettingModality (settingId) {\n        const setting = settingId\n        axios\n           .get(`${baseUrl}application-codesets/v2/${setting}`,\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\n           )\n           .then((response) => {\n               setSetting(response.data);\n           })\n           .catch((error) => {\n           //console.log(error);\n           });\n       \n    }\n    //End of Date of Birth and Age handling \n    /*****  Validation  */\n    const validate = () => {\n        //HTS FORM VALIDATION\n            temp.dateVisit = objValues.visitDate ? \"\" : \"This field is required.\"  \n            temp.testingSetting = objValues.testingSetting ? \"\" : \"This field is required.\"\n            temp.modality = objValues.modality ? \"\" : \"This field is required.\"  \n            props.patientObj.age>15 && (temp.targetGroup = objValues.targetGroup ? \"\" : \"This field is required.\" )             \n            //targetGroup            \n                setErrors({ ...temp })\n        return Object.values(temp).every(x => x == \"\")\n    }\n    const handleItemClick =(page, completedMenu)=>{\n        props.handleItemClick(page)\n        if(props.completed.includes(completedMenu)) {\n\n        }else{\n            props.setCompleted([...props.completed, completedMenu])\n        }\n    }\n         // Getting the number count of riskAssessment True\n    const actualRiskCountTrue=Object.values(riskAssessment)\n    riskCountQuestion=actualRiskCountTrue.filter((x)=> x==='true')\n    const handleInputChangeRiskAssessment = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        setRiskAssessment ({...riskAssessment,  [e.target.name]: e.target.value}); \n                            \n    }\n    const handleSubmit =(e)=>{\n        e.preventDefault();\n            //console.log(riskAssessment)\n            props.patientObj.targetGroup = objValues.targetGroup\n            props.patientObj.testingSetting = objValues.testingSetting\n            props.patientObj.dateVisit= objValues.visitDate\n            props.patientObj.riskAssessment =riskAssessment \n            \n            objValues.riskAssessment=riskAssessment\n            if((riskCount>0 || riskCountQuestion.length>0) && props.patientAge>15){\n                if(validate()){\n                    axios.post(`${baseUrl}risk-stratification`,objValues,\n                    { headers: {\"Authorization\" : `Bearer ${token}`}},\n                    \n                    )\n                    .then(response => {\n                        setSaving(false);\n                        objValues.code=response.data.code\n                        props.setExtra(objValues)\n                        handleItemClick('basic', 'risk' )\n                        props.setHideOtherMenu(false)\n                        //toast.success(\"Risk stratification save succesfully!\");\n                    })\n                    .catch(error => {\n                        setSaving(false);\n                        if(error.response && error.response.data){\n                            let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                            toast.error(errorMessage,  {position: toast.POSITION.BOTTOM_CENTER});\n                        }\n                        else{\n                            toast.error(\"Something went wrong. Please try again...\",  {position: toast.POSITION.BOTTOM_CENTER});\n                        }\n                    });\n                }else{\n                    toast.error(\"All fields are required\",  {position: toast.POSITION.BOTTOM_CENTER});\n                }  \n            }\n            // else{\n            //     if(validate()){\n            //         axios.post(`${baseUrl}risk-stratification`,objValues,\n            //         { headers: {\"Authorization\" : `Bearer ${token}`}},\n                    \n            //         )\n            //         .then(response => {\n            //             setSaving(false);\n            //             objValues.code=response.data.code\n            //             props.patientObj.riskStratificationResponseDto = response.data\n            //             props.setActivePage({...props.activePage, activePage:\"home\"})\n            //             //props.setExtra(objValues)\n            //             //handleItemClick('basic', 'risk' )\n            //             //props.setHideOtherMenu(false)\n            //             // history.push({\n            //             //     pathname: '/patient-history',\n            //             //     state: {patientObject: props.patientObj, patientObj: props.patientObj.personResponseDto, clientCode:props.patientObj.clientCode}\n            //             // });\n            //             toast.success(\"Risk stratification save succesfully!\",  {position: toast.POSITION.BOTTOM_CENTER});\n            //         })\n            //         .catch(error => {\n            //             console.log(error)\n            //             setSaving(false);\n            //             if(error.response && error.response.data){\n            //                 let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n            //                 toast.error(errorMessage,  {position: toast.POSITION.BOTTOM_CENTER});\n            //             }\n            //             else{\n            //                 toast.error(\"Something went wrong. Please try again...\",  {position: toast.POSITION.BOTTOM_CENTER});\n            //             }\n            //         });\n            //     }else{\n            //         toast.error(\"All fields are required\",  {position: toast.POSITION.BOTTOM_CENTER});\n            //     } \n            // }\n            if(props.patientAge<15){\n                if(validate()){\n                    axios.post(`${baseUrl}risk-stratification`,objValues,\n                    { headers: {\"Authorization\" : `Bearer ${token}`}},\n                    \n                    )\n                    .then(response => {\n                        setSaving(false);\n                        props.patientObj.riskStratificationResponseDto=response.data\n                        objValues.code=response.data.code\n                        props.setExtra(objValues)\n                        props.setHideOtherMenu(false)\n                        handleItemClick('basic', 'risk' )\n                        //toast.success(\"Risk stratification save succesfully!\");\n                    })\n                    .catch(error => {\n                        setSaving(false);\n                        if(error.response && error.response.data){\n                            let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                            toast.error(errorMessage,  {position: toast.POSITION.BOTTOM_CENTER});\n                        }\n                        else{\n                            toast.error(\"Something went wrong. Please try again...\");\n                        }\n                    });\n                }else{\n                    toast.error(\"All fields are required\",  {position: toast.POSITION.BOTTOM_CENTER});\n                }\n                \n            }else{\n                props.setExtra(objValues)\n                if(validate()){\n                    axios.post(`${baseUrl}risk-stratification`,objValues,\n                    { headers: {\"Authorization\" : `Bearer ${token}`}},\n                    \n                    )\n                    .then(response => {\n                        setSaving(false);\n                        props.patientObj.riskStratificationResponseDto=response.data\n                        objValues.code=response.data.code\n                        props.setExtra(objValues)\n                        //toast.success(\"Risk stratification save succesfully!\");\n                    })\n                    .catch(error => {\n                        setSaving(false);\n                        if(error.response && error.response.data){\n                            let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                            toast.error(errorMessage,  {position: toast.POSITION.BOTTOM_CENTER});\n                        }\n                        else{\n                            toast.error(\"Something went wrong. Please try again...\",  {position: toast.POSITION.BOTTOM_CENTER});\n                        }\n                    });\n                }else{\n                    toast.error(\"All fields are required\",  {position: toast.POSITION.BOTTOM_CENTER});\n                }\n            }\n            \n    }\n\n    return (\n        <>  \n        \n            <Card className={classes.root}>\n                <CardBody>   \n                <h2 style={{color:'#000'}}>RISK STRATIFICATION</h2>\n                <br/>\n                    <form >\n                        <div className=\"row\">\n                        <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Modality</div>\n                            <div className=\"row\">\n                            <div className=\"form-group  col-md-6\">\n                                <FormGroup>\n                                    <Label>Entry Point </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"entryPoint\"\n                                        id=\"entryPoint\"\n                                        value={objValues.entryPoint}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}>Select</option>                                      \n                                        <option value=\"Facility\">Facility</option>\n                                        <option value=\"Community\">Community</option>\n                                    </select>\n                                    {errors.entryPoint !==\"\" ? (\n                                    <span className={classes.error}>{errors.entryPoint}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-6\">\n                                <FormGroup>\n                                <Label for=\"\">Visit Date * </Label>\n                                <Input\n                                    type=\"date\"\n                                    name=\"visitDate\"\n                                    id=\"visitDate\"\n                                    value={objValues.visitDate}\n                                    onChange={handleInputChange}\n                                    min=\"1983-12-31\"\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                    \n                                />\n                                {errors.dateVisit !==\"\" ? (\n                                    <span className={classes.error}>{errors.dateVisit}</span>\n                                ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-6\">\n                                <FormGroup>\n                                    <Label>Setting</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"testingSetting\"\n                                        id=\"testingSetting\"\n                                        value={objValues.testingSetting}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}>Select</option>\n                                        {enrollSetting.map((value) => (\n                                            <option key={value.id} value={value.code}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                        {/* <option value=\"TEST_SETTING_CT\">CT</option>\n                                        <option value=\"TEST_SETTING_TB\">TB</option>\n                                        <option value=\"TEST_SETTING_STI\">STI</option>\n                                        <option value=\"TEST_SETTING_OPD\">OPD</option>\n                                        <option value=\"TEST_SETTING_WARD\">WARD</option>\n                                        <option value=\"TEST_SETTING_STANDALONE_HTS\">STANDALONE HTS</option>\n                                        \n                                        <option value=\"TEST_SETTING_FP\">FP</option>\n                                        <option value=\"TEST_SETTING_OUTREACH\">OUTREACH</option>\n                                        <option value=\"TEST_SETTING_OTHERS\">OTHERS</option> */}\n\n                                    </select>\n                                    {errors.testingSetting !==\"\" ? (\n                                    <span className={classes.error}>{errors.testingSetting}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-6\">\n                                <FormGroup>\n                                    <Label>Modality</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"modality\"\n                                        id=\"modality\"\n                                        value={objValues.modality}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}>Select</option>\n                                        {setting.map((value) => (\n                                            <option key={value.code} value={value.code}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                        \n                                    </select>\n                                    {errors.modality !==\"\" ? (\n                                    <span className={classes.error}>{errors.modality}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            \n                            </div>\n                            <br/>\n                           \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Target Group *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"targetGroup\"\n                                        id=\"targetGroup\"\n                                        onChange={handleInputChange}\n                                        value={objValues.targetGroup}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        {kP.map((value) => (\n                                            <option key={value.id} value={value.code}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                    </select>\n                                    {errors.targetGroup !==\"\" ? (\n                                        <span className={classes.error}>{errors.targetGroup}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                           \n\n                            <br />\n                             \n                            {props.patientAge>15 && ( <>\n                            {/* {(objValues.targetGroup!==\"\" && objValues.targetGroup===\"TARGET_GROUP_GEN_POP\" )&& ( <>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Ever had sexual intercourse </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"everHadSexualIntercourse\"\n                                        id=\"everHadSexualIntercourse\"\n                                        value={riskAssessment.everHadSexualIntercourse}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.everHadSexualIntercourse !==\"\" ? (\n                                    <span className={classes.error}>{errors.everHadSexualIntercourse}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Blood transfusion in last 3 months *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"bloodtransInlastThreeMonths\"\n                                        id=\"bloodtransInlastThreeMonths\"\n                                        value={riskAssessment.bloodtransInlastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.bloodtransInlastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.bloodtransInlastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected sex with casual partner in last 3 months *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedSexWithCasualLastThreeMonths\"\n                                        id=\"uprotectedSexWithCasualLastThreeMonths\"\n                                        value={riskAssessment.uprotectedSexWithCasualLastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.uprotectedSexWithCasualLastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedSexWithCasualLastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected sex with regular partner in the last 3months</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\n                                        id=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\n                                        value={riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.uprotectedSexWithRegularPartnerLastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedSexWithRegularPartnerLastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected vaginal sex</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"unprotectedVaginalSex\"\n                                        id=\"unprotectedVaginalSex\"\n                                        value={riskAssessment.unprotectedVaginalSex}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.unprotectedVaginalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.unprotectedVaginalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected Anal sex</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedAnalSex\"\n                                        id=\"uprotectedAnalSex\"\n                                        value={riskAssessment.uprotectedAnalSex}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.uprotectedAnalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedAnalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>         \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>STI in last 3 months *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"stiLastThreeMonths\"\n                                        id=\"stiLastThreeMonths\"\n                                        value={riskAssessment.stiLastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.stiLastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.stiLastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Sex under the influence of drugs or alcohol*</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"sexUnderInfluence\"\n                                        id=\"sexUnderInfluence\"\n                                        value={riskAssessment.sexUnderInfluence}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.sexUnderInfluence !==\"\" ? (\n                                    <span className={classes.error}>{errors.sexUnderInfluence}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>More than 1 sex partner during last 3 months*</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"moreThanOneSexPartnerLastThreeMonths\"\n                                        id=\"moreThanOneSexPartnerLastThreeMonths\"\n                                        value={riskAssessment.moreThanOneSexPartnerLastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.moreThanOneSexPartnerLastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.moreThanOneSexPartnerLastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                          \n                            <br/>\n                            </>)} */}\n                            {(objValues.targetGroup!==\"\" && objValues.targetGroup===\"TARGET_GROUP_GEN_POP\" ) && ( <>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Is this HIV test based on a Clinician/Doctor/Health Care Provider’s  request? *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"lastHivTestBasedOnRequest\"\n                                        id=\"lastHivTestBasedOnRequest\"\n                                        value={riskAssessment.lastHivTestBasedOnRequest}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.lastHivTestBasedOnRequest !==\"\" ? (\n                                    <span className={classes.error}>{errors.lastHivTestBasedOnRequest}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>When was your last HIV test done?  *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"lastHivTestDone\"\n                                        id=\"lastHivTestDone\"\n                                        value={riskAssessment.lastHivTestDone}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.lastHivTestDone !==\"\" ? (\n                                    <span className={classes.error}>{errors.lastHivTestDone}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>What was the result? *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"whatWasTheResult\"\n                                        id=\"whatWasTheResult\"\n                                        value={riskAssessment.whatWasTheResult}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.whatWasTheResult !==\"\" ? (\n                                    <span className={classes.error}>{errors.whatWasTheResult}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Since your last HIV test, have you had anal or vaginal or oral sex without a condom with someone who was HIV positive or unaware of their HIV status? *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"lastHivTestVaginalOral\"\n                                        id=\"lastHivTestVaginalOral\"\n                                        value={riskAssessment.lastHivTestVaginalOral}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.lastHivTestVaginalOral !==\"\" ? (\n                                    <span className={classes.error}>{errors.lastHivTestVaginalOral}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Since your last HIV test, have you had a blood or blood product transfusion? *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"lastHivTestBloodTransfusion\"\n                                        id=\"lastHivTestBloodTransfusion\"\n                                        value={riskAssessment.lastHivTestBloodTransfusion}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.lastHivTestBloodTransfusion !==\"\" ? (\n                                    <span className={classes.error}>{errors.lastHivTestBloodTransfusion}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>    \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Since your last HIV test, have you experienced painful urination, lower abdominal pain, vaginal or penile discharge, pain during sexual intercourse, thick, cloudy, or foul smelling discharge and/or small bumps or blisters near the mouth, penis, vagina, or anal areas? *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"lastHivTestPainfulUrination\"\n                                        id=\"lastHivTestPainfulUrination\"\n                                        value={riskAssessment.lastHivTestPainfulUrination}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.lastHivTestPainfulUrination !==\"\" ? (\n                                    <span className={classes.error}>{errors.lastHivTestPainfulUrination}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>   \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you been diagnosed with TB or currently have any of the following symptoms : cough, fever, weight loss, night sweats? *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"diagnosedWithTb\"\n                                        id=\"diagnosedWithTb\"\n                                        value={riskAssessment.diagnosedWithTb}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.diagnosedWithTb !==\"\" ? (\n                                    <span className={classes.error}>{errors.diagnosedWithTb}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Since your last HIV test, have you ever injected drugs, shared needles or other sharp objects with someone known to be HIV positive or who you didn’t know their HIV status? *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"lastHivTestInjectedDrugs\"\n                                        id=\"sexUnderInfluence\"\n                                        value={riskAssessment.lastHivTestInjectedDrugs}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.lastHivTestInjectedDrugs !==\"\" ? (\n                                    <span className={classes.error}>{errors.lastHivTestInjectedDrugs}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Since your last HIV test, have you had anal, oral or vaginal sex in exchange for money or other benefits? *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"lastHivTestHadAnal\"\n                                        id=\"lastHivTestHadAnal\"\n                                        value={riskAssessment.lastHivTestHadAnal}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.lastHivTestHadAnal !==\"\" ? (\n                                    <span className={classes.error}>{errors.lastHivTestHadAnal}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Since your last HIV test, have you been forced to have sex? *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"lastHivTestForceToHaveSex\"\n                                        id=\"moreThanOneSexPartnerLastThreeMonths\"\n                                        value={riskAssessment.lastHivTestForceToHaveSex}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.lastHivTestForceToHaveSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.lastHivTestForceToHaveSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <br/>\n                            </>)}\n                            {(objValues.targetGroup!==\"\" && objValues.targetGroup!==\"TARGET_GROUP_GEN_POP\" ) && ( <>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/your partner experienced lower abdominal pain, smelly discharge, blisters and wounds around you/partner vagina, penis anus or mouth?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"experiencePain\"\n                                        id=\"experiencePain\"\n                                        value={riskAssessment.experiencePain}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.experiencePain !==\"\" ? (\n                                    <span className={classes.error}>{errors.experiencePain}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner had sex without a condom with someone of unknown HIV status, or you/partner raped by person with unknown HIV status? *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"haveSexWithoutCondom\"\n                                        id=\"haveSexWithoutCondom\"\n                                        value={riskAssessment.haveSexWithoutCondom}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.haveSexWithoutCondom !==\"\" ? (\n                                    <span className={classes.error}>{errors.haveSexWithoutCondom}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you had a condom burst with your partner during sexual intercourse?  *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"haveCondomBurst\"\n                                        id=\"haveCondomBurst\"\n                                        value={riskAssessment.haveCondomBurst}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.haveCondomBurst !==\"\" ? (\n                                    <span className={classes.error}>{errors.haveCondomBurst}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Do you/partner share needles/syringes, other sharp objects or used abuse drug substances of any kind?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"abuseDrug\"\n                                        id=\"abuseDrug\"\n                                        value={riskAssessment.abuseDrug}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.abuseDrug !==\"\" ? (\n                                    <span className={classes.error}>{errors.abuseDrug}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner had any blood or blood product transfusion?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"bloodTransfusion\"\n                                        id=\"bloodTransfusion\"\n                                        value={riskAssessment.bloodTransfusion}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.bloodTransfusion !==\"\" ? (\n                                    <span className={classes.error}>{errors.bloodTransfusion}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner experienced coughing, weight loss, fever, night sweats consistently?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"consistentWeightFeverNightCough\"\n                                        id=\"consistentWeightFeverNightCough\"\n                                        value={riskAssessment.consistentWeightFeverNightCough}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.consistentWeightFeverNightCough !==\"\" ? (\n                                    <span className={classes.error}>{errors.consistentWeightFeverNightCough}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>            \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner paid or sold vaginal, anal or oral sex? *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"soldPaidVaginalSex\"\n                                        id=\"soldPaidVaginalSex\"\n                                        value={riskAssessment.soldPaidVaginalSex}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.soldPaidVaginalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.soldPaidVaginalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                           \n                            <br/>\n                            </>)}\n                            </>)}\n                            <br/>\n                            <Message warning>\n                                <h4>Personal HIV Risk assessment score </h4>\n                                <b>Score :{riskCount + (props.patientAge>15 ?riskCountQuestion.length : 0)}</b>\n                            </Message>\n                            <hr/>\n                            <br/>\n                            <div className=\"row\">\n                            <div className=\"form-group mb-3 col-md-6\">\n                           \n                            <Button content='Save' type=\"submit\" icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\n                            </div>\n                            </div>\n                        </div>\n                    </form>\n                    \n                </CardBody>\n            </Card> \n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered>\n             <Modal.Header >\n            <Modal.Title id=\"contained-modal-title-vcenter\">\n                Notification!\n            </Modal.Title>\n            </Modal.Header>\n                <Modal.Body>\n                    <h4>Are you Sure of the Age entered?</h4>\n                    \n                </Modal.Body>\n            <Modal.Footer>\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\n            </Modal.Footer>\n            </Modal>                             \n        </>\n    );\n};\n\nexport default RiskStratification","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\PostTest.js",["326","327","328","329","330"],"import React, {useCallback, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card} from \"@material-ui/core\";\n// import AddIcon from \"@material-ui/icons/Add\";\n// import CancelIcon from \"@material-ui/icons/Cancel\";\nimport { toast} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { useHistory, } from \"react-router-dom\";\nimport {token, url as baseUrl } from \"../../../api\";\nimport 'react-phone-input-2/lib/style.css'\nimport {Label as LabelRibbon, Button, Message} from 'semantic-ui-react'\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        },\n        \"& .card-title\":{\n            color:'#fff',\n            fontWeight:'bold'\n        },\n        \"& .form-control\":{\n            borderRadius:'0.25rem',\n            height:'41px'\n        },\n        \"& .card-header:first-child\": {\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\n        },\n        \"& .dropdown-toggle::after\": {\n            display: \" block !important\"\n        },\n        \"& select\":{\n            \"-webkit-appearance\": \"listbox !important\"\n        },\n        \"& p\":{\n            color:'red'\n        },\n        \"& label\":{\n            fontSize:'14px',\n            color:'#014d88',\n            fontWeight:'bold'\n        }\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    }\n}));\n\n\nconst PostTest = (props) => {\n    const classes = useStyles();\n    const history = useHistory();\n    const patientID= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.id : \"\";\n    const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\n    const [saving, setSaving] = useState(false);\n    console.log(props.patientObj)\n    ///const [errors, setErrors] = useState({});\n    const [objValues, setObjValues]= useState(\n        {\n            htsClientId: clientId,\n            postTestCounselingKnowledgeAssessment: {},\n            personId: patientID,\n        }\n    )\n\n    const [postTest, setPostTest]= useState(\n        {\n            hivTestResult:\"\", \n            hivTestBefore:\"\", \n            hivRequestResult:\"\", \n            hivRequestResultCt:\"\",                             \n            clientReceivedHivTestResult:\"\", \n            postTestCounseling:\"\", \n            riskReduction:\"\", \n            postTestDisclosure:\"\",\n            bringPartnerHivtesting:\"\", \n            childrenHivtesting:\"\", \n            informationFp:\"\", \n            partnerFpThanCondom:\"\", \n            partnerFpUseCondom:\"\",\n            correctCondomUse:\"\", \n            condomProvidedToClient:\"\", \n            unprotectedSexRegularPartnerLastThreeMonth:\"\", \n            referredToServices:\"\",\n        }\n    )\n    useEffect(() => { \n        //console.log(props.patientObj)\n        if(props.patientObj && props.patientObj.postTestCounselingKnowledgeAssessment){\n            setPostTest(props.patientObj.postTestCounselingKnowledgeAssessment) \n        }else{\n            ///setPostTest(props.patientObj && props.patientObj.postTestCounselingKnowledgeAssessment!==null ? props.patientObj.postTestCounselingKnowledgeAssessment : {}) \n            if(postTest.hivTestResult===\"\" && props.patientObj.hivTestResult!==\"\" && props.patientObj.hivTestResult!==null && (props.patientObj.hivTestResult==='Positive' || props.patientObj.hivTestResult2==='Positive')){\n                postTest.hivTestResult='True'\n                setPostTest({...postTest, hivTestResult:'True' })\n            }else if(postTest.hivTestResult===\"\"  && props.patientObj.hivTestResult!==\"\" && props.patientObj.hivTestResult!==null && (props.patientObj.hivTestResult==='Negative' || props.patientObj.hivTestResult2==='Negative')){\n                postTest.hivTestResult='False'\n                setPostTest({...postTest, hivTestResult:'False' })\n            }\n        }\n    }, [props.patientObj,postTest.hivTestResult]);\n    const handleInputChangePostTest = e => { \n        //setErrors({...temp, [e.target.name]:\"\"})        \n        setPostTest ({...postTest,  [e.target.name]: e.target.value});           \n    }\n    const handleItemClick =(page, completedMenu)=>{\n        props.handleItemClick(page)\n        if(props.completed.includes(completedMenu)) {\n\n        }else{\n            props.setCompleted([...props.completed, completedMenu])\n        }\n    }\n    const handleSubmit =(e)=>{\n        e.preventDefault();\n        //handleItemClick('recency-testing', 'post-test')\n        if(!(Object.values(postTest).every(x => x === \"\"))){\n            objValues.htsClientId=  props.patientObj.id\n            objValues.postTestCounselingKnowledgeAssessment= postTest\n            objValues.personId= props.patientObj.personResponseDto.id\n            axios.put(`${baseUrl}hts/${ props.patientObj.id}/post-test-counseling`,objValues,\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\n            \n            )\n            .then(response => {\n                setSaving(false);\n                props.setPatientObj(response.data)\n                //toast.success(\"Risk Assesment successful\");\n                if(postTest.hivTestResult==='True'){\n                    handleItemClick('recency-testing', 'post-test')\n                }else if(postTest.hivTestResult==='False'){\n                    history.push('/');\n                }\n                \n\n            })\n            .catch(error => {\n                setSaving(false);\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage);\n                }\n                else{\n                    toast.error(\"Something went wrong. Please try again...\");\n                }\n            });\n        }else{\n            toast.error(\"All post test fields are required\")  \n        \n        }\n            \n    }\n\n    console.log(postTest.hivTestResult)\n    return (\n        <>\n            <Card className={classes.root}>\n                <CardBody>\n               \n                <h2 >POST TEST COUNSELING</h2>\n                    <form >\n                        <div className=\"row\">\n                        <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\n                            {/* <h5 style={{color:'#fff'}}>Knowledge Assessment</h5> */}\n                        </LabelRibbon>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>HIV test result *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hivTestResult\"\n                                        id=\"hivTestResult\"\n                                        value={postTest.hivTestResult}\n                                        onChange={handleInputChangePostTest}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"True\">Positive</option>\n                                        <option value=\"False\">Negative</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you been tested for HIV before within this year? *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hivTestBefore\"\n                                        id=\"hivTestBefore\"\n                                        value={postTest.hivTestBefore}\n                                        onChange={handleInputChangePostTest}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Not previously tested\">Not previously tested</option>\n                                        <option value=\"Previously tested negative\">Previously tested negative</option>\n                                        <option value=\"Previously tested positive in HIV care\">Previously tested positive in HIV care</option>\n                                        <option value=\"Previously tested positive not in HIV care\">Previously tested positive not in HIV care</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>HIV Request and Result form signed by tester *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hivRequestResult\"\n                                        id=\"hivRequestResult\"\n                                        value={postTest.hivRequestResult}\n                                        onChange={handleInputChangePostTest}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>HIV Request and Result form filled with CT Intake Form *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hivRequestResultCt\"\n                                        id=\"hivRequestResultCt\"\n                                        value={postTest.hivRequestResultCt}\n                                        onChange={handleInputChangePostTest}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client received HIV test result *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientReceivedHivTestResult\"\n                                        id=\"clientReceivedHivTestResult\"\n                                        value={postTest.clientReceivedHivTestResult}\n                                        onChange={handleInputChangePostTest}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Post test counseling done *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"postTestCounseling\"\n                                        id=\"postTestCounseling\"\n                                        value={postTest.postTestCounseling}\n                                        onChange={handleInputChangePostTest}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Risk reduction plan developed *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"riskReduction\"\n                                        id=\"riskReduction\"\n                                        value={postTest.riskReduction}\n                                        onChange={handleInputChangePostTest}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Post test disclosure plan developed *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"postTestDisclosure\"\n                                        id=\"postTestDisclosure\"\n                                        value={postTest.postTestDisclosure}\n                                        onChange={handleInputChangePostTest}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>                            \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Will bring partner(s) for HIV testing *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"bringPartnerHivtesting\"\n                                        id=\"bringPartnerHivtesting\"\n                                        value={postTest.bringPartnerHivtesting}\n                                        onChange={handleInputChangePostTest}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Will bring own children {'<5'} years for HIV testing *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"childrenHivtesting\"\n                                        id=\"childrenHivtesting\"\n                                        value={postTest.childrenHivtesting}\n                                        onChange={handleInputChangePostTest}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Provided with information on FP and dual contraception *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"informationFp\"\n                                        id=\"informationFp\"\n                                        value={postTest.informationFp}\n                                        onChange={handleInputChangePostTest}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client/Partner use FP methods (other than condom)*</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"partnerFpThanCondom\"\n                                        id=\"partnerFpThanCondom\"\n                                        value={postTest.partnerFpThanCondom}\n                                        onChange={handleInputChangePostTest}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client/Partner use condoms as (one) FP method </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"partnerFpUseCondom\"\n                                        id=\"partnerFpUseCondom\"\n                                        value={postTest.partnerFpUseCondom}\n                                        onChange={handleInputChangePostTest}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Correct condom use demonstrated *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"correctCondomUse\"\n                                        id=\"correctCondomUse\"\n                                        value={postTest.correctCondomUse}\n                                        onChange={handleInputChangePostTest}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Condoms provided to client *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"condomProvidedToClient\"\n                                        id=\"condomProvidedToClient\"\n                                        value={postTest.condomProvidedToClient}\n                                        onChange={handleInputChangePostTest}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            {/* <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected sex with regular partner in the last 3months</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"unprotectedSexRegularPartnerLastThreeMonth\"\n                                        id=\"unprotectedSexRegularPartnerLastThreeMonth\"\n                                        value={postTest.unprotectedSexRegularPartnerLastThreeMonth}\n                                        onChange={handleInputChangePostTest}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div> */}\n                            {/* <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected sex with regular particular in the last 3 months</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"sex\"\n                                        id=\"sex\"\n                                        \n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Yes\">Yes</option>\n                                        <option value=\"No\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div> */}\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client referred to other services *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"referredToServices\"\n                                        id=\"referredToServices\"\n                                        value={postTest.referredToServices}\n                                        onChange={handleInputChangePostTest}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <Message success>\n                                <h4>If client tests HIV negative, and HIV Risk Assessment Score {\">0\"} or\n                                    there is evidence for a STI syndrome, recommend re-testing after 3 months</h4>\n                                \n                            </Message>\n                                                \n                            {saving ? <Spinner /> : \"\"}\n                            <br />\n                            <div className=\"row\">\n                            <div className=\"form-group mb-3 col-md-12\">\n                                <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('hiv-test', 'hiv-test')}/>\n                                {postTest.hivTestResult==='True' && (\n                                    <Button content='Save & Continue' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\n                                )}\n                                {postTest.hivTestResult==='False' && (\n                                    <Button content='Save & Finish' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\n                                )}\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </CardBody>\n            </Card>                                 \n        </>\n    );\n};\n\nexport default PostTest","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\RecencyTesting.js",["331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346"],"import React, {useCallback, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\nimport * as moment from 'moment';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card, CardContent} from \"@material-ui/core\";\nimport { toast} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport 'react-phone-input-2/lib/style.css'\nimport {Label as LabelRibbon, Button} from 'semantic-ui-react'\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport {token, url as baseUrl } from \"../../../api\";\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        },\n        \"& .card-title\":{\n            color:'#fff',\n            fontWeight:'bold'\n        },\n        \"& .form-control\":{\n            borderRadius:'0.25rem',\n            height:'41px'\n        },\n        \"& .card-header:first-child\": {\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\n        },\n        \"& .dropdown-toggle::after\": {\n            display: \" block !important\"\n        },\n        \"& select\":{\n            \"-webkit-appearance\": \"listbox !important\"\n        },\n        \"& p\":{\n            color:'red'\n        },\n        \"& label\":{\n            fontSize:'14px',\n            color:'#014d88',\n            fontWeight:'bold'\n        }\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    }\n}));\n\nconst Recency = (props) => {\n    const classes = useStyles();\n    const patientID= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.id : \"\";\n    const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\n    const [saving, setSaving] = useState(false);\n    const [errors, setErrors] = useState({});\n    const [hivTestDate, setHivTestDate] = useState(\"\");\n    let temp = { ...errors }\n    const handleItemClick =(page, completedMenu)=>{\n        props.handleItemClick(page)\n        if(props.completed.includes(completedMenu)) {\n        }else{\n            props.setCompleted([...props.completed, completedMenu])\n        }\n    }\n\n    const [objValues, setObjValues]= useState(\n        {\n            htsClientId: clientId,\n            recency: {},\n            personId: patientID,\n        }\n    )\n    const [recency, setRecency]= useState(\n        {\n            optOutRTRI:\"\", \n            optOutRTRITestName:\"\", \n            optOutRTRITestDate:\"\", \n            rencencyId:\"\",  \n            controlLine:\"\",  \n            verififcationLine:\"\", \n            longTermLine:\"\",  \n            rencencyInterpretation:\"\", \n            hasViralLoad:\"\", \n            sampleCollectedDate:\"\",\n            sampleReferanceNumber:\"\",\n            dateSampleSentToPCRLab:\"\",\n            sampleTestDate:\"\",\n            sampleType:\"\", \n            receivingPcrLab:\"\", \n            viralLoadResultClassification:\"\",\n            recencyResult:\"\", \n            finalRecencyResult:\"\",\n        }\n    )\n    \n    useEffect(() => { \n        if(props.patientObj){\n            setRecency(props.patientObj && props.patientObj.recency!==null ? props.patientObj.recency : {})\n            if(props.patientObj.confirmatoryTest && props.patientObj.confirmatoryTest.date!=='' ){\n                setHivTestDate(props.patientObj.confirmatoryTest.date)\n            }else if(props.patientObj.confirmatoryTest2 && props.patientObj.confirmatoryTest2.date2!=='' ){\n                setHivTestDate(props.patientObj.confirmatoryTest2.date2)\n            }else{\n                setHivTestDate(\"\")\n            }\n        }\n        if(recency.longTermLine==='true' && recency.verififcationLine==='true' && recency.controlLine==='true'){\n            recency.rencencyInterpretation=\"Long Term\"\n            setRecency ({...recency,  ['rencencyInterpretation']: 'Long Term'}); \n        \n        }else if(recency.longTermLine==='false' && recency.verififcationLine==='true' && recency.controlLine==='true'){\n            recency.rencencyInterpretation=\"Recent\"\n            setRecency ({...recency,  ['rencencyInterpretation']: 'Recent'});\n            //setRecency ({...recency,  ['hasViralLoad']: 'true'});\n            \n        }else if(recency.longTermLine==='false' && recency.verififcationLine==='false' && recency.controlLine==='true'){\n            recency.rencencyInterpretation=\"Negative\"\n            setRecency ({...recency,  ['rencencyInterpretation']: 'Negative'});\n            \n        }else if(recency.longTermLine==='true' && recency.verififcationLine==='true' && recency.controlLine==='false'){\n            recency.rencencyInterpretation=\"Invalid\"\n            setRecency ({...recency,  ['rencencyInterpretation']: 'Invalid'});\n           \n        }else if(recency.longTermLine==='true' && recency.verififcationLine==='false' && recency.controlLine==='true'){\n            recency.rencencyInterpretation=\"Invalid\"\n            setRecency ({...recency,  ['rencencyInterpretation']: 'Invalid'});\n            \n        }else{\n            \n            setRecency ({...recency,  ['rencencyInterpretation']: ''});\n        }\n    },[recency.longTermLine,recency.verififcationLine, recency.controlLine, props.patientObj]);\n    console.log(props.patientObj)\n    const handleInputChangeRecency = e => { \n        setErrors({...temp, [e.target.name]:\"\"})        \n        if(e.target.name ==='viralLoadResultClassification'){\n             \n            if(e.target.value ==='>=1000'){\n                recency.finalRecencyResult='RITA Recent'\n                setRecency ({...recency,  [e.target.name]: e.target.value}); \n            \n            }else if(e.target.value ==='<1000') {\n                recency.finalRecencyResult='RITA Long term'\n                setRecency ({...recency,  [e.target.name]: e.target.value}); \n            }else if(e.target.value ==='Failed run') {\n                recency.finalRecencyResult='RITA Inconclusive'\n                setRecency ({...recency,  [e.target.name]: e.target.value}); \n            }else if(e.target.value ==='Invalid viral load result') {\n                recency.finalRecencyResult='RITA Inconclusive'\n                setRecency ({...recency,  [e.target.name]: e.target.value}); \n            }else{\n                setRecency ({...recency,  [e.target.name]: e.target.value}); \n            }\n        }else if(e.target.name==='rencencyId' && e.target.value!==''){\n            const recencyIdNumberValue = checkRecencyLimit(e.target.value)\n            setRecency ({...recency,  [e.target.name]: recencyIdNumberValue});\n        }else {\n            setRecency ({...recency,  [e.target.name]: e.target.value}); \n        }\n         \n    }\n    const checkRecencyLimit=(e)=>{\n        const limit = 10;        \n        const acceptedNumber= e.slice(0, limit)\n        return  acceptedNumber   \n    }\n    /*****  Validation  */\n    const validate = () => {\n        //HTS FORM VALIDATION\n            {recency.sampleCollectedDate!=='' && (temp.sampleReferanceNumber = recency.sampleReferanceNumber ? \"\" : \"This field is required.\")}\n            {  recency.sampleCollectedDate!=='' && (temp.dateSampleSentToPCRLab = recency.dateSampleSentToPCRLab ? \"\" : \"This field is required.\")}\n            { recency.sampleCollectedDate!=='' && (temp.sampleType = recency.sampleType ? \"\" : \"This field is required.\")}\n            setErrors({ ...temp })\n        return Object.values(temp).every(x => x == \"\")\n    }\n    const handleSubmit =(e)=>{\n        e.preventDefault();\n       \n\n            objValues.htsClientId= clientId\n            objValues.recency= recency\n            objValues.personId= patientID\n            console.log(recency)\n            axios.put(`${baseUrl}hts/${clientId}/recency`,objValues,\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\n            \n            )\n            .then(response => {\n                setSaving(false);\n                props.setPatientObj(response.data)\n                //toast.success(\"Risk Assesment successful\");\n                handleItemClick('indexing', 'recency-testing' )\n\n            })\n            .catch(error => {\n                setSaving(false);\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage);\n                }\n                else{\n                    toast.error(\"Something went wrong. Please try again...\");\n                }\n            });\n        \n            \n    }\n\n\n\n    return (\n        <>\n            <Card className={classes.root}>\n                <CardBody>               \n                <h2>RECENCY FORM</h2>\n                    <form >\n                        <div className=\"row\">\n                        <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\n                            <h5 style={{color:'#fff'}}>RENCENCY</h5>\n                        </LabelRibbon>\n                        <br/><br/><br/>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Opt Out of RTRI?*</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"optOutRTRI\"\n                                        id=\"optOutRTRI\"\n                                        value={recency.optOutRTRI}\n                                        onChange={handleInputChangeRecency}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-8\"></div>\n                            {recency.optOutRTRI==='false' && (\n                            <>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Test Name *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"optOutRTRITestName\"\n                                        id=\"optOutRTRITestName\"\n                                        value={recency.optOutRTRITestName}\n                                        onChange={handleInputChangeRecency}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Asante\">Asante</option>\n                                        <option value=\"Others\">Others</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Test Date *</Label>\n                                    <Input\n                                        type=\"date\"\n                                        name=\"optOutRTRITestDate\"\n                                        id=\"optOutRTRITestDate\"\n                                        value={recency.optOutRTRITestDate}\n                                        onChange={handleInputChangeRecency}\n                                        min={hivTestDate!==\"\" && hivTestDate!==null ? hivTestDate :\"\"}\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                    \n                                    />\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Recency ID *</Label>\n                                    <Input\n                                        className=\"form-control\"\n                                        name=\"rencencyId\"\n                                        id=\"rencencyId\"\n                                        type=\"text\"\n                                        value={recency.rencencyId}\n                                        onChange={handleInputChangeRecency}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    />\n                                 \n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Control Line *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"controlLine\"\n                                        id=\"controlLine\"\n                                        value={recency.controlLine}\n                                        onChange={handleInputChangeRecency}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Verification Line *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"verififcationLine\"\n                                        id=\"verififcationLine\"\n                                        value={recency.verififcationLine}\n                                        onChange={handleInputChangeRecency}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Long Term Line *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"longTermLine\"\n                                        id=\"longTermLine\"\n                                        value={recency.longTermLine}\n                                        onChange={handleInputChangeRecency}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Recency Interpretation *</Label>\n                                    <Input\n                                        className=\"form-control\"\n                                        name=\"rencencyInterpretation\"\n                                        id=\"rencencyInterpretation\"\n                                        type=\"text\"\n                                        value={recency.rencencyInterpretation}\n                                        disabled\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    />\n                                       \n                                    \n                                </FormGroup>\n                            </div>\n                            {recency.rencencyInterpretation==='Recent' && (\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Has viral load request been made? *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hasViralLoad\"\n                                        id=\"hasViralLoad\"\n                                        value={recency.hasViralLoad}\n                                        onChange={handleInputChangeRecency}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            )}\n                            {recency.hasViralLoad==='true' && (\n                            <>\n                                <div className=\"row\">\n                                    <h4>Viral Load Classification :</h4>\n                                    <br/>\n                                <div className=\"form-group  col-md-4\">\n                                    <FormGroup>\n                                        <Label>Sample Collected Date</Label>\n                                        <Input\n                                            className=\"form-control\"\n                                            name=\"sampleCollectedDate\"\n                                            id=\"sampleCollectedDate\"\n                                            type=\"date\"\n                                            value={recency.sampleCollectedDate}\n                                            min={recency.optOutRTRITestDate}\n                                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                            onChange={handleInputChangeRecency}\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        />\n                                    \n                                    </FormGroup>\n                                </div>\n                                <div className=\"form-group  col-md-4\">\n                                    <FormGroup>\n                                        <Label>Sample Refernce Number</Label>\n                                        <Input\n                                            className=\"form-control\"\n                                            name=\"sampleReferanceNumber\"\n                                            id=\"sampleReferanceNumber\"\n                                            type=\"text\"\n                                            value={recency.sampleReferanceNumber}\n                                            onChange={handleInputChangeRecency}\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        />\n                                        {errors.sampleReferanceNumber !==\"\" ? (\n                                        <span className={classes.error}>{errors.sampleReferanceNumber}</span>\n                                        ) : \"\" }\n                                    </FormGroup>\n                                </div>\n                                <div className=\"form-group  col-md-4\">\n                                    <FormGroup>\n                                        <Label>Sample Type</Label>\n                                        <select\n                                            className=\"form-control\"\n                                            name=\"sampleType\"\n                                            id=\"sampleType\"\n                                            value={recency.sampleType}\n                                            onChange={handleInputChangeRecency}\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        >\n                                            <option value={\"\"}></option>\n                                            <option value=\"DBS\">DBS</option>\n                                            <option value=\"Plasma\">Plasma</option>\n                                            \n                                        </select>\n                                        {errors.sampleType !==\"\" ? (\n                                        <span className={classes.error}>{errors.sampleType}</span>\n                                        ) : \"\" }\n                                    </FormGroup>\n                                </div>\n                                <div className=\"form-group  col-md-4\">\n                                    <FormGroup>\n                                        <Label>Date Sample Sent to PCR Lab</Label>\n                                        <Input\n                                            className=\"form-control\"\n                                            name=\"dateSampleSentToPCRLab\"\n                                            id=\"dateSampleSentToPCRLab\"\n                                            type=\"date\"\n                                            min={recency.optOutRTRITestDate}\n                                            value={recency.dateSampleSentToPCRLab}\n                                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                            onChange={handleInputChangeRecency}\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        />\n                                         {errors.dateSampleSentToPCRLab !==\"\" ? (\n                                        <span className={classes.error}>{errors.dateSampleSentToPCRLab}</span>\n                                        ) : \"\" }\n                                    </FormGroup>\n                                </div>\n                                <div className=\"form-group  col-md-4\">\n                                    <FormGroup>\n                                        <Label>Sample Test Date</Label>\n                                        <Input\n                                            className=\"form-control\"\n                                            name=\"sampleTestDate\"\n                                            id=\"sampleTestDate\"\n                                            type=\"date\"\n                                            min={recency.optOutRTRITestDate}\n                                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                            value={recency.sampleTestDate}\n                                            onChange={handleInputChangeRecency}\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        />\n                                        \n                                    </FormGroup>\n                                </div>\n                                <div className=\"form-group  col-md-4\">\n                                    <FormGroup>\n                                        <Label>Receiving PCR Lab</Label>\n                                        <Input\n                                            className=\"form-control\"\n                                            name=\"receivingPcrLab\"\n                                            id=\"receivingPcrLab\"\n                                            type=\"text\"\n                                            value={recency.receivingPcrLab}\n                                            onChange={handleInputChangeRecency}\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        />\n                                        \n                                    </FormGroup>\n                                </div>\n                                <div className=\"form-group  col-md-4\">\n                                    <FormGroup>\n                                        <Label>Viral Load Result Classification and Result (copies/ml)</Label>\n                                        <select\n                                            className=\"form-control\"\n                                            name=\"viralLoadResultClassification\"\n                                            id=\"viralLoadResultClassification\"\n                                            value={recency.viralLoadResultClassification}\n                                            onChange={handleInputChangeRecency}\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        >\n                                            <option value={\"\"}>Select</option>\n                                            <option value=\">=1000\">{\">= \"} 1000</option>\n                                            <option value=\"<1000\">{\"< \"} 1000</option>\n                                            <option value=\"Failed run\">Failed run</option>\n                                            <option value=\"Invalid viral load result\">Invalid viral load result</option>\n                                            \n                                        </select>\n                                        \n                                    </FormGroup>\n                                </div>\n                                {/* <div className=\"form-group  col-md-4\">\n                                    <FormGroup>\n                                        <Label>Result (copies/ml)</Label>\n                                        <Input\n                                            className=\"form-control\"\n                                            name=\"recencyResult\"\n                                            id=\"recencyResult\"\n                                            type=\"text\"\n                                            value={recency.recencyResult}\n                                            onChange={handleInputChangeRecency}\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        />\n                                        \n                                    </FormGroup>\n                                </div> */}\n                                <div className=\"form-group  col-md-4\">\n                                    <FormGroup>\n                                        <Label>Final Recency Result</Label>\n                                        <Input\n                                            className=\"form-control\"\n                                            name=\"finalRecencyResult\"\n                                            id=\"finalRecencyResult\"\n                                            type=\"text\"\n                                            disabled\n                                            value={recency.finalRecencyResult}\n                                            onChange={handleInputChangeRecency}\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        />\n\n                                    </FormGroup>\n                                </div>\n                                </div>\n                            </>\n                            )}\n                            </>)}\n                                                      \n                            {saving ? <Spinner /> : \"\"}\n                            <br />\n                            <div className=\"row\">\n                            <div className=\"form-group mb-3 col-md-12\">\n                            <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('post-test','post-test')}/>\n                            <Button content='Save & Continue' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\n                            </div>\n                            </div>\n                        </div>\n                    </form>\n                </CardBody>\n            </Card>                                 \n        </>\n    );\n};\n\nexport default Recency","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\Others.js",["347","348","349","350","351","352","353","354","355","356"],"import React, {useCallback, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport MatButton from \"@material-ui/core/Button\";\nimport Button from \"@material-ui/core/Button\";\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\nimport * as moment from 'moment';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card, CardContent} from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\n// import AddIcon from \"@material-ui/icons/Add\";\n// import CancelIcon from \"@material-ui/icons/Cancel\";\n// import {ToastContainer, toast} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\n// import {token, url as baseUrl } from \"../../../api\";\nimport 'react-phone-input-2/lib/style.css'\nimport {Label as LabelRibbon} from 'semantic-ui-react'\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        },\n        \"& .card-title\":{\n            color:'#fff',\n            fontWeight:'bold'\n        },\n        \"& .form-control\":{\n            borderRadius:'0.25rem',\n            height:'41px'\n        },\n        \"& .card-header:first-child\": {\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\n        },\n        \"& .dropdown-toggle::after\": {\n            display: \" block !important\"\n        },\n        \"& select\":{\n            \"-webkit-appearance\": \"listbox !important\"\n        },\n        \"& p\":{\n            color:'red'\n        },\n        \"& label\":{\n            fontSize:'14px',\n            color:'#014d88',\n            fontWeight:'bold'\n        }\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    }\n}));\n\n\nconst BasicInfo = (props) => {\n    const classes = useStyles();\n    const [saving, setSaving] = useState(false);\n    const [errors, setErrors] = useState({});\n    const handleItemClick =(page, completedMenu)=>{\n        props.handleItemClick(page)\n        if(props.completed.includes(completedMenu)) {\n\n        }else{\n            props.setCompleted([...props.completed, completedMenu])\n        }\n    }\n\n    return (\n        <>\n            <Card className={classes.root}>\n                <CardBody>\n               \n                <h3 >OTHERS - (Resquest {\"& \"} Result Form)</h3>\n               <hr/>\n                <br/>\n                    <form >\n                        <div className=\"row\">\n                        <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\n                            <h5 style={{color:'#fff'}}>Syphilis Testing</h5>\n                        </LabelRibbon>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Syphilis test result *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"syphilisTestResult\"\n                                        id=\"syphilisTestResult\"\n                                        \n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Yes\">Reactive</option>\n                                        <option value=\"No\">Non-Reactive</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <hr/>\n                            <br/>\n                            <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\n                            <h5 style={{color:'#fff'}}>Hepatitis B Testing</h5>\n                            </LabelRibbon>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Hepatitis B virus test result *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hepatitisBTestResult\"\n                                        id=\"hepatitisBTestResult\"\n                                        \n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Yes\">Positive</option>\n                                        <option value=\"No\">Negative</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Hepatitis C virus test result *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hepatitisCTestResult\"\n                                        id=\"hepatitisCTestResult\"\n                                        \n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                       <option value={\"\"}></option>\n                                        <option value=\"Yes\">Positive</option>\n                                        <option value=\"No\">Negative</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>HIV Request and Result form filled with CT Intake Form *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hivRequestResultCT\"\n                                        id=\"hivRequestResultCT\"\n                                        \n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Yes\">Yes</option>\n                                        <option value=\"No\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Completed By</Label>\n                                <Input\n                                    type=\"number\"\n                                    name=\"completedBy\"\n                                    id=\"completedBy\"\n                                    // value={objValues.lastViralLoad}\n                                    // onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                   \n                                />\n                                \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Longitude</Label>\n                                <Input\n                                    type=\"number\"\n                                    name=\"longitude\"\n                                    id=\"longitude\"\n                                    // value={objValues.lastViralLoad}\n                                    // onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                   \n                                />\n                                \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Latitude</Label>\n                                <Input\n                                    type=\"number\"\n                                    name=\"latitude\"\n                                    id=\"latitude\"\n                                    // value={objValues.lastViralLoad}\n                                    // onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                   \n                                />\n                                \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Adhoc Code</Label>\n                                <Input\n                                    type=\"number\"\n                                    name=\"adhocCode\"\n                                    id=\"adhocCode\"\n                                    // value={objValues.lastViralLoad}\n                                    // onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                   \n                                />\n                                \n                                </FormGroup>\n                            </div>\n                                                      \n                            {saving ? <Spinner /> : \"\"}\n                            <br />\n                            <div className=\"row\">\n                            <div className=\"form-group mb-3 col-md-6\">\n                            <MatButton\n                            type=\"button\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.button}\n                            startIcon={<SaveIcon />}\n                            onClick={()=>handleItemClick('basic','others')}\n                            style={{backgroundColor:\"#014d88\"}}\n                            //disabled={objValues.dateOfEac1===\"\" ? true : false}\n                            >\n                            {!saving ? (\n                            <span style={{ textTransform: \"capitalize\" }}>Save</span>\n                            ) : (\n                            <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\n                            )}\n                            </MatButton>\n                            </div>\n                            </div>\n                        </div>\n                    </form>\n                </CardBody>\n            </Card>                                 \n        </>\n    );\n};\n\nexport default BasicInfo","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\HivTestResult.js",["357","358","359","360","361"],"import React, {useCallback, useEffect, useState} from \"react\";\n\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\nimport * as moment from 'moment';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card, CardContent} from \"@material-ui/core\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport {toast} from \"react-toastify\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport axios from \"axios\";\nimport {token, url as baseUrl } from \"../../../api\";\nimport 'react-phone-input-2/lib/style.css'\nimport {Label as LabelRibbon, Button} from 'semantic-ui-react'\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        },\n        \"& .card-title\":{\n            color:'#fff',\n            fontWeight:'bold'\n        },\n        \"& .form-control\":{\n            borderRadius:'0.25rem',\n            height:'41px'\n        },\n        \"& .card-header:first-child\": {\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\n        },\n        \"& .dropdown-toggle::after\": {\n            display: \" block !important\"\n        },\n        \"& select\":{\n            \"-webkit-appearance\": \"listbox !important\"\n        },\n        \"& p\":{\n            color:'red'\n        },\n        \"& label\":{\n            fontSize:'14px',\n            color:'#014d88',\n            fontWeight:'bold'\n        }\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    }\n}));\n\n\nconst HivTestResult = (props) => {\n    const classes = useStyles();\n    const [saving, setSaving] = useState(false);\n    const [errors, setErrors] = useState({});\n    let temp = { ...errors }\n    console.log(props.patientObj)\n    const patientID= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.id : \"\";\n    const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\n    const [hivTestDate, setHivTestDate] = useState(\"\");\n    const [showCD4Count, setShowCD4Count] = useState(true);\n    const calculate_age = dob => {\n        var today = new Date();\n        var dateParts = dob.split(\"-\");\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\n        var age_now = today.getFullYear() - birthDate.getFullYear();\n        var m = today.getMonth() - birthDate.getMonth();\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n                    age_now--;\n                }\n            if (age_now === 0) {\n                    return m + \" month(s)\";\n                }\n                return age_now ;\n    };\n    const patientAge=calculate_age(moment(props.patientObj.personResponseDto && props.patientObj.personResponseDto.dateOfBirth ? props.patientObj.personResponseDto.dateOfBirth : 0).format(\"DD-MM-YYYY\"))\n   \n    const [objValues, setObjValues]= useState(\n        {\n            confirmatoryTest: {},\n            confirmatoryTest2: {},\n            hivTestResult: \"\",\n            hivTestResult2: \"\",\n            htsClientId:\"\",\n            personId: props.patientObj  ? props.patientObj.id : \"\",\n            test1: {},\n            test2: {},\n            tieBreakerTest: {},\n            tieBreakerTest2: {},\n            syphilisTesting:{},\n            hepatitisTesting:{},\n            others:{},\n            cd4:{},\n        }\n    )\n    const handleInputChange = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        setObjValues ({...objValues,  [e.target.name]: e.target.value});            \n    }\n    const [initialTest1, setInitailTest]= useState(\n        {\n            date:\"\",\n            result:\"\",            \n        }\n    )\n    const [initialTest12, setInitailTest2]= useState(\n        {\n            date2 :\"\",\n            result2  :\"\",            \n        }\n    )\n    const handleInputChangeCd4Count = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        setCd4Count ({...cd4Count,  [e.target.name]: e.target.value});            \n    }\n    const [cd4Count, setCd4Count]= useState(\n        {\n            cd4Count:\"\",\n            cd4SemiQuantitative:\"\",\n            cd4FlowCyteometry:\"\"            \n        }\n    )\n    const handleInputChangeInitial = e => { \n        //setErrors({...temp, [e.target.name]:\"\"})\n        if(e.target.value==='No'){\n            setInitailTest ({...initialTest1,  [e.target.name]: e.target.value}); \n            setConfirmatoryTest({\n                date :\"\",\n                result  :\"\",            \n            })\n            setTieBreakerTest({\n                date :\"\",\n                result  :\"\",            \n            })\n            //This is to show cd4 count section\n            setShowCD4Count(false)\n                \n        }else{\n            setInitailTest ({...initialTest1,  [e.target.name]: e.target.value});\n            //This is to show cd4 count section \n            setShowCD4Count(true)\n        }            \n    }\n    const handleInputChangeInitial2 = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        if(e.target.value==='No'){\n            setInitailTest2 ({...initialTest12,  [e.target.name]: e.target.value});  \n            setConfirmatoryTest2({\n                date2 :\"\",\n                result2  :\"\",            \n            })\n            setTieBreakerTest2({\n                date2 :\"\",\n                result2  :\"\",            \n            })\n            //This is to show cd4 count section\n            setShowCD4Count(false)\n        }else{\n            setInitailTest2 ({...initialTest12,  [e.target.name]: e.target.value});\n            //This is to show cd4 count section \n            setShowCD4Count(true) \n        }           \n    }\n    const [confirmatoryTest, setConfirmatoryTest]= useState(\n        {\n            date :\"\",\n            result  :\"\",            \n        }\n    )\n    const [confirmatoryTest2, setConfirmatoryTest2]= useState(\n        {\n            date2 :\"\",\n            result2  :\"\",            \n        }\n    )\n    const handleInputChangeConfirmatory = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        setConfirmatoryTest ({...confirmatoryTest,  [e.target.name]: e.target.value});\n        //This is to show cd4 count section \n        if(initialTest1.result==='Yes' && e.target.value==='Yes'){\n            setShowCD4Count(true)\n\n        }else{\n            setShowCD4Count(true)\n        }              \n    }\n    const handleInputChangeConfirmatory2 = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        setConfirmatoryTest2 ({...confirmatoryTest2,  [e.target.name]: e.target.value}); \n        //This is to show cd4 count section \n        if(initialTest12.result2==='Yes' && e.target.value==='Yes'){\n            setShowCD4Count(true)\n\n        }else{\n            setShowCD4Count(true)\n        }                 \n    }\n    const [tieBreakerTest, setTieBreakerTest]= useState(\n        {\n            date :\"\",\n            result  :\"\",            \n        }\n    )\n    const [tieBreakerTest2, setTieBreakerTest2]= useState(\n        {\n            date2 :\"\",\n            result2  :\"\",            \n        }\n    )\n    const handleInputChangeTie = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        setTieBreakerTest ({...tieBreakerTest,  [e.target.name]: e.target.value});  \n        //This is to show cd4 count section\n        if(confirmatoryTest.result==='No' && e.target.value==='Yes'){\n            setShowCD4Count(true)\n        }else if(confirmatoryTest.result==='No' && e.target.value==='No'){\n            setShowCD4Count(false)\n        }else{\n            setShowCD4Count(true)\n        }         \n    }\n    const handleInputChangeTie2 = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        setTieBreakerTest2 ({...tieBreakerTest2,  [e.target.name]: e.target.value});\n        //This is to show cd4 count section\n        if(confirmatoryTest2.result2==='No' && e.target.value==='Yes'){\n            setShowCD4Count(true)\n        }else if(confirmatoryTest2.result2==='No' && e.target.value==='No'){\n            setShowCD4Count(false)\n        }else{\n            setShowCD4Count(true)\n        }                     \n    }\n    const [syphills, setSyphills]= useState(\n        {\n            syphilisTestResult :\"\",\n           // result  :\"\",            \n        }\n    )\n    const handleInputChangeSyphills = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        setSyphills ({...syphills,  [e.target.name]: e.target.value});            \n    }\n    const [hepatitis, setHepatitis]= useState(\n        {\n            hepatitisCTestResult :\"\",\n            hepatitisBTestResult  :\"\", \n            longitude:\"\",\n            latitude:\"\",\n            adhocCode :\"\"                       \n        }\n    )\n    const handleInputChangeHepatitis = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        setHepatitis ({...hepatitis,  [e.target.name]: e.target.value});            \n    }\n    const [others, setOthers]= useState(\n        {\n            longitude:\"\",\n            latitude:\"\",\n            adhocCode :\"\"                       \n        }\n    )\n    useEffect(() => { \n        //console.log(props.patientObj)\n        if(props.patientObj){\n            if(props.patientObj.dateVisit && props.patientObj.dateVisit!=='' ){\n                setHivTestDate(props.patientObj.dateVisit)\n            }else{\n                setHivTestDate(\"\")\n            }\n            setCd4Count(props.patientObj  && props.patientObj.cd4!==null? props.patientObj.cd4 : {})\n            //setInitailTest(props.patientObj  && props.patientObj.test1!==null? props.patientObj.test1 : {})\n            //setConfirmatoryTest(props.patientObj  && props.patientObj.confirmatoryTest!==null? props.patientObj.confirmatoryTest : {})\n            setTieBreakerTest(props.patientObj && props.patientObj.tieBreakerTest!==null ? props.patientObj.tieBreakerTest : {})\n            setSyphills(props.patientObj  && props.patientObj.syphilisTesting!==null ? props.patientObj.syphilisTesting : {})\n            setHepatitis(props.patientObj  && props.patientObj.hepatitisTesting!==null ? props.patientObj.hepatitisTesting : {})\n            setOthers(props.patientObj  && props.patientObj.others!==null ? props.patientObj.others : {})\n            \n            //setInitailTest2(props.patientObj  && props.patientObj.test2!==null? props.patientObj.test2 : {})\n            //setConfirmatoryTest2(props.patientObj  && props.patientObj.confirmatoryTest2!==null? props.patientObj.confirmatoryTest2 : {})\n            //setTieBreakerTest2(props.patientObj && props.patientObj.tieBreakerTest2!==null ? props.patientObj.tieBreakerTest2 : {})\n        }\n    }, [props.patientObj]);//initialTest12, tieBreakerTest2, confirmatoryTest2, \n\n    const handleInputChangeOthers = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        setOthers ({...others,  [e.target.name]: e.target.value});            \n    }\n    const handleItemClick =(page, completedMenu)=>{\n        props.handleItemClick(page)\n        if(props.completed.includes(completedMenu)) {\n\n        }else{\n            props.setCompleted([...props.completed, completedMenu])\n        }\n    }\n    const validate = () => {\n        //HTS FORM VALIDATION\n        initialTest1.date!==\"\" &&  (temp.date = initialTest1.result ? \"\" : \"This field is required.\")\n        // initialTest1.result!==\"\"  && (temp.date = confirmatoryTest.date ? \"\" : \"This field is required.\")\n        // initialTest1.result!==\"\"  && (temp.date = tieBreakerTest.date ? \"\" : \"This field is required.\")\n              \n                setErrors({ ...temp })\n        return Object.values(temp).every(x => x == \"\")\n    }\n    const handleSubmit =(e)=>{\n        e.preventDefault();\n        if(validate()){\n                    //logic to get Hiv result test\n        if(initialTest12.result2==='No' ){\n            objValues.hivTestResult2=\"Negative\"\n        }else if(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='Yes'){\n            objValues.hivTestResult2=\"Positive\" \n        }\n        // else if(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='No' && tieBreakerTest2.result2===''){\n        //     objValues.hivTestResult2=\"Negative\" \n        // }\n        else if(confirmatoryTest2.result2==='No' && tieBreakerTest2.result2==='Yes'){\n            objValues.hivTestResult2=\"Positive\" \n        }else if(confirmatoryTest2.result2==='No' && tieBreakerTest2.result2==='No'){\n            objValues.hivTestResult2=\"Negative\" \n        }else{\n            objValues.hivTestResult2=\"\"\n        }\n      \n        if(initialTest1.result==='No' ){\n            objValues.hivTestResult=\"Negative\"\n        }else if(initialTest1.result==='Yes' && confirmatoryTest.result==='Yes'){\n            objValues.hivTestResult=\"Positive\"\n        }\n        // else if(initialTest1.result==='Yes' && confirmatoryTest.result==='No' && tieBreakerTest.result===''){\n        //     objValues.hivTestResult=\"Negative\"\n        // }\n        else if(confirmatoryTest.result==='No' && tieBreakerTest.result==='Yes'){\n            objValues.hivTestResult=\"Positive\"\n        }else if(confirmatoryTest.result==='No' && tieBreakerTest.result==='No'){\n            objValues.hivTestResult=\"Negative\"\n        }else{\n            objValues.hivTestResult=\"\"\n        }\n            objValues.htsClientId= clientId\n            objValues.confirmatoryTest= confirmatoryTest\n            objValues.confirmatoryTest2= confirmatoryTest2\n            objValues.personId= patientID\n            objValues.test1= initialTest1\n            objValues.test2= initialTest12\n            objValues.tieBreakerTest=tieBreakerTest\n            objValues.tieBreakerTest2=tieBreakerTest2\n            objValues.syphilisTesting=syphills\n            objValues.hepatitisTesting=hepatitis\n           \n            objValues.cd4=cd4Count\n            objValues.others=others\n            axios.put(`${baseUrl}hts/${clientId}/request-result`,objValues,\n            { headers: {\"Authorization\" : `Bearer ${token}`}}, )\n            .then(response => {\n                setSaving(false);\n                props.setPatientObj(response.data)\n                //console.log(response.data)\n                //props.setPatientObj(props && props.patientObj ? props.patientObj : \"\")\n                //toast.success(\"HIV test successful\");\n                handleItemClick('post-test', 'hiv-test')\n            })\n            .catch(error => {\n                setSaving(false);\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage);\n                }\n                else{\n                    toast.error(\"Something went wrong. Please try again...\");\n                }\n            });\n        }   \n    }\n\n    return (\n        <>\n            <Card className={classes.root}>\n                <CardBody>\n               \n                <h2 style={{color:'#000'}}>REQUEST AND RESULT FORM</h2>\n                    <form >\n                        <div className=\"row\">\n                        <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\n                        <h4 style={{color:'#fff'}}>HIV TEST RESULT</h4>\n                        </LabelRibbon>\n                           <br/>\n                           <div className=\"form-group  col-md-2\"></div>\n                            <h4>Initial HIV Test 1:</h4>\n                            <div className=\"form-group mb-3 col-md-5\">\n                                <FormGroup>\n                                <Label for=\"\"> Date  </Label>\n                                <Input\n                                    type=\"date\"\n                                    name=\"date\"\n                                    id=\"date\"\n                                    value={initialTest1.date}\n                                    onChange={handleInputChangeInitial}\n                                    min={hivTestDate!==\"\" && hivTestDate!==null ? hivTestDate  :\"\"}\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                    required\n                                />\n                                {errors.date !==\"\" ? (\n                                    <span className={classes.error}>{errors.date}</span>\n                                ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            {initialTest1.date && (\n                            <div className=\"form-group  col-md-5\">\n                                <FormGroup>\n                                    <Label>Result </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"result\"\n                                        id=\"result\"\n                                        value={initialTest1.result}\n                                        onChange={handleInputChangeInitial}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={ initialTest1.date===\"\"? true : false}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Yes\">Reactive</option>\n                                        <option value=\"No\">Non Reactive</option>\n                                        \n                                    </select>\n                                    {errors.result !==\"\" ? (\n                                    <span className={classes.error}>{errors.result}</span>\n                                ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            <div className=\"form-group  col-md-2\"></div>\n                            {initialTest1.result ==='Yes' && (\n                            <>\n                            <h4>Confirmatory Test:</h4>\n                            <div className=\"form-group mb-3 col-md-5\">\n                                <FormGroup>\n                                <Label for=\"\"> Date  </Label>\n                                <Input\n                                    type=\"date\"\n                                    name=\"date\"\n                                    id=\"date\"\n                                    value={confirmatoryTest.date}\n                                    onChange={handleInputChangeConfirmatory}\n                                    min={initialTest1.date}\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                    required\n                                />\n                                {errors.dateOfEac1 !==\"\" ? (\n                                    <span className={classes.error}>{errors.dateOfEac1}</span>\n                                ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            {confirmatoryTest.date && (\n                            <div className=\"form-group  col-md-5\">\n                                <FormGroup>\n                                    <Label>Result </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"result\"\n                                        id=\"result\"\n                                        value={confirmatoryTest.result}\n                                        onChange={handleInputChangeConfirmatory}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={confirmatoryTest.date===''? true : false}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Yes\">Reactive</option>\n                                        <option value=\"No\">Non Reactive</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            )}\n                            <div className=\"form-group  col-md-2\"></div>\n                            </>\n                            )}\n                            {confirmatoryTest.result ==='No' && (\n                            <>\n                            <h4>Tie Breaker Test:</h4>\n                            <div className=\"form-group mb-3 col-md-5\">\n                                <FormGroup>\n                                <Label for=\"\"> Date  </Label>\n                                <Input\n                                    type=\"date\"\n                                    name=\"date\"\n                                    id=\"date\"\n                                    value={tieBreakerTest.date}\n                                    onChange={handleInputChangeTie}\n                                    min={confirmatoryTest.date}\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                    required\n                                />\n                               \n                                </FormGroup>\n                            </div>\n                            {tieBreakerTest.date && (\n                            <div className=\"form-group  col-md-5\">\n                                <FormGroup>\n                                    <Label>Result </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"result\"\n                                        id=\"result\"\n                                        value={tieBreakerTest.result}\n                                        onChange={handleInputChangeTie}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={tieBreakerTest.date===''? true : false}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Yes\">Reactive</option>\n                                        <option value=\"No\">Non Reactive</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            )}\n                            <div className=\"form-group  col-md-2\"></div>\n\n                            </>)}\n                            <div className=\"row\">\n                            <div className=\"form-group  col-md-12\">  \n                                {initialTest1.result==='No' &&  (\n                                    <LabelRibbon color=\"green\" >\n                                        Negative\n                                    </LabelRibbon>\n                                )}                       \n                                {initialTest1.result==='No' && confirmatoryTest.result==='No' &&  (\n                                    <LabelRibbon color=\"green\" >\n                                    Negative\n                                </LabelRibbon>\n                                )}\n                                \n                                {(initialTest1.result==='Yes' && confirmatoryTest.result==='Yes' ) && (\n                                    <>\n                                    <LabelRibbon color=\"red\" >\n                                        Positive\n                                    </LabelRibbon>\n                                    <br/>\n                                    <hr/>\n                                    <div className=\"row\">\n                                        <h4>Initial HIV Test 2:</h4>\n                                        <div className=\"form-group mb-3 col-md-5\">\n                                            <FormGroup>\n                                            <Label for=\"\"> Date </Label>\n                                            <Input\n                                                type=\"date\"\n                                                name=\"date2\"\n                                                id=\"date2\"\n                                                value={initialTest12.date2}\n                                                onChange={handleInputChangeInitial2}\n                                                min={confirmatoryTest.date}\n                                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                                required\n                                            />\n                                            {errors.date2 !==\"\" ? (\n                                                <span className={classes.error}>{errors.date2}</span>\n                                            ) : \"\" }\n                                            </FormGroup>\n                                        </div>\n\n                                        <div className=\"form-group  col-md-5\">\n                                            <FormGroup>\n                                                <Label>Result  </Label>\n                                                <select\n                                                    className=\"form-control\"\n                                                    name=\"result2\"\n                                                    id=\"result2\"\n                                                    value={initialTest12.result2}\n                                                    onChange={handleInputChangeInitial2}\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                    disabled={initialTest12.date2===''? true : false}\n                                                >\n                                                    <option value={\"\"}></option>\n                                                    <option value=\"Yes\">Reactive</option>\n                                                    <option value=\"No\">Non Reactive</option>\n                                                    \n                                                </select>\n                                                {errors.result2 !==\"\" ? (\n                                                <span className={classes.error}>{errors.result2}</span>\n                                            ) : \"\" }\n                                            </FormGroup>\n                                        </div>\n                                   \n                                        <div className=\"form-group  col-md-2\"></div>\n                                        {initialTest12.result2 ==='Yes' && (\n                                        <>\n                                        <h4>Confirmatory Test 2:</h4>\n                                        <div className=\"form-group mb-3 col-md-5\">\n                                            <FormGroup>\n                                            <Label for=\"\"> Date  </Label>\n                                            <Input\n                                                type=\"date\"\n                                                name=\"date2\"\n                                                id=\"date2\"\n                                                value={confirmatoryTest2.date2}\n                                                onChange={handleInputChangeConfirmatory2}\n                                                min={initialTest12.date2}\n                                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                                required\n                                            />\n                                           \n                                            </FormGroup>\n                                        </div>\n                                        <div className=\"form-group  col-md-5\">\n                                            <FormGroup>\n                                                <Label>Result </Label>\n                                                <select\n                                                    className=\"form-control\"\n                                                    name=\"result2\"\n                                                    id=\"result2\"\n                                                    value={confirmatoryTest2.result2}\n                                                    onChange={handleInputChangeConfirmatory2}\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                    disabled={confirmatoryTest2.date2===''? true : false}\n                                                >\n                                                    <option value={\"\"}></option>\n                                                    <option value=\"Yes\">Reactive</option>\n                                                    <option value=\"No\">Non Reactive</option>\n                                                    \n                                                </select>\n                                                \n                                            </FormGroup>\n                                        </div>\n                                        <div className=\"form-group  col-md-2\"></div>\n                                        </>\n                                        )}\n                                        {confirmatoryTest2.result2 ==='No' && (\n                                        <>\n                                        <h4>Tie Breaker Test 2:</h4>\n                                        <div className=\"form-group mb-3 col-md-5\">\n                                            <FormGroup>\n                                            <Label for=\"\"> Date  </Label>\n                                            <Input\n                                                type=\"date\"\n                                                name=\"date2\"\n                                                id=\"date2\"\n                                                value={tieBreakerTest2.date2}\n                                                onChange={handleInputChangeTie2}\n                                                min={confirmatoryTest2.date2}\n                                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                                required\n                                            />\n                                        \n                                            </FormGroup>\n                                        </div>\n                                        <div className=\"form-group  col-md-5\">\n                                            <FormGroup>\n                                                <Label>Result </Label>\n                                                <select\n                                                    className=\"form-control\"\n                                                    name=\"result2\"\n                                                    id=\"result2\"\n                                                    value={tieBreakerTest2.result2}\n                                                    onChange={handleInputChangeTie2}\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                    disabled={tieBreakerTest2.date2===''?true : false}\n                                                >\n                                                    <option value={\"\"}></option>\n                                                    <option value=\"Yes\">Reactive</option>\n                                                    <option value=\"No\">Non Reactive</option>\n                                                    \n                                                </select>\n                                                \n                                            </FormGroup>\n                                        </div>\n                                        <div className=\"form-group  col-md-2\"></div>\n            \n                                        </>)}\n                                    </div>\n                                    </>\n                                )}\n                                {/* This is result for Test 1 */}\n                                {/* {(initialTest1.result==='Yes' && confirmatoryTest.result==='No' && tieBreakerTest.result==='' ) && (\n                                    <LabelRibbon color=\"green\" >\n                                        Negative\n                                    </LabelRibbon>\n                                )} */}\n                                {(confirmatoryTest.result==='No' && tieBreakerTest.result==='Yes' ) && (<>\n                                    <LabelRibbon color=\"red\" >\n                                        Positive\n                                    </LabelRibbon>\n                                    <br/>\n                                    <hr/>\n                                   \n                                    <div className=\"row\">\n                                        <h4>Initial HIV Test 2:</h4>\n                                        <div className=\"form-group mb-3 col-md-5\">\n                                            <FormGroup>\n                                            <Label for=\"\"> Date  </Label>\n                                            <Input\n                                                type=\"date\"\n                                                name=\"date2\"\n                                                id=\"date2\"\n                                                value={initialTest12.date2}\n                                                onChange={handleInputChangeInitial2}\n                                                min={ tieBreakerTest.date}\n                                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                                required\n                                            />\n                                            {errors.date2 !==\"\" ? (\n                                                <span className={classes.error}>{errors.date2}</span>\n                                            ) : \"\" }\n                                            </FormGroup>\n                                        </div>\n                                        <div className=\"form-group  col-md-5\">\n                                            <FormGroup>\n                                                <Label>Result  </Label>\n                                                <select\n                                                    className=\"form-control\"\n                                                    name=\"result2\"\n                                                    id=\"result2\"\n                                                    value={initialTest12.result2}\n                                                    onChange={handleInputChangeInitial2}\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                    disabled={initialTest12.date2===''?true : false}\n                                                >\n                                                    <option value={\"\"}></option>\n                                                    <option value=\"Yes\">Reactive</option>\n                                                    <option value=\"No\">Non Reactive</option>\n                                                    \n                                                </select>\n                                                {errors.result2 !==\"\" ? (\n                                                <span className={classes.error}>{errors.result2}</span>\n                                            ) : \"\" }\n                                            </FormGroup>\n                                        </div>\n                                        <div className=\"form-group  col-md-2\"></div>\n                                        {initialTest12.result2 ==='Yes' && (\n                                        <>\n                                        <h4>Confirmatory Test 2:</h4>\n                                        <div className=\"form-group mb-3 col-md-5\">\n                                            <FormGroup>\n                                            <Label for=\"\"> Date  </Label>\n                                            <Input\n                                                type=\"date\"\n                                                name=\"date2\"\n                                                id=\"date2\"\n                                                value={confirmatoryTest2.date2}\n                                                onChange={handleInputChangeConfirmatory2}\n                                                min={initialTest12.date2}\n                                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                                required\n                                            />\n                                           \n                                            </FormGroup>\n                                        </div>\n                                        <div className=\"form-group  col-md-5\">\n                                            <FormGroup>\n                                                <Label>Result </Label>\n                                                <select\n                                                    className=\"form-control\"\n                                                    name=\"result2\"\n                                                    id=\"result2\"\n                                                    value={confirmatoryTest2.result2}\n                                                    onChange={handleInputChangeConfirmatory2}\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                    disabled={confirmatoryTest2.date2===''?true : false}\n                                                >\n                                                    <option value={\"\"}></option>\n                                                    <option value=\"Yes\">Reactive</option>\n                                                    <option value=\"No\">Non Reactive</option>\n                                                    \n                                                </select>\n                                                \n                                            </FormGroup>\n                                        </div>\n                                        <div className=\"form-group  col-md-2\"></div>\n                                        </>\n                                        )}\n                                        {confirmatoryTest2.result2 ==='No' && (\n                                        <>\n                                        <h4>Tie Breaker Test 2:</h4>\n                                        <div className=\"form-group mb-3 col-md-5\">\n                                            <FormGroup>\n                                            <Label for=\"\"> Date  </Label>\n                                            <Input\n                                                type=\"date\"\n                                                name=\"date2\"\n                                                id=\"date2\"\n                                                value={tieBreakerTest2.date2}\n                                                onChange={handleInputChangeTie2}\n                                                min={confirmatoryTest2.date2}\n                                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                                required\n                                            />\n                                        \n                                            </FormGroup>\n                                        </div>\n                                        <div className=\"form-group  col-md-5\">\n                                            <FormGroup>\n                                                <Label>Result </Label>\n                                                <select\n                                                    className=\"form-control\"\n                                                    name=\"result2\"\n                                                    id=\"result2\"\n                                                    value={tieBreakerTest2.result2}\n                                                    onChange={handleInputChangeTie2}\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                    disabled={tieBreakerTest2.date2===''?true : false}\n                                                >\n                                                    <option value={\"\"}></option>\n                                                    <option value=\"Yes\">Reactive</option>\n                                                    <option value=\"No\">Non Reactive</option>\n                                                    \n                                                </select>\n                                                \n                                            </FormGroup>\n                                        </div>\n                                        <div className=\"form-group  col-md-2\"></div>\n            \n                                        </>)}\n                                    </div>\n                                    </>\n                                )}\n                                {(confirmatoryTest.result==='No' && tieBreakerTest.result==='No' && (initialTest1.result==='Yes' || initialTest1.result==='Yes' || initialTest1.result==='')) && (\n                                    <LabelRibbon color=\"green\" >\n                                        Negative\n                                    </LabelRibbon>\n                                )}\n                                 {/* END of  result for Test 1 */}\n                                {/* This is result for Test 2 */}\n                                {initialTest12.result2 && initialTest12.result2==='No' &&  (\n                                    <LabelRibbon color=\"green\" >\n                                        Negative\n                                    </LabelRibbon>\n                                )} \n                                {initialTest12.result2==='No' && confirmatoryTest2.result2==='No'  && (\n                                    <LabelRibbon color=\"green\" >\n                                        Negative\n                                    </LabelRibbon>\n                                )}\n                                \n                                {(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='Yes' ) && (\n                                    <>\n                                    <LabelRibbon color=\"red\" >\n                                        Positive\n                                    </LabelRibbon>\n                                    <br/>\n                                    </>\n                                )}\n                                {/* {(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='No' && tieBreakerTest2.result2==='' ) && (\n                                    <LabelRibbon color=\"green\" >\n                                        Negative\n                                    </LabelRibbon>\n                                )} */}\n                                {(confirmatoryTest2.result2==='No' && tieBreakerTest2.result2==='Yes' ) && (\n                                    <LabelRibbon color=\"red\" >\n                                        Positive\n                                    </LabelRibbon>\n                                )}\n                                {(confirmatoryTest2.result2==='No' && tieBreakerTest2.result2==='No' && (initialTest12.result2==='Yes' || initialTest12.result2==='Yes' || initialTest12.result2==='')) && (\n                                    <LabelRibbon color=\"green\" >\n                                        Negative\n                                    </LabelRibbon>\n                                )}\n                                \n                                 {/* END of  result for Test 2*/}\n                            </div>\n                            </div>\n                            {showCD4Count && (<>\n                            <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\n                                <h5 style={{color:'#fff'}}>CD4 Count</h5>\n                            </LabelRibbon>\n                            <br/> <br/>\n                            <div className=\"form-group  col-md-5\">\n                                <FormGroup>\n                                    <Label>CD4 Count </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"cd4Count\"\n                                        id=\"cd4Count\"\n                                        value={cd4Count.cd4Count}\n                                        onChange={handleInputChangeCd4Count}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Semi-Quantitative\">Semi-Quantitative</option>\n                                        <option value=\"Flow Cyteometry\">Flow Cyteometry</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            {cd4Count.cd4Count ==='Semi-Quantitative' && (\n                            <div className=\"form-group  col-md-5\">\n                                <FormGroup>\n                                    <Label>CD4 Count Value</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"cd4SemiQuantitative\"\n                                        id=\"cd4SemiQuantitative\"\n                                        value={cd4Count.cd4SemiQuantitative}\n                                        onChange={handleInputChangeCd4Count}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Semi-Quantitative\">{\"<200\"}</option>\n                                        <option value=\"Flow Cyteometry\">{\">=200\"}</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            )}\n                            {cd4Count.cd4Count ==='Flow Cyteometry' && (\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">CD4 Count Value</Label>\n                                <Input\n                                    type=\"text\"\n                                    name=\"cd4FlowCyteometry\"\n                                    id=\"cd4FlowCyteometry\"\n                                    value={cd4Count.cd4FlowCyteometry}\n                                    onChange={handleInputChangeCd4Count}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                    \n                                />\n                                 \n                                </FormGroup>\n                            </div>\n                            )}\n                            <div className=\"form-group  col-md-7\"></div>\n                           \n                            </>)}\n                            <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\n                            <h5 style={{color:'#fff'}}>Syphilis Testing</h5>\n                        </LabelRibbon>\n                        <br/> <br/>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Syphilis test result *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"syphilisTestResult\"\n                                        id=\"syphilisTestResult\"\n                                        value={syphills.syphilisTestResult}\n                                        onChange={handleInputChangeSyphills}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Yes\">Reactive</option>\n                                        <option value=\"No\">Non-Reactive</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n \n                            <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\n                            <h5 style={{color:'#fff'}}>Hepatitis Testing</h5>\n                            </LabelRibbon>\n                            <br/> <br/>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Hepatitis B virus test result *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hepatitisBTestResult\"\n                                        id=\"hepatitisBTestResult\"\n                                        value={hepatitis.hepatitisBTestResult}\n                                        onChange={handleInputChangeHepatitis}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Yes\">Positive</option>\n                                        <option value=\"No\">Negative</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Hepatitis C virus test result *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hepatitisCTestResult\"\n                                        id=\"hepatitisCTestResult\"\n                                        value={hepatitis.hepatitisCTestResult}\n                                        onChange={handleInputChangeHepatitis}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                       <option value={\"\"}></option>\n                                        <option value=\"Yes\">Positive</option>\n                                        <option value=\"No\">Negative</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\n                            <h5 style={{color:'#fff'}}>Others</h5>\n                            </LabelRibbon>\n                            <br/> <br/>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Longitude</Label>\n                                <Input\n                                    type=\"number\"\n                                    name=\"longitude\"\n                                    id=\"longitude\"\n                                    value={others.longitude}\n                                    onChange={handleInputChangeOthers}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                   \n                                />\n                                \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Latitude</Label>\n                                <Input\n                                    type=\"number\"\n                                    name=\"latitude\"\n                                    id=\"latitude\"\n                                    value={others.latitude}\n                                    onChange={handleInputChangeOthers}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                   \n                                />\n                                \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Adhoc Code</Label>\n                                <Input\n                                    type=\"number\"\n                                    name=\"adhocCode\"\n                                    id=\"adhocCode\"\n                                    value={others.adhocCode}\n                                    onChange={handleInputChangeOthers}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                   \n                                />\n                                \n                                </FormGroup>\n                            </div>\n                            \n                            {saving ? <Spinner /> : \"\"}\n                            <br />\n                            <div className=\"row\">\n                            <div className=\"form-group mb-3 col-md-12\">\n                            {patientAge<=15 ? \n                            (<>\n                                <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('basic', 'basic')}/>\n                            </>)\n                            :\n                            (<>\n                                <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('pre-test-counsel', 'pre-test-counsel')}/>\n                            </>)\n                            }\n                            \n                            <Button content='Save & Continue' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\n                            </div>\n                            </div>\n                        </div>\n                    </form>\n                </CardBody>\n            </Card>                                 \n        </>\n    );\n};\n\nexport default HivTestResult","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\BasicInfo.js",["362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380"],"\nimport React, { useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport MatButton from \"@material-ui/core/Button\";\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\nimport * as moment from 'moment';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card, CardContent} from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\n// import AddIcon from \"@material-ui/icons/Add\";\n// import CancelIcon from \"@material-ui/icons/Cancel\";\nimport {ToastContainer, toast} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport {token, url as baseUrl } from \"../../../api\";\nimport 'react-phone-input-2/lib/style.css'\nimport { Button} from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport PhoneInput from 'react-phone-input-2'\nimport 'react-phone-input-2/lib/style.css'\nimport {  Modal } from \"react-bootstrap\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        },\n        \"& .card-title\":{\n            color:'#fff',\n            fontWeight:'bold'\n        },\n        \"& .form-control\":{\n            borderRadius:'0.25rem',\n            height:'41px'\n        },\n        \"& .card-header:first-child\": {\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\n        },\n        \"& .dropdown-toggle::after\": {\n            display: \" block !important\"\n        },\n        \"& select\":{\n            \"-webkit-appearance\": \"listbox !important\"\n        },\n        \"& p\":{\n            color:'red'\n        },\n        \"& label\":{\n            fontSize:'14px',\n            color:'#014d88',\n            fontWeight:'bold'\n        }\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    },\n    success:{\n        color: 'green',\n        fontSize: '12.8px',\n        fontWeight:'bold'\n    }\n}));\n\n\nconst BasicInfo = (props) => {\n    console.log(props)\n    const classes = useStyles();\n    const history = useHistory();\n    const [errors, setErrors] = useState({});\n    const [saving, setSaving] = useState(false);\n    const [hideNumChild, setHideNumChild] = useState(false);\n    const [kP, setKP] = useState([]);\n    const [enrollSetting, setEnrollSetting] = useState([]);\n    const [sourceReferral, setSourceReferral] = useState([]);\n    const [gender, setGender] = useState([])\n    const [counselingType, setCounselingType] = useState([]);\n    const [pregnancyStatus, setPregnancyStatus] = useState([]);\n    const [indexTesting, setIndexTesting]= useState([]);\n    let temp = { ...errors }\n    const [clientCodeetail, setclientCodeetail]= useState(\"\");\n    const [clientCodeetail2, setclientCodeetail2]= useState(\"\");\n    const [clientCodeCheck, setClientCodeCheck]= useState(\"\");\n\n    const [objValues, setObjValues]= useState(\n        {\n            active: true,\n            personId: props.patientObj.personId,\n            clientCode: props.patientObj && props.patientObj.clientCode ? props.patientObj.clientCode :\"\",  \n            breastFeeding:props.patientObj && props.patientObj.breastFeeding ? props.patientObj.breastFeeding :\"\",\n            dateVisit: props.patientObj && props.patientObj.dateVisit ? props.patientObj.dateVisit :\"\",\n            firstTimeVisit: props.patientObj && props.patientObj.firstTimeVisit ? props.patientObj.firstTimeVisit :\"\",\n            indexClient: props.patientObj && props.patientObj.indexClient ? props.patientObj.indexClient :\"\",\n            numChildren: props.patientObj && props.patientObj.numChildren ? props.patientObj.numChildren :\"\",\n            numWives: props.patientObj && props.patientObj.numWives ? props.patientObj.numWives :\"\",\n            pregnant:props.patientObj && props.patientObj.pregnant ? props.patientObj.pregnant :\"\",           \n            previouslyTested: props.patientObj ? props.patientObj.previouslyTested :\"\",\n            referredFrom: props.patientObj ? props.patientObj.referredFrom :\"\",\n            riskAssessment:  props.patientObj && props.patientObj.riskAssessment? props.patientObj.riskAssessment : {},\n            riskStratificationCode:props.extra && props.extra.code!=='' ? props.extra.code : \"\",\n            targetGroup: props.patientObj && props.patientObj.targetGroup? props.patientObj.targetGroup :\"\",\n            testingSetting:props.patientObj ? props.patientObj.testingSetting :\"\",\n            typeCounseling: props.patientObj ? props.patientObj.typeCounseling :\"\",\n            relationshipWithIndexClient:props.patientObj ? props.patientObj.relationshipWithIndexClient :\"\",\n            indexClientCode:props.patientObj ? props.patientObj.indexClientCode :\"\",\n        }\n    )    \n    useEffect(() => { \n        KP(); \n        EnrollmentSetting(); \n        SourceReferral();\n        Genders();\n        CounselingType();\n        PregnancyStatus()\n        IndexTesting();\n    }, [ props.patientObj]);\n    //Get list of KP\n    const KP =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setKP(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    //Get list of IndexTesting\n    const IndexTesting =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/INDEX_TESTING`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setIndexTesting(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    //Get list of KP\n    const PregnancyStatus =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setPregnancyStatus(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    \n    //Get list of KP\n    const CounselingType =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/COUNSELING_TYPE`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setCounselingType(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    //Get list of HIV STATUS ENROLLMENT\n    const EnrollmentSetting =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/TEST_SETTING`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            //console.log(response.data);\n            setEnrollSetting(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n\n    //Get list of Source of Referral\n    const SourceReferral =()=>{\n            axios\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                //console.log(response.data);\n                setSourceReferral(response.data);\n            })\n            .catch((error) => {\n            //console.log(error);\n            });        \n    }\n    //Get list of Genders from \n    const Genders =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/GENDER`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            //console.log(response.data);\n            setGender(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });        \n    }\n    const handleInputChange = e => { \n        setErrors({...temp, [e.target.name]:\"\"}) \n        if(e.target.name==='indexClientCode' && e.target.value!==''){\n            async function getIndexClientCode() {\n                const indexClientCode=e.target.value\n                const response = await axios.get(`${baseUrl}hts/client/${indexClientCode}`,\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\n                    );\n                if(response.data!=='Record Not Found'){\n                    setclientCodeetail2(\"\")\n                    setclientCodeetail(response.data)\n                    \n                }else{\n                    setclientCodeetail(\"\")\n                    setclientCodeetail2(response.data)\n                }\n            }\n            getIndexClientCode();\n        }         \n        setObjValues ({...objValues,  [e.target.name]: e.target.value});            \n    }\n\n    /*****  Validation  */\n    const validate = () => {\n        //HTS FORM VALIDATION\n        \n           temp.clientCode = objValues.clientCode ? \"\" : \"This field is required.\"\n            temp.typeCounseling = objValues.typeCounseling ? \"\" : \"This field is required.\"\n            temp.testingSetting = objValues.testingSetting ? \"\" : \"This field is required.\"\n            temp.targetGroup = objValues.targetGroup ? \"\" : \"This field is required.\"\n            temp.referredFrom = objValues.referredFrom ? \"\" : \"This field is required.\"\n            temp.previouslyTested = objValues.previouslyTested ? \"\" : \"This field is required.\" \n            temp.indexClient = objValues.indexClient ? \"\" : \"This field is required.\"  \n            temp.firstTimeVisit = objValues.firstTimeVisit ? \"\" : \"This field is required.\" \n            temp.dateVisit = objValues.dateVisit ? \"\" : \"This field is required.\"               \n                setErrors({ ...temp })\n        return Object.values(temp).every(x => x == \"\")\n    }\n    const handleItemClick =(page, completedMenu)=>{\n        props.handleItemClick(page)\n        if(props.completed.includes(completedMenu)) {\n\n        }else{\n            props.setCompleted([...props.completed, completedMenu])\n        }\n    }\n    //checkClientCode\n    const checkClientCode = e => { \n\n        async function getIndexClientCode() {\n            const indexClientCode=objValues.clientCode\n            const response = await axios.get(`${baseUrl}hts/client/${indexClientCode}`,\n                    { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\n                );\n            if(response.data!=='Record Not Found'){\n                setClientCodeCheck(\"Client code already exist\")\n            }else{\n                setClientCodeCheck(\"\")\n            }\n        }\n        getIndexClientCode();\n                          \n    }\n    const handleSubmit =(e)=>{\n        e.preventDefault();\n        const patientForm ={\n            clientCode: objValues.clientCode,\n            dateVisit: objValues.dateVisit,\n            extra: {},\n            firstTimeVisit: objValues.firstTimeVisit,\n            indexClient: objValues.indexClient,\n            numChildren: objValues.numChildren,\n            numWives: objValues.numWives,\n            personId: props.patientObj.personId,\n            hospitalNumber:objValues.clientCode,\n            previouslyTested: objValues.previouslyTested,\n            referredFrom: objValues.referredFrom,\n            targetGroup: objValues.targetGroup,\n            testingSetting: objValues.testingSetting,\n            typeCounseling:objValues.typeCounseling,\n            breastFeeding:objValues.breastFeeding,\n            pregnant:objValues.pregnant,\n            relationshipWithIndexClient:objValues.relationshipWithIndexClient,\n            riskStratificationCode:props.extra && props.extra.code!=='' ? props.extra.code : \"\",\n            }\n\n            if(validate()){\n            axios.post(`${baseUrl}hts`,patientForm,\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\n            \n            )\n            .then(response => {\n                setSaving(false);\n                props.setPatientObj(response.data)\n                //toast.success(\"HTS Test successful\");\n                if(props.patientAge>15){\n                    handleItemClick('pre-test-counsel', 'basic' )\n                }else{\n                    handleItemClick('hiv-test', 'baisc')\n                }\n\n            })\n            .catch(error => {\n                setSaving(false);\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\n                }\n                else{\n                    toast.error(\"Something went wrong. Please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\n                }\n            });\n            }else{\n                toast.error(\"All fields are required\",  {position: toast.POSITION.BOTTOM_CENTER});\n            }\n    }\n\n\n    return (\n        <>  \n        \n            <Card className={classes.root}>\n                <CardBody>   \n                <h2 style={{color:'#000'}}>CLIENT INTAKE FORM </h2>\n                <br/>\n                    <form >\n                        <div className=\"row\">\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Target Group *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"targetGroup\"\n                                        id=\"targetGroup\"\n                                        onChange={handleInputChange}\n                                        value={objValues.targetGroup}\n                                        disabled\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        {kP.map((value) => (\n                                            <option key={value.id} value={value.code}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                    </select>\n                                    {errors.targetGroup !==\"\" ? (\n                                        <span className={classes.error}>{errors.targetGroup}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Client Code *</Label>\n                                <Input\n                                    type=\"text\"\n                                    name=\"clientCode\"\n                                    id=\"clientCode\"\n                                    value={objValues.clientCode}\n                                    onChange={handleInputChange}\n                                    //disabled={props.clientCode!==\"\" && props.clientCode!==null? true : false}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                   \n                                />\n                                {errors.clientCode !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientCode}</span>\n                                ) : \"\" }                                \n                                </FormGroup>\n                            </div>                           \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Referred From *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"referredFrom\"\n                                        id=\"referredFrom\"\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        {sourceReferral.map((value) => (\n                                            <option key={value.id} value={value.id}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                    </select>\n                                    {errors.referredFrom !==\"\" ? (\n                                        <span className={classes.error}>{errors.referredFrom}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Setting*</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"testingSetting\"\n                                        id=\"testingSetting\"\n                                        value={objValues.testingSetting}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        {enrollSetting.map((value) => (\n                                            <option key={value.id} value={value.code}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                    </select>\n                                    {errors.testingSetting !==\"\" ? (\n                                        <span className={classes.error}>{errors.testingSetting}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Visit Date  </Label>\n                                <Input\n                                    type=\"date\"\n                                    name=\"dateVisit\"\n                                    id=\"dateVisit\"\n                                    value={objValues.dateVisit}\n                                    onChange={handleInputChange}\n                                    min={objValues.dateOfRegistration}\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                    \n                                />\n                                {errors.dateVisit !==\"\" ? (\n                                    <span className={classes.error}>{errors.dateVisit}</span>\n                                ) : \"\" }\n                                </FormGroup>\n                            </div>\n\n                            {/* {(objValues.targetGroup!=='457' && objValues.targetGroup!==\"\") && (\n                            <div className=\"form-group  col-md-4\">\n                            <FormGroup>\n                                <Label>Gender</Label>\n                                <select\n                                    className=\"form-control\"\n                                    name=\"genderId\"\n                                    id=\"genderId\"\n                                    value={objValues.genderId}\n                                    onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                >\n                                    <option value={\"\"}></option>\n                                    {gender.map((value) => (\n                                        <option key={value.id} value={value.id}>\n                                            {value.display}\n                                        </option>\n                                    ))}\n                                </select>\n                               \n                            </FormGroup>\n                            </div>\n                            )} */}\n\n                            {(objValues.age>9 ) && (\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Number of Children {'<5'} years</Label>\n                                    <Input\n                                        type=\"number\"\n                                        name=\"numChildren\"\n                                        id=\"numChildren\"\n                                        min={0}\n                                        value={objValues.numChildren}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                   \n                                    /> \n                                     \n                                </FormGroup>\n                            </div>\n                            )}\n                            {(objValues.age > 9 && objValues.sexId=='376') && (\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Number of wives/co-wives</Label>\n                                    <Input\n                                        type=\"number\"\n                                        name=\"numWives\"\n                                        id=\"numWives\"\n                                        min={0}\n                                        value={objValues.numWives}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                   \n                                    />\n                                    \n                                </FormGroup>\n                            </div>\n                            )}\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Index Testing</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"indexClient\"\n                                        id=\"indexClient\"\n                                        value={objValues.indexClient}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">YES</option>\n                                        <option value=\"false\">NO</option>\n                                    </select>\n                                    {errors.indexClient !==\"\" ? (\n                                        <span className={classes.error}>{errors.indexClient}</span>\n                                    ) : \"\" }   \n                                </FormGroup>\n                            </div>\n                            {objValues.indexClient==='true' && (\n                            <>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Relationship of the index client</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"relationshipWithIndexClient\"\n                                        id=\"relationshipWithIndexClient\"\n                                        value={objValues.relationshipWithIndexClient}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        {indexTesting.map((value) => (\n                                            <option key={value.id} value={value.id}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                             <div className=\"form-group  col-md-4\">\n                             <FormGroup>\n                                 <Label>Index Client Code/ID</Label>\n                                 <Input\n                                     type=\"text\"\n                                     name=\"indexClientCode\"\n                                     id=\"indexClientCode\"\n                                     value={objValues.indexClientCode}\n                                     onBlur ={checkClientCode}\n                                     onChange={handleInputChange}\n                                     style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                \n                                 />\n                                 {clientCodeCheck!==\"\" ? (\n                                <span className={classes.error}>{clientCodeCheck}</span>\n                            ) : \"\" }  \n                             </FormGroup>\n                            </div>\n                            </>\n                            )}\n                            {objValues.sex==='377' && (\n                            <>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Pregnant</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"pregnant\"\n                                        id=\"pregnant\"\n                                        value={objValues.pregnant}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        {pregnancyStatus.map((value) => (\n                                            <option key={value.id} value={value.id}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Breast Feeding</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"breastFeeding\"\n                                        id=\"breastFeeding\"\n                                        value={objValues.breastFeeding}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">YES</option>\n                                        <option value=\"false\">NO</option>\n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            </>\n                            )}\n                           \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>First time visit</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"firstTimeVisit\"\n                                        id=\"firstTimeVisit\"\n                                        value={objValues.firstTimeVisit}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">YES</option>\n                                        <option value=\"false\">NO</option>\n                                        \n                                    </select>\n                                    {errors.firstTimeVisit !==\"\" ? (\n                                        <span className={classes.error}>{errors.firstTimeVisit}</span>\n                                    ) : \"\" }    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Previously tested within the last 3 months</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"previouslyTested\"\n                                        id=\"previouslyTested\"\n                                        value={objValues.previouslyTested}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">YES</option>\n                                        <option value=\"false\">NO</option>\n                                    </select>\n                                    {errors.previouslyTested !==\"\" ? (\n                                        <span className={classes.error}>{errors.previouslyTested}</span>\n                                    ) : \"\" }    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Type of Counseling</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"typeCounseling\"\n                                        id=\"typeCounseling\"\n                                        value={objValues.typeCounseling}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        {counselingType.map((value) => (\n                                            <option key={value.id} value={value.id}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                        \n                                    </select>\n                                    {errors.typeCounseling !==\"\" ? (\n                                        <span className={classes.error}>{errors.typeCounseling}</span>\n                                    ) : \"\" }   \n                                </FormGroup>\n                            </div>\n                            \n                            <br />\n                            <div className=\"row\">\n                            <div className=\"form-group mb-3 col-md-6\">\n\n                            <Button content='Save & Continue' type=\"submit\" icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\n                            </div>\n                            </div>\n                        </div>\n                    </form>\n                </CardBody>\n            </Card>\n                                  \n        </>\n    );\n};\n\nexport default BasicInfo","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\PreTest.js",["381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415"],"import React, {useCallback, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card, CardContent} from \"@material-ui/core\";\n// import AddIcon from \"@material-ui/icons/Add\";\n// import CancelIcon from \"@material-ui/icons/Cancel\";\nimport {toast} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport {token, url as baseUrl } from \"../../../api\";\nimport 'react-phone-input-2/lib/style.css'\nimport {Label as LabelRibbon, Button, Message} from 'semantic-ui-react'\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        },\n        \"& .card-title\":{\n            color:'#fff',\n            fontWeight:'bold'\n        },\n        \"& .form-control\":{\n            borderRadius:'0.25rem',\n            height:'41px'\n        },\n        \"& .card-header:first-child\": {\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\n        },\n        \"& .dropdown-toggle::after\": {\n            display: \" block !important\"\n        },\n        \"& select\":{\n            \"-webkit-appearance\": \"listbox !important\"\n        },\n        \"& p\":{\n            color:'red'\n        },\n        \"& label\":{\n            fontSize:'14px',\n            color:'#014d88',\n            fontWeight:'bold'\n        }\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    }\n}));\n\n\nconst BasicInfo = (props) => {\n    const classes = useStyles();\n    const patientID= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.id : \"\";\n    const sex= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.sex : \"\";\n    const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\n    const [saving, setSaving] = useState(false);\n    const [errors, setErrors] = useState({});\n    let temp = { ...errors }\n    const [riskAssessmentPartner, setRiskAssessmentPartner]= useState(\n        {\n            sexPartnerHivPositive:\"\",\n            newDiagnosedHivlastThreeMonths:\"\",\n            currentlyArvForPmtct :\"\",\n            knowHivPositiveOnArv :\"\",\n            knowHivPositiveAfterLostToFollowUp:\"\", \n            uprotectedAnalSex  :\"\",\n        }\n    )\n    const [objValues, setObjValues]= useState(\n        {\n            htsClientId: clientId,\n            knowledgeAssessment: {},\n            personId: patientID,\n            riskAssessment: {},\n            stiScreening: {},\n            tbScreening: {},\n            sexPartnerRiskAssessment:{}\n        }\n    )\n    const [knowledgeAssessment, setKnowledgeAssessment]= useState(\n        {\n            previousTestedHIVNegative:\"\",\n            timeLastHIVNegativeTestResult:\"\",\n            clientPregnant:\"\",\n            clientInformHivTransRoutes:\"\",\n            clientInformRiskkHivTrans:\"\",\n            clientInformPreventingsHivTrans:\"\", \n            clientInformPossibleTestResult:\"\",\n            informConsentHivTest:\"\",\n        }\n    )\n    const [riskAssessment, setRiskAssessment]= useState(\n        {\n            everHadSexualIntercourse:\"\",\n            bloodtransInlastThreeMonths:\"\",\n            uprotectedSexWithCasualLastThreeMonths:\"\",\n            uprotectedSexWithRegularPartnerLastThreeMonths:\"\", \n            unprotectedVaginalSex:\"\",  \n            uprotectedAnalSex:\"\",   \n            stiLastThreeMonths:\"\",\n            sexUnderInfluence :\"\",\n            moreThanOneSexPartnerLastThreeMonths:\"\",\n            experiencePain:\"\",\n            haveSexWithoutCondom:\"\",\n            abuseDrug:\"\",\n            bloodTransfusion:\"\",\n            consistentWeightFeverNightCough:\"\",\n            soldPaidVaginalSex:\"\",\n        }\n    )\n    const [stiScreening, setStiScreening]= useState(\n        {\n            vaginalDischarge:\"\",\n            lowerAbdominalPains :\"\",\n            urethralDischarge :\"\",\n            complaintsOfScrotal:\"\", \n            complaintsGenitalSore  :\"\",\n                \n        }\n    )\n    const [tbScreening, setTbScreening]= useState(\n        {\n            currentCough :\"\",\n            weightLoss  :\"\",\n            lymphadenopathy :\"\", \n            fever :\"\",  \n            nightSweats :\"\",\n        }\n    )\n    useEffect(() => { \n        //console.log(props.patientObj)\n        if(props.patientObj){\n            setKnowledgeAssessment(props.patientObj.knowledgeAssessment  && props.patientObj.knowledgeAssessment!==null ? props.patientObj.knowledgeAssessment : {})\n            setRiskAssessment(props.patientObj.riskAssessment  && props.patientObj.riskAssessment!==null ? props.patientObj.riskAssessment : {})\n            setRiskAssessmentPartner(props.patientObj.sexPartnerRiskAssessment && props.patientObj.sexPartnerRiskAssessment!==null ? props.patientObj.sexPartnerRiskAssessment : {})\n            setStiScreening(props.patientObj.stiScreening  && props.patientObj.stiScreening!==null? props.patientObj.stiScreening : {})\n            setTbScreening(props.patientObj.tbScreening  && props.patientObj.tbScreening!==null? props.patientObj.tbScreening : {})\n            //patientAge=calculate_age(moment(props.patientObj.personResponseDto.dateOfBirth).format(\"DD-MM-YYYY\"))\n            //console.log(props.patientObj.riskStratificationResponseDto.riskAssessment)\n            if(props.patientObj.riskStratificationResponseDto && Object.keys(props.patientObj.riskStratificationResponseDto.riskAssessment).length !== 0 && props.patientObj.riskAssessment===null){\n                setRiskAssessment({...riskAssessment, ...props.patientObj.riskStratificationResponseDto.riskAssessment})\n            }else{\n                setRiskAssessment({...riskAssessment, ...props.patientObj.riskAssessment})   \n            } \n        }\n    }, [props.patientObj]);\n    const handleItemClick =(page, completedMenu)=>{        \n        if(props.completed.includes(completedMenu)) {\n        }else{\n            props.setCompleted([...props.completed, completedMenu])\n        }\n        props.handleItemClick(page)\n    }\n\n    const handleInputChangeKnowledgeAssessment = e => { \n        //setErrors({...temp, [e.target.name]:\"\"})\n        \n        setKnowledgeAssessment ({...knowledgeAssessment,  [e.target.name]: e.target.value}); \n          \n    }\n    \n    const handleInputChangeRiskAssessment = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        setRiskAssessment ({...riskAssessment,  [e.target.name]: e.target.value});                  \n    }\n    // Getting the number count of riskAssessment True\n    const actualRiskCountTrue=Object.values(riskAssessment)\n    const riskCount=actualRiskCountTrue.filter((x)=> x==='true')\n   \n    const handleInputChangeRiskAssessmentPartner = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        setRiskAssessmentPartner ({...riskAssessmentPartner,  [e.target.name]: e.target.value});                       \n    }\n    // Getting the number count of sexPartRiskCount True\n    const actualSexPartRiskCountTrue=Object.values(riskAssessmentPartner)\n    const sexPartRiskCount=actualSexPartRiskCountTrue.filter((x)=> x==='true')\n\n    const handleInputChangeStiScreening = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        setStiScreening ({...stiScreening,  [e.target.name]: e.target.value});            \n    }\n    // Getting the number count of STI True\n    const actualStiTrue=Object.values(stiScreening)\n    const stiCount=actualStiTrue.filter((x)=> x==='true')\n    \n    const [tbCount, settbCount] = useState(0);\n    const handleInputChangeTbScreening = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        \n        if(e.target.value==='true') {\n            const newcount = tbCount +1\n            if(newcount>=0 && newcount <=5){\n                settbCount(newcount)\n            }\n        }\n        if(e.target.value==='false') {\n            const newcount = tbCount -1\n            //settbCount(newcount)\n            //console.log(newcount)\n            if(newcount <=0 ){\n                \n                settbCount(0)\n            }else{\n                settbCount(newcount)\n            }\n        } \n        setTbScreening ({...tbScreening,  [e.target.name]: e.target.value});          \n    }\n     /*****  Validation  */\n     const validate = () => {\n        //HTS FORM VALIDATION\n           temp.previousTestedHIVNegative = knowledgeAssessment.previousTestedHIVNegative ? \"\" : \"This field is required.\"\n           {knowledgeAssessment.previousTestedHIVNegative==='true' && ( temp.timeLastHIVNegativeTestResult = knowledgeAssessment.timeLastHIVNegativeTestResult ? \"\" : \"This field is required.\")}\n           temp.clientPregnant = knowledgeAssessment.clientPregnant ? \"\" : \"This field is required.\"\n           temp.clientInformHivTransRoutes = knowledgeAssessment.clientInformHivTransRoutes ? \"\" : \"This field is required.\"\n           temp.clientInformRiskkHivTrans = knowledgeAssessment.clientInformRiskkHivTrans ? \"\" : \"This field is required.\"\n           temp.clientInformPreventingsHivTrans = knowledgeAssessment.clientInformPreventingsHivTrans ? \"\" : \"This field is required.\"\n           temp.clientInformPossibleTestResult = knowledgeAssessment.clientInformPossibleTestResult ? \"\" : \"This field is required.\"\n           temp.informConsentHivTest = knowledgeAssessment.informConsentHivTest ? \"\" : \"This field is required.\"  \n\n            temp.currentCough = tbScreening.currentCough ? \"\" : \"This field is required.\"\n            temp.weightLoss = tbScreening.weightLoss ? \"\" : \"This field is required.\"\n            temp.lymphadenopathy = tbScreening.lymphadenopathy ? \"\" : \"This field is required.\"\n            temp.fever = tbScreening.fever ? \"\" : \"This field is required.\"\n            temp.nightSweats = tbScreening.nightSweats ? \"\" : \"This field is required.\"\n\n            {props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (temp.vaginalDischarge = stiScreening.vaginalDischarge ? \"\" : \"This field is required.\" )}\n            {props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (temp.lowerAbdominalPains = stiScreening.lowerAbdominalPains ? \"\" : \"This field is required.\")}\n            {props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.urethralDischarge = stiScreening.urethralDischarge ? \"\" : \"This field is required.\")}\n            {props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.complaintsOfScrotal = stiScreening.complaintsOfScrotal ? \"\" : \"This field is required.\")}\n            {props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.complaintsGenitalSore = stiScreening.complaintsGenitalSore ? \"\" : \"This field is required.\")}\n \n            {props.patientObj.targetGroup===\"473\" && (temp.everHadSexualIntercourse = riskAssessment.everHadSexualIntercourse ? \"\" : \"This field is required.\")}\n            {props.patientObj.targetGroup===\"473\" && (temp.bloodtransInlastThreeMonths = riskAssessment.bloodtransInlastThreeMonths ? \"\" : \"This field is required.\")}\n            {props.patientObj.targetGroup===\"473\" && (temp.uprotectedSexWithCasualLastThreeMonths = riskAssessment.uprotectedSexWithCasualLastThreeMonths ? \"\" : \"This field is required.\")}\n            {props.patientObj.targetGroup===\"473\" && (temp.uprotectedSexWithRegularPartnerLastThreeMonths = riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths ? \"\" : \"This field is required.\")}\n            {props.patientObj.targetGroup===\"473\" && (temp.unprotectedVaginalSex = riskAssessment.unprotectedVaginalSex ? \"\" : \"This field is required.\")}\n\n            {props.patientObj.targetGroup===\"473\" && (temp.uprotectedAnalSex = riskAssessment.uprotectedAnalSex ? \"\" : \"This field is required.\")}\n            {props.patientObj.targetGroup===\"473\" && (temp.sexUnderInfluence = riskAssessment.sexUnderInfluence ? \"\" : \"This field is required.\")}\n            {props.patientObj.targetGroup===\"473\" && (temp.uprotectedSexWithCasualLastThreeMonths = riskAssessment.uprotectedSexWithCasualLastThreeMonths ? \"\" : \"This field is required.\")}\n            {props.patientObj.targetGroup===\"473\" && (temp.moreThanOneSexPartnerLastThreeMonths = riskAssessment.moreThanOneSexPartnerLastThreeMonths ? \"\" : \"This field is required.\")}\n            \n            \n            {props.patientObj.targetGroup!==\"473\" && (temp.experiencePain = riskAssessment.experiencePain ? \"\" : \"This field is required.\")}\n\n            {props.patientObj.targetGroup!==\"473\" && (temp.haveSexWithoutCondom = riskAssessment.haveSexWithoutCondom ? \"\" : \"This field is required.\")}\n            {props.patientObj.targetGroup!==\"473\" && (temp.abuseDrug = riskAssessment.abuseDrug ? \"\" : \"This field is required.\")}\n            {props.patientObj.targetGroup!==\"473\" && (temp.bloodTransfusion = riskAssessment.bloodTransfusion ? \"\" : \"This field is required.\")}\n            {props.patientObj.targetGroup!==\"473\" && (temp.consistentWeightFeverNightCough = riskAssessment.consistentWeightFeverNightCough ? \"\" : \"This field is required.\")}\n            {props.patientObj.targetGroup!==\"473\" && (temp.soldPaidVaginalSex = riskAssessment.soldPaidVaginalSex ? \"\" : \"This field is required.\")}\n\n            temp.sexPartnerHivPositive = tbScreening.sexPartnerHivPositive ? \"\" : \"This field is required.\"\n            {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.newDiagnosedHivlastThreeMonths = tbScreening.newDiagnosedHivlastThreeMonths ? \"\" : \"This field is required.\")}\n            {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.currentlyArvForPmtct = tbScreening.currentlyArvForPmtct ? \"\" : \"This field is required.\")}\n            {riskAssessmentPartner.sexPartnerHivPositive==='true' && ( temp.knowHivPositiveOnArv = tbScreening.knowHivPositiveOnArv ? \"\" : \"This field is required.\")}\n            {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.knowHivPositiveAfterLostToFollowUp = tbScreening.knowHivPositiveAfterLostToFollowUp ? \"\" : \"This field is required.\")}\n            {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.uprotectedAnalSex = tbScreening.uprotectedAnalSex ? \"\" : \"This field is required.\")}\n            \n            setErrors({ ...temp })\n        return Object.values(temp).every(x => x == \"\")\n    }\n    const handleSubmit =(e)=>{\n        e.preventDefault();\n\n            objValues.htsClientId= clientId\n            objValues.knowledgeAssessment= knowledgeAssessment\n            objValues.personId= patientID\n            objValues.riskAssessment= riskAssessment\n            objValues.stiScreening=stiScreening\n            objValues.tbScreening=tbScreening\n            objValues.sexPartnerRiskAssessment=riskAssessmentPartner\n            axios.put(`${baseUrl}hts/${clientId}/pre-test-counseling`,objValues,\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\n            \n            )\n            .then(response => {\n                setSaving(false);\n                props.setPatientObj(response.data)\n                //toast.success(\"Risk Assesment successful\");\n                handleItemClick('hiv-test', 'pre-test-counsel' )\n\n            })\n            .catch(error => {\n                setSaving(false);\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage);\n                }\n                else{\n                    toast.error(\"Something went wrong. Please try again...\");\n                }\n            });\n            \n    }\n    console.log(riskAssessmentPartner)\n\n    return (\n        <>\n            <Card className={classes.root}>\n                <CardBody>\n               \n                <h2>PRE TEST COUNSELING</h2>\n                    <form >\n                        <div className=\"row\">\n\n                        <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'rgb(0,181,173)', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Knowledge Assessment</div>\n                     \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Previously tested HIV negative *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"previousTestedHIVNegative\"\n                                        id=\"previousTestedHIVNegative\"\n                                        value={knowledgeAssessment.previousTestedHIVNegative}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.previousTestedHIVNegative !==\"\" ? (\n                                    <span className={classes.error}>{errors.previousTestedHIVNegative}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            {knowledgeAssessment.previousTestedHIVNegative==='true' && (\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Time of last HIV Negative test Result*</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"timeLastHIVNegativeTestResult\"\n                                        id=\"timeLastHIVNegativeTestResult\"\n                                        value={knowledgeAssessment.timeLastHIVNegativeTestResult}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"<1\"> {\"< 1\"} month</option>\n                                        <option value=\"1-3 Months\">1-3 Months</option>\n                                        <option value=\"4-6 Months\">4-6 Months</option>\n                                        <option value=\">6 Months\"> {\">6\"} Months</option>\n                                        \n                                    </select>\n                                    {errors.timeLastHIVNegativeTestResult !==\"\" ? (\n                                    <span className={classes.error}>{errors.timeLastHIVNegativeTestResult}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {sex ==='Female' && (\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client pregnant *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientPregnant\"\n                                        id=\"clientPregnant\"\n                                        value={knowledgeAssessment.clientPregnant}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.clientPregnant !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientPregnant}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                             )}\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client informed about HIV transmission routes *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientInformHivTransRoutes\"\n                                        id=\"clientInformHivTransRoutes\"\n                                        value={knowledgeAssessment.clientInformHivTransRoutes}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.clientInformHivTransRoutes !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientInformHivTransRoutes}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client informed about risk factors for HIV transmission *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientInformRiskkHivTrans\"\n                                        id=\"clientInformRiskkHivTrans\"\n                                        value={knowledgeAssessment.clientInformRiskkHivTrans}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.clientInformRiskkHivTrans !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientInformRiskkHivTrans}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client informed on preventing HIV transmission methods *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientInformPreventingsHivTrans\"\n                                        id=\"clientInformPreventingsHivTrans\"\n                                        value={knowledgeAssessment.clientInformPreventingsHivTrans}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.clientInformPreventingsHivTrans !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientInformPreventingsHivTrans}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client informed about possible test results *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientInformPossibleTestResult\"\n                                        id=\"clientInformPossibleTestResult\"\n                                        value={knowledgeAssessment.clientInformPossibleTestResult}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.clientInformPossibleTestResult !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientInformPossibleTestResult}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Informed consent for HIV testing given *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"informConsentHivTest\"\n                                        id=\"informConsentHivTest\"\n                                        value={knowledgeAssessment.informConsentHivTest}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.informConsentHivTest !==\"\" ? (\n                                    <span className={classes.error}>{errors.informConsentHivTest}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <hr/>\n                            <br/>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#000', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Clinical TB screening</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Current cough *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"currentCough\"\n                                        id=\"currentCough\"\n                                        value={tbScreening.currentCough}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.currentCough !==\"\" ? (\n                                    <span className={classes.error}>{errors.currentCough}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Weight loss *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"weightLoss\"\n                                        id=\"weightLoss\"\n                                        value={tbScreening.weightLoss}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.weightLoss !==\"\" ? (\n                                    <span className={classes.error}>{errors.weightLoss}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Lymphadenopathy (swelling of the lymph nodes) *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"lymphadenopathy\"\n                                        id=\"lymphadenopathy\"\n                                        value={tbScreening.lymphadenopathy}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.lymphadenopathy !==\"\" ? (\n                                    <span className={classes.error}>{errors.lymphadenopathy}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Fever *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"fever\"\n                                        id=\"fever\"\n                                        value={tbScreening.fever}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.fever !==\"\" ? (\n                                    <span className={classes.error}>{errors.fever}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Night sweats*</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"nightSweats\"\n                                        id=\"nightSweats\"\n                                        value={tbScreening.nightSweats}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.nightSweats !==\"\" ? (\n                                    <span className={classes.error}>{errors.nightSweats}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <Message warning>\n                                <h4>TB Screening score (calculate the sum of the TB assessment) If score {\">= 1\"}, test for Xper MTB RIF or refer to TB service </h4>\n                                <b>Score : {tbCount}</b>\n                            </Message>\n                            <hr/>\n                            <br/>\n                           {props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && ( <>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Ever had sexual intercourse </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"everHadSexualIntercourse\"\n                                        id=\"everHadSexualIntercourse\"\n                                        value={riskAssessment.everHadSexualIntercourse}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.everHadSexualIntercourse !==\"\" ? (\n                                    <span className={classes.error}>{errors.everHadSexualIntercourse}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Blood transfusion in last 3 months *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"bloodtransInlastThreeMonths\"\n                                        id=\"bloodtransInlastThreeMonths\"\n                                        value={riskAssessment.bloodtransInlastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.bloodtransInlastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.bloodtransInlastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected sex with casual partner in last 3 months *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedSexWithCasualLastThreeMonths\"\n                                        id=\"uprotectedSexWithCasualLastThreeMonths\"\n                                        value={riskAssessment.uprotectedSexWithCasualLastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.uprotectedSexWithCasualLastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedSexWithCasualLastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected sex with regular partner in the last 3months</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\n                                        id=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\n                                        value={riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.uprotectedSexWithRegularPartnerLastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedSexWithRegularPartnerLastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected vaginal sex</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"unprotectedVaginalSex\"\n                                        id=\"unprotectedVaginalSex\"\n                                        value={riskAssessment.unprotectedVaginalSex}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.unprotectedVaginalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.unprotectedVaginalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected Anal sex</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedAnalSex\"\n                                        id=\"uprotectedAnalSex\"\n                                        value={riskAssessment.uprotectedAnalSex}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.uprotectedAnalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedAnalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>         \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>STI in last 3 months *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"stiLastThreeMonths\"\n                                        id=\"stiLastThreeMonths\"\n                                        value={riskAssessment.stiLastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.stiLastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.stiLastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Sex under the influence of drugs or alcohol*</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"sexUnderInfluence\"\n                                        id=\"sexUnderInfluence\"\n                                        value={riskAssessment.sexUnderInfluence}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.sexUnderInfluence !==\"\" ? (\n                                    <span className={classes.error}>{errors.sexUnderInfluence}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>More than 1 sex partner during last 3 months*</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"moreThanOneSexPartnerLastThreeMonths\"\n                                        id=\"moreThanOneSexPartnerLastThreeMonths\"\n                                        value={riskAssessment.moreThanOneSexPartnerLastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.moreThanOneSexPartnerLastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.moreThanOneSexPartnerLastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <Message warning>\n                                <h4>Personal HIV Risk assessment score (sum of all 7 answers)</h4>\n                                <b>Score : {riskCount.length}</b>\n                            </Message>\n                            <hr/>\n                            <br/>\n                            </>)}\n                            {props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && ( <>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/your partner experienced lower abdominal pain, smelly discharge, blisters and wounds around you/partner vagina, penis anus or mouth?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"experiencePain\"\n                                        id=\"experiencePain\"\n                                        value={riskAssessment.experiencePain}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.experiencePain !==\"\" ? (\n                                    <span className={classes.error}>{errors.experiencePain}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner had sex without a condom with someone of unknown HIV status, or you/partner raped by person with unknown HIV status? *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"haveSexWithoutCondom\"\n                                        id=\"haveSexWithoutCondom\"\n                                        value={riskAssessment.haveSexWithoutCondom}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.haveSexWithoutCondom !==\"\" ? (\n                                    <span className={classes.error}>{errors.haveSexWithoutCondom}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you had a condom burst with your partner during sexual intercourse?  *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"haveCondomBurst\"\n                                        id=\"haveCondomBurst\"\n                                        value={riskAssessment.haveCondomBurst}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.haveCondomBurst !==\"\" ? (\n                                    <span className={classes.error}>{errors.haveCondomBurst}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Do you/partner share needles/syringes, other sharp objects or used abuse drug substances of any kind?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"abuseDrug\"\n                                        id=\"abuseDrug\"\n                                        value={riskAssessment.abuseDrug}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.abuseDrug !==\"\" ? (\n                                    <span className={classes.error}>{errors.abuseDrug}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner had any blood or blood product transfusion?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"bloodTransfusion\"\n                                        id=\"bloodTransfusion\"\n                                        value={riskAssessment.bloodTransfusion}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.bloodTransfusion !==\"\" ? (\n                                    <span className={classes.error}>{errors.bloodTransfusion}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner experienced coughing, weight loss, fever, night sweats consistently?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"consistentWeightFeverNightCough\"\n                                        id=\"consistentWeightFeverNightCough\"\n                                        value={riskAssessment.consistentWeightFeverNightCough}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.consistentWeightFeverNightCough !==\"\" ? (\n                                    <span className={classes.error}>{errors.consistentWeightFeverNightCough}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>            \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner paid or sold vaginal, anal or oral sex? *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"soldPaidVaginalSex\"\n                                        id=\"soldPaidVaginalSex\"\n                                        value={riskAssessment.soldPaidVaginalSex}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.soldPaidVaginalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.soldPaidVaginalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <Message warning>\n                                <h4>Personal HIV Risk assessment score (sum of all 7 answers)</h4>\n                                <b>Score :{riskCount.length}</b>\n                            </Message>\n                            <hr/>\n                            <br/>\n                            </>)}\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Sex Partner Risk Assessment (Last 3 months)</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you had sex with a partner who is HIV positive? </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"sexPartnerHivPositive\"\n                                        id=\"sexPartnerHivPositive\"\n                                        value={riskAssessmentPartner.sexPartnerHivPositive}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.sexPartnerHivPositive !==\"\" ? (\n                                    <span className={classes.error}>{errors.sexPartnerHivPositive}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            {riskAssessmentPartner.sexPartnerHivPositive==='true' && (<>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Is sex partner newly diagnosed with HIV and started treatment less than 3-6 months ago?*</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"newDiagnosedHivlastThreeMonths\"\n                                        id=\"newDiagnosedHivlastThreeMonths\"\n                                        value={riskAssessmentPartner.newDiagnosedHivlastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.newDiagnosedHivlastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.newDiagnosedHivlastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Is sex partner pregnant and currently receiving ARV for PMTCT?*</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"currentlyArvForPmtct\"\n                                        id=\"currentlyArvForPmtct\"\n                                        value={riskAssessmentPartner.currentlyArvForPmtct}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.currentlyArvForPmtct !==\"\" ? (\n                                    <span className={classes.error}>{errors.currentlyArvForPmtct}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Known HIV positive partner on ARV with an unsurpressed VL</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"knowHivPositiveOnArv\"\n                                        id=\"knowHivPositiveOnArv\"\n                                        value={riskAssessmentPartner.knowHivPositiveOnArv}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.knowHivPositiveOnArv !==\"\" ? (\n                                    <span className={classes.error}>{errors.knowHivPositiveOnArv}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Known HIV positive recently returned to treatment after being lost to follow up</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"knowHivPositiveAfterLostToFollowUp\"\n                                        id=\"knowHivPositiveAfterLostToFollowUp\"\n                                        value={riskAssessmentPartner.knowHivPositiveAfterLostToFollowUp}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.knowHivPositiveAfterLostToFollowUp !==\"\" ? (\n                                    <span className={classes.error}>{errors.knowHivPositiveAfterLostToFollowUp}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected Anal sex</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedAnalSex\"\n                                        id=\"uprotectedAnalSex\"\n                                        value={riskAssessmentPartner.uprotectedAnalSex}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.uprotectedAnalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedAnalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            </>)}\n                            <Message warning>\n                                <h4>Sex Partner Risk Assessment score (sum of all 6 answers)</h4>\n                                <b>Score :{sexPartRiskCount.length}</b>\n                            </Message>        \n                            \n                            <hr/>\n                            <br/>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#014D88', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Syndromic STI Screening</div>\n                            {props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (\n                            <>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of vaginal discharge or burning when urinating?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"vaginalDischarge\"\n                                        id=\"vaginalDischarge\"\n                                        value={stiScreening.vaginalDischarge}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.vaginalDischarge !==\"\" ? (\n                                    <span className={classes.error}>{errors.vaginalDischarge}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of lower abdominal pains with or without vaginal discharge?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"lowerAbdominalPains\"\n                                        id=\"lowerAbdominalPains\"\n                                        value={stiScreening.lowerAbdominalPains}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.lowerAbdominalPains !==\"\" ? (\n                                    <span className={classes.error}>{errors.lowerAbdominalPains}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            </>)}\n                            {props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (\n                            <>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of urethral discharge or burning when urinating?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"urethralDischarge\"\n                                        id=\"urethralDischarge\"\n                                        value={stiScreening.urethralDischarge}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.urethralDischarge !==\"\" ? (\n                                    <span className={classes.error}>{errors.urethralDischarge}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of scrotal swelling and pain</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"complaintsOfScrotal\"\n                                        id=\"complaintsOfScrotal\"\n                                        value={stiScreening.complaintsOfScrotal}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.complaintsOfScrotal !==\"\" ? (\n                                    <span className={classes.error}>{errors.complaintsOfScrotal}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of genital sore(s) or swollen inguinal lymph nodes with or without pains?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"complaintsGenitalSore\"\n                                        id=\"complaintsGenitalSore\"\n                                        value={stiScreening.complaintsGenitalSore}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.complaintsGenitalSore !==\"\" ? (\n                                    <span className={classes.error}>{errors.complaintsGenitalSore}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            </>)} \n                            <Message warning>\n                                <h4>Calculate the sum of the STI screening. If {\">= \"}1, should be referred for STI test </h4>\n                                <b>Score :{stiCount.length}</b>\n                            </Message>\n                           \n                            {saving ? <Spinner /> : \"\"}\n                            <br />\n                            <div className=\"row\">\n                            <div className=\"form-group mb-3 col-md-12\">\n                            <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('basic','basic')}/>\n                            <Button content='Save & Continue' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\n                            </div>\n                            </div>\n                        </div>\n                    </form>\n                </CardBody>\n            </Card>                                 \n        </>\n    );\n};\n\nexport default BasicInfo","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\Elicitation\\Index.js",["416","417","418","419","420"],"import React, {useState, Fragment } from \"react\";\n\nimport { Row, Col, Card, } from \"react-bootstrap\";\nimport AddIndexContact from './AddIndexContact';\nimport IndexContactList from './IndexContactList'\nimport { FaUserPlus } from \"react-icons/fa\";\nimport { Link } from 'react-router-dom';\n//import Button from '@material-ui/core/Button';\nimport {Label as LabelRibbon, Button} from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css';\n\n\nconst Elicitation = (props) => {\n    //console.log(props.patientObj)\n    const [activePage, setActivePage]= useState('list')\n    const handleIClickPage =(activeItem)=>{\n        setActivePage(activeItem)\n    }\n    const handleItemClick =(page, completedMenu)=>{\n        props.handleItemClick(page)\n        if(props.completed.includes(completedMenu)) {\n\n        }else{\n            props.setCompleted([...props.completed, completedMenu])\n        }\n    }\n    const handleDone=()=>{\n      props.setActivePage({...props.activePage, activePage:\"recent-history\",})\n    }\n\n  return (\n    <Fragment>  \n     \n      <Row>       \n        <Col md={12}>\n            {activePage==='list' &&\n                (\n                    <IndexContactList activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>\n                )\n            }\n            {activePage==='add' && (\n                  <AddIndexContact activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>        \n            )}\n            <br />\n                <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-6\">\n                <Button content='Done' icon='list' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleDone()}/>\n                \n                </div>\n                </div>\n        </Col>\n        \n      </Row>\n    </Fragment>\n  );\n};\n\nexport default Elicitation;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Consultation\\Home.js",["421","422","423","424","425","426","427","428","429","430","431"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Grid,\r\n  Segment,\r\n  Label,\r\n  Icon,\r\n  List,\r\n  Button,\r\n  Card,\r\n  Feed,\r\n} from \"semantic-ui-react\";\r\n// Page titie\r\nimport { FormGroup, Label as FormLabelName, Input } from \"reactstrap\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst ClinicVisit = (props) => {\r\n  let patientObj = props.patientObj ? props.patientObj : {};\r\n  const [errors, setErrors] = useState({});\r\n  const [disabledField, setDisabledField] = useState(false);\r\n  let temp = { ...errors };\r\n  const classes = useStyles();\r\n  const [saving, setSaving] = useState(false);\r\n  //const [clinicalStage, setClinicalStage] = useState([]);\r\n  const [dsdModelType, setDsdModelType] = useState([]);\r\n  // const [currentVitalSigns, setcurrentVitalSigns] = useState({})\r\n  // const [showCurrentVitalSigns, setShowCurrentVitalSigns] = useState(false)\r\n  const [visitStatus, setVisitStatus] = useState([]);\r\n  const [maternalCome, setMaternalCome] = useState([]);\r\n  const [fp, setFp] = useState([]);\r\n  const [entryPoint, setEntryPoint] = useState([]);\r\n  //Vital signs clinical decision support\r\n  const entrypointRef = useRef(null);\r\n  const [objValues, setObjValues] = useState({\r\n    ancNo: patientObj.ancNo,\r\n    dateOfViralLoad: \"\",\r\n    dateOfVisit: \"\",\r\n    dateOfmeternalOutcome: \"\",\r\n    dsd: \"\",\r\n    dsdModel: \"\",\r\n    dsdOption: \"\",\r\n    enteryPoint:\r\n      props.patientObj.entryPoint === \"619\"\r\n        ? \"POINT_ENTRY_PMTCT_ANC\"\r\n        : props?.patientObj?.entryPoint === \"620\"\r\n        ? \"POINT_ENTRY_PMTCT_L&D\"\r\n        : props?.patientObj?.entryPoint === \"621\"\r\n        ? \"POINT_ENTRY_PMTCT_POSTNATAL_WARD\"\r\n        : props.patientObj.ancNo\r\n        ? \"POINT_ENTRY_PMTCT_ANC\"\r\n        : \"\",\r\n    fpCounseling: \"\",\r\n    fpMethod: \"\",\r\n    gaOfViralLoad: \"\",\r\n    id: \"\",\r\n    maternalOutcome: \"\",\r\n    nextAppointmentDate: \"\",\r\n    personUuid: patientObj.person_uuid,\r\n    resultOfViralLoad: \"\",\r\n    transferTo: \"\",\r\n    visitStatus: \"\",\r\n    timeOfViralLoad: \"\",\r\n  });\r\n  // const [vital, setVitalSignDto] = useState({\r\n  //   bodyWeight: \"\",\r\n  //   diastolic: \"\",\r\n  //   encounterDate: \"\",\r\n  //   facilityId: 1,\r\n  //   height: \"\",\r\n  //   personId: props.patientObj.id,\r\n  //   serviceTypeId: 1,\r\n  //   systolic: \"\",\r\n  //   pulse:\"\",\r\n  //   temperature:\"\",\r\n  //   respiratoryRate:\"\"\r\n  // })\r\n  useEffect(() => {\r\n    ///VitalSigns();\r\n    VISIT_STATUS_PMTCT();\r\n    MATERNAL_OUTCOME();\r\n    FAMILY_PLANNING_METHOD();\r\n    POINT_ENTRY_PMTCT();\r\n    if (\r\n      props.activeContent.id &&\r\n      props.activeContent.id !== \"\" &&\r\n      props.activeContent.id !== null\r\n    ) {\r\n      GetVisit(props.activeContent.id);\r\n      setDisabledField(\r\n        props.activeContent.actionType === \"view\" ? true : false\r\n      );\r\n    }\r\n  }, [props.activeContent]);\r\n\r\n  const GetVisit = (id) => {\r\n    axios\r\n      .get(`${baseUrl}pmtct/anc/view-mother-visit/${props.activeContent.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setObjValues(response.data);\r\n        DsdModelType(response.data.dsdModel);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const VISIT_STATUS_PMTCT = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/VISIT_STATUS_PMTCT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setVisitStatus(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const POINT_ENTRY_PMTCT = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/POINT_ENTRY_PMTCT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setEntryPoint(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const FAMILY_PLANNING_METHOD = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/FAMILY_PLANNING_METHOD`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setFp(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const MATERNAL_OUTCOME = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/MATERNAL_OUTCOME`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setMaternalCome(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const handleInputChange = (e) => {\r\n    setErrors({ ...temp, [e.target.name]: \"\" });\r\n    if (e.target.name === \"dsdModel\") {\r\n      DsdModelType(e.target.value);\r\n    }\r\n    if (e.target.name === \"dateOfViralLoad\" && e.target.value !== \"\") {\r\n      async function getGa() {\r\n        const dateOfViralLoad = e.target.value;\r\n        //?ancNo=001&visitDate=2023-02-01\r\n        const response = await axios.get(\r\n          `${baseUrl}pmtct/anc/calculate-ga-from-person?personUuid=${\r\n            props.patientObj.person_uuid\r\n              ? props.patientObj.person_uuid\r\n              : props.patientObj.uuid\r\n          }&visitDate=${dateOfViralLoad}`,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"text/plain\",\r\n            },\r\n          }\r\n        );\r\n        if (response.data > 0) {\r\n          objValues.gaOfViralLoad = response.data;\r\n          setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n        } else {\r\n          //toast.error(\"Please select a validate date\")\r\n          setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n        }\r\n      }\r\n      getGa();\r\n    }\r\n    if (e.target.name === \"fpCounseling\" && e.target.value === \"No\") {\r\n      objValues.fpMethod = \"\";\r\n      setObjValues({ ...objValues, [\"fpMethod\"]: \"\" });\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    }\r\n    if (e.target.name === \"dsd\" && e.target.value !== \"Yes\") {\r\n      objValues.dsdModel = \"\";\r\n      objValues.dsdOption = \"\";\r\n      setObjValues({ ...objValues, [\"dsdModel\"]: \"\" });\r\n      setObjValues({ ...objValues, [\"dsdOption\"]: \"\" });\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    } //objValues.visitStatus==='VISIT_STATUS_PMTCT_TRANSFER_OUT'\r\n    if (\r\n      e.target.name === \"visitStatus\" &&\r\n      e.target.value !== \"VISIT_STATUS_PMTCT_TRANSFER_OUT\"\r\n    ) {\r\n      objValues.transferTo = \"\";\r\n      setObjValues({ ...objValues, [\"transferTo\"]: \"\" });\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    }\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  function DsdModelType(dsdmodel) {\r\n    const dsd =\r\n      dsdmodel === \"Facility\" ? \"DSD_MODEL_FACILITY\" : \"DSD_MODEL_COMMUNITY\";\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/${dsd}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setDsdModelType(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n\r\n  //Validations of the forms\r\n  const validate = () => {\r\n    temp.visitStatus = objValues.visitStatus ? \"\" : \"This field is required\";\r\n    temp.dateOfVisit = objValues.dateOfVisit ? \"\" : \"This field is required\";\r\n    temp.dsd = objValues.dsd ? \"\" : \"This field is required\";\r\n    temp.enteryPoint = objValues.enteryPoint ? \"\" : \"This field is required\";\r\n    temp.fpCounseling = objValues.fpCounseling ? \"\" : \"This field is required\";\r\n    //temp.fpMethod = objValues.fpMethod ? \"\" : \"This field is required\"\r\n    temp.dateOfmeternalOutcome = objValues.dateOfmeternalOutcome\r\n      ? \"\"\r\n      : \"This field is required\";\r\n    temp.maternalOutcome = objValues.maternalOutcome\r\n      ? \"\"\r\n      : \"This field is required\";\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n\r\n  /**** Submit Button Processing  */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      setSaving(true);\r\n      if (props.activeContent && props.activeContent.actionType === \"update\") {\r\n        axios\r\n          .put(\r\n            `${baseUrl}pmtct/anc/update-mother-visit/${props.activeContent.id}`,\r\n            objValues,\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          )\r\n          .then((response) => {\r\n            setSaving(false);\r\n            toast.success(\"Clinic Visit save successful\", {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: \"recent-history\",\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== \"\"\r\n                  ? error.response.data.apierror.message\r\n                  : \"Something went wrong, please try again\";\r\n              toast.error(errorMessage, {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            } else {\r\n              toast.error(\"Something went wrong. Please try again...\", {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        axios\r\n          .post(`${baseUrl}pmtct/anc/pmtct-visit`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then((response) => {\r\n            setSaving(false);\r\n            toast.success(\"Clinic Visit save successful\", {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: \"recent-history\",\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== \"\"\r\n                  ? error.response.data.apierror.message\r\n                  : \"Something went wrong, please try again\";\r\n              toast.error(errorMessage, {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            } else {\r\n              toast.error(\"Something went wrong. Please try again...\", {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-8 \">\r\n          <h2>Mother Follow-up Visit</h2>\r\n        </div>\r\n      </div>\r\n      <Grid>\r\n        <Grid.Column>\r\n          <Segment>\r\n            <Label\r\n              as=\"a\"\r\n              color=\"blue\"\r\n              style={{ width: \"106%\", height: \"35px\" }}\r\n              ribbon\r\n            >\r\n              <h4 style={{ color: \"#fff\" }}>VITAL SIGNS</h4>\r\n            </Label>\r\n            <br />\r\n            <br />\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-3\">\r\n                <FormGroup>\r\n                  <FormLabelName>\r\n                    Date of Visit <span style={{ color: \"red\" }}> *</span>\r\n                  </FormLabelName>\r\n                  {console.log(\"visiting patient\", props.patientObj)}\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"dateOfVisit\"\r\n                    id=\"dateOfVisit\"\r\n                    value={objValues.dateOfVisit}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                    onChange={handleInputChange}\r\n                    min={props.patientObj.firstAncDate}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    //min={patientObj.pmtctEnrollmentRespondDto.pmtctEnrollmentDate}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.dateOfVisit !== \"\" ? (\r\n                    <span className={classes.error}>{errors.dateOfVisit}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\" mb-3 col-md-3\">\r\n                <FormGroup>\r\n                  <FormLabelName>\r\n                    Point of Entry <span style={{ color: \"red\" }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"enteryPoint\"\r\n                    id=\"enteryPoint\"\r\n                    value={objValues.enteryPoint}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                    disabled={true}\r\n                  >\r\n                    {/* <option value=\"select\">Select </option> */}\r\n\r\n                    {props?.patientObj?.entryPoint\r\n                      ? entryPoint.map(\r\n                          (value) =>\r\n                            Number(props.patientObj.entryPoint) ===\r\n                              Number(value.id) && (\r\n                              <option\r\n                                key={value.id}\r\n                                value={value.code}\r\n                                ref={entrypointRef}\r\n                              >\r\n                                {value.display}\r\n                              </option>\r\n                            )\r\n                        )\r\n                      : props.patientObj.ancNo && (\r\n                          <option key={619} value={\"POINT_ENTRY_PMTCT_ANC\"}>\r\n                            ANC\r\n                          </option>\r\n                        )}\r\n                  </Input>\r\n                  {errors.enteryPoint !== \"\" ? (\r\n                    <span className={classes.error}>{errors.enteryPoint}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-3\">\r\n                <FormGroup>\r\n                  <FormLabelName>\r\n                    FP Counselling <span style={{ color: \"red\" }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"fpCounseling\"\r\n                    id=\"fpCounseling\"\r\n                    value={objValues.fpCounseling}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"Yes\">YES </option>\r\n                    <option value=\"No\">NO </option>\r\n                  </Input>\r\n                  {errors.fpCounseling !== \"\" ? (\r\n                    <span className={classes.error}>{errors.fpCounseling}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.fpCounseling === \"Yes\" && (\r\n                <div className=\" mb-3 col-md-3\">\r\n                  <FormGroup>\r\n                    <FormLabelName>FP Method </FormLabelName>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"fpMethod\"\r\n                      id=\"fpMethod\"\r\n                      value={objValues.fpMethod}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value=\"select\">Select </option>\r\n                      {fp.map((value) => (\r\n                        <option key={value.id} value={value.id}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                    {errors.fpMethod !== \"\" ? (\r\n                      <span className={classes.error}>{errors.fpMethod}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <br />\r\n            <Label\r\n              as=\"a\"\r\n              color=\"teal\"\r\n              style={{ width: \"106%\", height: \"35px\" }}\r\n              ribbon\r\n            >\r\n              <h4 style={{ color: \"#fff\" }}> VIRAL LOAD </h4>\r\n            </Label>\r\n            <br />\r\n            <br />\r\n            {/* TB Screening Form */}\r\n            <div className=\"row\">\r\n              <div className=\" mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <FormLabelName>Viral Load Collection Date </FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"dateOfViralLoad\"\r\n                    id=\"dateOfViralLoad\"\r\n                    value={objValues.dateOfViralLoad}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                    min={props.patientObj.firstAncDate}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.dateOfViralLoad !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.dateOfViralLoad}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <FormLabelName>GA at VL Collection </FormLabelName>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"gaOfViralLoad\"\r\n                    id=\"gaOfViralLoad\"\r\n                    value={objValues.gaOfViralLoad}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                    min={props.patientObj.firstAncDate}\r\n                    disabled={disabledField === false ? true : disabledField}\r\n                  />\r\n                  {errors.gaOfViralLoad !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.gaOfViralLoad}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <FormLabelName>Result </FormLabelName>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"resultOfViralLoad\"\r\n                    id=\"resultOfViralLoad\"\r\n                    value={objValues.resultOfViralLoad}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.resultOfViralLoad !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.resultOfViralLoad}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n            <br />\r\n\r\n            <br />\r\n            <Label\r\n              as=\"a\"\r\n              color=\"black\"\r\n              style={{ width: \"106%\", height: \"35px\" }}\r\n              ribbon\r\n            >\r\n              <h4 style={{ color: \"#fff\" }}> DSD MODEL & OUTCOME</h4>\r\n            </Label>\r\n            <br />\r\n            <br />\r\n            {/*  */}\r\n            <div className=\"row\">\r\n              <div className=\" mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <FormLabelName>\r\n                    DSD <span style={{ color: \"red\" }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"dsd\"\r\n                    id=\"dsd\"\r\n                    value={objValues.dsd}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"Yes\">YES </option>\r\n                    <option value=\"No\">NO </option>\r\n                  </Input>\r\n                  {errors.dsd !== \"\" ? (\r\n                    <span className={classes.error}>{errors.dsd}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.dsd === \"Yes\" && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <FormLabelName>DSD Model</FormLabelName>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"dsdModel\"\r\n                        id=\"dsdModel\"\r\n                        value={objValues.dsdModel}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value=\"\">Select </option>\r\n                        <option value=\"Facility\">Facility </option>\r\n                        <option value=\"Community\">Community </option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <FormLabelName>DSD Model Type</FormLabelName>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"dsdOption\"\r\n                        id=\"dsdOption\"\r\n                        value={objValues.dsdOption}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value=\"\">Select </option>\r\n                        {dsdModelType.map((value) => (\r\n                          <option key={value.code} value={value.code}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-3\">\r\n                <FormGroup>\r\n                  <FormLabelName>\r\n                    Maternal Outcome <span style={{ color: \"red\" }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"maternalOutcome\"\r\n                    id=\"maternalOutcome\"\r\n                    value={objValues.maternalOutcome}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    {maternalCome.map((value) => (\r\n                      <option key={value.code} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-3\">\r\n                <FormGroup>\r\n                  <FormLabelName>\r\n                    Date of Outcome <span style={{ color: \"red\" }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"dateOfmeternalOutcome\"\r\n                    id=\"dateOfmeternalOutcome\"\r\n                    value={objValues.dateOfmeternalOutcome}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                    min={props.patientObj.firstAncDate}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.dateOfmeternalOutcome !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.dateOfmeternalOutcome}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-3\">\r\n                <FormGroup>\r\n                  <FormLabelName>\r\n                    Client Visit Status <span style={{ color: \"red\" }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"visitStatus\"\r\n                    id=\"visitStatus\"\r\n                    value={objValues.visitStatus}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    {visitStatus.map((value) => (\r\n                      <option key={value.code} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.visitStatus !== \"\" ? (\r\n                    <span className={classes.error}>{errors.visitStatus}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.visitStatus === \"VISIT_STATUS_PMTCT_TRANSFER_OUT\" && (\r\n                <div className=\"form-group mb-3 col-md-3\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Name of ART Facility </FormLabelName>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"transferTo\"\r\n                      id=\"transferTo\"\r\n                      value={objValues.transferTo}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                      disabled={disabledField}\r\n                    />\r\n                    {errors.transferTo !== \"\" ? (\r\n                      <span className={classes.error}>{errors.transferTo}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <br />\r\n            {props.activeContent && props.activeContent.actionType ? (\r\n              <>\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  hidden={disabledField}\r\n                  className={classes.button}\r\n                  startIcon={<SaveIcon />}\r\n                  style={{ backgroundColor: \"#014d88\" }}\r\n                  onClick={handleSubmit}\r\n                  disabled={saving}\r\n                >\r\n                  {!saving ? (\r\n                    <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                  ) : (\r\n                    <span style={{ textTransform: \"capitalize\" }}>\r\n                      Updating...\r\n                    </span>\r\n                  )}\r\n                </MatButton>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  startIcon={<SaveIcon />}\r\n                  style={{ backgroundColor: \"#014d88\" }}\r\n                  onClick={handleSubmit}\r\n                  disabled={saving}\r\n                >\r\n                  {!saving ? (\r\n                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                  ) : (\r\n                    <span style={{ textTransform: \"capitalize\" }}>\r\n                      Saving...\r\n                    </span>\r\n                  )}\r\n                </MatButton>\r\n              </>\r\n            )}\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClinicVisit;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Consultation\\InfantVisit.js",["432","433","434"],"import React, { useState, useEffect } from \"react\";\nimport { Grid, Segment, Label, List } from \"semantic-ui-react\";\n// Page titie\nimport {\n  FormGroup,\n  Label as FormLabelName,\n  Input,\n  InputGroup,\n  InputGroupText,\n} from \"reactstrap\";\nimport { url as baseUrl, token } from \"../../../api\";\nimport MatButton from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { toast } from \"react-toastify\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 350,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"11px\",\n  },\n  success: {\n    color: \"#4BB543 \",\n    fontSize: \"11px\",\n  },\n}));\n\nconst ClinicVisit = (props) => {\n  let patientObj = props.patientObj ? props.patientObj : {};\n  //console.log(patientObj.pmtctEnrollmentRespondDto.pmtctEnrollmentDate)\n  const [errors, setErrors] = useState({});\n  const [infantHospitalNumber, setInfantHospitalNumber] = useState();\n  let temp = { ...errors };\n  const classes = useStyles();\n  const [saving, setSaving] = useState(false);\n  const [infants, setInfants] = useState([]);\n  const [formFilter, setFormFilter] = useState({\n    infantArv: false,\n    motherArt: false,\n    outCome: false,\n  });\n  const [timingOfArtInitiation, setTimingOfArtInitiation] = useState([]);\n  const [childStatus, setChildStatus] = useState([]);\n  const [timeMotherArt, setTimeMotherArt] = useState([]);\n  const [regimenType, setRegimenType] = useState([]);\n  const [adultRegimenLine, setAdultRegimenLine] = useState([]);\n  const [infantArv, setInfantArv] = useState([]);\n  const [agectx, setAgeCTX] = useState([]);\n  const [pcrResult, setPcrResult] = useState([]);\n  const [infantOutcome, setInfantOutcome] = useState([]);\n  const [disabledField, setDisabledField] = useState(false);\n  const [objValues, setObjValues] = useState({\n    infantVisitRequestDto: \"\",\n    infantArvDto: \"\",\n    infantMotherArtDto: \"\",\n    infantPCRTestDto: \"\",\n  });\n  const [infantVisitRequestDto, setInfantVisitRequestDto] = useState({\n    ageAtCtx: \"\",\n    ancNumber: props.patientObj.ancNo,\n    bodyWeight: \"\",\n    breastFeeding: \"\",\n    ctxStatus: \"\",\n    infantHospitalNumber: \"\",\n    uuid: \"\",\n    visitDate: \"\",\n    visitStatus: \"\",\n    infantOutcomeAt18Months: \"\",\n  });\n  const [infantArvDto, setInfantArvDto] = useState({\n    ageAtCtx: \"\",\n    ancNumber: props.patientObj.ancNo,\n    arvDeliveryPoint: \"\",\n    infantArvTime: \"\",\n    infantArvType: \"\",\n    infantHospitalNumber: infantHospitalNumber,\n  });\n  const [infantMotherArtDto, setInfantMotherArtDto] = useState({\n    ancNumber: props.patientObj.ancNo,\n    motherArtInitiationTime: \"\",\n    motherArtRegimen: \"\",\n    regimenTypeId: \"\",\n    regimenId: \"\",\n  });\n  const [infantPCRTestDto, setInfantPCRTestDto] = useState({\n    ageAtTest: \"\",\n    ancNumber: props.patientObj.ancNo,\n    dateResultReceivedAtFacility: \"\",\n    dateResultReceivedByCaregiver: \"\",\n    dateSampleCollected: \"\",\n    dateSampleSent: \"\",\n    infantHospitalNumber: infantHospitalNumber,\n    results: \"\",\n    testType: \"\",\n  });\n  //Vital signs clinical decision support\n  const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\n    bodyWeight: \"\",\n  });\n\n  useEffect(() => {\n    InfantInfo();\n    TIME_ART_INITIATION_PMTCT();\n    CHILD_FOLLOW_UP_VISIT_STATUS();\n    TIMING_MOTHERS_ART_INITIATION();\n    AdultRegimenLine();\n    AGE_CTX_INITIATION();\n    INFANT_ARV_PROPHYLAXIS_TYPE();\n    INFANT_PCR_RESULT();\n    INFANT_OUTCOME_AT_18_MONTHS();\n    if (\n      props.activeContent.id &&\n      props.activeContent.id !== \"\" &&\n      props.activeContent.id !== null\n    ) {\n      GetVisit(props.activeContent.id);\n      setDisabledField(\n        props.activeContent.actionType === \"view\" ? true : false\n      );\n    }\n  }, [props.patientObj.ancNo, props.activeContent]);\n  //GEt visit information\n  const GetVisit = (id) => {\n    axios\n      .get(`${baseUrl}pmtct/anc/view-infantvisit/${props.activeContent.id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setObjValues(response.data);\n        setInfantVisitRequestDto({ ...response.data.infantVisitRequestDto });\n        setInfantArvDto({ ...response.data.infantArvDto });\n        setInfantMotherArtDto({ ...response.data.infantMotherArtDto });\n        setInfantPCRTestDto({ ...response.data.infantPCRTestDto });\n        GetInfantDetail2({ ...response.data.infantVisitRequestDto });\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  //This is to get infant hospital numbet when viewing or updating infant\n  const GetInfantDetail2 = (obj) => {\n    setInfantHospitalNumber(obj.infantHospitalNumber);\n    const InfantVisit = () => {\n      //setLoading(true)\n      axios\n        .get(\n          `${baseUrl}pmtct/anc/get-form-filter/${obj.infantHospitalNumber}`,\n          { headers: { Authorization: `Bearer ${token}` } }\n        )\n        .then((response) => {\n          infantVisitRequestDto.infantHospitalNumber = obj.infantHospitalNumber;\n          setFormFilter(response.data);\n        })\n\n        .catch((error) => {\n          //console.log(error);\n        });\n    };\n    InfantVisit();\n  };\n  ///GET LIST OF Infants\n  const InfantInfo = () => {\n    //setLoading(true)\n    if (props.patientObj.ancNo) {\n      axios\n        .get(\n          `${baseUrl}pmtct/anc/get-infant-by-ancno/${props.patientObj.ancNo}`,\n          { headers: { Authorization: `Bearer ${token}` } }\n        )\n        .then((response) => {\n          //setLoading(false)\n          setInfants(response.data);\n        })\n\n        .catch((error) => {\n          //console.log(error);\n        });\n    } else {\n      axios\n        .get(\n          `${baseUrl}get-infant-by-mother-person-uuid/${props.patientObj.uuid}`,\n          { headers: { Authorization: `Bearer ${token}` } }\n        )\n        .then((response) => {\n          //setLoading(false)\n          setInfants(response.data);\n        })\n\n        .catch((error) => {\n          //console.log(error);\n        });\n    }\n  };\n  const TIME_ART_INITIATION_PMTCT = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/TIME_ART_INITIATION_PMTCT`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setTimingOfArtInitiation(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const INFANT_OUTCOME_AT_18_MONTHS = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/INFANT_OUTCOME_AT_18_MONTHS`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setInfantOutcome(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const INFANT_PCR_RESULT = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/INFANT_PCR_RESULT`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setPcrResult(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const INFANT_ARV_PROPHYLAXIS_TYPE = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/INFANT_ARV_PROPHYLAXIS_TYPE`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setInfantArv(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const AGE_CTX_INITIATION = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/AGE_CTX_INITIATION`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setAgeCTX(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const TIMING_MOTHERS_ART_INITIATION = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/TIMING_MOTHERS_ART_INITIATION`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setTimeMotherArt(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const CHILD_FOLLOW_UP_VISIT_STATUS = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/CHILD_FOLLOW_UP_VISIT_STATUS`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setChildStatus(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const handleInputValueCheckweight = (e) => {\n    if (\n      e.target.name === \"bodyWeight\" &&\n      (e.target.value < 3 || e.target.value > 150)\n    ) {\n      const message =\n        \"Body weight must not be greater than 150 and less than 3\";\n      setVitalClinicalSupport({ ...vitalClinicalSupport, bodyWeight: message });\n    } else {\n      setVitalClinicalSupport({ ...vitalClinicalSupport, bodyWeight: \"\" });\n    }\n  };\n  //GET AdultRegimenLine\n  const AdultRegimenLine = () => {\n    axios\n      .get(`${baseUrl}hiv/regimen/arv/adult`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        const artRegimen = response.data.filter(\n          (x) => x.id === 1 || x.id === 2 || x.id === 14\n        );\n        setAdultRegimenLine(artRegimen);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const handleInputChangeInfantVisitRequestDto = (e) => {\n    setErrors({ ...temp, [e.target.name]: \"\" });\n    //console.log(e.target.name)\n    if (e.target.name === \"visitDate\" && e.target.value !== \"\") {\n      async function getGa() {\n        const ga = e.target.value;\n        const response = await axios.get(\n          `${baseUrl}pmtct/anc/calculate-ga3?hospitalNumber=${infantHospitalNumber}&visitDate=${ga}`,\n          {\n            headers: {\n              Authorization: `Bearer ${token}`,\n              \"Content-Type\": \"text/plain\",\n            },\n          }\n        );\n        if (response.data >= 0) {\n          infantPCRTestDto.ageAtTest = response.data;\n          setInfantVisitRequestDto({\n            ...infantVisitRequestDto,\n            [e.target.name]: e.target.value,\n          });\n        }\n      }\n      getGa();\n    }\n    setInfantVisitRequestDto({\n      ...infantVisitRequestDto,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const handleInputChangeInfantArvDto = (e) => {\n    setErrors({ ...temp, [e.target.name]: \"\" });\n    //console.log(e.target.name),\n    setInfantArvDto({ ...infantArvDto, [e.target.name]: e.target.value });\n  };\n  const handleInputChangeInfantMotherArtDto = (e) => {\n    setErrors({ ...temp, [e.target.name]: \"\" });\n    //console.log(e.target.name),\n    setInfantMotherArtDto({\n      ...infantMotherArtDto,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const handleInputChangeInfantPCRTestDto = (e) => {\n    setErrors({ ...temp, [e.target.name]: \"\" });\n    //console.log(e.target.name)infantPCRTestDto, setInfantPCRTestDto\n    setInfantPCRTestDto({\n      ...infantPCRTestDto,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  //Validations of the forms\n  const validate = () => {\n    temp.visitDate = infantVisitRequestDto.visitDate\n      ? \"\"\n      : \"This field is required\";\n    temp.bodyWeight = infantVisitRequestDto.bodyWeight\n      ? \"\"\n      : \"This field is required\";\n    setErrors({\n      ...temp,\n    });\n    return Object.values(temp).every((x) => x === \"\");\n  };\n\n  /**** Submit Button Processing  */\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (validate()) {\n      setSaving(true);\n      objValues.infantVisitRequestDto = infantVisitRequestDto;\n      objValues.infantArvDto = infantArvDto;\n      objValues.infantMotherArtDto = infantMotherArtDto;\n      objValues.infantPCRTestDto = infantPCRTestDto;\n      if (props.activeContent && props.activeContent.actionType) {\n        //Perform operation for updation action\n        axios\n          .put(\n            `${baseUrl}pmtct/anc/update-infant-visit/${props.activeContent.id}`,\n            objValues,\n            { headers: { Authorization: `Bearer ${token}` } }\n          )\n          .then((response) => {\n            setSaving(false);\n            toast.success(\"Clinic Visit save successful\", {\n              position: toast.POSITION.BOTTOM_CENTER,\n            });\n            props.setActiveContent({\n              ...props.activeContent,\n              route: \"recent-history\",\n            });\n          })\n          .catch((error) => {\n            setSaving(false);\n            if (error.response && error.response.data) {\n              let errorMessage =\n                error.response.data.apierror &&\n                error.response.data.apierror.message !== \"\"\n                  ? error.response.data.apierror.message\n                  : \"Something went wrong, please try again\";\n              toast.error(errorMessage, {\n                position: toast.POSITION.BOTTOM_CENTER,\n              });\n            } else {\n              toast.error(\"Something went wrong. Please try again...\", {\n                position: toast.POSITION.BOTTOM_CENTER,\n              });\n            }\n          });\n      } else {\n        axios\n          .post(`${baseUrl}pmtct/anc/infant-visit-consolidated`, objValues, {\n            headers: { Authorization: `Bearer ${token}` },\n          })\n          .then((response) => {\n            setSaving(false);\n            toast.success(\"Clinic Visit save successful\", {\n              position: toast.POSITION.BOTTOM_CENTER,\n            });\n            props.setActiveContent({\n              ...props.activeContent,\n              route: \"recent-history\",\n            });\n          })\n          .catch((error) => {\n            setSaving(false);\n            if (error.response && error.response.data) {\n              let errorMessage =\n                error.response.data.apierror &&\n                error.response.data.apierror.message !== \"\"\n                  ? error.response.data.apierror.message\n                  : \"Something went wrong, please try again\";\n              toast.error(errorMessage, {\n                position: toast.POSITION.BOTTOM_CENTER,\n              });\n            } else {\n              toast.error(\"Something went wrong. Please try again...\", {\n                position: toast.POSITION.BOTTOM_CENTER,\n              });\n            }\n          });\n      }\n    }\n  };\n  const handleSelecteRegimen = (e) => {\n    let regimenID = e.target.value;\n    //regimenTypeId regimenId\n    setInfantMotherArtDto({ ...infantMotherArtDto, regimenTypeId: regimenID });\n    RegimenType(regimenID);\n    //setErrors({...temp, [e.target.name]:\"\"})\n  };\n  //Get list of RegimenLine\n  const RegimenType = (id) => {\n    axios\n      .get(`${baseUrl}hiv/regimen/types/${id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(response.data);\n        setRegimenType(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  function GetInfantDetail(obj) {\n    setInfantHospitalNumber(obj.hospitalNumber);\n    const InfantVisit = () => {\n      //setLoading(true)\n      axios\n        .get(`${baseUrl}pmtct/anc/get-form-filter/${obj.hospitalNumber}`, {\n          headers: { Authorization: `Bearer ${token}` },\n        })\n        .then((response) => {\n          infantVisitRequestDto.infantHospitalNumber = obj.hospitalNumber;\n          setFormFilter(response.data);\n        })\n\n        .catch((error) => {\n          //console.log(error);\n        });\n    };\n    InfantVisit();\n  }\n\n  return (\n    <div>\n      <h2>Clinic Follow-up Visit</h2>\n      <Grid columns=\"equal\">\n        <Grid.Column>\n          <Segment>\n            <Label as=\"a\" color=\"blue\" ribbon>\n              Infant's\n            </Label>\n            <br />\n            <List celled>\n              <List.Item>\n                Given Name\n                <span className=\"float-end\">\n                  <b>Hospital Number</b>\n                </span>\n              </List.Item>\n            </List>\n            {infants.map((row) => (\n              <List celled>\n                <List.Item\n                  onClick={() => GetInfantDetail(row)}\n                  style={{ cursor: \"pointer\" }}\n                >\n                  <Label as=\"a\" color=\"blue\">\n                    {row.firstName}\n                  </Label>\n                  <Label as=\"a\" color=\"teal\" className=\"float-end\" tag>\n                    {row.hospitalNumber}\n                  </Label>\n                </List.Item>\n              </List>\n            ))}\n          </Segment>\n        </Grid.Column>\n        <Grid.Column width={12}>\n          <Segment>\n            <Label\n              as=\"a\"\n              color=\"blue\"\n              style={{ width: \"106%\", height: \"35px\" }}\n              ribbon\n            >\n              <h4 style={{ color: \"#fff\" }}>\n                Infant Clinic Visit -{\" \"}\n                {infantVisitRequestDto &&\n                infantVisitRequestDto.infantHospitalNumber\n                  ? infantVisitRequestDto.infantHospitalNumber\n                  : \" \"}\n              </h4>\n            </Label>\n            <br />\n            <br />\n            <div className=\"row\">\n              <div className=\"form-group mb-3 col-md-4\">\n                <FormGroup>\n                  <FormLabelName>\n                    Date of Visit <span style={{ color: \"red\" }}> *</span>\n                  </FormLabelName>\n                  <Input\n                    type=\"date\"\n                    name=\"visitDate\"\n                    id=\"visitDate\"\n                    value={infantVisitRequestDto.visitDate}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.25rem\",\n                    }}\n                    onChange={handleInputChangeInfantVisitRequestDto}\n                    min={props.patientObj.firstAncDate}\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                    //min={patientObj.pmtctEnrollmentRespondDto.pmtctEnrollmentDate}\n                    required\n                  />\n                  {errors.visitDate !== \"\" ? (\n                    <span className={classes.error}>{errors.visitDate}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group mb-3 col-md-6\">\n                <FormGroup>\n                  <FormLabelName>\n                    Infant Hospital Number{\" \"}\n                    <span style={{ color: \"red\" }}> *</span>\n                  </FormLabelName>\n                  <Input\n                    type=\"text\"\n                    name=\"infantHospitalNumber\"\n                    id=\"infantHospitalNumber\"\n                    value={infantVisitRequestDto.infantHospitalNumber}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.25rem\",\n                    }}\n                    onChange={handleInputChangeInfantVisitRequestDto}\n                    disabled\n                  />\n                  {errors.infantHospitalNumber !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.infantHospitalNumber}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group mb-3 col-md-4\">\n                <FormGroup>\n                  <FormLabelName>\n                    Mother ANC number <span style={{ color: \"red\" }}> *</span>\n                  </FormLabelName>\n                  <Input\n                    type=\"text\"\n                    name=\"ancNumber\"\n                    id=\"ancNumber\"\n                    value={infantVisitRequestDto.ancNumber}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.25rem\",\n                    }}\n                    onChange={handleInputChangeInfantVisitRequestDto}\n                    disabled\n                  />\n                  {errors.ancNumber !== \"\" ? (\n                    <span className={classes.error}>{errors.ancNumber}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n\n              <div className=\" mb-3 col-md-6\">\n                <FormGroup>\n                  <FormLabelName>\n                    Body Weight <span style={{ color: \"red\" }}> *</span>\n                  </FormLabelName>\n                  <InputGroup>\n                    <Input\n                      type=\"number\"\n                      name=\"bodyWeight\"\n                      id=\"bodyWeight\"\n                      onChange={handleInputChangeInfantVisitRequestDto}\n                      min=\"1\"\n                      max=\"150\"\n                      onKeyUp={handleInputValueCheckweight}\n                      value={infantVisitRequestDto.bodyWeight}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0rem\",\n                      }}\n                      disabled={disabledField}\n                    />\n                    <InputGroupText\n                      addonType=\"append\"\n                      style={{\n                        backgroundColor: \"#014D88\",\n                        color: \"#fff\",\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0rem\",\n                      }}\n                    >\n                      kg\n                    </InputGroupText>\n                  </InputGroup>\n                  {errors.bodyWeight !== \"\" ? (\n                    <span className={classes.error}>{errors.bodyWeight}</span>\n                  ) : (\n                    \"\"\n                  )}\n                  {vitalClinicalSupport.weight !== \"\" ? (\n                    <span className={classes.error}>\n                      {vitalClinicalSupport.weight}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                  {infantVisitRequestDto.bodyWeight !== \"\" &&\n                  infantVisitRequestDto.bodyWeight <= 0 ? (\n                    <span className={classes.error}>Invalid Body Weight </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group mb-3 col-md-6\">\n                <FormGroup>\n                  <FormLabelName>Breast Feeding ?</FormLabelName>\n                  <Input\n                    type=\"select\"\n                    name=\"breastFeeding\"\n                    id=\"breastFeeding\"\n                    value={infantVisitRequestDto.breastFeeding}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.25rem\",\n                    }}\n                    onChange={handleInputChangeInfantVisitRequestDto}\n                    disabled={disabledField}\n                  >\n                    <option value=\"\">Select </option>\n                    <option value=\"YES\">YES </option>\n                    <option value=\"NO\">NO </option>\n                  </Input>\n                  {errors.breastFeeding !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.breastFeeding}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group mb-3 col-md-6\">\n                <FormGroup>\n                  <FormLabelName>CTX </FormLabelName>\n                  <Input\n                    type=\"select\"\n                    name=\"ctxStatus\"\n                    id=\"ctxStatus\"\n                    value={infantVisitRequestDto.ctxStatus}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.25rem\",\n                    }}\n                    onChange={handleInputChangeInfantVisitRequestDto}\n                    disabled={disabledField}\n                  >\n                    <option value=\"\">Select </option>\n                    <option value=\"YES\">YES </option>\n                    <option value=\"NO\">NO </option>\n                  </Input>\n                  {errors.ctxStatus !== \"\" ? (\n                    <span className={classes.error}>{errors.ctxStatus}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group mb-3 col-md-6\">\n                <FormGroup>\n                  <FormLabelName>Visit Status</FormLabelName>\n                  <Input\n                    type=\"select\"\n                    name=\"visitStatus\"\n                    id=\"visitStatus\"\n                    value={infantVisitRequestDto.visitStatus}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.25rem\",\n                    }}\n                    onChange={handleInputChangeInfantVisitRequestDto}\n                    disabled={disabledField}\n                  >\n                    <option value=\"\">Select </option>\n                    {childStatus.map((value, index) => (\n                      <option key={index} value={value.code}>\n                        {value.display}\n                      </option>\n                    ))}\n                  </Input>\n                  {errors.visitStatus !== \"\" ? (\n                    <span className={classes.error}>{errors.visitStatus}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              {formFilter && formFilter.outCome === true && (\n                <div className=\"form-group mb-3 col-md-6\">\n                  <FormGroup>\n                    <FormLabelName>Infant outcome at 18 months</FormLabelName>\n                    <Input\n                      type=\"select\"\n                      name=\"infantOutcomeAt18Months\"\n                      id=\"infantOutcomeAt18Months\"\n                      value={infantVisitRequestDto.infantOutcomeAt18Months}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.25rem\",\n                      }}\n                      onChange={handleInputChangeInfantVisitRequestDto}\n                      disabled={disabledField}\n                    >\n                      <option value=\"\">Select </option>\n                      {infantOutcome.map((value, index) => (\n                        <option key={index} value={value.code}>\n                          {value.display}\n                        </option>\n                      ))}\n                    </Input>\n                    {errors.infantOutcomeAt18Months !== \"\" ? (\n                      <span className={classes.error}>\n                        {errors.infantOutcomeAt18Months}\n                      </span>\n                    ) : (\n                      \"\"\n                    )}\n                  </FormGroup>\n                </div>\n              )}\n            </div>\n\n            <br />\n            {formFilter && formFilter.motherArt === false && (\n              <>\n                <Label\n                  as=\"a\"\n                  color=\"teal\"\n                  style={{ width: \"106%\", height: \"35px\" }}\n                  ribbon\n                >\n                  <h4 style={{ color: \"#fff\" }}> Mother's ART </h4>\n                </Label>\n                <br />\n                <br />\n                <div className=\"row\">\n                  <div className=\" mb-3 col-md-4\">\n                    <FormGroup>\n                      <FormLabelName>\n                        Timing of mother's ART Initiation{\" \"}\n                      </FormLabelName>\n                      <Input\n                        type=\"select\"\n                        name=\"motherArtInitiationTime\"\n                        id=\"motherArtInitiationTime\"\n                        value={infantMotherArtDto.motherArtInitiationTime}\n                        onChange={handleInputChangeInfantMotherArtDto}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                        disabled={disabledField}\n                      >\n                        <option value=\"select\">Select </option>\n                        {timeMotherArt.map((value, index) => (\n                          <option key={index} value={value.code}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </Input>\n                      {errors.motherArtInitiationTime !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.motherArtInitiationTime}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <FormLabelName>Original Regimen Line </FormLabelName>\n                      <Input\n                        type=\"select\"\n                        name=\"regimenTypeId\"\n                        id=\"regimenTypeId\"\n                        value={infantMotherArtDto.regimenTypeId}\n                        onChange={handleSelecteRegimen}\n                        required\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                        disabled={disabledField}\n                      >\n                        <option value=\"\"> Select</option>\n\n                        {adultRegimenLine.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.description}\n                          </option>\n                        ))}\n                      </Input>\n                      {errors.regimenTypeId !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.regimenTypeId}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <FormLabelName>Original Regimen </FormLabelName>\n                      <Input\n                        type=\"select\"\n                        name=\"regimenId\"\n                        id=\"regimenId\"\n                        value={infantMotherArtDto.regimenId}\n                        onChange={handleInputChangeInfantMotherArtDto}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                        disabled={disabledField}\n                      >\n                        <option value=\"\"> Select</option>\n                        {regimenType.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.description}\n                          </option>\n                        ))}\n                      </Input>\n                      {errors.regimenId !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.regimenId}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                </div>\n              </>\n            )}\n            <br />\n            {formFilter && formFilter.infantArv === false && (\n              <>\n                <Label\n                  as=\"a\"\n                  color=\"blue\"\n                  style={{ width: \"106%\", height: \"35px\" }}\n                  ribbon\n                >\n                  <h4 style={{ color: \"#fff\" }}> Infant ARV & CTX</h4>\n                </Label>\n                <br />\n                <br />\n                {/* LAB Screening Form */}\n                <div className=\"row\">\n                  <div className=\" mb-3 col-md-4\">\n                    <FormGroup>\n                      <FormLabelName>Age at CTX Initiation </FormLabelName>\n                      <Input\n                        type=\"select\"\n                        name=\"ageAtCtx\"\n                        id=\"ageAtCtx\"\n                        value={infantArvDto.ageAtCtx}\n                        onChange={handleInputChangeInfantArvDto}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                        disabled={disabledField}\n                      >\n                        <option value=\"select\">Select </option>\n                        {agectx.map((value, index) => (\n                          <option key={index} value={value.code}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </Input>\n                      {errors.ageAtCtx !== \"\" ? (\n                        <span className={classes.error}>{errors.ageAtCtx}</span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\" mb-3 col-md-4\">\n                    <FormGroup>\n                      <FormLabelName>Infant ARV Type </FormLabelName>\n                      <Input\n                        type=\"select\"\n                        name=\"infantArvType\"\n                        id=\"infantArvType\"\n                        value={infantArvDto.infantArvType}\n                        onChange={handleInputChangeInfantArvDto}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                        disabled={disabledField}\n                      >\n                        <option value=\"select\">Select </option>\n                        {infantArv.map((value) => (\n                          <option key={value.id} value={value.id}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </Input>\n                      {errors.infantArvType !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.infantArvType}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\" mb-3 col-md-4\">\n                    <FormGroup>\n                      <FormLabelName> Timing of ARV Prophylaxis </FormLabelName>\n                      <Input\n                        type=\"select\"\n                        name=\"arvDeliveryPoint\"\n                        id=\"arvDeliveryPoint\"\n                        value={infantArvDto.arvDeliveryPoint}\n                        onChange={handleInputChangeInfantArvDto}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                        disabled={disabledField}\n                      >\n                        <option value=\"select\">Select </option>\n                        <option value=\"Within 72 hour\">Within 72 hour </option>\n                        <option value=\"After 72 hour \">After 72 hour </option>\n                      </Input>\n                      {errors.arvDeliveryPoint !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.arvDeliveryPoint}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\" mb-3 col-md-4\">\n                    <FormGroup>\n                      <FormLabelName> Place of Delivery </FormLabelName>\n                      <Input\n                        type=\"select\"\n                        name=\"infantArvTime\"\n                        id=\"infantArvTime\"\n                        value={infantArvDto.infantArvTime}\n                        onChange={handleInputChangeInfantArvDto}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                        disabled={disabledField}\n                      >\n                        <option value=\"select\">Select </option>\n                        <option value=\"Facility Delivery\">\n                          Facility Delivery\n                        </option>\n                        <option value=\"Delivered outside facility\">\n                          Delivered outside facility{\" \"}\n                        </option>\n                      </Input>\n                      {errors.infantArvTime !== \"\" ? (\n                        <span className={classes.error}>\n                          {errors.infantArvTime}\n                        </span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                </div>\n              </>\n            )}\n            <br />\n            <Label\n              as=\"a\"\n              color=\"black\"\n              style={{ width: \"106%\", height: \"35px\" }}\n              ribbon\n            >\n              <h4 style={{ color: \"#fff\" }}> Infant PCR </h4>\n            </Label>\n            <br />\n            <br />\n            {/* LAB Screening Form */}\n            <div className=\"row\">\n              <div className=\" mb-3 col-md-6\">\n                <FormGroup>\n                  <FormLabelName>Age at Test(months)</FormLabelName>\n                  <Input\n                    type=\"number\"\n                    name=\"ageAtTest\"\n                    id=\"ageAtTest\"\n                    value={infantPCRTestDto.ageAtTest}\n                    onChange={handleInputChangeInfantPCRTestDto}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.25rem\",\n                    }}\n                    disabled\n                  />\n                  {errors.ageAtTest !== \"\" ? (\n                    <span className={classes.error}>{errors.ageAtTest}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\" mb-3 col-md-6\">\n                <FormGroup>\n                  <FormLabelName> Sample Type</FormLabelName>\n                  <Input\n                    type=\"select\"\n                    name=\"testType\"\n                    id=\"testType\"\n                    value={infantPCRTestDto.testType}\n                    onChange={handleInputChangeInfantPCRTestDto}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.25rem\",\n                    }}\n                    disabled={disabledField}\n                  >\n                    <option value=\"\">Select </option>\n                    <option value=\"First PCR\">First PCR</option>\n                    <option value=\"Second PCR\">Second PCR</option>\n                    <option value=\"Confirmatory PCR\">Confirmatory PCR</option>\n                    <option value=\"First Rapid Antibody\">\n                      First Rapid Antibody{\" \"}\n                    </option>\n                    <option value=\"Second Rapid Antibody \">\n                      Second Rapid Antibody{\" \"}\n                    </option>\n                  </Input>\n                  {errors.testType !== \"\" ? (\n                    <span className={classes.error}>{errors.testType}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\" mb-3 col-md-6\">\n                <FormGroup>\n                  <FormLabelName>Date sample collected</FormLabelName>\n                  <Input\n                    type=\"date\"\n                    name=\"dateSampleCollected\"\n                    id=\"dateSampleCollected\"\n                    value={infantPCRTestDto.dateSampleCollected}\n                    onChange={handleInputChangeInfantPCRTestDto}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.25rem\",\n                    }}\n                    min={\n                      props.patientObj &&\n                      props.patientObj.pmtctEnrollmentRespondDto\n                        ? props.patientObj.pmtctEnrollmentRespondDto\n                            .pmtctEnrollmentDate\n                        : \"\"\n                    }\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                    disabled={disabledField}\n                  />\n                  {errors.dateSampleCollected !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.dateSampleCollected}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\" mb-3 col-md-6\">\n                <FormGroup>\n                  <FormLabelName>Date Result Received</FormLabelName>\n                  <Input\n                    type=\"date\"\n                    name=\"dateResultReceivedAtFacility\"\n                    id=\"dateResultReceivedAtFacility\"\n                    value={infantPCRTestDto.dateResultReceivedAtFacility}\n                    onChange={handleInputChangeInfantPCRTestDto}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.25rem\",\n                    }}\n                    min={infantPCRTestDto.dateSampleCollected}\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                    disabled={disabledField}\n                  />\n                  {errors.dateResultReceivedAtFacility !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.dateResultReceivedAtFacility}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\" mb-3 col-md-6\">\n                <FormGroup>\n                  <FormLabelName>\n                    Date Result Received By Caregiver\n                  </FormLabelName>\n                  <Input\n                    type=\"date\"\n                    name=\"dateResultReceivedByCaregiver\"\n                    id=\"dateResultReceivedByCaregiver\"\n                    value={infantPCRTestDto.dateResultReceivedByCaregiver}\n                    onChange={handleInputChangeInfantPCRTestDto}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.25rem\",\n                    }}\n                    min={infantPCRTestDto.dateSampleCollected}\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                    disabled={disabledField}\n                  />\n                  {errors.dateResultReceivedByCaregiver !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.dateResultReceivedByCaregiver}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\" mb-3 col-md-6\">\n                <FormGroup>\n                  <FormLabelName>Date Sample Sent</FormLabelName>\n                  <Input\n                    type=\"date\"\n                    name=\"dateSampleSent\"\n                    id=\"dateSampleSent\"\n                    value={infantPCRTestDto.dateSampleSent}\n                    onChange={handleInputChangeInfantPCRTestDto}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.25rem\",\n                    }}\n                    min={infantPCRTestDto.dateSampleCollected}\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                    disabled={disabledField}\n                  />\n                  {errors.dateSampleSent !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.dateSampleSent}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\" mb-3 col-md-6\">\n                <FormGroup>\n                  <FormLabelName>Result *</FormLabelName>\n                  <Input\n                    type=\"select\"\n                    name=\"results\"\n                    id=\"results\"\n                    value={infantPCRTestDto.results}\n                    onChange={handleInputChangeInfantPCRTestDto}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.25rem\",\n                    }}\n                    disabled={disabledField}\n                  >\n                    <option value=\"select\">Select </option>\n                    {pcrResult.map((value) => (\n                      <option key={value.id} value={value.id}>\n                        {value.display}\n                      </option>\n                    ))}\n                  </Input>\n                  {errors.results !== \"\" ? (\n                    <span className={classes.error}>{errors.results}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n            </div>\n            <br />\n            <br />\n            {infantVisitRequestDto &&\n            infantVisitRequestDto.infantHospitalNumber ? (\n              <>\n                {props.activeContent && props.activeContent.actionType ? (\n                  <>\n                    <MatButton\n                      type=\"submit\"\n                      variant=\"contained\"\n                      color=\"primary\"\n                      hidden={disabledField}\n                      className={classes.button}\n                      startIcon={<SaveIcon />}\n                      style={{ backgroundColor: \"#014d88\" }}\n                      onClick={handleSubmit}\n                      disabled={saving}\n                    >\n                      {!saving ? (\n                        <span style={{ textTransform: \"capitalize\" }}>\n                          Update\n                        </span>\n                      ) : (\n                        <span style={{ textTransform: \"capitalize\" }}>\n                          Updating...\n                        </span>\n                      )}\n                    </MatButton>\n                  </>\n                ) : (\n                  <>\n                    <MatButton\n                      type=\"submit\"\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className={classes.button}\n                      startIcon={<SaveIcon />}\n                      style={{ backgroundColor: \"#014d88\" }}\n                      onClick={handleSubmit}\n                      disabled={saving}\n                    >\n                      {!saving ? (\n                        <span style={{ textTransform: \"capitalize\" }}>\n                          Save\n                        </span>\n                      ) : (\n                        <span style={{ textTransform: \"capitalize\" }}>\n                          Saving...\n                        </span>\n                      )}\n                    </MatButton>\n                  </>\n                )}\n              </>\n            ) : (\n              \"\"\n            )}\n          </Segment>\n        </Grid.Column>\n      </Grid>\n      {/* <AddVitals toggle={AddVitalToggle} showModal={addVitalModal} /> */}\n    </div>\n  );\n};\n\nexport default ClinicVisit;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\Elicitation\\AddIndexContact.js",["435","436","437","438","439","440","441","442","443","444"],"import React, {useCallback, useEffect, useState} from \"react\";\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\nimport * as moment from 'moment';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card, CardContent} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport {token, url as baseUrl } from \"../../../../api\";\nimport { toast} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\n// import {token, url as baseUrl } from \"../../../api\";\nimport 'react-phone-input-2/lib/style.css'\nimport {Button} from 'semantic-ui-react'\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport PhoneInput from 'react-phone-input-2'\nimport 'react-phone-input-2/lib/style.css'\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        },\n        \"& .card-title\":{\n            color:'#fff',\n            fontWeight:'bold'\n        },\n        \"& .form-control\":{\n            borderRadius:'0.25rem',\n            height:'41px'\n        },\n        \"& .card-header:first-child\": {\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\n        },\n        \"& .dropdown-toggle::after\": {\n            display: \" block !important\"\n        },\n        \"& select\":{\n            \"-webkit-appearance\": \"listbox !important\"\n        },\n        \"& p\":{\n            color:'red'\n        },\n        \"& label\":{\n            fontSize:'14px',\n            color:'#014d88',\n            fontWeight:'bold'\n        }\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    }\n}));\n\n\nconst AddIndexContact = (props) => {\n    const classes = useStyles();\n    const [saving, setSaving] = useState(false);\n    const [errors, setErrors] = useState({});\n    const [sexs, setSexs] = useState([])\n    const [notificationContact, setNotificationContact] = useState([])\n    const [ageDisabled, setAgeDisabled] = useState(true);\n    const [indexTesting, setIndexTesting]= useState([]);\n    const [consent, setConsent]= useState([]);\n    const [hivTestDate, setHivTestDate] = useState(\"\");\n   \n    const [objValuesIndex, setObjValuesIndex]= useState( {\n        htsClientId: null,\n        indexNotificationServicesElicitation: {},\n        personId: null\n      })\n   \n    const [objValues, setObjValues]= useState(\n        {\n            firstName: \"\",\n            middleName: \"\",\n            lastName:\"\",\n            dob:\"\",\n            phoneNumber:\"\",\n            altPhoneNumber: \"\",\n            sex: \"\",\n            htsClientId:props  && props.patientObj ? props.patientObj.id : \"\",\n            physicalHurt: \"\",\n            threatenToHurt: \"\",\n            address: \"\", \n            hangOutSpots: \"\",\n            relativeToIndexClient: \"\",\n            currentlyLiveWithPartner: \"\", \n            partnerTestedPositive: \"\",\n            sexuallyUncomfortable: \"\", \n            notificationMethod : \"\",\n            datePartnerCameForTesting: \"\",\n        }\n    )\n           \n    useEffect(() => { \n        Sex();\n        NotificationContact();\n        IndexTesting();\n        Consent();\n        if(props.patientObj){\n\n            if(props.patientObj.dateVisit && props.patientObj.dateVisit!=='' ){\n                setHivTestDate(props.patientObj.dateVisit)\n            }else{\n                setHivTestDate(\"\")\n            }\n        }\n    }, [props.patientObj]);\n\n    //Get list of Genders from \n    const Sex =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/SEX`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            //console.log(response.data);\n            setSexs(response.data);\n\n        })\n        .catch((error) => {\n        //console.log(error);\n        });        \n    }\n    //Get list of IndexTesting\n    const IndexTesting =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/INDEX_TESTING`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setIndexTesting(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    ///CONSENT\tYes\t\ten\tCONSENT\n    const Consent =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/CONSENT`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setConsent(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    const NotificationContact =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/NOTIFICATION_CONTACT`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            //console.log(response.data);\n            setNotificationContact(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });        \n    }\n    const handleItemClick =(page, completedMenu)=>{\n        props.handleItemClick(page)\n        if(props.completed.includes(completedMenu)) {\n\n        }else{\n            props.setCompleted([...props.completed, completedMenu])\n        }\n        \n    }\n    const handleItemClickPage =(page)=>{\n        props.handleIClickPage(page)\n    }\n    const handleInputChange = e => { \n        //setErrors({...temp, [e.target.name]:\"\"})\n        if(e.target.name==='firstName' && e.target.value!==''){\n            const name = alphabetOnly(e.target.value)\n            setObjValues ({...objValues,  [e.target.name]: name});\n        }\n        if(e.target.name==='lastName' && e.target.value!==''){\n            const name = alphabetOnly(e.target.value)\n            setObjValues ({...objValues,  [e.target.name]: name});\n        }\n        if(e.target.name==='middleName' && e.target.value!==''){\n            const name = alphabetOnly(e.target.value)\n            setObjValues ({...objValues,  [e.target.name]: name});\n        } \n        // if((e.target.name !=='maritalStatusId' && e.target.value!=='5' )){//logic for marital status\n        //     setHideNumChild(true)\n        // }else{\n        //     setHideNumChild(false)\n        // }         \n        setObjValues ({...objValues,  [e.target.name]: e.target.value});            \n    }\n    //Date of Birth and Age handle \n    const handleDobChange = (e) => {\n        if (e.target.value) {\n            const today = new Date();\n            const birthDate = new Date(e.target.value);\n            let age_now = today.getFullYear() - birthDate.getFullYear();\n            const m = today.getMonth() - birthDate.getMonth();\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n                age_now--;\n            }\n            objValues.age=age_now\n            \n            //setBasicInfo({...basicInfo, age: age_now});        \n        } else {\n            setObjValues({...objValues, age:  \"\"});\n        }\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\n   \n        setObjValues({...objValues, dob: e.target.value});\n        \n    }\n    const handleDateOfBirthChange = (e) => {\n        if (e.target.value == \"Actual\") {\n            objValues.isDateOfBirthEstimated=false\n            setAgeDisabled(true);\n        } else if (e.target.value == \"Estimated\") {\n            objValues.isDateOfBirthEstimated=true\n            setAgeDisabled(false);\n        }\n    }\n    const handleAgeChange = (e) => {\n        if (!ageDisabled && e.target.value) {\n            const currentDate = new Date();\n            currentDate.setDate(15);\n            currentDate.setMonth(5);\n            const estDob = moment(currentDate.toISOString());\n            const dobNew = estDob.add((e.target.value * -1), 'years');\n            setObjValues({...objValues, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\n            objValues.dob =moment(dobNew).format(\"YYYY-MM-DD\")\n\n        }\n        setObjValues({...objValues, age: e.target.value});\n    }\n    //End of Date of Birth and Age handling \n    const checkPhoneNumberBasic=(e, inputName)=>{\n        const limit = 10;\n        setObjValues({...objValues,  [inputName]: e.slice(0, limit)});     \n    }\n    const alphabetOnly=(value)=>{\n        const result = value.replace(/[^a-z]/gi, '');\n        return result\n    }\n    const handleSubmit =(e)=>{\n        e.preventDefault();     \n        objValues.isDateOfBirthEstimated=objValues.isDateOfBirthEstimated==true ? 1 : 0\n            axios.post(`${baseUrl}index-elicitation`,objValues,\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\n            \n            )\n            .then(response => {\n                setSaving(false);\n                toast.success(\"Record save successful\",  {position: toast.POSITION.BOTTOM_CENTER});\n                handleItemClickPage('list')\n\n            })\n            .catch(error => {\n                setSaving(false);\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage,  {position: toast.POSITION.BOTTOM_CENTER});\n                }\n                else{\n                    toast.error(\"Something went wrong. Please try again...\",  {position: toast.POSITION.BOTTOM_CENTER});\n                }\n            });\n            \n    }\n\n    return (\n        <>\n            <Card className={classes.root}>\n                <CardBody>\n                \n                <h2 style={{color:'#000'}}>Index Notification Services - Elicitation \n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className=\" float-end  mr-2 mt-2\"\n                    onClick={()=>handleItemClickPage('list')}\n                    //startIcon={<FaUserPlus size=\"10\"/>}\n                >\n                    <span style={{ textTransform: \"capitalize\" }}> Back To Client Index List</span>\n                </Button>\n                </h2>\n                <br/><br/>    \n                    <form >\n                        <div className=\"row\">\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">First Name</Label>\n                                <Input\n                                    type=\"text\"\n                                    name=\"firstName\"\n                                    id=\"firstName\"\n                                    value={objValues.firstName}\n                                    onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                   \n                                />\n                                \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Middle Name</Label>\n                                <Input\n                                    type=\"text\"\n                                    name=\"middleName\"\n                                    id=\"middleName\"\n                                    value={objValues.middleName}\n                                    onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                    \n                                />\n                                \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Last Name</Label>\n                                <Input\n                                    type=\"text\"\n                                    name=\"lastName\"\n                                    id=\"lastName\"\n                                    value={objValues.lastName}\n                                    onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                   \n                                />\n                                \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-2 col-md-2\">\n                                <FormGroup>\n                                    <Label>Date Of Birth</Label>\n                                    <div className=\"radio\">\n                                        <label>\n                                            <input\n                                                type=\"radio\"\n                                                value=\"Actual\"\n                                                name=\"dateOfBirth\"\n                                                defaultChecked\n                                                \n                                                onChange={(e) => handleDateOfBirthChange(e)}\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                            /> Actual\n                                        </label>\n                                    </div>\n                                    <div className=\"radio\">\n                                        <label>\n                                            <input\n                                                type=\"radio\"\n                                                value=\"Estimated\"\n                                                name=\"dateOfBirth\"\n                                                \n                                                onChange={(e) => handleDateOfBirthChange(e)}\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                            /> Estimated\n                                        </label>\n                                    </div>\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-3\">\n                                <FormGroup>\n                                    <Label>Date</Label>\n                                    <input\n                                        className=\"form-control\"\n                                        type=\"date\"\n                                        name=\"dob\"\n                                        id=\"dob\"\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                        value={objValues.dob}\n                                        onChange={handleDobChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    />\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-3\">\n                                <FormGroup>\n                                    <Label>Age</Label>\n                                    <input\n                                        className=\"form-control\"\n                                        type=\"number\"\n                                        name=\"age\"\n                                        id=\"age\"\n                                        value={objValues.age}\n                                        disabled={ageDisabled}\n                                        onChange={handleAgeChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    />\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Phone Number</Label>\n                                \n                                    <PhoneInput\n                                        containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\n                                        inputStyle={{width:'100%',borderRadius:'0px'}}\n                                        country={'ng'}\n                                        placeholder=\"(234)7099999999\"\n                                        minLength={10}\n                                        name=\"phoneNumber\"\n                                        id=\"phoneNumber\"\n                                        masks={{ng: '...-...-....', at: '(....) ...-....'}}\n                                        value={objValues.phoneNumber}\n                                        onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\n                                        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\n                                    />\n                                    {errors.phoneNumber !==\"\" ? (\n                                        <span className={classes.error}>{errors.phoneNumber}</span>\n                                        ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            \n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Alternative Phone Number</Label>\n                                <PhoneInput\n                                        containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\n                                        inputStyle={{width:'100%',borderRadius:'0px'}}\n                                        country={'ng'}\n                                        placeholder=\"(234)7099999999\"\n                                        minLength={10}\n                                        name=\"altPhoneNumber\"\n                                        id=\"altPhoneNumber\"\n                                        masks={{ng: '...-...-....', at: '(....) ...-....'}}\n                                        value={objValues.altPhoneNumber}\n                                        onChange={(e)=>{checkPhoneNumberBasic(e,'altPhoneNumber')}}\n                                        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\n                                    />\n                                \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Sex *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"sex\"\n                                        id=\"sex\"\n                                        value={objValues.sex}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        {sexs.map((value) => (\n                                            <option key={value.id} value={value.id}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>                           \n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Address</Label>\n                                <Input\n                                    type=\"text\"\n                                    name=\"address\"\n                                    id=\"address\"\n                                    value={objValues.address}\n                                    onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}                                   \n                                />                                \n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Hang-out spots</Label>\n                                <Input\n                                    type=\"text\"\n                                    name=\"hangOutSpots\"\n                                    id=\"hangOutSpots\"\n                                    value={objValues.hangOutSpots}\n                                    onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}                                   \n                                />                                \n                                </FormGroup>\n                            </div>\n\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Relationship to Index Client *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"relativeToIndexClient\"\n                                        id=\"relativeToIndexClient\"\n                                        value={objValues.relativeToIndexClient}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        {indexTesting.map((value) => (\n                                            <option key={value.id} value={value.id}>\n                                                {value.display}\n                                            </option>\n                                            ))}\n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Do you currently live with this partner? *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"currentlyLiveWithPartner\"\n                                        id=\"currentlyLiveWithPartner\"\n                                        value={objValues.currentlyLiveWithPartner}\n                                        onChange={handleInputChange}        \n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value={\"true\"}>Yes</option>\n                                        <option value={\"false\"}>No</option>\n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>As far as you know, as this partner ever tested positive for HIV *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"partnerTestedPositive\"\n                                        id=\"partnerTestedPositive\"\n                                        value={objValues.partnerTestedPositive}\n                                        onChange={handleInputChange} \n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        {consent.map((value) => (\n                                            <option key={value.id} value={value.id}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Has this partner ever hit, kick, slapped or otherwise physical hurt you? *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"physicalHurt\"\n                                        id=\"physicalHurt\"\n                                        value={objValues.physicalHurt}\n                                        onChange={handleInputChange} \n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                         <option value={\"\"}></option>\n                                        {consent.map((value) => (\n                                            <option key={value.id} value={value.id}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Has this partner ever threaten to hurt you? *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"threatenToHurt\"\n                                        id=\"threatenToHurt\"\n                                        value={objValues.threatenToHurt}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        {consent.map((value) => (\n                                            <option key={value.id} value={value.id}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                           \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Has this partner ever threaten force you to do something sexually that made you uncomfortable ?  *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"sexuallyUncomfortable\"\n                                        id=\"sexuallyUncomfortable\"\n                                        value={objValues.sexuallyUncomfortable}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                         <option value={\"\"}></option>\n                                        {consent.map((value) => (\n                                            <option key={value.id} value={value.id}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                    </select>\n                                    \n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Notification Method selected*</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"notificationMethod\"\n                                        id=\"notificationMethod\"\n                                        value={objValues.notificationMethod}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        {notificationContact.map((value) => (\n                                            <option key={value.id} value={value.id}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">If contract by which date will partner come for testing?</Label>\n                                <Input\n                                    type=\"date\"\n                                    name=\"datePartnerCameForTesting\"\n                                    id=\"datePartnerCameForTesting\"\n                                    value={objValues.datePartnerCameForTesting}\n                                    onChange={handleInputChange}\n                                    min={hivTestDate}\n                                    //max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                    \n                                />\n                                {errors.datePartnerComeForTesting !==\"\" ? (\n                                    <span className={classes.error}>{errors.datePartnerComeForTesting}</span>\n                                ) : \"\" }\n                                </FormGroup>\n                            </div>\n                           \n                            {saving ? <Spinner /> : \"\"}\n                            <br />\n                            <div className=\"row\">\n                            <div className=\"form-group mb-3 col-md-6\">\n                           \n                            <Button content='Save' icon='save' labelPosition='left' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\n                            </div>\n                            </div>\n                        </div>\n                    </form>\n                </CardBody>\n            </Card>                                 \n        </>\n    );\n};\n\nexport default AddIndexContact","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\Elicitation\\IndexContactList.js",["445","446","447","448","449","450","451","452"],"import React, { useEffect, useState } from 'react'\nimport MaterialTable from 'material-table';\nimport axios from \"axios\";\nimport { url as baseUrl, token } from \"./../../../../api\";\n//import { token as token } from \"./../../../api\";\nimport { forwardRef } from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport { makeStyles } from '@material-ui/core/styles'\n//import { useHistory } from \"react-router-dom\";\nimport { FaUserPlus } from \"react-icons/fa\";\nimport \"@reach/menu-button/styles.css\";\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\nimport moment from \"moment\";\n\nconst tableIcons = {\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        }\n    },\n    input: {\n        display: 'none'\n    },\n    error: {\n        color: \"#f85032\",\n        fontSize: \"11px\",\n    },\n    success: {\n        color: \"#4BB543 \",\n        fontSize: \"11px\",\n    }, \n}))\n\n\n\nconst PatientnHistory = (props) => {\n\n    const [indexClientList, setIndexClientList] = useState([])\n    //const [patientObj, setpatientObj] = useState([])\n    const patientId = props.patientObj && props.patientObj.id ? props.patientObj.id: null\n    //const [key, setKey] = useState('home');\n    //console.log(props)\n    useEffect(() => {\n        patients()\n      }, []);\n    ///GET LIST OF Patients\n    async function patients() {\n        axios\n            .get(`${baseUrl}hts/${props.patientObj.id}/index-elicitation`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                console.log(response.data)\n                setIndexClientList(response.data);\n            })\n            .catch((error) => {    \n            });        \n    }\n    const handleItemClickPage =(page)=>{\n        props.handleIClickPage(page)\n    }\n    const handleIEditIndex =(page, activePage)=> {\n        console.log(page)\n        console.log(activePage)\n        //props.setActivePage({...props.activePage, activePage:\"activePage\", activeObject:row, actionType:actionType})\n        //props.handleIClickPage(page)\n    }\n\n    const calculate_age = dob => {\n        var today = new Date();\n        var dateParts = dob.split(\"-\");\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\n        var age_now = today.getFullYear() - birthDate.getFullYear();\n        var m = today.getMonth() - birthDate.getMonth();\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n                    age_now--;\n                }\n            if (age_now === 0) {\n                    return m + \" month(s)\";\n                }\n                return age_now + \" year(s)\";\n      };\n\n\n  return (\n    <div>     \n        <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className=\" float-end  mr-2 mt-2\"\n            onClick={()=>handleItemClickPage('add')}\n            //startIcon={<FaUserPlus size=\"10\"/>}\n        >\n            <span style={{ textTransform: \"capitalize\" }}>New Index Client </span>\n        </Button>\n        <br/><br/><br/><br/>\n            <MaterialTable\n            icons={tableIcons}\n              title=\"List of index client \"\n              columns={[\n              { title: \"Name\", field: \"name\" },\n              { title: \"Age\", field: \"age\" },\n              { title: \"Phone Number\", field: \"phone\" },  \n              {title: \"Adress\",field: \"address\",},   \n              { title: \"Actions\", field: \"actions\", filtering: false }, \n              ]}\n              data={ indexClientList.map((row) => ({\n                name: row.firstName + \" \" + row.lastName,\n                age:calculate_age(moment(row.dob).format(\"DD-MM-YYYY\")),\n                phone:row.phoneNumber, \n                address:row.address,  \n                actions:(\n                        <>\n                        {/* <Menu.Menu position='right'  >\n                            <Menu.Item >\n                                <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\n                                <Dropdown item text='Action'>\n\n                                <Dropdown.Menu style={{ marginTop:\"10px\", }}>\n                                \n                                <Dropdown.Item  \n                                //onClick={()=>handleIEditIndex(row, 'update')}\n                                >\n                                    <Icon name='edit' />Edit</Dropdown.Item>\n                                <Dropdown.Item  \n                                //onClick={()=>LoadDeletePage(row, 'delete')}\n                                > <Icon name='trash' /> Delete</Dropdown.Item>\n                                </Dropdown.Menu>\n                            </Dropdown>\n                                </Button>\n                            </Menu.Item>\n                        </Menu.Menu> */}\n                        </>\n                        )\n                    }))}\n            \n                        options={{\n                          headerStyle: {\n                              //backgroundColor: \"#9F9FA5\",\n                              color: \"#000\",\n                          },\n                          searchFieldStyle: {\n                              width : '200%',\n                              margingLeft: '250px',\n                          },\n                          filtering: false,\n                          exportButton: false,\n                          searchFieldAlignment: 'left',\n                          pageSizeOptions:[10,20,100],\n                          pageSize:10,\n                          debounceInterval: 400\n                      }}\n            />\n\n    </div>\n  );\n}\n\nexport default PatientnHistory;\n\n\n",{"ruleId":"453","severity":1,"message":"454","line":4,"column":41,"nodeType":"455","messageId":"456","endLine":4,"endColumn":47},{"ruleId":"453","severity":1,"message":"457","line":4,"column":8,"nodeType":"455","messageId":"456","endLine":4,"endColumn":25},{"ruleId":"453","severity":1,"message":"458","line":6,"column":10,"nodeType":"455","messageId":"456","endLine":6,"endColumn":14},{"ruleId":"453","severity":1,"message":"459","line":28,"column":10,"nodeType":"455","messageId":"456","endLine":28,"endColumn":15},{"ruleId":"453","severity":1,"message":"460","line":125,"column":18,"nodeType":"455","messageId":"456","endLine":125,"endColumn":27},{"ruleId":"453","severity":1,"message":"461","line":127,"column":23,"nodeType":"455","messageId":"456","endLine":127,"endColumn":37},{"ruleId":"453","severity":1,"message":"462","line":128,"column":10,"nodeType":"455","messageId":"456","endLine":128,"endColumn":17},{"ruleId":"453","severity":1,"message":"463","line":167,"column":10,"nodeType":"455","messageId":"456","endLine":167,"endColumn":25},{"ruleId":"464","severity":1,"message":"465","line":218,"column":6,"nodeType":"466","endLine":218,"endColumn":59,"suggestions":"467"},{"ruleId":"468","severity":1,"message":"469","line":445,"column":36,"nodeType":"470","messageId":"471","endLine":445,"endColumn":62,"fix":"472"},{"ruleId":"468","severity":1,"message":"473","line":446,"column":36,"nodeType":"470","messageId":"471","endLine":446,"endColumn":69,"fix":"474"},{"ruleId":"468","severity":1,"message":"475","line":447,"column":36,"nodeType":"470","messageId":"471","endLine":447,"endColumn":59,"fix":"476"},{"ruleId":"468","severity":1,"message":"475","line":458,"column":36,"nodeType":"470","messageId":"471","endLine":458,"endColumn":59,"fix":"477"},{"ruleId":"468","severity":1,"message":"473","line":459,"column":36,"nodeType":"470","messageId":"471","endLine":459,"endColumn":69,"fix":"478"},{"ruleId":"453","severity":1,"message":"460","line":102,"column":18,"nodeType":"455","messageId":"456","endLine":102,"endColumn":27},{"ruleId":"453","severity":1,"message":"461","line":104,"column":23,"nodeType":"455","messageId":"456","endLine":104,"endColumn":37},{"ruleId":"453","severity":1,"message":"462","line":105,"column":10,"nodeType":"455","messageId":"456","endLine":105,"endColumn":17},{"ruleId":"453","severity":1,"message":"463","line":136,"column":10,"nodeType":"455","messageId":"456","endLine":136,"endColumn":25},{"ruleId":"464","severity":1,"message":"479","line":168,"column":6,"nodeType":"466","endLine":168,"endColumn":41,"suggestions":"480"},{"ruleId":"464","severity":1,"message":"481","line":172,"column":6,"nodeType":"466","endLine":172,"endColumn":8,"suggestions":"482"},{"ruleId":"483","severity":1,"message":"484","line":290,"column":47,"nodeType":"485","messageId":"486","endLine":290,"endColumn":49},{"ruleId":"468","severity":1,"message":"469","line":387,"column":36,"nodeType":"470","messageId":"471","endLine":387,"endColumn":62,"fix":"487"},{"ruleId":"468","severity":1,"message":"473","line":388,"column":36,"nodeType":"470","messageId":"471","endLine":388,"endColumn":69,"fix":"488"},{"ruleId":"468","severity":1,"message":"475","line":389,"column":36,"nodeType":"470","messageId":"471","endLine":389,"endColumn":59,"fix":"489"},{"ruleId":"468","severity":1,"message":"475","line":400,"column":36,"nodeType":"470","messageId":"471","endLine":400,"endColumn":59,"fix":"490"},{"ruleId":"468","severity":1,"message":"473","line":401,"column":36,"nodeType":"470","messageId":"471","endLine":401,"endColumn":69,"fix":"491"},{"ruleId":"453","severity":1,"message":"492","line":418,"column":15,"nodeType":"455","messageId":"456","endLine":418,"endColumn":23},{"ruleId":"493","severity":1,"message":"494","line":24,"column":26,"nodeType":"495","messageId":"496","endLine":24,"endColumn":40,"fix":"497"},{"ruleId":"453","severity":1,"message":"498","line":64,"column":10,"nodeType":"455","messageId":"456","endLine":64,"endColumn":20},{"ruleId":"464","severity":1,"message":"499","line":127,"column":6,"nodeType":"466","endLine":127,"endColumn":8,"suggestions":"500"},{"ruleId":"453","severity":1,"message":"501","line":31,"column":10,"nodeType":"455","messageId":"456","endLine":31,"endColumn":24},{"ruleId":"453","severity":1,"message":"502","line":159,"column":10,"nodeType":"455","messageId":"456","endLine":159,"endColumn":36},{"ruleId":"453","severity":1,"message":"503","line":176,"column":10,"nodeType":"455","messageId":"456","endLine":176,"endColumn":22},{"ruleId":"453","severity":1,"message":"504","line":197,"column":18,"nodeType":"455","messageId":"456","endLine":197,"endColumn":30},{"ruleId":"453","severity":1,"message":"505","line":209,"column":10,"nodeType":"455","messageId":"456","endLine":209,"endColumn":20},{"ruleId":"453","severity":1,"message":"463","line":211,"column":10,"nodeType":"455","messageId":"456","endLine":211,"endColumn":25},{"ruleId":"464","severity":1,"message":"506","line":241,"column":6,"nodeType":"466","endLine":241,"endColumn":36,"suggestions":"507"},{"ruleId":"483","severity":1,"message":"484","line":361,"column":24,"nodeType":"485","messageId":"486","endLine":361,"endColumn":26},{"ruleId":"483","severity":1,"message":"484","line":363,"column":31,"nodeType":"485","messageId":"486","endLine":363,"endColumn":33},{"ruleId":"483","severity":1,"message":"484","line":476,"column":47,"nodeType":"485","messageId":"486","endLine":476,"endColumn":49},{"ruleId":"483","severity":1,"message":"484","line":608,"column":47,"nodeType":"485","messageId":"486","endLine":608,"endColumn":49},{"ruleId":"453","severity":1,"message":"508","line":620,"column":15,"nodeType":"455","messageId":"456","endLine":620,"endColumn":29},{"ruleId":"509","severity":1,"message":"510","line":623,"column":28,"nodeType":"511","messageId":"512","endLine":623,"endColumn":30},{"ruleId":"483","severity":1,"message":"484","line":680,"column":39,"nodeType":"485","messageId":"486","endLine":680,"endColumn":41},{"ruleId":"483","severity":1,"message":"484","line":796,"column":39,"nodeType":"485","messageId":"486","endLine":796,"endColumn":41},{"ruleId":"468","severity":1,"message":"469","line":1004,"column":36,"nodeType":"470","messageId":"471","endLine":1004,"endColumn":62,"fix":"513"},{"ruleId":"468","severity":1,"message":"473","line":1005,"column":36,"nodeType":"470","messageId":"471","endLine":1005,"endColumn":69,"fix":"514"},{"ruleId":"468","severity":1,"message":"475","line":1006,"column":36,"nodeType":"470","messageId":"471","endLine":1006,"endColumn":59,"fix":"515"},{"ruleId":"468","severity":1,"message":"475","line":1017,"column":36,"nodeType":"470","messageId":"471","endLine":1017,"endColumn":59,"fix":"516"},{"ruleId":"468","severity":1,"message":"473","line":1018,"column":36,"nodeType":"470","messageId":"471","endLine":1018,"endColumn":69,"fix":"517"},{"ruleId":"493","severity":1,"message":"494","line":5,"column":10,"nodeType":"495","messageId":"496","endLine":5,"endColumn":24,"fix":"518"},{"ruleId":"483","severity":1,"message":"484","line":89,"column":25,"nodeType":"485","messageId":"486","endLine":89,"endColumn":27},{"ruleId":"493","severity":1,"message":"494","line":4,"column":10,"nodeType":"495","messageId":"496","endLine":4,"endColumn":24,"fix":"519"},{"ruleId":"493","severity":1,"message":"494","line":4,"column":10,"nodeType":"495","messageId":"496","endLine":4,"endColumn":24,"fix":"520"},{"ruleId":"453","severity":1,"message":"521","line":3,"column":10,"nodeType":"455","messageId":"456","endLine":3,"endColumn":18},{"ruleId":"453","severity":1,"message":"522","line":14,"column":9,"nodeType":"455","messageId":"456","endLine":14,"endColumn":16},{"ruleId":"453","severity":1,"message":"523","line":18,"column":22,"nodeType":"455","messageId":"456","endLine":18,"endColumn":35},{"ruleId":"453","severity":1,"message":"524","line":19,"column":10,"nodeType":"455","messageId":"456","endLine":19,"endColumn":20},{"ruleId":"453","severity":1,"message":"525","line":22,"column":7,"nodeType":"455","messageId":"456","endLine":22,"endColumn":19},{"ruleId":"453","severity":1,"message":"526","line":23,"column":7,"nodeType":"455","messageId":"456","endLine":23,"endColumn":30},{"ruleId":"509","severity":1,"message":"527","line":25,"column":38,"nodeType":"511","messageId":"512","endLine":25,"endColumn":40},{"ruleId":"464","severity":1,"message":"528","line":33,"column":7,"nodeType":"529","endLine":33,"endColumn":77},{"ruleId":"509","severity":1,"message":"527","line":38,"column":38,"nodeType":"511","messageId":"512","endLine":38,"endColumn":40},{"ruleId":"453","severity":1,"message":"530","line":85,"column":9,"nodeType":"455","messageId":"456","endLine":85,"endColumn":21},{"ruleId":"453","severity":1,"message":"531","line":61,"column":9,"nodeType":"455","messageId":"456","endLine":61,"endColumn":20},{"ruleId":"453","severity":1,"message":"523","line":62,"column":22,"nodeType":"455","messageId":"456","endLine":62,"endColumn":35},{"ruleId":"453","severity":1,"message":"532","line":63,"column":10,"nodeType":"455","messageId":"456","endLine":63,"endColumn":32},{"ruleId":"453","severity":1,"message":"533","line":63,"column":34,"nodeType":"455","messageId":"456","endLine":63,"endColumn":59},{"ruleId":"453","severity":1,"message":"534","line":67,"column":10,"nodeType":"455","messageId":"456","endLine":67,"endColumn":17},{"ruleId":"453","severity":1,"message":"535","line":69,"column":9,"nodeType":"455","messageId":"456","endLine":69,"endColumn":15},{"ruleId":"453","severity":1,"message":"536","line":71,"column":9,"nodeType":"455","messageId":"456","endLine":71,"endColumn":29},{"ruleId":"453","severity":1,"message":"537","line":72,"column":10,"nodeType":"455","messageId":"456","endLine":72,"endColumn":19},{"ruleId":"453","severity":1,"message":"538","line":74,"column":9,"nodeType":"455","messageId":"456","endLine":74,"endColumn":18},{"ruleId":"464","severity":1,"message":"539","line":79,"column":6,"nodeType":"466","endLine":79,"endColumn":24,"suggestions":"540"},{"ruleId":"453","severity":1,"message":"541","line":2,"column":10,"nodeType":"455","messageId":"456","endLine":2,"endColumn":18},{"ruleId":"453","severity":1,"message":"542","line":10,"column":3,"nodeType":"455","messageId":"456","endLine":10,"endColumn":17},{"ruleId":"453","severity":1,"message":"543","line":12,"column":19,"nodeType":"455","messageId":"456","endLine":12,"endColumn":32},{"ruleId":"453","severity":1,"message":"544","line":16,"column":8,"nodeType":"455","messageId":"456","endLine":16,"endColumn":18},{"ruleId":"453","severity":1,"message":"545","line":23,"column":10,"nodeType":"455","messageId":"456","endLine":23,"endColumn":17},{"ruleId":"453","severity":1,"message":"546","line":94,"column":7,"nodeType":"455","messageId":"456","endLine":94,"endColumn":14},{"ruleId":"453","severity":1,"message":"547","line":102,"column":10,"nodeType":"455","messageId":"456","endLine":102,"endColumn":20},{"ruleId":"453","severity":1,"message":"548","line":103,"column":10,"nodeType":"455","messageId":"456","endLine":103,"endColumn":25},{"ruleId":"464","severity":1,"message":"549","line":191,"column":6,"nodeType":"466","endLine":191,"endColumn":8,"suggestions":"550"},{"ruleId":"464","severity":1,"message":"551","line":197,"column":6,"nodeType":"466","endLine":197,"endColumn":14,"suggestions":"552"},{"ruleId":"453","severity":1,"message":"553","line":232,"column":15,"nodeType":"455","messageId":"456","endLine":232,"endColumn":18},{"ruleId":"509","severity":1,"message":"554","line":232,"column":46,"nodeType":"511","messageId":"555","endLine":232,"endColumn":48},{"ruleId":"483","severity":1,"message":"484","line":320,"column":47,"nodeType":"485","messageId":"486","endLine":320,"endColumn":49},{"ruleId":"453","severity":1,"message":"556","line":1,"column":26,"nodeType":"455","messageId":"456","endLine":1,"endColumn":35},{"ruleId":"453","severity":1,"message":"546","line":84,"column":9,"nodeType":"455","messageId":"456","endLine":84,"endColumn":16},{"ruleId":"453","severity":1,"message":"557","line":110,"column":11,"nodeType":"455","messageId":"456","endLine":110,"endColumn":19},{"ruleId":"483","severity":1,"message":"484","line":117,"column":49,"nodeType":"485","messageId":"486","endLine":117,"endColumn":51},{"ruleId":"453","severity":1,"message":"544","line":13,"column":8,"nodeType":"455","messageId":"456","endLine":13,"endColumn":18},{"ruleId":"453","severity":1,"message":"558","line":18,"column":10,"nodeType":"455","messageId":"456","endLine":18,"endColumn":20},{"ruleId":"464","severity":1,"message":"559","line":146,"column":6,"nodeType":"466","endLine":146,"endColumn":48,"suggestions":"560"},{"ruleId":"483","severity":1,"message":"484","line":335,"column":47,"nodeType":"485","messageId":"486","endLine":335,"endColumn":49},{"ruleId":"493","severity":1,"message":"494","line":4,"column":27,"nodeType":"495","messageId":"496","endLine":4,"endColumn":41,"fix":"561"},{"ruleId":"464","severity":1,"message":"562","line":61,"column":10,"nodeType":"466","endLine":61,"endColumn":31,"suggestions":"563"},{"ruleId":"564","replacedBy":"565"},{"ruleId":"566","replacedBy":"567"},{"ruleId":"493","severity":1,"message":"494","line":6,"column":26,"nodeType":"495","messageId":"496","endLine":6,"endColumn":40,"fix":"568"},{"ruleId":"464","severity":1,"message":"569","line":20,"column":6,"nodeType":"466","endLine":20,"endColumn":58,"suggestions":"570"},{"ruleId":"453","severity":1,"message":"558","line":18,"column":10,"nodeType":"455","messageId":"456","endLine":18,"endColumn":20},{"ruleId":"453","severity":1,"message":"571","line":22,"column":10,"nodeType":"455","messageId":"456","endLine":22,"endColumn":20},{"ruleId":"453","severity":1,"message":"572","line":98,"column":29,"nodeType":"455","messageId":"456","endLine":98,"endColumn":49},{"ruleId":"464","severity":1,"message":"573","line":130,"column":6,"nodeType":"466","endLine":130,"endColumn":51,"suggestions":"574"},{"ruleId":"483","severity":1,"message":"484","line":188,"column":47,"nodeType":"485","messageId":"486","endLine":188,"endColumn":49},{"ruleId":"493","severity":1,"message":"494","line":4,"column":26,"nodeType":"495","messageId":"496","endLine":4,"endColumn":40,"fix":"575"},{"ruleId":"464","severity":1,"message":"576","line":73,"column":6,"nodeType":"466","endLine":73,"endColumn":8,"suggestions":"577"},{"ruleId":"453","severity":1,"message":"578","line":82,"column":11,"nodeType":"455","messageId":"456","endLine":82,"endColumn":21},{"ruleId":"468","severity":1,"message":"579","line":142,"column":39,"nodeType":"470","messageId":"471","endLine":142,"endColumn":63,"fix":"580"},{"ruleId":"483","severity":1,"message":"484","line":160,"column":49,"nodeType":"485","messageId":"486","endLine":160,"endColumn":51},{"ruleId":"453","severity":1,"message":"581","line":1,"column":16,"nodeType":"455","messageId":"456","endLine":1,"endColumn":27},{"ruleId":"453","severity":1,"message":"582","line":2,"column":10,"nodeType":"455","messageId":"456","endLine":2,"endColumn":16},{"ruleId":"453","severity":1,"message":"583","line":5,"column":25,"nodeType":"455","messageId":"456","endLine":5,"endColumn":30},{"ruleId":"453","severity":1,"message":"458","line":8,"column":9,"nodeType":"455","messageId":"456","endLine":8,"endColumn":13},{"ruleId":"453","severity":1,"message":"584","line":11,"column":22,"nodeType":"455","messageId":"456","endLine":11,"endColumn":28},{"ruleId":"453","severity":1,"message":"522","line":37,"column":11,"nodeType":"455","messageId":"456","endLine":37,"endColumn":18},{"ruleId":"453","severity":1,"message":"546","line":38,"column":11,"nodeType":"455","messageId":"456","endLine":38,"endColumn":18},{"ruleId":"453","severity":1,"message":"585","line":40,"column":11,"nodeType":"455","messageId":"456","endLine":40,"endColumn":24},{"ruleId":"453","severity":1,"message":"586","line":41,"column":12,"nodeType":"455","messageId":"456","endLine":41,"endColumn":18},{"ruleId":"453","severity":1,"message":"460","line":41,"column":20,"nodeType":"455","messageId":"456","endLine":41,"endColumn":29},{"ruleId":"453","severity":1,"message":"587","line":44,"column":12,"nodeType":"455","messageId":"456","endLine":44,"endColumn":25},{"ruleId":"464","severity":1,"message":"588","line":40,"column":6,"nodeType":"466","endLine":40,"endColumn":27,"suggestions":"589"},{"ruleId":"483","severity":1,"message":"484","line":439,"column":47,"nodeType":"485","messageId":"486","endLine":439,"endColumn":49},{"ruleId":"483","severity":1,"message":"484","line":652,"column":51,"nodeType":"485","messageId":"486","endLine":652,"endColumn":53},{"ruleId":"493","severity":1,"message":"494","line":5,"column":10,"nodeType":"495","messageId":"496","endLine":5,"endColumn":24,"fix":"590"},{"ruleId":"464","severity":1,"message":"562","line":70,"column":6,"nodeType":"466","endLine":70,"endColumn":27,"suggestions":"591"},{"ruleId":"453","severity":1,"message":"592","line":5,"column":27,"nodeType":"455","messageId":"456","endLine":5,"endColumn":35},{"ruleId":"453","severity":1,"message":"593","line":7,"column":10,"nodeType":"455","messageId":"456","endLine":7,"endColumn":13},{"ruleId":"453","severity":1,"message":"594","line":8,"column":10,"nodeType":"455","messageId":"456","endLine":8,"endColumn":25},{"ruleId":"464","severity":1,"message":"595","line":14,"column":6,"nodeType":"466","endLine":14,"endColumn":8,"suggestions":"596"},{"ruleId":"597","severity":1,"message":"598","line":62,"column":19,"nodeType":"599","messageId":"486","endLine":62,"endColumn":31},{"ruleId":"597","severity":1,"message":"600","line":63,"column":19,"nodeType":"599","messageId":"486","endLine":63,"endColumn":25},{"ruleId":"597","severity":1,"message":"598","line":93,"column":19,"nodeType":"599","messageId":"486","endLine":93,"endColumn":31},{"ruleId":"597","severity":1,"message":"600","line":94,"column":19,"nodeType":"599","messageId":"486","endLine":94,"endColumn":25},{"ruleId":"597","severity":1,"message":"598","line":110,"column":17,"nodeType":"599","messageId":"486","endLine":110,"endColumn":29},{"ruleId":"597","severity":1,"message":"600","line":111,"column":17,"nodeType":"599","messageId":"486","endLine":111,"endColumn":23},{"ruleId":"453","severity":1,"message":"601","line":4,"column":38,"nodeType":"455","messageId":"456","endLine":4,"endColumn":45},{"ruleId":"453","severity":1,"message":"602","line":4,"column":52,"nodeType":"455","messageId":"456","endLine":4,"endColumn":56},{"ruleId":"453","severity":1,"message":"603","line":21,"column":18,"nodeType":"455","messageId":"456","endLine":21,"endColumn":29},{"ruleId":"453","severity":1,"message":"546","line":97,"column":11,"nodeType":"455","messageId":"456","endLine":97,"endColumn":18},{"ruleId":"453","severity":1,"message":"586","line":103,"column":12,"nodeType":"455","messageId":"456","endLine":103,"endColumn":18},{"ruleId":"483","severity":1,"message":"484","line":270,"column":49,"nodeType":"485","messageId":"486","endLine":270,"endColumn":51},{"ruleId":"453","severity":1,"message":"581","line":1,"column":16,"nodeType":"455","messageId":"456","endLine":1,"endColumn":27},{"ruleId":"453","severity":1,"message":"604","line":3,"column":46,"nodeType":"455","messageId":"456","endLine":3,"endColumn":51},{"ruleId":"453","severity":1,"message":"602","line":3,"column":52,"nodeType":"455","messageId":"456","endLine":3,"endColumn":56},{"ruleId":"453","severity":1,"message":"605","line":95,"column":23,"nodeType":"455","messageId":"456","endLine":95,"endColumn":35},{"ruleId":"464","severity":1,"message":"606","line":138,"column":8,"nodeType":"466","endLine":138,"endColumn":49,"suggestions":"607"},{"ruleId":"453","severity":1,"message":"581","line":1,"column":16,"nodeType":"455","messageId":"456","endLine":1,"endColumn":27},{"ruleId":"453","severity":1,"message":"602","line":3,"column":52,"nodeType":"455","messageId":"456","endLine":3,"endColumn":56},{"ruleId":"453","severity":1,"message":"608","line":6,"column":15,"nodeType":"455","messageId":"456","endLine":6,"endColumn":26},{"ruleId":"453","severity":1,"message":"605","line":101,"column":23,"nodeType":"455","messageId":"456","endLine":101,"endColumn":35},{"ruleId":"468","severity":1,"message":"609","line":144,"column":39,"nodeType":"470","messageId":"471","endLine":144,"endColumn":78,"fix":"610"},{"ruleId":"468","severity":1,"message":"609","line":148,"column":39,"nodeType":"470","messageId":"471","endLine":148,"endColumn":75,"fix":"611"},{"ruleId":"468","severity":1,"message":"609","line":153,"column":39,"nodeType":"470","messageId":"471","endLine":153,"endColumn":77,"fix":"612"},{"ruleId":"468","severity":1,"message":"609","line":157,"column":39,"nodeType":"470","messageId":"471","endLine":157,"endColumn":76,"fix":"613"},{"ruleId":"468","severity":1,"message":"609","line":161,"column":39,"nodeType":"470","messageId":"471","endLine":161,"endColumn":76,"fix":"614"},{"ruleId":"468","severity":1,"message":"609","line":165,"column":39,"nodeType":"470","messageId":"471","endLine":165,"endColumn":69,"fix":"615"},{"ruleId":"464","severity":1,"message":"616","line":167,"column":7,"nodeType":"466","endLine":167,"endColumn":94,"suggestions":"617"},{"ruleId":"453","severity":1,"message":"557","line":203,"column":11,"nodeType":"455","messageId":"456","endLine":203,"endColumn":19},{"ruleId":"618","severity":1,"message":"619","line":205,"column":13,"nodeType":"620","messageId":"621","endLine":205,"endColumn":144},{"ruleId":"618","severity":1,"message":"619","line":206,"column":13,"nodeType":"620","messageId":"621","endLine":206,"endColumn":148},{"ruleId":"618","severity":1,"message":"619","line":207,"column":13,"nodeType":"620","messageId":"621","endLine":207,"endColumn":123},{"ruleId":"483","severity":1,"message":"484","line":209,"column":49,"nodeType":"485","messageId":"486","endLine":209,"endColumn":51},{"ruleId":"453","severity":1,"message":"581","line":1,"column":16,"nodeType":"455","messageId":"456","endLine":1,"endColumn":27},{"ruleId":"453","severity":1,"message":"556","line":1,"column":29,"nodeType":"455","messageId":"456","endLine":1,"endColumn":38},{"ruleId":"453","severity":1,"message":"622","line":2,"column":8,"nodeType":"455","messageId":"456","endLine":2,"endColumn":13},{"ruleId":"453","severity":1,"message":"582","line":4,"column":8,"nodeType":"455","messageId":"456","endLine":4,"endColumn":14},{"ruleId":"453","severity":1,"message":"602","line":5,"column":52,"nodeType":"455","messageId":"456","endLine":5,"endColumn":56},{"ruleId":"453","severity":1,"message":"623","line":6,"column":13,"nodeType":"455","messageId":"456","endLine":6,"endColumn":19},{"ruleId":"453","severity":1,"message":"608","line":8,"column":15,"nodeType":"455","messageId":"456","endLine":8,"endColumn":26},{"ruleId":"453","severity":1,"message":"460","line":95,"column":20,"nodeType":"455","messageId":"456","endLine":95,"endColumn":29},{"ruleId":"453","severity":1,"message":"624","line":96,"column":12,"nodeType":"455","messageId":"456","endLine":96,"endColumn":18},{"ruleId":"453","severity":1,"message":"625","line":96,"column":20,"nodeType":"455","messageId":"456","endLine":96,"endColumn":29},{"ruleId":"453","severity":1,"message":"581","line":1,"column":16,"nodeType":"455","messageId":"456","endLine":1,"endColumn":27},{"ruleId":"453","severity":1,"message":"602","line":3,"column":52,"nodeType":"455","messageId":"456","endLine":3,"endColumn":56},{"ruleId":"453","severity":1,"message":"608","line":6,"column":15,"nodeType":"455","messageId":"456","endLine":6,"endColumn":26},{"ruleId":"453","severity":1,"message":"626","line":133,"column":11,"nodeType":"455","messageId":"456","endLine":133,"endColumn":28},{"ruleId":"483","severity":1,"message":"484","line":342,"column":49,"nodeType":"485","messageId":"486","endLine":342,"endColumn":51},{"ruleId":"453","severity":1,"message":"627","line":4,"column":8,"nodeType":"455","messageId":"456","endLine":4,"endColumn":17},{"ruleId":"453","severity":1,"message":"601","line":5,"column":38,"nodeType":"455","messageId":"456","endLine":5,"endColumn":45},{"ruleId":"453","severity":1,"message":"602","line":5,"column":52,"nodeType":"455","messageId":"456","endLine":5,"endColumn":56},{"ruleId":"453","severity":1,"message":"608","line":8,"column":15,"nodeType":"455","messageId":"456","endLine":8,"endColumn":26},{"ruleId":"453","severity":1,"message":"628","line":9,"column":8,"nodeType":"455","messageId":"456","endLine":9,"endColumn":16},{"ruleId":"453","severity":1,"message":"629","line":12,"column":9,"nodeType":"455","messageId":"456","endLine":12,"endColumn":23},{"ruleId":"453","severity":1,"message":"458","line":15,"column":9,"nodeType":"455","messageId":"456","endLine":15,"endColumn":13},{"ruleId":"453","severity":1,"message":"630","line":15,"column":27,"nodeType":"455","messageId":"456","endLine":15,"endColumn":38},{"ruleId":"453","severity":1,"message":"631","line":23,"column":8,"nodeType":"455","messageId":"456","endLine":23,"endColumn":18},{"ruleId":"453","severity":1,"message":"459","line":25,"column":11,"nodeType":"455","messageId":"456","endLine":25,"endColumn":16},{"ruleId":"453","severity":1,"message":"546","line":103,"column":11,"nodeType":"455","messageId":"456","endLine":103,"endColumn":18},{"ruleId":"453","severity":1,"message":"586","line":105,"column":12,"nodeType":"455","messageId":"456","endLine":105,"endColumn":18},{"ruleId":"453","severity":1,"message":"632","line":106,"column":12,"nodeType":"455","messageId":"456","endLine":106,"endColumn":24},{"ruleId":"453","severity":1,"message":"633","line":106,"column":26,"nodeType":"455","messageId":"456","endLine":106,"endColumn":41},{"ruleId":"453","severity":1,"message":"634","line":110,"column":12,"nodeType":"455","messageId":"456","endLine":110,"endColumn":18},{"ruleId":"453","severity":1,"message":"635","line":115,"column":12,"nodeType":"455","messageId":"456","endLine":115,"endColumn":27},{"ruleId":"453","severity":1,"message":"636","line":116,"column":12,"nodeType":"455","messageId":"456","endLine":116,"endColumn":28},{"ruleId":"483","severity":1,"message":"484","line":283,"column":49,"nodeType":"485","messageId":"486","endLine":283,"endColumn":51},{"ruleId":"483","severity":1,"message":"484","line":523,"column":67,"nodeType":"485","messageId":"486","endLine":523,"endColumn":69},{"ruleId":"453","severity":1,"message":"581","line":1,"column":16,"nodeType":"455","messageId":"456","endLine":1,"endColumn":27},{"ruleId":"453","severity":1,"message":"604","line":3,"column":46,"nodeType":"455","messageId":"456","endLine":3,"endColumn":51},{"ruleId":"453","severity":1,"message":"602","line":3,"column":52,"nodeType":"455","messageId":"456","endLine":3,"endColumn":56},{"ruleId":"453","severity":1,"message":"608","line":5,"column":15,"nodeType":"455","messageId":"456","endLine":5,"endColumn":26},{"ruleId":"453","severity":1,"message":"603","line":15,"column":18,"nodeType":"455","messageId":"456","endLine":15,"endColumn":29},{"ruleId":"453","severity":1,"message":"605","line":107,"column":23,"nodeType":"455","messageId":"456","endLine":107,"endColumn":35},{"ruleId":"464","severity":1,"message":"637","line":184,"column":8,"nodeType":"466","endLine":184,"endColumn":26,"suggestions":"638"},{"ruleId":"453","severity":1,"message":"557","line":248,"column":12,"nodeType":"455","messageId":"456","endLine":248,"endColumn":20},{"ruleId":"618","severity":1,"message":"619","line":251,"column":12,"nodeType":"620","messageId":"621","endLine":251,"endColumn":194},{"ruleId":"618","severity":1,"message":"619","line":265,"column":13,"nodeType":"620","messageId":"621","endLine":265,"endColumn":177},{"ruleId":"618","severity":1,"message":"619","line":266,"column":13,"nodeType":"620","messageId":"621","endLine":266,"endColumn":182},{"ruleId":"618","severity":1,"message":"619","line":267,"column":13,"nodeType":"620","messageId":"621","endLine":267,"endColumn":194},{"ruleId":"618","severity":1,"message":"619","line":268,"column":13,"nodeType":"620","messageId":"621","endLine":268,"endColumn":198},{"ruleId":"618","severity":1,"message":"619","line":269,"column":13,"nodeType":"620","messageId":"621","endLine":269,"endColumn":202},{"ruleId":"618","severity":1,"message":"619","line":271,"column":13,"nodeType":"620","messageId":"621","endLine":271,"endColumn":161},{"ruleId":"618","severity":1,"message":"619","line":272,"column":13,"nodeType":"620","messageId":"621","endLine":272,"endColumn":167},{"ruleId":"618","severity":1,"message":"619","line":273,"column":13,"nodeType":"620","messageId":"621","endLine":273,"endColumn":189},{"ruleId":"618","severity":1,"message":"619","line":274,"column":13,"nodeType":"620","messageId":"621","endLine":274,"endColumn":205},{"ruleId":"618","severity":1,"message":"619","line":275,"column":13,"nodeType":"620","messageId":"621","endLine":275,"endColumn":155},{"ruleId":"618","severity":1,"message":"619","line":277,"column":13,"nodeType":"620","messageId":"621","endLine":277,"endColumn":147},{"ruleId":"618","severity":1,"message":"619","line":278,"column":13,"nodeType":"620","messageId":"621","endLine":278,"endColumn":147},{"ruleId":"618","severity":1,"message":"619","line":279,"column":13,"nodeType":"620","messageId":"621","endLine":279,"endColumn":189},{"ruleId":"618","severity":1,"message":"619","line":280,"column":13,"nodeType":"620","messageId":"621","endLine":280,"endColumn":185},{"ruleId":"618","severity":1,"message":"619","line":283,"column":13,"nodeType":"620","messageId":"621","endLine":283,"endColumn":141},{"ruleId":"618","severity":1,"message":"619","line":285,"column":13,"nodeType":"620","messageId":"621","endLine":285,"endColumn":153},{"ruleId":"618","severity":1,"message":"619","line":286,"column":13,"nodeType":"620","messageId":"621","endLine":286,"endColumn":131},{"ruleId":"618","severity":1,"message":"619","line":287,"column":13,"nodeType":"620","messageId":"621","endLine":287,"endColumn":145},{"ruleId":"618","severity":1,"message":"619","line":288,"column":13,"nodeType":"620","messageId":"621","endLine":288,"endColumn":175},{"ruleId":"618","severity":1,"message":"619","line":289,"column":13,"nodeType":"620","messageId":"621","endLine":289,"endColumn":149},{"ruleId":"618","severity":1,"message":"619","line":292,"column":13,"nodeType":"620","messageId":"621","endLine":292,"endColumn":186},{"ruleId":"618","severity":1,"message":"619","line":293,"column":13,"nodeType":"620","messageId":"621","endLine":293,"endColumn":166},{"ruleId":"618","severity":1,"message":"619","line":294,"column":13,"nodeType":"620","messageId":"621","endLine":294,"endColumn":167},{"ruleId":"618","severity":1,"message":"619","line":295,"column":13,"nodeType":"620","messageId":"621","endLine":295,"endColumn":194},{"ruleId":"618","severity":1,"message":"619","line":296,"column":13,"nodeType":"620","messageId":"621","endLine":296,"endColumn":160},{"ruleId":"483","severity":1,"message":"484","line":299,"column":49,"nodeType":"485","messageId":"486","endLine":299,"endColumn":51},{"ruleId":"453","severity":1,"message":"639","line":3,"column":20,"nodeType":"455","messageId":"456","endLine":3,"endColumn":24},{"ruleId":"453","severity":1,"message":"640","line":6,"column":10,"nodeType":"455","messageId":"456","endLine":6,"endColumn":20},{"ruleId":"453","severity":1,"message":"458","line":7,"column":10,"nodeType":"455","messageId":"456","endLine":7,"endColumn":14},{"ruleId":"453","severity":1,"message":"603","line":9,"column":18,"nodeType":"455","messageId":"456","endLine":9,"endColumn":29},{"ruleId":"453","severity":1,"message":"641","line":19,"column":11,"nodeType":"455","messageId":"456","endLine":19,"endColumn":26},{"ruleId":"453","severity":1,"message":"642","line":6,"column":3,"nodeType":"455","messageId":"456","endLine":6,"endColumn":7},{"ruleId":"453","severity":1,"message":"643","line":7,"column":3,"nodeType":"455","messageId":"456","endLine":7,"endColumn":7},{"ruleId":"453","severity":1,"message":"582","line":8,"column":3,"nodeType":"455","messageId":"456","endLine":8,"endColumn":9},{"ruleId":"453","severity":1,"message":"639","line":9,"column":3,"nodeType":"455","messageId":"456","endLine":9,"endColumn":7},{"ruleId":"453","severity":1,"message":"644","line":10,"column":3,"nodeType":"455","messageId":"456","endLine":10,"endColumn":7},{"ruleId":"464","severity":1,"message":"645","line":141,"column":6,"nodeType":"466","endLine":141,"endColumn":27,"suggestions":"646"},{"ruleId":"468","severity":1,"message":"647","line":242,"column":36,"nodeType":"470","messageId":"471","endLine":242,"endColumn":52,"fix":"648"},{"ruleId":"468","severity":1,"message":"649","line":248,"column":36,"nodeType":"470","messageId":"471","endLine":248,"endColumn":52,"fix":"650"},{"ruleId":"468","severity":1,"message":"651","line":249,"column":36,"nodeType":"470","messageId":"471","endLine":249,"endColumn":53,"fix":"652"},{"ruleId":"468","severity":1,"message":"653","line":257,"column":36,"nodeType":"470","messageId":"471","endLine":257,"endColumn":54,"fix":"654"},{"ruleId":"483","severity":1,"message":"484","line":296,"column":47,"nodeType":"485","messageId":"486","endLine":296,"endColumn":49},{"ruleId":"453","severity":1,"message":"578","line":63,"column":7,"nodeType":"455","messageId":"456","endLine":63,"endColumn":17},{"ruleId":"453","severity":1,"message":"655","line":76,"column":10,"nodeType":"455","messageId":"456","endLine":76,"endColumn":31},{"ruleId":"464","severity":1,"message":"656","line":155,"column":6,"nodeType":"466","endLine":155,"endColumn":51,"suggestions":"657"},{"ruleId":"453","severity":1,"message":"581","line":1,"column":16,"nodeType":"455","messageId":"456","endLine":1,"endColumn":27},{"ruleId":"453","severity":1,"message":"602","line":2,"column":52,"nodeType":"455","messageId":"456","endLine":2,"endColumn":56},{"ruleId":"453","severity":1,"message":"608","line":5,"column":15,"nodeType":"455","messageId":"456","endLine":5,"endColumn":26},{"ruleId":"453","severity":1,"message":"625","line":94,"column":20,"nodeType":"455","messageId":"456","endLine":94,"endColumn":29},{"ruleId":"453","severity":1,"message":"658","line":102,"column":12,"nodeType":"455","messageId":"456","endLine":102,"endColumn":26},{"ruleId":"453","severity":1,"message":"659","line":102,"column":28,"nodeType":"455","messageId":"456","endLine":102,"endColumn":45},{"ruleId":"453","severity":1,"message":"641","line":200,"column":11,"nodeType":"455","messageId":"456","endLine":200,"endColumn":26},{"ruleId":"483","severity":1,"message":"484","line":255,"column":28,"nodeType":"485","messageId":"486","endLine":255,"endColumn":30},{"ruleId":"483","severity":1,"message":"484","line":258,"column":35,"nodeType":"485","messageId":"486","endLine":258,"endColumn":37},{"ruleId":"483","severity":1,"message":"484","line":287,"column":74,"nodeType":"485","messageId":"486","endLine":287,"endColumn":76},{"ruleId":"453","severity":1,"message":"640","line":27,"column":10,"nodeType":"455","messageId":"456","endLine":27,"endColumn":20},{"ruleId":"453","severity":1,"message":"521","line":29,"column":10,"nodeType":"455","messageId":"456","endLine":29,"endColumn":18},{"ruleId":"453","severity":1,"message":"660","line":29,"column":27,"nodeType":"455","messageId":"456","endLine":29,"endColumn":31},{"ruleId":"453","severity":1,"message":"642","line":29,"column":33,"nodeType":"455","messageId":"456","endLine":29,"endColumn":37},{"ruleId":"453","severity":1,"message":"661","line":52,"column":7,"nodeType":"455","messageId":"456","endLine":52,"endColumn":16},{"ruleId":"453","severity":1,"message":"662","line":101,"column":11,"nodeType":"455","messageId":"456","endLine":101,"endColumn":20},{"ruleId":"464","severity":1,"message":"663","line":106,"column":10,"nodeType":"466","endLine":106,"endColumn":12,"suggestions":"664"},{"ruleId":"453","severity":1,"message":"665","line":123,"column":11,"nodeType":"455","messageId":"456","endLine":123,"endColumn":27},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'ActiveANCPatients' is defined but never used.","'Link' is defined but never used.","'Modal' is defined but never used.","'setSaving' is assigned a value but never used.","'setAgeDisabled' is assigned a value but never used.","'genders' is assigned a value but never used.","'pregnancyStatus' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'basicInfo', 'getSex', 'loadGenders', 'locationState', and 'objValues'. Either include them or remove the dependency array. You can also do a functional update 'setObjValues(o => ...)' if you only need 'objValues' in the 'setObjValues' call.","ArrayExpression",["666"],"no-useless-computed-key","Unnecessarily computed property [\"testResultSyphilis\"] found.","Property","unnecessarilyComputedProperty",{"range":"667","text":"668"},"Unnecessarily computed property [\"referredSyphilisTreatment\"] found.",{"range":"669","text":"670"},"Unnecessarily computed property [\"treatedSyphilis\"] found.",{"range":"671","text":"672"},{"range":"673","text":"672"},{"range":"674","text":"670"},"React Hook useEffect has missing dependencies: 'basicInfo', 'getSex', and 'loadGenders'. Either include them or remove the dependency array.",["675"],"React Hook useEffect has a missing dependency: 'viewANCInfo'. Either include it or remove the dependency array.",["676"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"range":"677","text":"668"},{"range":"678","text":"670"},{"range":"679","text":"672"},{"range":"680","text":"672"},{"range":"681","text":"670"},"'response' is assigned a value but never used.","no-useless-rename","Import token unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"682","text":"683"},"'PersonInfo' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'RecentActivities' and 'patientObj?.id'. Either include them or remove the dependency array.",["684"],"'DateTimePicker' is defined but never used.","'topLevelUnitCountryOptions' is assigned a value but never used.","'femaleStatus' is assigned a value but never used.","'setEnrollDto' is assigned a value but never used.","'carePoints' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'basicInfo.dob', 'loadEducation', 'loadGenders', 'loadMaritalStatus', 'loadOccupation', 'loadRelationships', and 'loadTopLevelCountry'. Either include them or remove the dependency array.",["685"],"'actualcontacts' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",{"range":"686","text":"668"},{"range":"687","text":"670"},{"range":"688","text":"672"},{"range":"689","text":"672"},{"range":"690","text":"670"},{"range":"691","text":"683"},{"range":"692","text":"683"},{"range":"693","text":"683"},"'Dropdown' is defined but never used.","'classes' is assigned a value but never used.","'setpatientObj' is assigned a value but never used.","'genderType' is assigned a value but never used.","'mentalStatus' is assigned a value but never used.","'initialEvaluationStatus' is assigned a value but never used.","Array.prototype.filter() expects a return value from arrow function.","Assignments to the 'gender' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ConditionalExpression","'loadPmtctHts' is assigned a value but never used.","'permissions' is assigned a value but never used.","'patientBiometricStatus' is assigned a value but never used.","'setPatientBiometricStatus' is assigned a value but never used.","'devices' is assigned a value but never used.","'toggle' is assigned a value but never used.","'BiometricModalToggle' is assigned a value but never used.","'hivStatus' is assigned a value but never used.","'Arttoggle' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'PatientCurrentStatus' and 'patientObj'. Either include them or remove the dependency array.",["694"],"'Redirect' is defined but never used.","'InputGroupText' is defined but never used.","'FormLabelName' is defined but never used.","'CancelIcon' is defined but never used.","'Message' is defined but never used.","'history' is assigned a value but never used.","'entryPoint' is assigned a value but never used.","'entryPointValue' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'GetPatientPMTCT', 'POINT_ENTRY_PMTCT', 'enroll', 'locationState.patientObj.person_uuid', 'locationState.patientObj.person_uuidd', 'locationState.patientObj.uuid', 'props.activeContent.actionType', 'props.activeContent.id', 'props.patientObj.person_uuid', and 'props.patientObj?.uuid'. Either include them or remove the dependency array. If 'setSisabledField' needs the current value of 'props.activeContent.actionType', you can also switch to useReducer instead of useState and read 'props.activeContent.actionType' in the reducer.",["695"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["696"],"'ans' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'useEffect' is defined but never used.","'validate' is assigned a value but never used.","'useHistory' is defined but never used.","React Hook useEffect has a missing dependency: 'GetPatientLabourDTO'. Either include it or remove the dependency array.",["697"],{"range":"698","text":"683"},"React Hook useEffect has a missing dependency: 'PatientHistory'. Either include it or remove the dependency array.",["699"],"no-native-reassign",["700"],"no-negated-in-lhs",["701"],{"range":"702","text":"683"},"React Hook useEffect has a missing dependency: 'DeliveryInfo'. Either include it or remove the dependency array.",["703"],"'NoStroller' is defined but never used.","'setNewDateOfDelivery' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'infantInfo' and 'props.activeContent'. Either include them or remove the dependency array. You can also do a functional update 'setInfantInfo(i => ...)' if you only need 'infantInfo' in the 'setInfantInfo' call.",["704"],{"range":"705","text":"683"},"React Hook useEffect has missing dependencies: 'DeliveryInfo', 'InfantInfo', 'InfantInfoByUuid', and 'props.patientObj.ancNo'. Either include them or remove the dependency array.",["706"],"'patientObj' is assigned a value but never used.","Unnecessarily computed property ['referredToOthers'] found.",{"range":"707","text":"708"},"'useCallback' is defined but never used.","'Button' is defined but never used.","'toast' is defined but never used.","'Sticky' is defined but never used.","'locationState' is assigned a value but never used.","'saving' is assigned a value but never used.","'hideOtherMenu' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'InfantInfo', 'RecentActivities', and 'SummaryChart'. Either include them or remove the dependency array.",["709"],{"range":"710","text":"683"},["711"],"'Fragment' is defined but never used.","'key' is assigned a value but never used.","'postPartumValue' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["712"],"no-dupe-keys","Duplicate key 'borderRadius'.","ObjectExpression","Duplicate key 'border'.","'Spinner' is defined but never used.","'Form' is defined but never used.","'LabelRibbon' is defined but never used.","'Input' is defined but never used.","'setObjValues' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'postTest'. Either include it or remove the dependency array. You can also do a functional update 'setPostTest(p => ...)' if you only need 'postTest' in the 'setPostTest' call.",["713"],"'CardContent' is defined but never used.","Unnecessarily computed property ['rencencyInterpretation'] found.",{"range":"714","text":"715"},{"range":"716","text":"715"},{"range":"717","text":"715"},{"range":"718","text":"715"},{"range":"719","text":"715"},{"range":"720","text":"715"},"React Hook useEffect has a missing dependency: 'recency'. Either include it or remove the dependency array. You can also do a functional update 'setRecency(r => ...)' if you only need 'recency' in the 'setRecency' call.",["721"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'axios' is defined but never used.","'moment' is defined but never used.","'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'handleInputChange' is assigned a value but never used.","'MatButton' is defined but never used.","'SaveIcon' is defined but never used.","'ToastContainer' is defined but never used.","'useLocation' is defined but never used.","'PhoneInput' is defined but never used.","'hideNumChild' is assigned a value but never used.","'setHideNumChild' is assigned a value but never used.","'gender' is assigned a value but never used.","'clientCodeetail' is assigned a value but never used.","'clientCodeetail2' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'riskAssessment'. Either include it or remove the dependency array. You can also do a functional update 'setRiskAssessment(r => ...)' if you only need 'riskAssessment' in the 'setRiskAssessment' call.",["722"],"'Card' is defined but never used.","'FaUserPlus' is defined but never used.","'handleItemClick' is assigned a value but never used.","'Icon' is defined but never used.","'List' is defined but never used.","'Feed' is defined but never used.","React Hook useEffect has a missing dependency: 'GetVisit'. Either include it or remove the dependency array.",["723"],"Unnecessarily computed property [\"fpMethod\"] found.",{"range":"724","text":"725"},"Unnecessarily computed property [\"dsdModel\"] found.",{"range":"726","text":"727"},"Unnecessarily computed property [\"dsdOption\"] found.",{"range":"728","text":"729"},"Unnecessarily computed property [\"transferTo\"] found.",{"range":"730","text":"731"},"'timingOfArtInitiation' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'GetVisit' and 'InfantInfo'. Either include them or remove the dependency array.",["732"],"'objValuesIndex' is assigned a value but never used.","'setObjValuesIndex' is assigned a value but never used.","'Menu' is defined but never used.","'useStyles' is assigned a value but never used.","'patientId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'patients'. Either include it or remove the dependency array.",["733"],"'handleIEditIndex' is assigned a value but never used.",{"desc":"734","fix":"735"},[14125,14147],"\"testResultSyphilis\"",[14192,14221],"\"referredSyphilisTreatment\"",[14266,14285],"\"treatedSyphilis\"",[14686,14705],[14750,14779],{"desc":"736","fix":"737"},{"desc":"738","fix":"739"},[11712,11734],[11778,11807],[11851,11870],[12260,12279],[12323,12352],[1245,1259],"token",{"desc":"740","fix":"741"},{"desc":"742","fix":"743"},[33612,33634],[33679,33708],[33753,33772],[34173,34192],[34237,34266],[145,159],[143,157],[143,157],{"desc":"744","fix":"745"},{"desc":"746","fix":"747"},{"desc":"748","fix":"749"},{"desc":"750","fix":"751"},[148,162],{"desc":"752","fix":"753"},"no-global-assign","no-unsafe-negation",[255,269],{"desc":"754","fix":"755"},{"desc":"756","fix":"757"},[151,165],{"desc":"758","fix":"759"},[4333,4353],"'referredToOthers'",{"desc":"760","fix":"761"},[185,199],{"desc":"752","fix":"762"},{"desc":"763","fix":"764"},{"desc":"765","fix":"766"},[4666,4692],"'rencencyInterpretation'",[4929,4955],[5263,5289],[5529,5555],[5793,5819],[5913,5939],{"desc":"767","fix":"768"},{"desc":"769","fix":"770"},{"desc":"771","fix":"772"},[7030,7042],"\"fpMethod\"",[7295,7307],"\"dsdModel\"",[7352,7365],"\"dsdOption\"",[7704,7718],"\"transferTo\"",{"desc":"773","fix":"774"},{"desc":"775","fix":"776"},"Update the dependencies array to be: [patientObj, patientId, basicInfo.dateOfRegistration, locationState, loadGenders, getSex, basicInfo, objValues]",{"range":"777","text":"778"},"Update the dependencies array to be: [patientObj, patientId, actionType, loadGenders, getSex, basicInfo]",{"range":"779","text":"780"},"Update the dependencies array to be: [viewANCInfo]",{"range":"781","text":"782"},"Update the dependencies array to be: [RecentActivities, patientObj?.id]",{"range":"783","text":"784"},"Update the dependencies array to be: [basicInfo.dateOfRegistration, basicInfo.dob, loadEducation, loadGenders, loadMaritalStatus, loadOccupation, loadRelationships, loadTopLevelCountry]",{"range":"785","text":"786"},"Update the dependencies array to be: [PatientCurrentStatus, patientObj, props.patientObj]",{"range":"787","text":"788"},"Update the dependencies array to be: [GetPatientPMTCT, POINT_ENTRY_PMTCT, enroll, locationState.patientObj.person_uuid, locationState.patientObj.person_uuidd, locationState.patientObj.uuid, props.activeContent.actionType, props.activeContent.id, props.patientObj.person_uuid, props.patientObj?.uuid]",{"range":"789","text":"790"},"Update the dependencies array to be: [enroll, props]",{"range":"791","text":"792"},"Update the dependencies array to be: [props.patientObj.id, props.activeContent, GetPatientLabourDTO]",{"range":"793","text":"794"},"Update the dependencies array to be: [PatientHistory, props.patientObj.id]",{"range":"795","text":"796"},"Update the dependencies array to be: [props.patientObj.id, props.activeContent.activeTab, DeliveryInfo]",{"range":"797","text":"798"},"Update the dependencies array to be: [props.patientObj.id, props.activeContent.id, props.activeContent, infantInfo]",{"range":"799","text":"800"},"Update the dependencies array to be: [DeliveryInfo, InfantInfo, InfantInfoByUuid, props.patientObj.ancNo]",{"range":"801","text":"802"},"Update the dependencies array to be: [InfantInfo, RecentActivities, SummaryChart, props.patientObj.id]",{"range":"803","text":"804"},{"range":"805","text":"796"},"Update the dependencies array to be: [props]",{"range":"806","text":"807"},"Update the dependencies array to be: [props.patientObj, postTest.hivTestResult, postTest]",{"range":"808","text":"809"},"Update the dependencies array to be: [recency.longTermLine, recency.verififcationLine, recency.controlLine, props.patientObj, recency]",{"range":"810","text":"811"},"Update the dependencies array to be: [props.patientObj, riskAssessment]",{"range":"812","text":"813"},"Update the dependencies array to be: [GetVisit, props.activeContent]",{"range":"814","text":"815"},"Update the dependencies array to be: [props.patientObj.ancNo, props.activeContent, InfantInfo, GetVisit]",{"range":"816","text":"817"},"Update the dependencies array to be: [patients]",{"range":"818","text":"819"},[6586,6639],"[patientObj, patientId, basicInfo.dateOfRegistration, locationState, loadGenders, getSex, basicInfo, objValues]",[4831,4866],"[patientObj, patientId, actionType, loadGenders, getSex, basicInfo]",[4914,4916],"[viewANCInfo]",[3823,3825],"[RecentActivities, patientObj?.id]",[7072,7102],"[basicInfo.dateOfRegistration, basicInfo.dob, loadEducation, loadGenders, loadMaritalStatus, loadOccupation, loadRelationships, loadTopLevelCountry]",[2673,2691],"[PatientCurrentStatus, patientObj, props.patientObj]",[5254,5256],"[GetPatientPMTCT, POINT_ENTRY_PMTCT, enroll, locationState.patientObj.person_uuid, locationState.patientObj.person_uuidd, locationState.patientObj.uuid, props.activeContent.actionType, props.activeContent.id, props.patientObj.person_uuid, props.patientObj?.uuid]",[5361,5369],"[enroll, props]",[3808,3850],"[props.patientObj.id, props.activeContent, GetPatientLabourDTO]",[3100,3121],"[PatientHistory, props.patientObj.id]",[615,667],"[props.patientObj.id, props.activeContent.activeTab, DeliveryInfo]",[3469,3514],"[props.patientObj.id, props.activeContent.id, props.activeContent, infantInfo]",[3463,3465],"[DeliveryInfo, InfantInfo, InfantInfoByUuid, props.patientObj.ancNo]",[1438,1459],"[InfantInfo, RecentActivities, SummaryChart, props.patientObj.id]",[3452,3473],[460,462],"[props]",[4817,4858],"[props.patientObj, postTest.hivTestResult, postTest]",[5963,6050],"[recency.longTermLine, recency.verififcationLine, recency.controlLine, props.patientObj, recency]",[6724,6742],"[props.patientObj, riskAssessment]",[3788,3809],"[GetVisit, props.activeContent]",[4304,4349],"[props.patientObj.ancNo, props.activeContent, InfantInfo, GetVisit]",[3901,3903],"[patients]"]