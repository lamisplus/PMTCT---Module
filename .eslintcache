[{"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\index.js":"1","C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\App.js":"2","C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\reportWebVitals.js":"3","C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\context\\ThemeContext.js":"4","C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Home.js":"5","C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDetail.js":"6","C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Patient\\RegisterPatient.js":"7","C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Patient\\EnrollPatient.js":"8","C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Patient\\UpdatePatientEnrollment.js":"9","C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\context\\ThemeDemo.js":"10","C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Patient\\SubMenu.js":"11","C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientListIit.js":"12","C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientList.js":"13","C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientCard.js":"14","C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Visualisation\\Index.js":"15","C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Consultation\\Index.js":"16","C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\History\\RecentHistory.js":"17","C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Patient\\Biometric.js":"18","C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\PrepServices\\PrEPDiscontinuationsInterruptions.js":"19","C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\PrepServices\\PrEPCommencementForm.js":"20","C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\PrepServices\\PrEPRegistrationForm.js":"21","C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\PrepServices\\PrEPEligibiltyScreeningForm.js":"22","C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\PrepServices\\PrEPVisit.js":"23","C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\api.js":"24","C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Patient\\CaptureBiometric.js":"25","C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Consultation\\ViewUpdate\\ClinicHistory.js":"26","C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Consultation\\Home.js":"27","C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\NewlyEnrolledArtBySex.js":"28","C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Index.js":"29","C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Consultation\\PostPatient\\Index.js":"30","C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Consultation\\Conditions\\AddCondition.js":"31","C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\ReceivingArtBySex.js":"32","C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Consultation\\Allergies\\AddAllergy.js":"33","C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\ReceivingArtByAge.js":"34","C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\NewlyEnrolledArtByAge.js":"35","C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Consultation\\OpportunisticInfection\\Index.js":"36","C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Consultation\\TBScreening\\Index.js":"37","C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Consultation\\ADR\\Index.js":"38","C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Consultation\\ViewUpdate\\History\\ConsultationPage.js":"39","C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Consultation\\ViewUpdate\\ADR\\Index.js":"40","C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Consultation\\ViewUpdate\\OpportunisticInfection\\Index.js":"41","C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Consultation\\ViewUpdate\\TBScreening\\Index.js":"42","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\index.js":"43","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\App.js":"44","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\context\\ThemeContext.js":"45","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\reportWebVitals.js":"46","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDetail.js":"47","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\context\\ThemeDemo.js":"48","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Home.js":"49","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Patient\\RegisterPatient.js":"50","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Patient\\UpdatePatientEnrollment.js":"51","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Patient\\EnrollPatient.js":"52","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Patient\\SubMenu.js":"53","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientCard.js":"54","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Patient\\Biometric.js":"55","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientList.js":"56","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientListIit.js":"57","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Consultation\\Index.js":"58","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\api.js":"59","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\History\\RecentHistory.js":"60","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\PmtctServices\\AncEnrollement.js":"61","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\PmtctServices\\LabourDelivery.js":"62","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Visualisation\\Index.js":"63","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Patient\\CaptureBiometric.js":"64","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Consultation\\Home.js":"65","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Consultation\\ViewUpdate\\ClinicHistory.js":"66","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\NewlyEnrolledArtBySex.js":"67","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Index.js":"68","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\ReceivingArtBySex.js":"69","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\ReceivingArtByAge.js":"70","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\NewlyEnrolledArtByAge.js":"71","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Consultation\\ViewUpdate\\History\\ConsultationPage.js":"72","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Consultation\\ViewUpdate\\TBScreening\\Index.js":"73","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Consultation\\ViewUpdate\\OpportunisticInfection\\Index.js":"74","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Consultation\\ViewUpdate\\ADR\\Index.js":"75","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\PmtctServices\\PmtctEnrollment.js":"76","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Patient\\ActiveANCPatientList.js":"77"},{"size":753,"mtime":1663486035248,"results":"78","hashOfConfig":"79"},{"size":1596,"mtime":1663486035247,"results":"80","hashOfConfig":"79"},{"size":375,"mtime":1663435630344,"results":"81","hashOfConfig":"79"},{"size":9235,"mtime":1663435629082,"results":"82","hashOfConfig":"79"},{"size":2242,"mtime":1664291478724,"results":"83","hashOfConfig":"79"},{"size":4328,"mtime":1664382063674,"results":"84","hashOfConfig":"79"},{"size":97908,"mtime":1664385874443,"results":"85","hashOfConfig":"79"},{"size":118848,"mtime":1664281360997,"results":"86","hashOfConfig":"79"},{"size":120922,"mtime":1663671440529,"results":"87","hashOfConfig":"79"},{"size":3056,"mtime":1663435629082,"results":"88","hashOfConfig":"79"},{"size":4214,"mtime":1664385448139,"results":"89","hashOfConfig":"79"},{"size":13742,"mtime":1663486035767,"results":"90","hashOfConfig":"79"},{"size":18470,"mtime":1664381209795,"results":"91","hashOfConfig":"79"},{"size":15356,"mtime":1664382008721,"results":"92","hashOfConfig":"79"},{"size":6760,"mtime":1663486035778,"results":"93","hashOfConfig":"79"},{"size":1665,"mtime":1663486035730,"results":"94","hashOfConfig":"79"},{"size":23726,"mtime":1664382224121,"results":"95","hashOfConfig":"79"},{"size":40515,"mtime":1663486035764,"results":"96","hashOfConfig":"79"},{"size":13508,"mtime":1663486035772,"results":"97","hashOfConfig":"79"},{"size":13492,"mtime":1663486035772,"results":"98","hashOfConfig":"79"},{"size":12353,"mtime":1663486035773,"results":"99","hashOfConfig":"79"},{"size":9233,"mtime":1663486035773,"results":"100","hashOfConfig":"79"},{"size":15346,"mtime":1663486035773,"results":"101","hashOfConfig":"79"},{"size":424,"mtime":1664271124983,"results":"102","hashOfConfig":"79"},{"size":20662,"mtime":1663486035765,"results":"103","hashOfConfig":"79"},{"size":563,"mtime":1663486035733,"results":"104","hashOfConfig":"79"},{"size":45365,"mtime":1663678553475,"results":"105","hashOfConfig":"79"},{"size":1185,"mtime":1663486035777,"results":"106","hashOfConfig":"79"},{"size":2624,"mtime":1663486035778,"results":"107","hashOfConfig":"79"},{"size":6889,"mtime":1663486035731,"results":"108","hashOfConfig":"79"},{"size":6635,"mtime":1663486035730,"results":"109","hashOfConfig":"79"},{"size":1253,"mtime":1663486035778,"results":"110","hashOfConfig":"79"},{"size":6589,"mtime":1663486035729,"results":"111","hashOfConfig":"79"},{"size":1600,"mtime":1663486035777,"results":"112","hashOfConfig":"79"},{"size":1209,"mtime":1663486035776,"results":"113","hashOfConfig":"79"},{"size":5044,"mtime":1663486035731,"results":"114","hashOfConfig":"79"},{"size":17889,"mtime":1663486035732,"results":"115","hashOfConfig":"79"},{"size":5687,"mtime":1663486035728,"results":"116","hashOfConfig":"79"},{"size":41192,"mtime":1663678560375,"results":"117","hashOfConfig":"79"},{"size":5819,"mtime":1663486035732,"results":"118","hashOfConfig":"79"},{"size":5156,"mtime":1663486035734,"results":"119","hashOfConfig":"79"},{"size":17291,"mtime":1663486035734,"results":"120","hashOfConfig":"79"},{"size":753,"mtime":1663486035248,"results":"121","hashOfConfig":"122"},{"size":1596,"mtime":1663486035247,"results":"123","hashOfConfig":"122"},{"size":9235,"mtime":1663435629082,"results":"124","hashOfConfig":"122"},{"size":375,"mtime":1663435630344,"results":"125","hashOfConfig":"122"},{"size":3680,"mtime":1668165931929,"results":"126","hashOfConfig":"122"},{"size":3056,"mtime":1663435629082,"results":"127","hashOfConfig":"122"},{"size":2460,"mtime":1668767590287,"results":"128","hashOfConfig":"122"},{"size":101081,"mtime":1668783181660,"results":"129","hashOfConfig":"122"},{"size":120922,"mtime":1663671440529,"results":"130","hashOfConfig":"122"},{"size":51357,"mtime":1668783299872,"results":"131","hashOfConfig":"122"},{"size":2990,"mtime":1664454397288,"results":"132","hashOfConfig":"122"},{"size":13876,"mtime":1668786275660,"results":"133","hashOfConfig":"122"},{"size":40515,"mtime":1663486035764,"results":"134","hashOfConfig":"122"},{"size":11815,"mtime":1668784557949,"results":"135","hashOfConfig":"122"},{"size":13742,"mtime":1666846860241,"results":"136","hashOfConfig":"122"},{"size":1650,"mtime":1668786067535,"results":"137","hashOfConfig":"122"},{"size":424,"mtime":1668767269428,"results":"138","hashOfConfig":"122"},{"size":23712,"mtime":1668165886650,"results":"139","hashOfConfig":"122"},{"size":25371,"mtime":1663486035771,"results":"140","hashOfConfig":"122"},{"size":19395,"mtime":1666855133982,"results":"141","hashOfConfig":"122"},{"size":6760,"mtime":1663486035778,"results":"142","hashOfConfig":"122"},{"size":20662,"mtime":1663486035765,"results":"143","hashOfConfig":"122"},{"size":32460,"mtime":1668786088910,"results":"144","hashOfConfig":"122"},{"size":563,"mtime":1663486035733,"results":"145","hashOfConfig":"122"},{"size":1185,"mtime":1663486035777,"results":"146","hashOfConfig":"122"},{"size":2624,"mtime":1663486035778,"results":"147","hashOfConfig":"122"},{"size":1253,"mtime":1663486035778,"results":"148","hashOfConfig":"122"},{"size":1600,"mtime":1663486035777,"results":"149","hashOfConfig":"122"},{"size":1209,"mtime":1663486035776,"results":"150","hashOfConfig":"122"},{"size":41192,"mtime":1663678560375,"results":"151","hashOfConfig":"122"},{"size":17291,"mtime":1663486035734,"results":"152","hashOfConfig":"122"},{"size":5156,"mtime":1663486035734,"results":"153","hashOfConfig":"122"},{"size":5819,"mtime":1663486035732,"results":"154","hashOfConfig":"122"},{"size":27632,"mtime":1666851105782,"results":"155","hashOfConfig":"122"},{"size":11753,"mtime":1668768114140,"results":"156","hashOfConfig":"122"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1lhvaoo",{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"244"},"x7tqb2",{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"244"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":52,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"244"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"244"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"276","usedDeprecatedRules":"244"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"244"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"244"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"244"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"244"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"244"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"244"},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"244"},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"244"},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"244"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"244"},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"244"},{"filePath":"324","messages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"244"},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\index.js",["329"],"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\App.js",[],"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\reportWebVitals.js",[],"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\context\\ThemeContext.js",[],"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Home.js",["330"],"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDetail.js",[],"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Patient\\RegisterPatient.js",["331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361"],"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Patient\\EnrollPatient.js",["362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388"],"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Patient\\UpdatePatientEnrollment.js",["389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418"],"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\context\\ThemeDemo.js",[],"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Patient\\SubMenu.js",["419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434"],"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientListIit.js",["435","436","437"],"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientList.js",["438","439","440","441","442"],"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientCard.js",["443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463"],"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Visualisation\\Index.js",["464","465","466","467","468","469"],"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Consultation\\Index.js",["470"],"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\History\\RecentHistory.js",["471","472","473","474","475","476","477","478"],"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Patient\\Biometric.js",["479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509"],"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\PrepServices\\PrEPDiscontinuationsInterruptions.js",["510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527"],"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\PrepServices\\PrEPCommencementForm.js",["528","529","530","531","532","533","534","535","536","537","538","539"],"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\PrepServices\\PrEPRegistrationForm.js",["540","541","542","543","544","545","546","547","548","549","550","551"],"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\PrepServices\\PrEPEligibiltyScreeningForm.js",["552","553","554","555","556","557","558","559","560","561","562","563","564","565"],"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\PrepServices\\PrEPVisit.js",["566","567","568","569","570","571","572","573","574","575","576","577","578","579"],"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\api.js",[],"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Patient\\CaptureBiometric.js",["580","581","582","583","584","585","586","587","588","589","590","591","592","593","594"],"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Consultation\\ViewUpdate\\ClinicHistory.js",["595","596"],"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Consultation\\Home.js",["597","598","599","600","601","602","603","604","605","606","607","608","609","610","611"],"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\NewlyEnrolledArtBySex.js",[],"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Index.js",["612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627"],"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Consultation\\PostPatient\\Index.js",["628","629","630","631","632"],"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Consultation\\Conditions\\AddCondition.js",["633","634","635","636","637","638","639","640"],"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\ReceivingArtBySex.js",[],"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Consultation\\Allergies\\AddAllergy.js",["641","642","643","644","645","646","647"],"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\ReceivingArtByAge.js",[],"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\NewlyEnrolledArtByAge.js",["648","649"],"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Consultation\\OpportunisticInfection\\Index.js",["650"],"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Consultation\\TBScreening\\Index.js",["651","652","653"],"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Consultation\\ADR\\Index.js",["654"],"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Consultation\\ViewUpdate\\History\\ConsultationPage.js",["655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673","674"],"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Consultation\\ViewUpdate\\ADR\\Index.js",["675"],"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Consultation\\ViewUpdate\\OpportunisticInfection\\Index.js",["676"],"C:\\Users\\USER\\Documents\\LamisPlus\\prep-module\\src\\main\\webapp\\jsx\\components\\Consultation\\ViewUpdate\\TBScreening\\Index.js",["677"],"C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\index.js",["678"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n",["679","680"],"C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\App.js",[],"C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\context\\ThemeContext.js",[],"C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\reportWebVitals.js",[],"C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDetail.js",[],"C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\context\\ThemeDemo.js",[],"C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Home.js",["681"],"C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Patient\\RegisterPatient.js",["682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710","711","712","713","714","715","716"],"C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Patient\\UpdatePatientEnrollment.js",["717","718","719","720","721","722","723","724","725","726","727","728","729","730","731","732","733","734","735","736","737","738","739","740","741","742","743","744","745","746"],"import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    console.log(props)\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrerId:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\",\r\n     householdNumber:\"\", referredToOVCPartner:\"\", dateReferredToOVCPartner:\"\",\r\n     referredFromOVCPartner:\"\", dateReferredFromOVCPartner:\"\",\r\n     careEntryPointOther:\"\"});\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n    \r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n    //status for hospital Number \r\n    const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n    const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n    \r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n            const contacts = patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(contacts.contact);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type == 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber ? hospitalNumber.value : ''\r\n            basicInfo.maritalStatusId=patientObj.maritalStatus.id\r\n            basicInfo.employmentStatusId=patientObj.employmentStatus.id\r\n            basicInfo.genderId=patientObj.gender ? patientObj.gender.id : null\r\n            basicInfo.sexId=patientObj.sex \r\n            basicInfo.educationId=patientObj.education.id\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value : \"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value : \"\"\r\n            basicInfo.email=email && email.value ? email.value : \"\"\r\n            basicInfo.address=country && country.city ? country.city : \"\"\r\n            basicInfo.landmark=country.line[0]\r\n            basicInfo.countryId=country.countryId\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country.stateId)\r\n            basicInfo.stateId=country.stateId\r\n            basicInfo.district=country.district\r\n            setObjValues(patientObj.enrollment)\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n      };\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: e.target.value});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n            async function getCharacters() {\r\n                const hosiptalNumber=e.target.value\r\n                const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                    );\r\n                if(response.data!==true){\r\n                    setHospitalNumStatus(false)\r\n                    setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                    setHospitalNumStatus2(true)\r\n                }else{\r\n                    setHospitalNumStatus(false)\r\n                    setHospitalNumStatus2(true)\r\n                }\r\n            }\r\n            getCharacters();\r\n            }  \r\n             \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };     \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.targetGroupId = objValues.targetGroupId ? \"\" : \"Target group is required.\"\r\n            temp.dateConfirmedHiv = objValues.dateConfirmedHiv ? \"\" : \"date confirm HIV is required.\"\r\n            temp.sourceOfReferrerId = objValues.sourceOfReferrerId ? \"\" : \"Source of referrer is required.\"\r\n            temp.enrollmentSettingId = objValues.enrollmentSettingId ? \"\" : \"Enrollment Setting Number  is required.\"\r\n            temp.tbStatusId = objValues.tbStatusId ? \"\" : \"TB status is required.\"    \r\n            temp.statusAtRegistrationId = objValues.statusAtRegistrationId ? \"\" : \"Status at Registration is required.\"  \r\n            temp.entryPointId = objValues.entryPointId ? \"\" : \"Care Entry Point is required.\" \r\n            temp.dateOfRegistration = objValues.dateOfRegistration ? \"\" : \"Date of Registration is required.\"  \r\n            temp.uniqueId = objValues.uniqueId ? \"\" : \"Unique ID is required.\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId.id\r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.genderId,\r\n                    sexId:basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber: basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.hivEnrollment=objValues;\r\n                const response = await axios.put(`${baseUrl}hiv/patient/${patientObj.id}`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Updated successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage); \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n        if(e.target.name ===\"pregnancyStatusId\" ){\r\n            console.log(e.target.value)\r\n            if(e.target.value===\"72\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }                  \r\n    }    \r\n    \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.cardBottom}>\r\n                <CardContent>\r\n                <Link\r\n                    to={{\r\n                        pathname: \"/patient-history\",\r\n                        state: { patientObj: patientObj  }\r\n                    }}\r\n                >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Edit User Information</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={Math.floor(Math.random() * 1094328)}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        max={today}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"nin\"\r\n                                                        id=\"nin\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>HIV Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"uniqueId\">Unique ID No  * </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"uniqueId\"\r\n                                        id=\"uniqueId\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.uniqueId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled\r\n                                        \r\n                                    />\r\n                                    {errors.uniqueId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"dateOfRegistration\">Date of Enrollment * </Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateOfRegistration\"\r\n                                        id=\"dateOfRegistration\"\r\n                                        min={basicInfo.dateOfRegistration}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateOfRegistration}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    />\r\n                                    {errors.dateOfRegistration !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">Care Entry Point * </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"entryPointId\"\r\n                                    id=\"entryPointId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.entryPointId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> </option>                  \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                {transferIn===true ? \r\n                                    (\r\n                                        <FormGroup>\r\n                                        <Label >Facility Name</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"facilityName\"\r\n                                            id=\"facilityName\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.facilityName}  \r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        </FormGroup>\r\n                                    ):\"\"}\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Status at Registration *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"statusAtRegistrationId\"\r\n                                    id=\"statusAtRegistrationId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.statusAtRegistrationId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> Select</option>                  \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of Confirmed HIV Test *</Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateConfirmedHiv\"\r\n                                        id=\"dateConfirmedHiv\"\r\n                                        min={basicInfo.dob}\r\n                                        max={objValues.dateOfRegistration}\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateConfirmedHiv}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    /> \r\n                                    {errors.dateConfirmedHiv !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                        ) : \"\" } \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Source of Referral *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"sourceOfReferrerId\"\r\n                                        id=\"sourceOfReferrerId\"\r\n                                        value={objValues.sourceOfReferrerId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    >\r\n                                        <option value=\"\">Select </option>                 \r\n                                            {sourceReferral.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.sourceOfReferrerId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sourceOfReferrerId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Enrollment Setting *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"enrollmentSettingId\"\r\n                                        id=\"enrollmentSettingId\"\r\n                                        value={objValues.enrollmentSettingId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        onChange={handleInputChange}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n\r\n                                            {enrollSetting.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.enrollmentSettingId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.enrollmentSettingId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {(femaleStatus && basicInfo.age > 9) && (\r\n                                    <>\r\n                                   \r\n                                    <div className = \"form-group mb-3 col-md-6\" >\r\n                                        <FormGroup>\r\n                                        <Label> Pregnancy </Label>\r\n                                        <Input\r\n                                            type = \"select\"\r\n                                            name = \"pregnancyStatusId\"\r\n                                            id = \"pregnancyStatusId\"\r\n                                            value = {objValues.pregnancyStatusId}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            onChange = {handleInputChange}  \r\n                                            //disabled={locationState.actionType==='update'? false : true}                                      \r\n                                        >\r\n                                        < option value = \"\" >Select </option>\r\n                                        {pregnancyStatus.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>                                                                        \r\n                                    </FormGroup>  \r\n                                    </div>\r\n                                    {objValues.pregnancyStatusId!=='72' && (\r\n                                    <>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of LMP </Label>                                    \r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateOfLpm\"\r\n                                            id=\"dateOfLpm\"\r\n                                            max={today}\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateOfLpm}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />  \r\n                                            \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    </>\r\n                                    )}\r\n                                    </>\r\n                                )}\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >TB Status * </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"tbStatusId\"\r\n                                        id=\"tbStatusId\"\r\n                                        value={objValues.tbStatusId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n                                            {tbStatus.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                    </Input>\r\n                                    {errors.tbStatusId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.tbStatusId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {hideTargetGroup===\"false\" ? (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Target Group *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"targetGroupId\"\r\n                                        id=\"targetGroupId\"\r\n                                        value={objValues.targetGroupId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>                    \r\n                                                {kP.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                    </Input>\r\n                                    {errors.targetGroupId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroupId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                ) : \"\"}\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                {basicInfo.age <=14 && (\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                )}\r\n                                {/* <div className=\"form-group mb-3 col-md-3\">\r\n                                    {ovcEnrolled===true ? \r\n                                        (\r\n                                        <FormGroup>\r\n                                        <Label >OVC Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"ovcNumber\"\r\n                                            id=\"ovcNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.ovcNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div> */}\r\n                                \r\n                                {ovcEnrolled===true && \r\n                                (\r\n                                <>        \r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Household Unique Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"householdNumber\"\r\n                                            id=\"householdNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.householdNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\"></div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredToOVCPartner\"\r\n                                            id=\"referredToOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredToOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredToOVCPartner\"\r\n                                            id=\"dateReferredToOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredToOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredFromOVCPartner\"\r\n                                            id=\"referredFromOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredFromOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredFromOVCPartner\"\r\n                                            id=\"dateReferredFromOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredFromOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                </>\r\n                                )}\r\n                            \r\n                            </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n                            {locationState.actionType ==='update' ?\r\n                            (\r\n                                <>\r\n                                    <MatButton\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<SaveIcon />}\r\n                                        onClick={handleSubmit}\r\n                                        style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                    >\r\n                                        {!saving ? (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                                        ) : (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                                        )}\r\n                                    </MatButton>\r\n            \r\n                                    <MatButton\r\n                                        variant=\"contained\"\r\n                                        className={classes.button}\r\n                                        startIcon={<CancelIcon />}\r\n                                        onClick={handleCancel}\r\n                                        style={{backgroundColor:'#992E62'}}\r\n                                    >\r\n                                        <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                                    </MatButton>\r\n                            </>\r\n                            ):\"\"}\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Patient\\EnrollPatient.js",["747","748","749","750","751","752","753","754","755","756","757","758","759","760","761","762","763","764","765","766","767","768","769","770","771","772","773","774","775","776","777","778","779","780","781","782","783","784","785","786","787","788","789","790","791","792","793","794","795","796","797","798"],"C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Patient\\SubMenu.js",["799","800","801","802","803","804","805","806","807"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {Dropdown, Menu } from \"semantic-ui-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navItemText: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction SubMenu(props) {\r\n    const classes = useStyles();\r\n    let gender=\"\"\r\n    const patientObjs = props.patientObj ? props.patientObj : {}\r\n    const patientCurrentStatus=props.patientObj && props.patientObj.currentStatus===\"Died (Confirmed)\" ? true : false ;\r\n    const [patientObj, setpatientObj] = useState(patientObjs)\r\n    const [genderType, setGenderType] = useState()\r\n    let mentalStatus=false\r\n    let initialEvaluationStatus=false\r\n    useEffect(() => {\r\n        Observation();\r\n        gender =props.patientObj && props.patientObj.sex ? props.patientObj.sex : null\r\n        setGenderType(gender===\"Female\" ? true : false)\r\n    }, [props.patientObj]);\r\n     //Get list of RegimenLine\r\n     const Observation =()=>{\r\n        axios\r\n            .get(`${baseUrl}observation/person/${props.patientObj.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                const observation = response.data\r\n                const mental= observation.filter((x)=> x.type==='mental health')\r\n                const evaluation= observation.filter((x)=> x.type==='initial evaluation')\r\n                if(mental.length > 1){\r\n                    mentalStatus=true\r\n                }\r\n                if(evaluation.length > 1){\r\n                    initialEvaluationStatus=true\r\n                }\r\n\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });\r\n        \r\n        }\r\n    const loadAncPnc =(row)=> {\r\n        props.setActiveContent({...props.activeContent, route:'anc-pnc'})\r\n    }\r\n    const loadLabourDelivery =(row)=> {\r\n        props.setActiveContent({...props.activeContent, route:'labour-delivery'})\r\n    }\r\n    const onClickConsultation = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'consultation'})\r\n    }\r\n    const onClickHome = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n    }\r\n\r\n\r\n    return (\r\n         <div>\r\n            <Menu size=\"mini\" color={\"black\"} inverted >\r\n                <Menu.Item onClick={() => onClickHome()} > Home</Menu.Item>  \r\n                <Menu.Item onClick={() => loadAncPnc()} >PMTCT Enrollment</Menu.Item>                \r\n                <Menu.Item onClick={() => onClickConsultation()} >Follow Up Visit</Menu.Item>                \r\n                <Menu.Item onClick={() => loadLabourDelivery()} >Labour and Delivery</Menu.Item>\r\n                                   \r\n            </Menu>             \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default SubMenu;\r\n","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientCard.js",["808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","832"],"C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Patient\\Biometric.js",["833","834","835","836","837","838","839","840","841","842","843","844","845","846","847","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862","863"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport {Dropdown,Badge} from 'react-bootstrap';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport fingerprintimage  from './../../images/fingerprintimage.png';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\r\n            fontFamily:'FontAwesome',\r\n            border:'0',\r\n            verticalAlign:'middle',\r\n            marginLeft:'.25em',\r\n            lineHeight:'1'\r\n        },\r\n        \"& .dropdown-menu .dropdown-item\":{\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            padding: '0.3rem 1.5rem',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .mt-4\":{\r\n            marginTop:'28px !important'\r\n        },\r\n        \"& .form-control\":{\r\n            color:'#992E62'\r\n        },\r\n        \"& .form-control:focus\":{\r\n            color:'#014d88'\r\n        },\r\n        \"& .sharp \":{\r\n            \"min-width\": \"35px\",\r\n            padding:\"5px\",\r\n            height: '35px',\r\n            \"min-height\": \"35px\"\r\n}\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n/*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nfunction Biometrics(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [biometricDevices,setbiometricDevices] = useState([]);\r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageLoading, setPageLoading] = useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n    // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([]);\r\n    const [selectedFingers, setSelectedFingers] = useState([]);\r\n\r\n    const buttonSx = {\r\n        ...(success && {\r\n            bgcolor: green[500],\r\n            '&:hover': {\r\n                bgcolor: green[700],\r\n            },\r\n        }),\r\n    };\r\n\r\n    const getPersonBiometrics = async() =>{\r\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n\r\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\r\n            if(response.data.length > 0){\r\n                setStoredBiometrics(response.data);\r\n                setPageLoading(true);\r\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\r\n                setSelectedFingers(personCapturedFingers);\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\r\n\r\n                });\r\n                setFingerType(biometricItems);\r\n            }else{\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: false});\r\n                    //return item.captured = personCapturedFingers.includes(item.display)\r\n                });\r\n                setFingerType(biometricItems);\r\n\r\n            }\r\n\r\n        }).catch(async (error)=>{\r\n            console.log(\"getPersonBiometrics error\")\r\n            console.log(error)\r\n\r\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                return _.extend({}, item, {captured: false});\r\n            });\r\n            setFingerType(biometricItems);\r\n            setPageLoading(true);\r\n        })\r\n    }\r\n\r\n    const clear_storelist = () =>{\r\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            console.log('cleared store')\r\n        }).catch((error)=>{\r\n            console.log(\"cleared store error\")\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        clear_storelist();\r\n        getPersonBiometrics();\r\n        TemplateType();\r\n        //biometricFingers();\r\n    }, []);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n                            setbiometricDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    //Get list of Finger index\r\n    const biometricFingers =()=>{\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setFingerType(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    //check if device is plugged or not\r\n    const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data.errorType ===\"ERROR\"){\r\n                    toast.error(response.data.errorName + \" is not plug\");\r\n                    //setshowCapture(true)\r\n                }else{\r\n                    setshowCapture(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // handle the input changes\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //to capture  selected index finger\r\n    const captureFinger = (e) => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    setLoading(true);\r\n                    if(response.data.type ===\"ERROR\"){\r\n                        setLoading(false);\r\n                        setTryAgain(true);\r\n                        window.setTimeout(() => {\r\n                            setTryAgain(false);\r\n                        }, 5000);\r\n                        toast.error(response.data.message.ERROR);\r\n                    }else{\r\n                        const templateType= response.data.templateType\r\n                        setTryAgain(false);\r\n                        setSuccess(true)\r\n                        window.setTimeout(() => {\r\n                            setSuccess(false)\r\n                            setLoading(false);\r\n                        }, 5000);\r\n                        let biometricsEnrollments = response.data\r\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\r\n\r\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\r\n                        //fingerType.splice(templateType, 1);\r\n                        _.find(fingerType,{'display':templateType}).captured = true;\r\n                        setFingerType([...fingerType]);\r\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\r\n                        setObjValues({...objValues, templateType:\"\"});\r\n                    }\r\n                    //toast.success(\"Record save successful\");\r\n                })\r\n                .catch(error => {\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteBiometric =(id,finger)=>{\r\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            toast.success(`${finger} deleted successfully`);\r\n            _.find(fingerType,{'display':finger}).captured = false;\r\n            setFingerType([...fingerType]);\r\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\r\n            setStoredBiometrics(newStoredBiometrics);\r\n            clear_storelist();\r\n            if(newStoredBiometrics.length === 0){\r\n                props.updatePatientBiometricStatus(false);\r\n            }\r\n        }).catch((error)=>{\r\n            toast.error(\"Something went wrong\");\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {\r\n        e.preventDefault();\r\n        if(capturedFingered.length >= 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\r\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Biometric save successful\");\r\n                    setCapturedFingered([])\r\n                    getPersonBiometrics();\r\n                    props.patientObj.biometricStatus=true\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    //props.updatePatientBiometricStatus(true);\r\n                })\r\n                .catch(error => {\r\n                    toast.error(\"Something went wrong saving biometrics\");\r\n                    console.log(error);\r\n                });\r\n        }else{\r\n\r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n\r\n            <div style={{display:\"flex\",width:'100%'}}>\r\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\r\n                    {pageLoading && storedBiometrics.length > 0 ? (\r\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\r\n                                {storedBiometrics.map((biometric, index)=>(\r\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\r\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\r\n\r\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\r\n                                                <div>\r\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\r\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                                </div>\r\n\r\n                                                {/*Action button -- Dropdown menu*/}\r\n                                                <Dropdown className=\"dropdown ms-auto\"  >\r\n                                                    <Dropdown.Toggle\r\n                                                        as=\"button\"\r\n                                                        variant=\"\"\r\n                                                        drop=\"up\"\r\n                                                        className=\"btn sharp btn-primary \"\r\n                                                        id=\"tp-btn\"\r\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\r\n                                                    >\r\n                                                        <svg\r\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                                            width=\"18px\"\r\n                                                            height=\"18px\"\r\n                                                            viewBox=\"0 0 24 24\"\r\n                                                            version=\"1.1\"\r\n                                                        >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                    </Dropdown.Toggle>\r\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\r\n                                                            <DeleteIcon /> Delete\r\n                                                        </Dropdown.Item>\r\n\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n\r\n                                            </div>\r\n                                            <div className=\"card-body p-0 pb-2\">\r\n                                                <ul className=\"list-group list-group-flush\">\r\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\r\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\r\n                                                    </li>\r\n\r\n                                                    <li className=\"list-group-item\">\r\n\r\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\r\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\r\n                                                        <span className=\"text-black desc-text ms-2\">\r\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\r\n                                                    </span>\r\n                                                    </li>\r\n\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div className=\"flex-grow-8\">\r\n                                <div  className=\"flex-grow-8\"  >\r\n                                    <Alert severity=\"info\">\r\n                                        <AlertTitle style={{height:'400px'}}>\r\n                                            <strong>No biometrics captured</strong>\r\n                                        </AlertTitle>\r\n                                    </Alert>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <div className=\"col-12\">\r\n                            <ToastContainer />\r\n                            <Col md={12}>\r\n                                <FormGroup>\r\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Device </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"device\"\r\n                                        id=\"device\"\r\n                                        onChange={checkDevice}\r\n                                        value={objValues.device}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Select Device </option>\r\n                                        {biometricDevices.map(({ id, name }) => (\r\n                                            <option key={id} value={name}>\r\n                                                {name}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.device !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.device}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </Col>\r\n                            {showCapture ? (\r\n                                    <div className=\"row col-12\">\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">Select Finger </option>\r\n\r\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\r\n                                                        <option key={value.id} value={value.display}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Input>\r\n                                                {errors.templateType !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.templateType}</span>\r\n                                                ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md={6}>\r\n\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={captureFinger}\r\n                                                className={'mt-4'}\r\n                                                style={{backgroundColor:'#992E62'}}\r\n                                                startIcon={<FingerprintIcon />}\r\n                                            >\r\n                                                Capture Finger\r\n                                            </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\r\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\r\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n\r\n                   \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n            <Form >\r\n\r\n                    <Card>\r\n                         <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader>\r\n                        <CardBody>\r\n                            <Row form>\r\n                                <ToastContainer />\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for='device'>Select Device </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"device\"\r\n                                            id=\"device\"\r\n                                            onChange={checkDevice}\r\n                                            value={objValues.device}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Device </option>\r\n                                            {biometricDevices.map(({ id, name }) => (\r\n                                                <option key={id} value={name}>\r\n                                                    {name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                        {errors.device !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.device}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for='device'>Select Finger</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"templateType\"\r\n                                                        id=\"templateType\"\r\n                                                        onChange={handleInputChange}\r\n                                                        value={objValues.templateType}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\">Select Finger </option>\r\n\r\n                                                        {fingerType.map((value) => (\r\n                                                            <option key={value.id} value={value.display}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                    {errors.templateType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.templateType}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col md={4}>\r\n\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={captureFinger}\r\n                                                    className={'mt-4'}\r\n                                                    startIcon={<FingerprintIcon />}\r\n                                                >\r\n                                                    Capture Finger\r\n                                                </MatButton>\r\n\r\n                                            </Col>\r\n                                            <br/>\r\n\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                 <img width='500' height='200' src={responseImage}/>\r\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                                    {loading && (\r\n                                        <>\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                    </Fab>\r\n                                                    {loading && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: green[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                    {tryAgain && (\r\n                                        <>\r\n\r\n\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        <FingerprintIcon />\r\n                                                    </Fab>\r\n                                                    {tryAgain && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: red[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    Click to Recapture Again\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} >\r\n                                                <h3>Captured Fingerprints</h3>\r\n                                            </Col>\r\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\r\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n            </Form>\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Biometrics;","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientList.js",["864","865","866","867","868","869","870"],"C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientListIit.js",["871","872","873"],"import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n//import { FaUserPlus } from \"react-icons/fa\";\r\nimport {TiArrowForward} from 'react-icons/ti'\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n    const [patientList, setPatientList] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            setLoading(true)\r\n            axios\r\n                .get(`${baseUrl}hiv/patients/iit`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    setLoading(false)\r\n                    setPatientList(response.data);\r\n                   \r\n                })\r\n                .catch((error) => {  \r\n                    setLoading(false)  \r\n                });        \r\n        }\r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now + \" year(s)\";\r\n        };\r\n    \r\n    const getHospitalNumber = (identifier) => {     \r\n        const identifiers = identifier;\r\n        const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');       \r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n\r\n  return (\r\n    <div>\r\n\r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Find Patient \"\r\n              columns={[\r\n              // { title: \" ID\", field: \"Id\" },\r\n                {\r\n                  title: \"Patient Name\",\r\n                  field: \"name\",\r\n                },\r\n                { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n                { title: \"Sex\", field: \"gender\", filtering: false },\r\n                { title: \"Age\", field: \"age\", filtering: false },\r\n                //{ title: \"Enrollment Status\", field: \"v_status\", filtering: false },\r\n                //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n                { title: \"ART Status\", field: \"status\", filtering: false },\r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              isLoading={loading}\r\n              data={ patientList.map((row) => ({\r\n                  //Id: manager.id,\r\n                    name:row.currentStatus!== \"Not Enrolled\" ?\r\n                        (\r\n                           <>\r\n                            <Link\r\n                            to ={{\r\n                                pathname: \"/patient-history\",\r\n                                state: { patientObj: row  }\r\n                            }}\r\n\r\n                            title={\"Click to view patient dashboard\"}\r\n                            > {row.firstName + \" \" + row.surname}\r\n                            </Link>\r\n                            </>\r\n                        ):\r\n                        (\r\n                            <>\r\n                             <Link\r\n                                to={{\r\n                                    pathname: \"/enroll-patient\",\r\n                                    state: { patientId : row.id, patientObj: row }\r\n                                }}\r\n \r\n                             title={\"Enroll Patient\"}\r\n                             > {row.firstName + \" \" + row.surname}\r\n                             </Link>\r\n                             </>\r\n                         ),\r\n                    hospital_number: getHospitalNumber(row.identifier),\r\n                    gender:row && row.sex ? row.sex : \"\",\r\n                    age: (row.dateOfBirth === 0 ||\r\n                        row.dateOfBirth === undefined ||\r\n                        row.dateOfBirth === null ||\r\n                        row.dateOfBirth === \"\" )\r\n                          ? 0\r\n                          : calculate_age(moment(row.dateOfBirth).format(\"DD-MM-YYYY\")),\r\n                    \r\n                    status: (<Label color=\"blue\" size=\"mini\">{row.currentStatus}</Label>),\r\n                 \r\n                    actions:\r\n            \r\n                    <div>\r\n\r\n                                {row.currentStatus!== \"Not Enrolled\" ?\r\n                                    (\r\n                                        <>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: { patientObj: row  }\r\n                                                }}\r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Patient Dashboard</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    (\r\n                                        <>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/enroll-patient\",\r\n                                                    state: { patientId : row.id, patientObj: row }\r\n                                                }}\r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <TiArrowForward />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Enroll Patient</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link>\r\n                                        </>\r\n                                    )\r\n\r\n                                }\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Consultation\\Index.js",["874","875"],"C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\api.js",[],"C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\History\\RecentHistory.js",["876","877","878","879","880","881","882","883","884"],"C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\PmtctServices\\AncEnrollement.js",["885","886","887","888"],"import React, {useState, useEffect} from 'react';\r\nimport {Card,CardBody, FormGroup, Label, Input, InputGroup} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\nconst AncEnrollement = (props) => {\r\n    const patientObj = props.patientObj;\r\n    console.log(patientObj)\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    //const [values, setValues] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const [vital, setVitalSignDto]= useState({\r\n\r\n                                                bodyWeight: \"\",\r\n                                                diastolic: \"\",\r\n                                                encounterDate: \"\",\r\n                                                facilityId: 1,\r\n                                                height: \"\",\r\n                                                personId: \"\",\r\n                                                pulse: \"\",\r\n                                                respiratoryRate: \"\",\r\n                                                systolic:\"\",\r\n                                                temperature: \"\",\r\n                                                visitId:\"\"\r\n                                            })\r\n    \r\n        const handleInputChangeVitalSignDto = e => {            \r\n            setVitalSignDto ({...vital,  [e.target.name]: e.target.value});\r\n        }\r\n\r\n        //FORM VALIDATION\r\n        const validate = () => {\r\n            let temp = { ...errors }\r\n            //temp.name = details.name ? \"\" : \"This field is required\"\r\n            //temp.description = details.description ? \"\" : \"This field is required\"\r\n            setErrors({\r\n                ...temp\r\n                })    \r\n            return Object.values(temp).every(x => x == \"\")\r\n        }\r\n          \r\n        /**** Submit Button Processing  */\r\n        const handleSubmit = (e) => {        \r\n            e.preventDefault();        \r\n            \r\n            setSaving(true);\r\n            axios.post(`${baseUrl}patient/vital-sign/`, vital,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  props.patientObj.commenced=true\r\n                  toast.success(\"Vital signs save successful\");\r\n                  props.toggle()\r\n                  props.patientsVitalsSigns()\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n                 \r\n              });\r\n          \r\n        }\r\n\r\n  return (      \r\n      <div >\r\n                   \r\n        <Card >\r\n            <CardBody>\r\n            <form >\r\n                <div className=\"row\">\r\n                <h2>ANC Enrollment</h2>\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >ANC No *</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date of 1st ANC *</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Gravida</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Parity</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date Of Last Menstrual Period* </Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Expected Date Of Delivery </Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"Date\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Gestational Age (Weeks)</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Time of HIV Diagnosis</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Source of Referral</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    \r\n                    <h3>Syphilis Information</h3>\r\n                    <hr/>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Tested for syphilis?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Test Result</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Treated for Syphilis</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Referred for syphilis treatment</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <h3>PMTCT HTS</h3>\r\n                    <hr/>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Previously known HIV positive?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date tested HIV positive</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Accepted HIV Testing?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >HIV test result</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >HIV Restesting?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Received HIV test result?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    \r\n                    <h3>Hepatitis Information</h3>\r\n                    <hr/>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Tested for Hepatitis B</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Hepatitis B test result</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Tested for Hepatitis C</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Hepatitis C test result</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <h3>Partner Notification</h3>\r\n                    <hr/>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Agreed to partner notification?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                >\r\n                                    <option value=\"\">Select</option>\r\n                                </Input>\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Partner's HIV status</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                >\r\n                                    <option value=\"\">Select</option>\r\n                                </Input>\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Partner referred to?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                >\r\n                                    <option value=\"\">Select</option>\r\n                                </Input>\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                </div>\r\n                \r\n                {saving ? <Spinner /> : \"\"}\r\n            <br />\r\n            \r\n            <MatButton\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            startIcon={<SaveIcon />}\r\n            onClick={handleSubmit}\r\n            >\r\n                {!saving ? (\r\n                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                ) : (\r\n                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                )}\r\n            </MatButton>\r\n            \r\n            <MatButton\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                startIcon={<CancelIcon />}\r\n                \r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n            </MatButton>\r\n            \r\n                </form>\r\n            </CardBody>\r\n        </Card> \r\n                  \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AncEnrollement;\r\n","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\PmtctServices\\LabourDelivery.js",["889","890","891","892"],"import React, {useState, useEffect} from 'react';\r\nimport {Card,CardBody, FormGroup, Label, Input, InputGroup} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\nconst LabourDelivery = (props) => {\r\n    const patientObj = props.patientObj;\r\n    //let history = useHistory();\r\n    const classes = useStyles()\r\n    //const [values, setValues] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const [delivery, setDelivery]= useState({\r\n\r\n                ancNo: patientObj.ancNo,\r\n                artStartedLdWard: \"\",\r\n                bookingStatus: \"\",\r\n                childGivenArvWithin72: \"\",\r\n                childStatus: \"\",\r\n                dateOfDelivery: \"\",\r\n                deliveryTime: \"\",\r\n                episiotomy: \"\",\r\n                feedingDecision: \"\",\r\n                gaweeks: \"\",\r\n                hbstatus: \"\",\r\n                hcstatus: \"\",\r\n                hivExposedInfantGivenHbWithin24hrs: \"\",\r\n                maternalOutcome: \"\",\r\n                modeOfDelivery: \"\",\r\n                onArt: \"\",\r\n                referalSource: \"\",\r\n                romDeliveryInterval: \"\",\r\n                vaginalTear: \"\"\r\n    })\r\n    \r\n        const handleInputChangeDeliveryDto = e => {            \r\n            setDelivery ({...delivery,  [e.target.name]: e.target.value});\r\n        }\r\n\r\n        //FORM VALIDATION\r\n        const validate = () => {\r\n            let temp = { ...errors }\r\n            //temp.name = details.name ? \"\" : \"This field is required\"\r\n            //temp.description = details.description ? \"\" : \"This field is required\"\r\n            setErrors({\r\n                ...temp\r\n                })    \r\n            return Object.values(temp).every(x => x == \"\")\r\n        }\r\n          \r\n        /**** Submit Button Processing  */\r\n        const handleSubmit = (e) => {        \r\n            e.preventDefault();        \r\n            \r\n            setSaving(true);\r\n            axios.post(`${baseUrl}pmtct/anc/pmtct-delivery`, delivery,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  //props.patientObj.commenced=true\r\n                  toast.success(\"Record save successful\");\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n                 \r\n              });\r\n          \r\n        }\r\n\r\n  return (      \r\n      <div >\r\n                   \r\n        <Card >\r\n            <CardBody>\r\n            <form >\r\n                <div className=\"row\">\r\n                    <h2>labour and Delivery</h2>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >ANC ID  *</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"ancNo\"\r\n                                    id=\"ancNo\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.ancNo} \r\n                                    disabled\r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Booking Status</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"bookingStatus\"\r\n                                    id=\"bookingStatus\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.bookingStatus} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date of Delivery</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"dateOfDelivery\"\r\n                                    id=\"dateOfDelivery\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.dateOfDelivery} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Gestational Age (weeks)</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"gaweeks\"\r\n                                    id=\"gaweeks\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.gaweeks} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >ROM to Delivery Interval </Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"romDeliveryInterval\"\r\n                                    id=\"romDeliveryInterval\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.romDeliveryInterval} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Mode of Delivery</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"modeOfDelivery\"\r\n                                    id=\"modeOfDelivery\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.modeOfDelivery} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Episiotomy</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"episiotomy\"\r\n                                    id=\"episiotomy\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.episiotomy} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Vaginal Tear</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"vaginalTear\"\r\n                                    id=\"vaginalTear\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.vaginalTear} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Feeding decision</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"feedingDecision\"\r\n                                    id=\"feedingDecision\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.feedingDecision} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Maternal Outcome</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"maternalOutcome\"\r\n                                    id=\"maternalOutcome\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.maternalOutcome} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Child given ARV within 72 hrs</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"childGivenArvWithin72\"\r\n                                    id=\"childGivenArvWithin72\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.childGivenArvWithin72} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Child status</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"childStatus\"\r\n                                    id=\"childStatus\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.childStatus} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >HIV exposed infant given Hep B within 24 hrs of birth</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"hivExposedInfantGivenHbWithin24hrs\"\r\n                                    id=\"hivExposedInfantGivenHbWithin24hrs\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.hivExposedInfantGivenHbWithin24hrs} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    \r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Time of Diagnosis</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"time\"\r\n                                    name=\"deliveryTime\"\r\n                                    id=\"deliveryTime\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.deliveryTime} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >On ART?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"onArt\"\r\n                                    id=\"onArt\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.onArt} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >ART started in L&D ward</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"artStartedLdWard\"\r\n                                    id=\"artStartedLdWard\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.artStartedLdWard} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Source of Referral</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"referalSource\"\r\n                                    id=\"referalSource\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.referalSource} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Hepatitis B Status</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"hbstatus\"\r\n                                    id=\"hbstatus\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.hbstatus} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Hepatitis C Status</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"hcstatus\"\r\n                                    id=\"hcstatus\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.hcstatus} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n  \r\n            </div>\r\n                \r\n                {saving ? <Spinner /> : \"\"}\r\n            <br />\r\n            \r\n            <MatButton\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            startIcon={<SaveIcon />}\r\n            onClick={handleSubmit}\r\n            >\r\n                {!saving ? (\r\n                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                ) : (\r\n                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                )}\r\n            </MatButton>\r\n            \r\n            <MatButton\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                startIcon={<CancelIcon />}\r\n                \r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n            </MatButton>\r\n            \r\n                </form>\r\n            </CardBody>\r\n        </Card> \r\n                  \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LabourDelivery;\r\n","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Visualisation\\Index.js",["893","894","895","896","897","898"],"import React, { Fragment } from \"react\";\r\n// BS\r\nimport { Dropdown, Nav, Tab } from \"react-bootstrap\";\r\n/// Scroll\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { Link } from \"react-router-dom\";\r\n// images\r\nimport SummaryView from './DashboardAnalytics/SummaryView/Index';\r\nimport Highcharts from 'highcharts'\r\nimport HighchartsReact from 'highcharts-react-official'\r\nimport {NewlyEnrolledArtBySex} from './DashboardAnalytics/SummaryView/Highcharts/NewlyEnrolledArtBySex';\r\n\r\nconst options = {\r\n  chart: {\r\n    type: 'column'\r\n},\r\n\r\ntitle: {\r\n    text: 'Viral Load Cascade among new patients eligible after 6 months'\r\n},\r\n\r\nsubtitle: {\r\n    text: ''\r\n},\r\n\r\nlegend: {\r\n    align: 'right',\r\n    verticalAlign: 'middle',\r\n    layout: 'vertical'\r\n},\r\n\r\nxAxis: {\r\n    categories: ['Number Eligble', 'Number of Sample Collected', 'Number Tested', 'Number Suppressed'],\r\n    labels: {\r\n        x: -10\r\n    }\r\n},\r\n\r\nyAxis: {\r\n    allowDecimals: false,\r\n    title: {\r\n        text: 'Amount'\r\n    }\r\n},\r\n\r\nseries: [{\r\n    name: 'Number Eligble',\r\n    data: [20, 40, 30, 3]\r\n}, {\r\n    name: 'Number of Sample Collected',\r\n    data: [62, 41, 22, 22]\r\n}, {\r\n    name: 'Number Tested',\r\n    data: [200, 45, 30,20]\r\n}, {\r\n  name: 'Number Suppressed',\r\n  data: [40, 40, 10, 90]\r\n}],\r\n\r\nresponsive: {\r\n    rules: [{\r\n        condition: {\r\n            maxWidth: 500\r\n        },\r\n        chartOptions: {\r\n            legend: {\r\n                align: 'center',\r\n                verticalAlign: 'bottom',\r\n                layout: 'horizontal'\r\n            },\r\n            yAxis: {\r\n                labels: {\r\n                    align: 'left',\r\n                    x: 0,\r\n                    y: -5\r\n                },\r\n                title: {\r\n                    text: null\r\n                }\r\n            },\r\n            subtitle: {\r\n                text: null\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            }\r\n        }\r\n    }]\r\n}\r\n}\r\nconst options2 = {\r\n  chart: {\r\n    type: 'column'\r\n},\r\n\r\ntitle: {\r\n    text: 'Viral Load Cascade among patients currently on ART eligible after 12 months of last VL result'\r\n},\r\n\r\nsubtitle: {\r\n    text: ''\r\n},\r\n\r\nlegend: {\r\n    align: 'right',\r\n    verticalAlign: 'middle',\r\n    layout: 'vertical'\r\n},\r\n\r\nxAxis: {\r\n    categories: ['Number Eligble', 'Number of Sample Collected', 'Number Tested', 'Number Suppressed'],\r\n    labels: {\r\n        x: -10\r\n    }\r\n},\r\n\r\nyAxis: {\r\n    allowDecimals: false,\r\n    title: {\r\n        text: 'Amount'\r\n    }\r\n},\r\n\r\nseries: [{\r\n    name: 'Number Eligble',\r\n    data: [200, 40, 30, 3]\r\n}, {\r\n    name: 'Number of Sample Collected',\r\n    data: [62, 41, 22, 22]\r\n}, {\r\n    name: 'Number Tested',\r\n    data: [2000, 450, 300,200]\r\n}, {\r\n  name: 'Number Suppressed',\r\n  data: [40, 40, 100, 90]\r\n}],\r\n\r\nresponsive: {\r\n    rules: [{\r\n        condition: {\r\n            maxWidth: 500\r\n        },\r\n        chartOptions: {\r\n            legend: {\r\n                align: 'center',\r\n                verticalAlign: 'bottom',\r\n                layout: 'horizontal'\r\n            },\r\n            yAxis: {\r\n                labels: {\r\n                    align: 'left',\r\n                    x: 0,\r\n                    y: -5\r\n                },\r\n                title: {\r\n                    text: null\r\n                }\r\n            },\r\n            subtitle: {\r\n                text: null\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            }\r\n        }\r\n    }]\r\n}\r\n}\r\nconst Widget = () => {\r\n  return (\r\n    <Fragment>     \r\n      <div className=\"row\">\r\n       <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-primary text-danger\">\r\n                <i class=\"fa fa-user-plus\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">NEWLY DIAGNOSED HIV+</p>\r\n                  <h4 className=\"mb-0\">3280</h4>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-warning text-warning\">\r\n                <i class=\"fa fa-heartbeat\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">CURRENT ON ART</p>\r\n                  <h4 className=\"mb-0\">2570</h4>\r\n                  {/* <span className=\"badge badge-warning\">+3.5%</span> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body  p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-danger text-danger\">\r\n                <i class=\"fa fa-compress\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">VIRALLY SUPPRESSED</p>\r\n                  <h4 className=\"mb-0\">50</h4>\r\n                  {/* <span className=\"badge badge-danger\">-3.5%</span> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-success text-success\">\r\n                <i class=\"fa fa-users\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">CURRENTLY ACTIVE</p>\r\n                  <h4 className=\"mb-0\">2340</h4>\r\n                  {/* <span className=\"badge badge-success\">-3.5%</span> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <SummaryView />\r\n        <div className=\"col-xl-6 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <HighchartsReact\r\n            highcharts={Highcharts}\r\n            options={options}\r\n          />\r\n        </div>\r\n        <div className=\"col-xl-6 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <HighchartsReact\r\n            highcharts={Highcharts}\r\n            options={options2}\r\n          />\r\n        </div>\r\n        \r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Widget;\r\n","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Patient\\CaptureBiometric.js",["899","900","901","902","903","904","905","906","907","908","909","910","911","912","913"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n        Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n        } from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nconst CaptureBiometric = (props) => {\r\n    const classes = useStyles()\r\n    const biometricDevices = props.biometricDevices\r\n    const patientID= props && props.patientId ? props.patientId : \"\"\r\n    \r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:patientID, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState(props.biometricDevices);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n   // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([])\r\n     console.log(biometricDevices)\r\n    const buttonSx = {\r\n      ...(success && {\r\n        bgcolor: green[500],\r\n        '&:hover': {\r\n          bgcolor: green[700],\r\n        },\r\n      }),\r\n    };\r\n\r\n\r\n    useEffect(() => {      \r\n        TemplateType();\r\n        if(objValues.device===\"\"){\r\n            setshowCapture(false)\r\n        }\r\n        \r\n      }, []);\r\n     //Get list of Finger index\r\n     const TemplateType =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setFingerType(response.data);\r\n           })\r\n           .catch((error) => {\r\n           });\r\n       \r\n     }\r\n\r\n     //check if device is plugged or not \r\n     const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        console.log(checkUrl)\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n           .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n            if(response.data.errorType ===\"ERROR\"){\r\n                toast.error(response.data.errorName + \" is not plug\");\r\n                //setshowCapture(true)\r\n            }else{\r\n                setshowCapture(true)\r\n            }\r\n           })\r\n           .catch((error) => {\r\n           });\r\n     }\r\n     // handle the input changes \r\n\r\n     const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //to capture  selected index finger \r\n    const captureFinger = (e) => {        \r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                  setLoading(true);\r\n                  if(response.data.type ===\"ERROR\"){                   \r\n                    setLoading(false);\r\n                    setTryAgain(true);\r\n                    window.setTimeout(() => {\r\n                        setTryAgain(false);\r\n                      }, 5000);\r\n                    toast.error(response.data.message.ERROR);\r\n                  }else{\r\n                    const templateType= response.data.templateType\r\n                    setTryAgain(false);\r\n                    setSuccess(true)\r\n                    window.setTimeout(() => {\r\n                        setSuccess(false)\r\n                        setLoading(false);                        \r\n                      }, 5000);\r\n                                        \r\n                    setCapturedFingered([...capturedFingered, response.data])\r\n                    fingerType.splice(templateType, 1);\r\n                    setFingerType([...fingerType]);\r\n                  }\r\n                  //toast.success(\"Record save successful\");\r\n              })\r\n              .catch(error => {                 \r\n              });\r\n        }\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {        \r\n        e.preventDefault();\r\n        if(capturedFingered.length > 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1]\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                toast.success(\"Biometric save successful\");\r\n                setCapturedFingered([])\r\n                props.setPatientBiometricStatus(true)\r\n                props.togglestatus()\r\n            })\r\n            .catch(error => {\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }else{\r\n            \r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n  }  \r\n    \r\n // console.log(capturedFingered)\r\n\r\n    return (\r\n        <div >\r\n            <Card >\r\n                <CardBody>\r\n                    <Modal isOpen={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"lg\">\r\n                        <Form >\r\n                            <ModalHeader toggle={props.togglestatus}>capture Biometric</ModalHeader>\r\n                            <ModalBody>\r\n                                <Card>\r\n                                {/* <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader> */}\r\n                                    <CardBody>\r\n                                    <Row form>\r\n                                    <ToastContainer />\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Device </Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"device\"\r\n                                                    id=\"device\"\r\n                                                    onChange={checkDevice}\r\n                                                    value={objValues.device}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Device </option>\r\n                                                {biometricDevices.map(({ id, name }) => (\r\n                                                    <option key={id} value={name}>\r\n                                                        {name}\r\n                                                    </option>\r\n                                                ))}\r\n                                              \r\n                                            </Input>\r\n                                            {errors.device !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.device}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Finger </option>\r\n\r\n                                                {fingerType.map((value) => (\r\n                                                    <option key={value.id} value={value.display}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                            {errors.templateType !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.templateType}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        \r\n\r\n                                        <Col md={4}>\r\n                                        \r\n                                        <MatButton\r\n                                            type='button'\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={captureFinger}\r\n                                            className={'mt-4'}\r\n                                            startIcon={<FingerprintIcon />}\r\n                                        >\r\n                                            Capture Finger\r\n                                        </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n                                        \r\n                                        </>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                        }\r\n                                        {/* <img width='500' height='200' src={responseImage}/> */}\r\n                                        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                                       \r\n                                     {loading && (\r\n                                        <>\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                </Fab>\r\n                                                {loading && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: green[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {tryAgain && (\r\n                                        <>\r\n                                        \r\n\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                 <FingerprintIcon />\r\n                                                </Fab>\r\n                                                {tryAgain && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: red[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            Click to Recapture Again\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {/*  */}\r\n                                        </Col>\r\n                                       \r\n                                            \r\n                                        </Row>\r\n\r\n                                    <Row>\r\n                                 {capturedFingered.length >=1 ? (  \r\n                                     <>                               \r\n                                    <Col md={12} >\r\n                                        <h3>Captured Fingerprints</h3>\r\n                                    </Col>\r\n                                    <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {capturedFingered.map((x) => (\r\n                                                <List.Item>\r\n                                                    {/* <List.Header><Icon name='cancel'  color='red' /> </List.Header> */}\r\n                                                    <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                    {/* <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col> */}\r\n                                    <br/><br/><br/><br/><br/><br/>\r\n                                        <Col md={12} >\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={saveBiometrics}\r\n                                                // className={classes.button}\r\n                                                startIcon={<SaveIcon/>}\r\n                                            >\r\n                                                Save Capture\r\n                                            </MatButton>\r\n                                        </Col>\r\n                                    </> \r\n                                    )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                    </Row>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </ModalBody>\r\n                        </Form>\r\n\r\n                    </Modal>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CaptureBiometric;\r\n","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Consultation\\Home.js",["914","915","916","917","918","919","920","921","922","923","924","925","926","927","928"],"C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Consultation\\ViewUpdate\\ClinicHistory.js",["929","930"],"import React, { useEffect, useState } from 'react'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"@reach/menu-button/styles.css\";\r\nimport ConsultationPage from './History/ConsultationPage'\r\n\r\n\r\nconst ClinicVisitHistory = (props) => {    \r\n  const patientObj = props.patientObj ? props.patientObj : {}\r\n\r\n  return (\r\n    <div>\r\n         <div className=\"row\">\r\n            \r\n                <ConsultationPage patientObj={patientObj} activeContent={props.activeContent} />  \r\n\r\n        </div>   \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ClinicVisitHistory;\r\n\r\n\r\n","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\NewlyEnrolledArtBySex.js",[],"C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Index.js",["931","932","933","934","935","936","937","938","939","940","941","942","943","944","945","946"],"import React, { useState } from 'react';\r\n\r\nimport { Col, Form,CardBody,  Row,CardTitle, CardText,\r\n   } from \"reactstrap\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Highcharts from 'highcharts';\r\n import HighchartsReact from 'highcharts-react-official';\r\nimport {NewlyEnrolledArtBySex} from './Highcharts/NewlyEnrolledArtBySex';\r\nimport {NewlyEnrolledArtByAge} from './Highcharts/NewlyEnrolledArtByAge';\r\nimport {ReceivingArtByAge}  from './Highcharts/ReceivingArtByAge';\r\nimport {ReceivingArtBySex} from './Highcharts/ReceivingArtBySex';\r\nimport { Progress } from 'reactstrap';\r\n\r\n\r\n// Load Highcharts modules\r\n//require(\"highcharts/modules/exporting\")(Highcharts);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n},\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst SummaryView = (props) => {\r\n  const classes = useStyles();\r\n  const [chartValue, setChartValue] = useState(\"\");\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const toggle = () => setDropdownOpen(!dropdownOpen);\r\n  const [state, setState] = useState({ activeItem: 'gamepad' })\r\n\r\n  const handleItemClick = (e, { name }) => setState({ activeItem: name })\r\n  const { activeItem } = state\r\n  const chartPage  = e => {\r\n\r\n    setChartValue(e)\r\n  }\r\n\r\n  //Menu Icon \r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div  spacing={5} style={{ padding: 20 }} >\r\n      <Row>\r\n        <Col md={12}>\r\n          {/* The second Column Card Layout  */}\r\n        <Row>\r\n                 \r\n                  <Col  lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\r\n                  <Card><CardBody>\r\n                    <HighchartsReact highcharts={Highcharts} options={ReceivingArtBySex} />\r\n                  </CardBody></Card>\r\n                  </Col>\r\n                  <Col  lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\r\n                  <Card><CardBody>\r\n                    <HighchartsReact highcharts={Highcharts} options={ReceivingArtByAge} />\r\n                  </CardBody></Card>\r\n                  </Col>\r\n              </Row>\r\n\r\n           \r\n        </Col>\r\n      </Row>\r\n\r\n      \r\n\r\n      \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SummaryView;\r\n","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\ReceivingArtBySex.js",[],"C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\ReceivingArtByAge.js",[],"C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Visualisation\\DashboardAnalytics\\SummaryView\\Highcharts\\NewlyEnrolledArtByAge.js",["947","948"],"import Highcharts from 'highcharts'\r\nimport HighchartsReact from 'highcharts-react-official'\r\n\r\n\r\n\r\nexport const NewlyEnrolledArtByAge = {\r\n    chart: {\r\n        \r\n        plotBackgroundColor: null,\r\n        plotBorderWidth: null,\r\n        plotShadow: false,\r\n        type: 'pie'\r\n    },\r\n    title: {\r\n        text: 'Number of Adults and Children newly enrolled on ART '\r\n    },\r\n    tooltip: {\r\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n    },\r\n    accessibility: {\r\n        point: {\r\n            valueSuffix: '%'\r\n        }\r\n    },\r\n    plotOptions: {\r\n        pie: {\r\n            allowPointSelect: true,\r\n            cursor: 'pointer',\r\n            dataLabels: {\r\n                enabled: true,\r\n                format: '<b>{point.name}</b>: {point.percentage:.1f} %',\r\n                connectorColor: 'black'\r\n            },\r\n            showInLegend: true\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'Newly Enrolled on ART by Age',\r\n        data: [\r\n            \r\n            { name: '25 + ', sliced: true, y: 61.41 },\r\n            { name: '20-24 ', y: 11.84 },\r\n            { name: '10-19 ', y: 10.85 },\r\n            { name: '≤ 9 ', y: 4.67 },\r\n        ]\r\n    }]\r\n};","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Consultation\\ViewUpdate\\History\\ConsultationPage.js",["949","950","951","952","953","954","955","956","957","958","959","960","961","962","963","964","965","966","967","968"],"import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Segment, Label,} from 'semantic-ui-react'\r\n// Page titie\r\nimport { FormGroup, Label as FormLabelName, InputGroup,\r\n          InputGroupText,\r\n          InputGroupButtonDropdown,\r\n          Input,\r\n          DropdownToggle,\r\n          DropdownMenu,\r\n          DropdownItem\r\n        } from \"reactstrap\";\r\nimport ADR from './../ADR/Index'\r\nimport OpportunisticInfection from './../OpportunisticInfection/Index'\r\nimport TBScreening from './../TBScreening/Index'\r\nimport { url as baseUrl, token } from \"../../../../../api\";\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Row, Col,   } from \"react-bootstrap\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { Button as ButtonSMUI, Icon} from 'semantic-ui-react'\r\nimport {Link} from 'react-router-dom';\r\n//import { objectValues } from \"react-toastify/dist/utils\";\r\n\r\n\r\nlet adherenceLevelObj = []\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1)\r\n    }\r\n  },\r\n  input: {\r\n    display: 'none'\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\n\r\n\r\nconst ClinicVisit = (props) => {\r\n  const patientObj = props.patientObj ? props.patientObj : {}\r\n  const [dropdownOpen, setDropdownOpen] = React.useState(false);\r\n  const [splitButtonOpen, setSplitButtonOpen] = React.useState(false);\r\n  const toggleDropDown = () => setDropdownOpen(!dropdownOpen);\r\n  const toggleSplit = () => setSplitButtonOpen(!splitButtonOpen);\r\n  const [visitId, setVisitId]= useState()\r\n  const [enableUpdateButton, setEnableUpdateButton]=useState(false)\r\n  const [heightValue, setHeightValue]= useState(\"cm\")\r\n  const [enableUpdate, setEnableUpdate]= useState(false) //Enable update for all input field if the user have permission\r\n  const [errors, setErrors] = useState({});\r\n  const [clinicVisitList, setClinicVisitList] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  let temp = { ...errors }\r\n  const classes = useStyles()\r\n  // the visit date history \r\n  //end of the visit date history\r\n  const [getPatientObj, setGetPatientObj] = useState({});\r\n  const [saving, setSaving] = useState(false);\r\n  const [clinicalStage, setClinicalStage] = useState([]);\r\n  const [functionalStatus, setFunctionalStatus] = useState([]);\r\n  const [adherenceLevel, setAdherenceLevel] = useState([]);\r\n  const [tbStatus, setTbStatus] = useState([]);\r\n  const [TBForms, setTBForms] = useState(false)\r\n  const [currentVitalSigns, setcurrentVitalSigns] = useState({})\r\n  const [showCurrentVitalSigns, setShowCurrentVitalSigns] = useState(false)\r\n  //opportunistic infection Object\r\n  const [infection, setInfection] = useState({ illnessInfection: \"\", ondateInfection: \"\" });\r\n  const [infectionList, setInfectionList] = useState([]);\r\n  //ADR array Object \r\n  const [adrObj, setAdrObj] = useState({ adr: \"\", adrOnsetDate: \"\" });\r\n  const [adrList, setAdrList] = useState([]);\r\n  //Vital signs clinical decision support \r\n  const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n                                                                    bodyWeight: \"\",\r\n                                                                    diastolic: \"\",\r\n                                                                    height: \"\",\r\n                                                                    systolic: \"\",\r\n                                                                    pulse:\"\",\r\n                                                                    temperature:\"\",\r\n                                                                    respiratoryRate:\"\" \r\n                                                                  })\r\n  const [objValues, setObjValues] = useState({\r\n    adherenceLevel: \"\",\r\n    adheres: {},\r\n    adrScreened: \"\",\r\n    adverseDrugReactions: {},\r\n    artStatusId: \"\" ,\r\n    cd4: \"\",\r\n    cd4Percentage: \"\",\r\n    clinicalNote: \"\",\r\n    clinicalStageId: \"\",\r\n    facilityId: 0,\r\n    functionalStatusId: \"\",\r\n    hivEnrollmentId: \"\",\r\n    nextAppointment: \"\",\r\n    lmpDate: \"\",\r\n    oiScreened: \"\",\r\n    opportunisticInfections: {},\r\n    personId: patientObj.id,\r\n    tbScreen: {},\r\n    stiIds: \"\",\r\n    stiTreated: \"\",\r\n    uuid: \"\",\r\n    visitDate: \"\",\r\n    whoStagingId: \"\"\r\n  });\r\n  const [vital, setVitalSignDto] = useState({\r\n    bodyWeight: \"\",\r\n    diastolic: \"\",\r\n    encounterDate: \"\",\r\n    facilityId: 1,\r\n    height: \"\",\r\n    personId: props.patientObj.id,\r\n    serviceTypeId: 1,\r\n    systolic: \"\",\r\n    pulse:\"\",\r\n    temperature:\"\",\r\n    respiratoryRate:\"\" \r\n  })\r\n  const [tbObj, setTbObj] = useState({\r\n    currentOnIpt: \"\",\r\n    coughing: \"\",\r\n    antiTBDrug: \"\",\r\n    nightSweat: \"\",\r\n    fever: \"\",\r\n    contactWithTBCase: \"\",\r\n    lethergy: \"\",\r\n    tbStatusId: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    FunctionalStatus();\r\n    WhoStaging();\r\n    AdherenceLevel();\r\n    TBStatus();\r\n    VitalSigns()\r\n    GetPatientObj();\r\n    ClinicVisitListHistory();\r\n    if(props.activeContent.id!==null){\r\n     \r\n      GetVisitById(props.activeContent.id)\r\n      setVisitId(props.activeContent.id)\r\n    }\r\n  }, []);\r\n     //GET LIST Drug Refill\r\n     async function ClinicVisitListHistory() {\r\n      setLoading(true)\r\n      axios\r\n          .get(`${baseUrl}hiv/art/clinic-visit/person?pageNo=0&pageSize=10&personId=${props.patientObj.id}`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n          )\r\n          .then((response) => {\r\n              setLoading(false)\r\n              setClinicVisitList(response.data.filter((x)=> x.isCommencement!==true));              \r\n          })\r\n          .catch((error) => {  \r\n              setLoading(false)  \r\n          });        \r\n    }\r\n  //Check for the last Vital Signs\r\n  const VitalSigns = () => {\r\n    axios\r\n      .get(`${baseUrl}patient/vital-sign/person/${props.patientObj.id}`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n\r\n        const lastVitalSigns = response.data[response.data.length - 1]\r\n        if (lastVitalSigns.encounterDate === moment(new Date()).format(\"YYYY-MM-DD\") === true) {\r\n          setcurrentVitalSigns(lastVitalSigns)\r\n          setShowCurrentVitalSigns(true)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n    //Get The updated patient objeect\r\n    const GetPatientObj = () => {\r\n      axios\r\n        .get(`${baseUrl}hiv/patients`,\r\n          { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n          const patObJ= response.data.filter((x)=> x.id===props.patientObj.id)\r\n\r\n          setGetPatientObj(patObJ[0])\r\n        })\r\n        .catch((error) => {\r\n          //console.log(error);\r\n        });\r\n    }\r\n\r\n  //Get list of WhoStaging\r\n  const WhoStaging = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/CLINICAL_STAGE`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setClinicalStage(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n  ///GET LIST OF FUNCTIONAL%20_STATUS\r\n  // TB STATUS\r\n  const TBStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setTbStatus(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n\r\n  async function FunctionalStatus() {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/FUNCTIONAL%20_STATUS`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n\r\n        setFunctionalStatus(response.data);\r\n        //setValues(response.data)\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  ///Level of Adherence\r\n  async function AdherenceLevel() {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_LEVEL_OF_ADHERENCE`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setAdherenceLevel(response.data);\r\n\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  const handleInputChange = e => {\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    if (e.target.name === \"whoStagingId\") {\r\n      if (e.target.value === \"NO\") {\r\n        setTBForms(true)\r\n      } else {\r\n        setTBForms(false)\r\n      }\r\n    }\r\n  }\r\n  const handleInputChangeVitalSignDto = e => {\r\n    setVitalSignDto({ ...vital, [e.target.name]: e.target.value });\r\n  }\r\n\r\n  //Handle CheckBox \r\n  const handleCheckBox = e => {\r\n    if (e.target.checked) {\r\n      //currentVitalSigns.personId === null ? props.patientObj.id : currentVitalSigns.personId\r\n      setVitalSignDto({ ...currentVitalSigns })\r\n    } else {\r\n      setVitalSignDto({\r\n        bodyWeight: \"\",\r\n        diastolic: \"\",\r\n        encounterDate: \"\",\r\n        facilityId: \"\",\r\n        height: \"\",\r\n        personId: props.patientObj.id,\r\n        serviceTypeId: \"\",\r\n        systolic: \"\",\r\n        pulse:\"\",\r\n        temperature:\"\",\r\n        respiratoryRate:\"\" \r\n      })\r\n    }\r\n  }\r\n  //to check the input value for clinical decision \r\n  const handleInputValueCheckHeight =(e)=>{\r\n    if(e.target.name===\"height\" && (e.target.value < 48.26 || e.target.value>216.408)){\r\n      const message =\"Height cannot be greater than 216.408 and less than 48.26\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, height:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, height:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckBodyWeight =(e)=>{\r\n    if(e.target.name===\"bodyWeight\" && (e.target.value < 3 || e.target.value>150)){      \r\n      const message =\"Body weight must not be greater than 150 and less than 3\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckSystolic =(e)=>{\r\n    if(e.target.name===\"systolic\" && (e.target.value < 90 || e.target.value>240)){      \r\n      const message =\"Blood Pressure systolic must not be greater than 240 and less than 90\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckDiastolic =(e)=>{\r\n    if(e.target.name===\"diastolic\" && (e.target.value < 60 || e.target.value>140)){      \r\n      const message =\"Blood Pressure diastolic must not be greater than 140 and less than 60\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckPulse =(e)=>{\r\n    if(e.target.name===\"pulse\" && (e.target.value < 40 || e.target.value>120)){      \r\n    const message =\"Pulse must not be greater than 120 and less than 40\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:\"\"})\r\n    }\r\n}\r\nconst handleInputValueCheckRespiratoryRate =(e)=>{\r\n    if(e.target.name===\"respiratoryRate\" && (e.target.value < 10 || e.target.value>70)){      \r\n    const message =\"Respiratory Rate must not be greater than 70 and less than 10\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:\"\"})\r\n    }\r\n}\r\nconst handleInputValueCheckTemperature =(e)=>{\r\n    if(e.target.name===\"temperature\" && (e.target.value < 35 || e.target.value>47)){      \r\n    const message =\"Temperature must not be greater than 47 and less than 35\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, temperature:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, temperature:\"\"})\r\n    }\r\n}\r\n  //Validations of the forms\r\n  const validate = () => {        \r\n    temp.encounterDate = vital.encounterDate ? \"\" : \"This field is required\"\r\n    temp.nextAppointment = objValues.nextAppointment ? \"\" : \"This field is required\"\r\n    temp.whoStagingId = objValues.whoStagingId ? \"\" : \"This field is required\"\r\n    temp.clinicalNote = objValues.clinicalNote ? \"\" : \"This field is required\"\r\n    temp.functionalStatusId = objValues.functionalStatusId ? \"\" : \"This field is required\"\r\n    temp.adherenceLevel = objValues.adherenceLevel ? \"\" : \"This field is required\"\r\n    temp.labTestGroupId = vital.diastolic ? \"\" : \"This field is required\"\r\n    temp.systolic = vital.systolic ? \"\" : \"This field is required\"\r\n    temp.height = vital.height ? \"\" : \"This field is required\"\r\n    temp.bodyWeight = vital.bodyWeight ? \"\" : \"This field is required\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n\r\n  const  heightFunction =(e)=>{\r\n    if(e==='cm'){\r\n        setHeightValue('cm')\r\n        if(vital.height!==\"\"){\r\n            const newHeightValue= (vital.height * 100)\r\n            setVitalSignDto ({...vital,  height: newHeightValue});\r\n        }\r\n    }else if(e==='m'){\r\n        setHeightValue('m')\r\n        if(vital.height!==\"\"){\r\n            const newHeightValue= (vital.height/100)\r\n            setVitalSignDto ({...vital,  height: newHeightValue});\r\n        }\r\n        \r\n    }\r\n\r\n  }\r\n  /**** Submit Button Processing  */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(validate()){\r\n    setSaving(true)\r\n    objValues.visitDate = vital.encounterDate\r\n    objValues.adverseDrugReactions = adrList\r\n    objValues.artStatusId = getPatientObj.artCommence.id\r\n    objValues.hivEnrollmentId = getPatientObj.enrollment.id\r\n    objValues.opportunisticInfections = infectionList\r\n    objValues.tbScreen = tbObj\r\n    objValues['vitalSignDto'] = vital\r\n    axios.put(`${baseUrl}hiv/art/clinic-visit/${visitId}`, objValues,\r\n      { headers: { \"Authorization\": `Bearer ${token}` } },\r\n\r\n    )\r\n      .then(response => {\r\n        setSaving(false);\r\n        toast.success(\"Clinic Visit updated successful\");\r\n        //GetVisitById(visitId)\r\n        //props.setActiveContent({...props.activeContent, route:'consultation', id:\"\", activeTab:\"history\", actionType:\"view\", obj:{}})\r\n      })\r\n      .catch(error => {\r\n        setSaving(false);\r\n        if(error.response && error.response.data){\r\n          let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        }\r\n        else{\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n       \r\n      });\r\n    }\r\n  }\r\n  //Get visit by ID\r\n  async function GetVisitById(visitID) {\r\n    axios\r\n      .get(`${baseUrl}hiv/art/clinic-visit/${visitID}`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n          const e = response.data\r\n          setVitalSignDto({ ...e.vitalSignDto })\r\n          objValues.clinicalNote = e.clinicalNote\r\n          objValues.functionalStatusId= e.functionalStatusId\r\n          objValues.whoStagingId= e.whoStagingId \r\n          objValues.nextAppointment= e.nextAppointment\r\n          objValues.adherenceLevel = e.adherenceLevel\r\n          setTbObj({...e.tbScreen})\r\n          setAdrList([...e.adverseDrugReactions])\r\n          setInfectionList([...e.opportunisticInfections])\r\n\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  const getVisitDetail=(e)=>{\r\n      setEnableUpdateButton(true)\r\n      setVisitId(e.id)\r\n      GetVisitById(e.id)      \r\n  }\r\n  const EnableUpdateAction =()=>{\r\n\r\n      setEnableUpdate(true)\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n        <div className=\"row\">\r\n            <div className=\"col-xl-3 col-xxl-3 col-lg-3\" >\r\n                <div className=\"card\" style={{ height: \"500px\" }}>\r\n                    <div className=\"card-header  border-0 pb-2\" style={{backgroundColor:\"#014D88\"}}>\r\n                    <h4 className=\"card-title\" style={{color:\"#fff\"}}> Clinic Visits</h4>\r\n                    </div>\r\n                    <div className=\"card-body\" >\r\n                    <PerfectScrollbar\r\n                        style={{ height: \"370px\" }}\r\n                        id=\"DZ_W_Todo1\"\r\n                        className=\"widget-media dz-scroll ps ps--active-y\"\r\n                    >\r\n                    {clinicVisitList.map((visit,index)=>(\t\r\n                    <div className=\"media pb-3 border-bottom mb-0 align-items-center\" key={index}>\t\t\t\t\t\t\t\t\r\n                      <div className=\"media-body\">\r\n                            <ButtonSMUI\r\n                                color='black'\r\n                                content='Visit Date'\r\n                                icon='calendar alternate'\r\n                                onClick={()=>getVisitDetail(visit)}\r\n                                label={{ basic: true, color: 'grey', pointing: 'left', content: `${visit.visitDate}` }}\r\n                            />\r\n                      </div>\r\n                    </div>\r\n\t\t\t\t\t\t))}\r\n                    </PerfectScrollbar>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"col-xl-9 col-xxl-9 col-lg-9\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header  border-0 pb-2\" style={{backgroundColor:\"#014D88\"}}>\r\n                    <h4 className=\"card-title\" style={{color:\"#fff\"}}> </h4>\r\n                    {enableUpdateButton && (\r\n                    <ButtonSMUI color='facebook' onClick={()=>EnableUpdateAction()} >\r\n                      <Icon name='edit' /> Edit Visit \r\n                    </ButtonSMUI>\r\n                    )}\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                    <Grid columns='equal'>\r\n                    <Grid.Column >\r\n                    <Segment>\r\n                    <Label as='a' color='black' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}> Visit Date - {vital.encounterDate}</h4>\r\n                        </Label>\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <FormLabelName >Date of Visit *</FormLabelName>\r\n                            <Input\r\n                                type=\"date\"\r\n                                name=\"encounterDate\"\r\n                                id=\"encounterDate\"\r\n                                value={vital.encounterDate}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            />\r\n                            {errors.encounterDate !==\"\" ? (\r\n                                <span className={classes.error}>{errors.encounterDate}</span>\r\n                            ) : \"\" }\r\n\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n\r\n                        </div>\r\n                        <div className=\"row\">\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Pulse</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"pulse\"\r\n                                id=\"pulse\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"40\"\r\n                                max=\"120\"\r\n                                value={vital.pulse}\r\n                                onKeyUp={handleInputValueCheckPulse} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.pulse !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.pulse}</span>\r\n                        ) : \"\"}\r\n                        {errors.pulse !==\"\" ? (\r\n                            <span className={classes.error}>{errors.pulse}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Respiratory Rate </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"respiratoryRate\"\r\n                                id=\"respiratoryRate\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"10\"\r\n                                max=\"70\"\r\n                                value={vital.respiratoryRate}\r\n                                onKeyUp={handleInputValueCheckRespiratoryRate} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.respiratoryRate !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.respiratoryRate}</span>\r\n                        ) : \"\"}\r\n                        {errors.respiratoryRate !==\"\" ? (\r\n                            <span className={classes.error}>{errors.respiratoryRate}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Temperature </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"temperature\"\r\n                                id=\"temperature\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"35\"\r\n                                max=\"47\"\r\n                                value={vital.temperature}\r\n                                onKeyUp={handleInputValueCheckTemperature} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                <sup>o</sup>c\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.temperature !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.temperature}</span>\r\n                        ) : \"\"}\r\n                        {errors.temperature !==\"\" ? (\r\n                            <span className={classes.error}>{errors.temperature}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Body Weight</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"bodyWeight\"\r\n                                id=\"bodyWeight\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"3\"\r\n                                max=\"150\"\r\n                                value={vital.bodyWeight}\r\n                                onKeyUp={handleInputValueCheckBodyWeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                kg\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.bodyWeight !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.bodyWeight}</span>\r\n                        ) : \"\"}\r\n                        {errors.bodyWeight !==\"\" ? (\r\n                            <span className={classes.error}>{errors.bodyWeight}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>                                   \r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Height</FormLabelName>\r\n                        <InputGroup> \r\n                        <InputGroupText\r\n                                addonType=\"append\"\r\n                                isOpen={dropdownOpen}\r\n                                toggle={toggleDropDown}\r\n                                style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                cm\r\n                        </InputGroupText>\r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"height\"\r\n                                id=\"height\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                value={vital.height}\r\n                                min=\"48.26\"\r\n                                max=\"216.408\"\r\n                                onKeyUp={handleInputValueCheckHeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                                <InputGroupText\r\n                                addonType=\"append\"\r\n                                isOpen={dropdownOpen}\r\n                                toggle={toggleDropDown}\r\n                                style={{ backgroundColor:\"#992E62\", color:\"#fff\", border: \"1px solid #992E62\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                {vital.height!=='' ? (vital.height/100).toFixed(2) + \"m\" : \"m\"}\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.height !==\"\" ? (\r\n                            <span className={classes.error}>{vitalClinicalSupport.height}</span>\r\n                        ) : \"\"}\r\n                        {errors.height !==\"\" ? (\r\n                            <span className={classes.error}>{errors.height}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 mt-2 col-md-4\">\r\n                        {vital.bodyWeight!==\"\" && vital.height!=='' && (\r\n                            <FormGroup>\r\n                            <Label > {\" \"}</Label>\r\n                            <InputGroup> \r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                BMI : {Math.round(vital.bodyWeight/((vital.height * vital.height)/100))}\r\n                            </InputGroupText>                   \r\n                           \r\n                            </InputGroup>                \r\n                            </FormGroup>\r\n                        )}\r\n                    </div>\r\n              </div>\r\n              <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-8\">\r\n                  <FormGroup>\r\n                  <FormLabelName >Blood Pressure</FormLabelName>\r\n                  <InputGroup>\r\n                  <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                          systolic(mmHg)\r\n                  </InputGroupText> \r\n                      <Input \r\n                          type=\"number\"\r\n                          name=\"systolic\"\r\n                          id=\"systolic\"\r\n                          min=\"90\"\r\n                          max=\"240\"\r\n                          onChange={handleInputChangeVitalSignDto}\r\n                          value={vital.systolic}\r\n                          onKeyUp={handleInputValueCheckSystolic}\r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}} \r\n                      />\r\n                      <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                      diastolic(mmHg)\r\n                      </InputGroupText>\r\n                          <Input \r\n                          type=\"number\"\r\n                          name=\"diastolic\"\r\n                          id=\"diastolic\"\r\n                          min={0}\r\n                          max={140}\r\n                          onChange={handleInputChangeVitalSignDto}\r\n                          value={vital.diastolic}\r\n                          onKeyUp={handleInputValueCheckDiastolic} \r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                          />\r\n                      \r\n                      \r\n                  </InputGroup>\r\n                  {vitalClinicalSupport.systolic !==\"\" ? (\r\n                  <span className={classes.error}>{vitalClinicalSupport.systolic}</span>\r\n                  ) : \"\"}\r\n                  {errors.systolic !==\"\" ? (\r\n                      <span className={classes.error}>{errors.systolic}</span>\r\n                  ) : \"\" }  \r\n                  {vitalClinicalSupport.diastolic !==\"\" ? (\r\n                  <span className={classes.error}>{vitalClinicalSupport.diastolic}</span>\r\n                  ) : \"\"}\r\n                  {errors.diastolic !==\"\" ? (\r\n                      <span className={classes.error}>{errors.diastolic}</span>\r\n                  ) : \"\" }          \r\n                  </FormGroup>\r\n              </div>\r\n\r\n              </div>\r\n                        </div>\r\n                        <Label as='a' color='grey' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>CONSULTATION</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n\r\n                        <div className=\" mb-3\">\r\n                        <FormLabelName >Clinical Notes</FormLabelName>\r\n                        <textarea\r\n                            name=\"clinicalNote\"\r\n                            className=\"form-control\"\r\n                            value={objValues.clinicalNote}\r\n                            onChange={handleInputChange}\r\n                            style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                            disabled={!enableUpdate}\r\n                        ></textarea>\r\n                        {errors.clinicalNote !==\"\" ? (\r\n                                <span className={classes.error}>{errors.clinicalNote}</span>\r\n                            ) : \"\" }\r\n                        </div>\r\n                        <div className=\"row\">\r\n\r\n                        <div className=\" mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <FormLabelName >WHO Staging *</FormLabelName>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"whoStagingId\"\r\n                                id=\"whoStagingId\"\r\n                                value={objValues.whoStagingId}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            >\r\n                                <option value=\"select\">Select </option>\r\n\r\n                                {clinicalStage.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                                ))}\r\n                            </Input>\r\n                            {errors.whoStagingId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.whoStagingId}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\" mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <FormLabelName >Functional Status *</FormLabelName>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"functionalStatusId\"\r\n                                id=\"functionalStatusId\"\r\n                                value={objValues.functionalStatusId}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            >\r\n                                <option value=\"select\">Select </option>\r\n\r\n                                {functionalStatus.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                                ))}\r\n                            </Input>\r\n                            {errors.functionalStatusId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.functionalStatusId}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\" mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <FormLabelName >Level of Adherence *</FormLabelName>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"adherenceLevel\"\r\n                                id=\"adherenceLevel\"\r\n                                value={objValues.adherenceLevel}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            >\r\n                                <option value=\"\">Select </option>\r\n\r\n                                {adherenceLevel.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                                ))}\r\n                            </Input>\r\n                            {errors.adherenceLevel !==\"\" ? (\r\n                                <span className={classes.error}>{errors.adherenceLevel}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n\r\n                        </div>\r\n                        <br />\r\n                        <Label as='a' color='red' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>OPPORTUNISTIC INFECTION</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n                        <OpportunisticInfection setInfection={setInfection} infection={infection} setInfectionList={setInfectionList} infectionList={infectionList} enableUpdate={enableUpdate}/>\r\n                        <br />\r\n                        <Label as='a' color='pink' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>ADR</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n                        <ADR setAdrObj={setAdrObj} adrObj={adrObj} setAdrList={setAdrList} adrList={adrList}  enableUpdate={enableUpdate}/>\r\n                        <br />\r\n                        <Label as='a' color='teal' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>TB SCREENING</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n                        {/* TB Screening Form */}\r\n                        <TBScreening tbObj={tbObj} setTbObj={setTbObj} enableUpdate={enableUpdate}/>\r\n                        <br />\r\n                        <Label as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>NEXT CLINICAL APPOINTMENT DATE</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n                        {/* TB Screening Form */}\r\n                        <Input\r\n                                type=\"date\"\r\n                                name=\"nextAppointment\"\r\n                                id=\"nextAppointment\"\r\n                                className=\"col-md-6\"\r\n                                value={objValues.nextAppointment}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                min={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            />\r\n                        {errors.nextAppointment !==\"\" ? (\r\n                                <span className={classes.error}>{errors.nextAppointment}</span>\r\n                            ) : \"\" }\r\n                        <br />\r\n                        <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        disabled={saving}\r\n                        startIcon={<SaveIcon />}\r\n                        style={{backgroundColor:\"#014d88\"}}\r\n                        onClick={handleSubmit}\r\n                        hidden={!enableUpdate}\r\n                        >\r\n                        {!saving ? (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                        ) : (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                        )}\r\n                        </MatButton>\r\n                    </Segment>\r\n                    </Grid.Column>\r\n\r\n                </Grid>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    </div>    \r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClinicVisit;\r\n","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Consultation\\ViewUpdate\\TBScreening\\Index.js",["969"],"import React, { useState, useEffect } from \"react\";\r\nimport { Input, Label, FormGroup} from \"reactstrap\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { token, url as baseUrl } from \"./../../../../../api\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nconst TBScreeningForm = (props) => {\r\n  const [tbStatus, setTbStatus] = useState([]); \r\n  const [TBForms, setTBForms] = useState(false) \r\n\r\n  useEffect(() => {\r\n    TBStatus();\r\n    if(props.tbObj.antiTBDrug ==='NO'){\r\n      setTBForms(true)\r\n    }else{\r\n      setTBForms(false)\r\n    }\r\n    }, [props.tbObj]);\r\n\r\n    ///GET LIST OF FUNCTIONAL%20_STATUS\r\n    // TB STATUS\r\n    const TBStatus =()=>{\r\n    axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    \r\n    }\r\n\r\n    const handleInputChange = e => {\r\n      props.setTbObj ({...props.tbObj,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"antiTBDrug\" ){\r\n          if(e.target.value===\"NO\"){\r\n              setTBForms(true)\r\n          }else{\r\n              setTBForms(false)\r\n          }\r\n        }\r\n      }\r\n\r\n  return (\r\n    <div>\r\n       <div className=\"row\">\r\n          \r\n          <div className=\"form-group mb-3 col-md-6\">\r\n          <FormGroup>\r\n              <Label >Patient on Anti TB Drugs?</Label>\r\n              <Input\r\n                  type=\"select\"\r\n                  name=\"antiTBDrug\"\r\n                  id=\"antiTBDrug\"\r\n                  value={props.tbObj.antiTBDrug}\r\n                  onChange={handleInputChange}\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  disabled={!props.enableUpdate}\r\n                  required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"YES\"> YES</option>\r\n                    <option value=\"NO\">NO </option>\r\n\r\n              </Input>\r\n              \r\n            </FormGroup>\r\n          </div>\r\n          {TBForms===true ? (\r\n            <>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label >Patient Currently on IPT?</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"currentOnIpt\"\r\n                    id=\"currentOnIpt\"\r\n                    value={props.tbObj.currentOnIpt}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\"> Select</option>\r\n                      <option value=\"YES\"> YES</option>\r\n                        <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >coughing?</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"coughing\"\r\n                    id=\"coughing\"\r\n                    value={props.tbObj.coughing}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\"> Select</option>\r\n                      <option value=\"YES\"> YES</option>\r\n                      <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >Night Sweat?</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"nightSweat\"\r\n                    id=\"nightSweat\"\r\n                    value={props.tbObj.nightSweat}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\"> Select</option>\r\n                      <option value=\"YES\"> YES</option>\r\n                      <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >Fever</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"fever\"\r\n                    id=\"fever\"\r\n                    value={props.tbObj.fever}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n                      <option value=\"YES\"> YES</option>\r\n                      <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >Contact with TB Case?</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"contactWithTBCase\"\r\n                    id=\"contactWithTBCase\"\r\n                    value={props.tbObj.contactWithTBCase}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\"> Select</option>\r\n                      <option value=\"YES\"> YES</option>\r\n                      <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >Lethergy</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"lethergy\"\r\n                    id=\"lethergy\"\r\n                    value={props.tbObj.lethergy}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n                      <option value=\"YES\"> YES</option>\r\n                    <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              {/* <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {tbStatus.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div> */}\r\n              {(props.tbObj.currentOnIpt===\"NO\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='TB suspected and referred for evaluation' && x.display!=='Currently on INH prophylaxis'  && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='TB suspected and referred for evaluation' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"YES\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='No sign or symptoms of TB' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"YES\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='No sign or symptoms of TB' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"YES\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='No sign or symptoms of TB' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"YES\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='No sign or symptoms of TB' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"YES\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='No sign or symptoms of TB' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n          </>\r\n          )\r\n          :\r\n          \"\"\r\n          }\r\n        </div>\r\n    </div>\r\n     \r\n  );\r\n};\r\n\r\n\r\n\r\nexport default TBScreeningForm;\r\n","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Consultation\\ViewUpdate\\OpportunisticInfection\\Index.js",["970"],"import React, { useState } from \"react\";\r\nimport {  Table  } from \"react-bootstrap\";\r\nimport { Input, Label, FormGroup, } from \"reactstrap\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport moment from \"moment\";\r\nimport {Icon, List, Label as LabelSui} from 'semantic-ui-react'\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\nconst ADR = (props) => {\r\n  const [errors, setErrors] = useState({});\r\n  const classes = useStyles()\r\n  let temp = { ...errors }\r\n  const handleInfectionInputChange = e => {\r\n  props.setInfection ({...props.infection,  [e.target.name]: e.target.value});\r\n  }\r\n  //Validations of the forms\r\n  const validate = () => {        \r\n    temp.ondateInfection = props.infection.ondateInfection ? \"\" : \"This field is required\"\r\n    temp.illnessInfection = props.infection.illnessInfection ? \"\" : \"This field is required\"\r\n\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n    const addInfection = e => { \r\n      if(validate()){\r\n        props.setInfectionList([...props.infectionList, props.infection])\r\n      }else{\r\n        toast.error(\" Field are required \");\r\n      }\r\n    \r\n    }\r\n    /* Remove ADR  function **/\r\n    const removeInfection = index => {       \r\n    props.infectionList.splice(index, 1);\r\n    props.setInfectionList([...props.infectionList]);\r\n        \r\n    };\r\n                                            \r\n\r\n  return (\r\n    <div>\r\n       <div className=\"row\">\r\n       {props.enableUpdate && (\r\n        <>\r\n          <div className=\"form-group mb-3 col-md-5\">\r\n              <FormGroup>\r\n              <Label >Onset Date </Label>\r\n              <Input\r\n                  type=\"date\"\r\n                  name=\"ondateInfection\"\r\n                  id=\"ondateInfection\"\r\n                  value={props.infection.ondateInfection}\r\n                  onChange={handleInfectionInputChange}\r\n                  max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  required\r\n                  > \r\n              </Input>\r\n              {errors.ondateInfection !==\"\" ? (\r\n                  <span className={classes.error}>{errors.ondateInfection}</span>\r\n              ) : \"\" }\r\n              </FormGroup>\r\n          </div>\r\n          <div className=\"form-group mb-3 col-md-5\">        \r\n          <FormGroup>\r\n              <Label > Illness</Label>\r\n              <Input\r\n                  type=\"text\"\r\n                  name=\"illnessInfection\"\r\n                  id=\"illnessInfection\"\r\n                  value={props.infection.illnessInfection}\r\n                  onChange={handleInfectionInputChange}\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  required\r\n                  > \r\n              </Input>\r\n              {errors.illnessInfection !==\"\" ? (\r\n                  <span className={classes.error}>{errors.illnessInfection}</span>\r\n              ) : \"\" }\r\n              </FormGroup>\r\n          </div>\r\n          <div className=\"form-group mb-3 col-md-2\">\r\n          <LabelSui as='a' color='black'  onClick={addInfection}  size='tiny' style={{ marginTop:35}}>\r\n              <Icon name='plus' /> Add\r\n          </LabelSui>\r\n          </div>\r\n        </>\r\n        )}\r\n        {props.infectionList.length >0 \r\n          ?\r\n            <List>\r\n            <div style={{padding:'3px 0px'}} >\r\n            <Table  striped responsive size=\"sm\" >\r\n                  <thead  >\r\n                      <tr >\r\n                          <th>Illness</th>\r\n                          <th>OnSetDate</th>\r\n                          <th ></th>\r\n                      </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                {props.infectionList.map((relative, index) => (\r\n\r\n                  <InfectionList\r\n                      key={index}\r\n                      index={index}\r\n                      relative={relative}\r\n                      removeInfection={removeInfection}\r\n                  />\r\n                  ))}\r\n                  </tbody>\r\n                  </Table>\r\n                  </div>\r\n                </List>\r\n                :\r\n                \"\"\r\n            } \r\n    </div>\r\n    </div>\r\n     \r\n  );\r\n};\r\n\r\nfunction InfectionList({\r\n    relative,\r\n    index,\r\n    removeInfection,\r\n  }) {\r\n  \r\n   \r\n    return (\r\n            <tr>\r\n  \r\n                <th>{relative.illnessInfection}</th>\r\n                <th>{relative.ondateInfection}</th>\r\n                <th></th>\r\n                <th >\r\n                    <IconButton aria-label=\"delete\" size=\"small\" color=\"error\" onClick={() =>removeInfection(index)}>\r\n                        <DeleteIcon fontSize=\"inherit\" />\r\n                    </IconButton>\r\n                    \r\n                </th>\r\n            </tr> \r\n    );\r\n  }\r\n\r\nexport default ADR;\r\n","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Consultation\\ViewUpdate\\ADR\\Index.js",["971"],"import React, {useState, useEffect } from \"react\";\r\n// import { Link } from 'react-router-dom';\r\nimport { Table  } from \"react-bootstrap\";\r\nimport { Input, Label, FormGroup, } from \"reactstrap\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {Icon, List, Label as LabelSui} from 'semantic-ui-react'\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { url as baseUrl,token } from \"./../../../../../api\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\nconst ADR = (props) => {\r\n  const [errors, setErrors] = useState({});\r\n  const classes = useStyles()\r\n  let temp = { ...errors }\r\n  const [prepSideEffect, setPrepSideEffect] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    PrepSideEffect();\r\n  }, []);\r\n       //Get list of PrepSideEffect\r\n       const PrepSideEffect =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/PREP_SIDE_EFFECTS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               //console.log(response.data);\r\n               setPrepSideEffect(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });\r\n       \r\n        }\r\n  const handAdrleInputChange = e => {\r\n    props.setAdrObj ({...props.adrObj,  [e.target.name]: e.target.value});\r\n  }\r\n   //Validations of the forms\r\n   const validate = () => {        \r\n    temp.adr = props.adrObj.adr ? \"\" : \"This field is required\"\r\n    temp.adrOnsetDate = props.adrObj.adrOnsetDate ? \"\" : \"This field is required\"\r\n\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n  const addADR = e => { \r\n    if(validate()){\r\n        props.setAdrList([...props.adrList, props.adrObj])\r\n    }else{\r\n      toast.error(\" Field are required \");\r\n    }\r\n  }\r\n  /* Remove ADR  function **/\r\n  const removeRelativeLocation = index => {       \r\n      props.adrList.splice(index, 1);\r\n      props.setAdrList([...props.adrList]);\r\n     \r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n        <div className=\"row\">\r\n        {props.enableUpdate && (\r\n        <>\r\n        <div className=\"form-group mb-3 col-md-5\">\r\n\r\n            <FormGroup>\r\n            <Label >ADR </Label>\r\n            \r\n              <Input\r\n                  type=\"select\"\r\n                  name=\"adr\"\r\n                  id=\"adr\"\r\n                  value={props.adrObj.adr}\r\n                  onChange={handAdrleInputChange}\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  required\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n                      {prepSideEffect.map((value) => (\r\n                          <option key={value.id} value={value.display}>\r\n                              {value.display}\r\n                          </option>\r\n                      ))}\r\n              </Input>\r\n                {errors.adr !==\"\" ? (\r\n                    <span className={classes.error}>{errors.adr}</span>\r\n                ) : \"\" }\r\n            </FormGroup>\r\n        </div>\r\n        <div className=\"form-group mb-3 col-md-5\">        \r\n        <FormGroup>\r\n            <Label > Onset Date</Label>\r\n            <Input\r\n                type=\"date\"\r\n                name=\"adrOnsetDate\"\r\n                id=\"adrOnsetDate\"\r\n                value={props.adrObj.adrOnsetDate}\r\n                min={props.artStartDate}\r\n                onChange={handAdrleInputChange}\r\n                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                required\r\n                > \r\n            </Input>\r\n            {errors.adrOnsetDate !==\"\" ? (\r\n                <span className={classes.error}>{errors.adrOnsetDate}</span>\r\n            ) : \"\" }\r\n            </FormGroup>\r\n        </div>\r\n        \r\n        <div className=\"form-group mb-3 col-md-2\">\r\n          <LabelSui as='a' color='black'  onClick={addADR}  size='tiny' style={{ marginTop:35}}>\r\n              <Icon name='plus' /> Add\r\n          </LabelSui>\r\n        </div>\r\n        </>)}\r\n        {props.adrList.length >0 \r\n          ?\r\n            <List>\r\n            <Table  striped responsive>\r\n                  <thead >\r\n                      <tr>\r\n                          <th>ADR</th>\r\n                          <th>OnSetDate</th>\r\n                          <th ></th>\r\n                      </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                {props.adrList.map((relative, index) => (\r\n\r\n                  <RelativeList\r\n                      key={index}\r\n                      index={index}\r\n                      relative={relative}\r\n                      removeRelativeLocation={removeRelativeLocation}\r\n                  />\r\n                  ))}\r\n                  </tbody>\r\n                  </Table>\r\n            </List>\r\n            :\r\n            \"\"\r\n        }       \r\n    </div>\r\n    </div>\r\n     \r\n  );\r\n};\r\n\r\nfunction RelativeList({\r\n  relative,\r\n  index,\r\n  removeRelativeLocation,\r\n}) {\r\n\r\n\r\n  return (\r\n          <tr>\r\n              <th>{relative.adr}</th>\r\n              <th>{relative.adrOnsetDate}</th>\r\n              <th></th>\r\n              <th >\r\n                  <IconButton aria-label=\"delete\" size=\"small\" color=\"error\" onClick={() =>removeRelativeLocation(index)}>\r\n                      <DeleteIcon fontSize=\"inherit\" />\r\n                  </IconButton>\r\n                  \r\n              </th>\r\n          </tr> \r\n  );\r\n}\r\n\r\n\r\nexport default ADR;\r\n","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\PmtctServices\\PmtctEnrollment.js",["972","973","974","975","976","977"],"import React, {useState, useEffect} from 'react';\r\nimport {Card,CardBody, FormGroup, Label, Input, InputGroup,InputGroupText} from 'reactstrap';\r\nimport {Label as FormLabelName, } from \"reactstrap\";\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\nimport {Message } from 'semantic-ui-react'\r\nimport Biometrics from '../Patient/Biometric';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\nconst AncPnc = (props) => {\r\n    const patientObj = props.patientObj;\r\n    console.log(patientObj)\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    //const [values, setValues] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const [enroll, setEnrollDto]= useState({\r\n\r\n                    agreed2PartnerNotification: \"\",\r\n                    ancNo: patientObj.ancNo,\r\n                    bodyWeight: \"\",\r\n                    diastolic: \"\",\r\n                    fetalPresentation: \"\",\r\n                    fpl: \"\",\r\n                    fundalHeight: \"\",\r\n                    id: \"\",\r\n                    infantFeeding: \"\",\r\n                    nextAppointmentDate: \"\",\r\n                    nutritionalSupport: \"\",\r\n                    pmtctEnrollmentDate: \"\",\r\n                    referredTo: \"\",\r\n                    systolic: \"\",\r\n                    tbStatus: \"\",\r\n                    viralLoadSample: \"\",\r\n                    viralLoadSampleDate: \"\",\r\n                    visitStatus: \"\",\r\n                    visitType: \"\"\r\n    })\r\n    \r\n    const handleInputChangeEnrollmentDto = e => {            \r\n        setEnrollDto ({...enroll,  [e.target.name]: e.target.value});\r\n    }\r\n\r\n    //FORM VALIDATION\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        //temp.name = details.name ? \"\" : \"This field is required\"\r\n        //temp.description = details.description ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Vital signs clinical decision support \r\n  const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n    bodyWeight: \"\",\r\n    diastolic: \"\",\r\n    fundalHeight: \"\",\r\n    systolic: \"\",\r\n  })\r\n     //to check the input value for clinical decision \r\n  const handleInputValueCheckHeight =(e)=>{\r\n    if(e.target.name===\"fundalHeight\" && (e.target.value < 48.26 || e.target.value>216.408)){\r\n      const message =\"Height cannot be greater than 216.408 and less than 48.26\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, fundalHeight:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, fundalHeight:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckBodyWeight =(e)=>{\r\n    if(e.target.name===\"bodyWeight\" && (e.target.value < 3 || e.target.value>150)){      \r\n      const message =\"Body weight must not be greater than 150 and less than 3\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckSystolic =(e)=>{\r\n    if(e.target.name===\"systolic\" && (e.target.value < 90 || e.target.value>240)){      \r\n      const message =\"Blood Pressure systolic must not be greater than 240 and less than 90\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckDiastolic =(e)=>{\r\n    if(e.target.name===\"diastolic\" && (e.target.value < 60 || e.target.value>140)){      \r\n      const message =\"Blood Pressure diastolic must not be greater than 140 and less than 60\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckPulse =(e)=>{\r\n    if(e.target.name===\"pulse\" && (e.target.value < 40 || e.target.value>120)){      \r\n    const message =\"Pulse must not be greater than 120 and less than 40\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:\"\"})\r\n    }\r\n  }      \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();        \r\n        \r\n        setSaving(true);\r\n        axios.post(`${baseUrl}pmtct/anc/pmtct-enrollment`, enroll,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n        \r\n        )\r\n            .then(response => {\r\n                setSaving(false);\r\n                //props.patientObj.commenced=true\r\n                toast.success(\"Enrollment save successful\");\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                toast.error(\"Something went wrong\");\r\n                \r\n            });\r\n        \r\n    }\r\n\r\n    function BmiCal (bmi){\r\n        if(bmi<18.5){\r\n          return (\r\n            <Message        \r\n             size='mini'\r\n             color='brown'\r\n              content='Underweight'\r\n            />\r\n          )      \r\n        }else if(bmi >=18.5 && bmi<=24.9){\r\n          <Message        \r\n             size='mini'\r\n             color='olive'\r\n              content='Well nourished'\r\n            />\r\n        }\r\n        else if( bmi>25){\r\n          <Message        \r\n             size='mini'\r\n             color='blue'\r\n              content='Overweight/Obese'\r\n            />\r\n        }\r\n        \r\n      }\r\n\r\n  return (      \r\n      <div >\r\n                   \r\n        <Card >\r\n            <CardBody>\r\n            <form >\r\n                <div className=\"row\">\r\n                <h2>PMTCT Enrollment</h2>\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >ANC ID *</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"ancNo\"\r\n                                    id=\"ancNo\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={patientObj.ancNo} \r\n                                    disabled\r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date of Enrollment</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"pmtctEnrollmentDate\"\r\n                                    id=\"pmtctEnrollmentDate\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.pmtctEnrollmentDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-12\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Blood Pressure</FormLabelName>\r\n                        <InputGroup>\r\n                        <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                systolic(mmHg)\r\n                        </InputGroupText> \r\n                            <Input \r\n                                type=\"text\"\r\n                                name=\"systolic\"\r\n                                id=\"systolic\"\r\n                                min=\"90\"\r\n                                max=\"240\"\r\n                                onChange={handleInputChangeEnrollmentDto}\r\n                                value={enroll.systolic}\r\n                                onKeyUp={handleInputValueCheckSystolic}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}} \r\n                            />\r\n                            \r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                            diastolic(mmHg)\r\n                            </InputGroupText>\r\n                            \r\n                                <Input \r\n                                type=\"text\"\r\n                                name=\"diastolic\"\r\n                                id=\"diastolic\"\r\n                                min={0}\r\n                                max={140}\r\n                                onChange={handleInputChangeEnrollmentDto}\r\n                                value={enroll.diastolic}\r\n                                onKeyUp={handleInputValueCheckDiastolic} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                />\r\n                            \r\n                            \r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.systolic !==\"\" ? (\r\n                            <span className={classes.error}>{vitalClinicalSupport.systolic}</span>\r\n                            ) : \"\"}\r\n                            {errors.systolic !==\"\" ? (\r\n                                <span className={classes.error}>{errors.systolic}</span>\r\n                            ) : \"\" }  \r\n                            {vitalClinicalSupport.diastolic !==\"\" ? (\r\n                            <span className={classes.error} >{vitalClinicalSupport.diastolic}</span>\r\n                            ) : \"\"}\r\n                            {errors.diastolic !==\"\" ? (\r\n                                <span className={'float-end'}><span className={classes.error} >{errors.diastolic}</span></span>\r\n                            ) : \"\" }       \r\n                        </FormGroup>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"row\">                  \r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Body Weight</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"text\"\r\n                                name=\"bodyWeight\"\r\n                                id=\"bodyWeight\"\r\n                                onChange={handleInputChangeEnrollmentDto}\r\n                                min=\"3\"\r\n                                max=\"150\"\r\n                                value={enroll.bodyWeight}\r\n                                onKeyUp={handleInputValueCheckBodyWeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                kg\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.bodyWeight !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.bodyWeight}</span>\r\n                        ) : \"\"}\r\n                        {errors.bodyWeight !==\"\" ? (\r\n                            <span className={classes.error}>{errors.bodyWeight}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>                                   \r\n                    <div className=\"form-group mb-3 col-md-5\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Fundal Height</FormLabelName>\r\n                        <InputGroup> \r\n                        <InputGroupText\r\n                                addonType=\"append\"\r\n                                \r\n                                style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                cm\r\n                        </InputGroupText>\r\n                            <Input \r\n                                type=\"text\"\r\n                                name=\"fundalHeight\"\r\n                                id=\"fundalHeight\"\r\n                                onChange={handleInputChangeEnrollmentDto}\r\n                                value={enroll.fundalHeight}\r\n                                min=\"48.26\"\r\n                                max=\"216.408\"\r\n                                onKeyUp={handleInputValueCheckHeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                                <InputGroupText\r\n                                addonType=\"append\"\r\n                               \r\n                                style={{ backgroundColor:\"#992E62\", color:\"#fff\", border: \"1px solid #992E62\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                {enroll.fundalHeight!=='' && enroll.fundalHeight!=='NaN' ? (enroll.fundalHeight/100).toFixed(2) + \"m\" : \"m\"}\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.fundalHeight !==\"\" ? (\r\n                            <span className={classes.error}>{vitalClinicalSupport.fundalHeight}</span>\r\n                        ) : \"\"}\r\n                        {errors.fundalHeight !==\"\" ? (\r\n                            <span className={classes.error}>{errors.fundalHeight}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 mt-2 col-md-3\">\r\n                        {enroll.bodyWeight!==\"\" && enroll.fundalHeight!=='' && (\r\n                            <FormGroup>\r\n                            <Label > {\" \"}</Label>\r\n                            <InputGroup> \r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                BMI : {(enroll.bodyWeight/(((enroll.fundalHeight/100) * (enroll.fundalHeight/100)))).toFixed(2)}\r\n                            </InputGroupText>                   \r\n                           \r\n                            </InputGroup>                \r\n                            </FormGroup>\r\n                        )}\r\n                    </div>\r\n                    {enroll.bodyWeight!=='' && enroll.fundalHeight!=='' && (\r\n                      <div className=\"form-group mb-3 mt-2 col-md-12\">\r\n                            {\r\n                              BmiCal((enroll.bodyWeight/(((enroll.fundalHeight/100) * (enroll.fundalHeight/100)))).toFixed(2))\r\n                            }\r\n                      </div>\r\n                     )}\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Fetal Presentation</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"fetalPresentation\"\r\n                                    id=\"fetalPresentation\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.fetalPresentation} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Gestational Age(weeks) *</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"gAge\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Type of Visit</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"visitType\"\r\n                                    id=\"visitType\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.visitType} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Visit Status</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"visitStatus\"\r\n                                    id=\"visitStatus\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.visitStatus} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Viral Load Sample Collected?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"viralLoadSample\"\r\n                                    id=\"viralLoadSample\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.viralLoadSample} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date Sample Collected*</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"viralLoadSampleDate\"\r\n                                    id=\"viralLoadSampleDate\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.viralLoadSampleDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >TB Status</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"tbStatus\"\r\n                                    id=\"tbStatus\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.tbStatus} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date of next appointment*</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"nextAppointmentDate\"\r\n                                    id=\"nextAppointmentDate\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.nextAppointmentDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <hr/>\r\n                    <h3>Counseling/Other Services Provided</h3>\r\n                    <hr/>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Nutritional Support</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"nutritionalSupport\"\r\n                                    id=\"nutritionalSupport\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.nutritionalSupport} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Infant Feeding</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"infantFeeding\"\r\n                                    id=\"infantFeeding\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.infantFeeding} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Family Planing Method Used</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"fpl\"\r\n                                    id=\"fpl\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.fpl} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Referred to</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"referredTo\"\r\n                                    id=\"referredTo\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.referredTo} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <hr/>\r\n                    <h3>Partner Information</h3>\r\n                    <hr/>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Agreed to partner notification</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"agreed2PartnerNotification\"\r\n                                    id=\"agreed2PartnerNotification\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.agreed2PartnerNotification} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                </div>\r\n                \r\n                {saving ? <Spinner /> : \"\"}\r\n            <br />\r\n            \r\n            <MatButton\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            startIcon={<SaveIcon />}\r\n            onClick={handleSubmit}\r\n            >\r\n                {!saving ? (\r\n                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                ) : (\r\n                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                )}\r\n            </MatButton>\r\n            \r\n            <MatButton\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                startIcon={<CancelIcon />}\r\n                \r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n            </MatButton>\r\n            \r\n                </form>\r\n            </CardBody>\r\n        </Card> \r\n                  \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AncPnc;\r\n","C:\\Users\\USER\\Documents\\LamisPlus\\PMTCT-module\\src\\main\\webapp\\jsx\\components\\Patient\\ActiveANCPatientList.js",["978","979","980","981","982","983","984"],{"ruleId":"985","severity":1,"message":"986","line":4,"column":41,"nodeType":"987","messageId":"988","endLine":4,"endColumn":47},{"ruleId":"985","severity":1,"message":"989","line":5,"column":8,"nodeType":"987","messageId":"988","endLine":5,"endColumn":22},{"ruleId":"985","severity":1,"message":"990","line":120,"column":12,"nodeType":"987","messageId":"988","endLine":120,"endColumn":17},{"ruleId":"985","severity":1,"message":"991","line":120,"column":19,"nodeType":"987","messageId":"988","endLine":120,"endColumn":27},{"ruleId":"985","severity":1,"message":"992","line":122,"column":20,"nodeType":"987","messageId":"988","endLine":122,"endColumn":29},{"ruleId":"985","severity":1,"message":"993","line":126,"column":12,"nodeType":"987","messageId":"988","endLine":126,"endColumn":24},{"ruleId":"985","severity":1,"message":"994","line":126,"column":26,"nodeType":"987","messageId":"988","endLine":126,"endColumn":41},{"ruleId":"985","severity":1,"message":"995","line":136,"column":12,"nodeType":"987","messageId":"988","endLine":136,"endColumn":38},{"ruleId":"985","severity":1,"message":"996","line":137,"column":24,"nodeType":"987","messageId":"988","endLine":137,"endColumn":37},{"ruleId":"985","severity":1,"message":"997","line":143,"column":13,"nodeType":"987","messageId":"988","endLine":143,"endColumn":25},{"ruleId":"985","severity":1,"message":"998","line":154,"column":13,"nodeType":"987","messageId":"988","endLine":154,"endColumn":27},{"ruleId":"985","severity":1,"message":"999","line":156,"column":13,"nodeType":"987","messageId":"988","endLine":156,"endColumn":26},{"ruleId":"985","severity":1,"message":"1000","line":157,"column":13,"nodeType":"987","messageId":"988","endLine":157,"endColumn":21},{"ruleId":"985","severity":1,"message":"1001","line":158,"column":13,"nodeType":"987","messageId":"988","endLine":158,"endColumn":15},{"ruleId":"985","severity":1,"message":"1002","line":159,"column":13,"nodeType":"987","messageId":"988","endLine":159,"endColumn":28},{"ruleId":"985","severity":1,"message":"1003","line":161,"column":13,"nodeType":"987","messageId":"988","endLine":161,"endColumn":23},{"ruleId":"985","severity":1,"message":"1004","line":163,"column":13,"nodeType":"987","messageId":"988","endLine":163,"endColumn":24},{"ruleId":"985","severity":1,"message":"1005","line":165,"column":13,"nodeType":"987","messageId":"988","endLine":165,"endColumn":28},{"ruleId":"985","severity":1,"message":"1006","line":165,"column":30,"nodeType":"987","messageId":"988","endLine":165,"endColumn":48},{"ruleId":"985","severity":1,"message":"1007","line":168,"column":13,"nodeType":"987","messageId":"988","endLine":168,"endColumn":31},{"ruleId":"1008","severity":1,"message":"1009","line":195,"column":8,"nodeType":"1010","endLine":195,"endColumn":38,"suggestions":"1011"},{"ruleId":"985","severity":1,"message":"1012","line":239,"column":11,"nodeType":"987","messageId":"988","endLine":239,"endColumn":42},{"ruleId":"1013","severity":1,"message":"1014","line":322,"column":28,"nodeType":"1015","messageId":"1016","endLine":322,"endColumn":30},{"ruleId":"1013","severity":1,"message":"1014","line":324,"column":35,"nodeType":"1015","messageId":"1016","endLine":324,"endColumn":37},{"ruleId":"1013","severity":1,"message":"1014","line":411,"column":49,"nodeType":"1015","messageId":"1016","endLine":411,"endColumn":51},{"ruleId":"1013","severity":1,"message":"1014","line":439,"column":69,"nodeType":"1015","messageId":"1016","endLine":439,"endColumn":71},{"ruleId":"1017","severity":1,"message":"1018","line":463,"column":13,"nodeType":"1019","messageId":"1020","endLine":463,"endColumn":149},{"ruleId":"1013","severity":1,"message":"1014","line":473,"column":49,"nodeType":"1015","messageId":"1016","endLine":473,"endColumn":51},{"ruleId":"985","severity":1,"message":"1021","line":481,"column":19,"nodeType":"987","messageId":"988","endLine":481,"endColumn":33},{"ruleId":"1022","severity":1,"message":"1023","line":481,"column":83,"nodeType":"1024","messageId":"1025","endLine":481,"endColumn":85},{"ruleId":"1013","severity":1,"message":"1014","line":539,"column":67,"nodeType":"1015","messageId":"1016","endLine":539,"endColumn":69},{"ruleId":"985","severity":1,"message":"1026","line":564,"column":23,"nodeType":"987","messageId":"988","endLine":564,"endColumn":31},{"ruleId":"985","severity":1,"message":"1027","line":712,"column":11,"nodeType":"987","messageId":"988","endLine":712,"endColumn":25},{"ruleId":"985","severity":1,"message":"1028","line":3,"column":9,"nodeType":"987","messageId":"988","endLine":3,"endColumn":15},{"ruleId":"985","severity":1,"message":"1029","line":10,"column":9,"nodeType":"987","messageId":"988","endLine":10,"endColumn":20},{"ruleId":"985","severity":1,"message":"1030","line":11,"column":13,"nodeType":"987","messageId":"988","endLine":11,"endColumn":16},{"ruleId":"985","severity":1,"message":"1031","line":23,"column":9,"nodeType":"987","messageId":"988","endLine":23,"endColumn":16},{"ruleId":"985","severity":1,"message":"1032","line":27,"column":10,"nodeType":"987","messageId":"988","endLine":27,"endColumn":18},{"ruleId":"985","severity":1,"message":"991","line":121,"column":19,"nodeType":"987","messageId":"988","endLine":121,"endColumn":27},{"ruleId":"985","severity":1,"message":"992","line":123,"column":20,"nodeType":"987","messageId":"988","endLine":123,"endColumn":29},{"ruleId":"985","severity":1,"message":"993","line":127,"column":12,"nodeType":"987","messageId":"988","endLine":127,"endColumn":24},{"ruleId":"985","severity":1,"message":"994","line":127,"column":26,"nodeType":"987","messageId":"988","endLine":127,"endColumn":41},{"ruleId":"985","severity":1,"message":"995","line":137,"column":12,"nodeType":"987","messageId":"988","endLine":137,"endColumn":38},{"ruleId":"985","severity":1,"message":"996","line":138,"column":24,"nodeType":"987","messageId":"988","endLine":138,"endColumn":37},{"ruleId":"985","severity":1,"message":"1033","line":160,"column":13,"nodeType":"987","messageId":"988","endLine":160,"endColumn":19},{"ruleId":"985","severity":1,"message":"1034","line":160,"column":21,"nodeType":"987","messageId":"988","endLine":160,"endColumn":30},{"ruleId":"985","severity":1,"message":"1006","line":167,"column":30,"nodeType":"987","messageId":"988","endLine":167,"endColumn":48},{"ruleId":"985","severity":1,"message":"1021","line":198,"column":19,"nodeType":"987","messageId":"988","endLine":198,"endColumn":33},{"ruleId":"1022","severity":1,"message":"1023","line":198,"column":107,"nodeType":"1024","messageId":"1025","endLine":198,"endColumn":109},{"ruleId":"1008","severity":1,"message":"1035","line":258,"column":8,"nodeType":"1010","endLine":258,"endColumn":61,"suggestions":"1036"},{"ruleId":"985","severity":1,"message":"1012","line":316,"column":11,"nodeType":"987","messageId":"988","endLine":316,"endColumn":42},{"ruleId":"1013","severity":1,"message":"1014","line":425,"column":28,"nodeType":"1015","messageId":"1016","endLine":425,"endColumn":30},{"ruleId":"1013","severity":1,"message":"1014","line":427,"column":35,"nodeType":"1015","messageId":"1016","endLine":427,"endColumn":37},{"ruleId":"1013","severity":1,"message":"1014","line":481,"column":49,"nodeType":"1015","messageId":"1016","endLine":481,"endColumn":51},{"ruleId":"1013","severity":1,"message":"1014","line":531,"column":49,"nodeType":"1015","messageId":"1016","endLine":531,"endColumn":51},{"ruleId":"1013","severity":1,"message":"1014","line":550,"column":69,"nodeType":"1015","messageId":"1016","endLine":550,"endColumn":71},{"ruleId":"985","severity":1,"message":"1021","line":704,"column":19,"nodeType":"987","messageId":"988","endLine":704,"endColumn":33},{"ruleId":"1022","severity":1,"message":"1023","line":704,"column":83,"nodeType":"1024","messageId":"1025","endLine":704,"endColumn":85},{"ruleId":"1013","severity":1,"message":"1014","line":764,"column":67,"nodeType":"1015","messageId":"1016","endLine":764,"endColumn":69},{"ruleId":"985","severity":1,"message":"1026","line":789,"column":23,"nodeType":"987","messageId":"988","endLine":789,"endColumn":31},{"ruleId":"985","severity":1,"message":"1028","line":3,"column":9,"nodeType":"987","messageId":"988","endLine":3,"endColumn":15},{"ruleId":"985","severity":1,"message":"1029","line":10,"column":9,"nodeType":"987","messageId":"988","endLine":10,"endColumn":20},{"ruleId":"985","severity":1,"message":"1030","line":11,"column":13,"nodeType":"987","messageId":"988","endLine":11,"endColumn":16},{"ruleId":"985","severity":1,"message":"1031","line":23,"column":9,"nodeType":"987","messageId":"988","endLine":23,"endColumn":16},{"ruleId":"985","severity":1,"message":"1032","line":27,"column":10,"nodeType":"987","messageId":"988","endLine":27,"endColumn":18},{"ruleId":"985","severity":1,"message":"991","line":121,"column":19,"nodeType":"987","messageId":"988","endLine":121,"endColumn":27},{"ruleId":"985","severity":1,"message":"992","line":123,"column":20,"nodeType":"987","messageId":"988","endLine":123,"endColumn":29},{"ruleId":"985","severity":1,"message":"993","line":126,"column":12,"nodeType":"987","messageId":"988","endLine":126,"endColumn":24},{"ruleId":"985","severity":1,"message":"994","line":126,"column":26,"nodeType":"987","messageId":"988","endLine":126,"endColumn":41},{"ruleId":"985","severity":1,"message":"995","line":136,"column":12,"nodeType":"987","messageId":"988","endLine":136,"endColumn":38},{"ruleId":"985","severity":1,"message":"996","line":137,"column":24,"nodeType":"987","messageId":"988","endLine":137,"endColumn":37},{"ruleId":"985","severity":1,"message":"1037","line":138,"column":11,"nodeType":"987","messageId":"988","endLine":138,"endColumn":21},{"ruleId":"985","severity":1,"message":"1006","line":161,"column":30,"nodeType":"987","messageId":"988","endLine":161,"endColumn":48},{"ruleId":"985","severity":1,"message":"1021","line":192,"column":19,"nodeType":"987","messageId":"988","endLine":192,"endColumn":33},{"ruleId":"1022","severity":1,"message":"1023","line":192,"column":107,"nodeType":"1024","messageId":"1025","endLine":192,"endColumn":109},{"ruleId":"1013","severity":1,"message":"1014","line":209,"column":80,"nodeType":"1015","messageId":"1016","endLine":209,"endColumn":82},{"ruleId":"1013","severity":1,"message":"1014","line":210,"column":74,"nodeType":"1015","messageId":"1016","endLine":210,"endColumn":76},{"ruleId":"1013","severity":1,"message":"1014","line":211,"column":74,"nodeType":"1015","messageId":"1016","endLine":211,"endColumn":76},{"ruleId":"1013","severity":1,"message":"1014","line":212,"column":77,"nodeType":"1015","messageId":"1016","endLine":212,"endColumn":79},{"ruleId":"1008","severity":1,"message":"1038","line":247,"column":8,"nodeType":"1010","endLine":247,"endColumn":61,"suggestions":"1039"},{"ruleId":"985","severity":1,"message":"1012","line":291,"column":11,"nodeType":"987","messageId":"988","endLine":291,"endColumn":42},{"ruleId":"1013","severity":1,"message":"1014","line":392,"column":28,"nodeType":"1015","messageId":"1016","endLine":392,"endColumn":30},{"ruleId":"1013","severity":1,"message":"1014","line":394,"column":35,"nodeType":"1015","messageId":"1016","endLine":394,"endColumn":37},{"ruleId":"1013","severity":1,"message":"1014","line":469,"column":49,"nodeType":"1015","messageId":"1016","endLine":469,"endColumn":51},{"ruleId":"1013","severity":1,"message":"1014","line":488,"column":69,"nodeType":"1015","messageId":"1016","endLine":488,"endColumn":71},{"ruleId":"1013","severity":1,"message":"1014","line":522,"column":49,"nodeType":"1015","messageId":"1016","endLine":522,"endColumn":51},{"ruleId":"985","severity":1,"message":"1021","line":532,"column":19,"nodeType":"987","messageId":"988","endLine":532,"endColumn":33},{"ruleId":"1022","severity":1,"message":"1023","line":532,"column":83,"nodeType":"1024","messageId":"1025","endLine":532,"endColumn":85},{"ruleId":"1013","severity":1,"message":"1014","line":590,"column":67,"nodeType":"1015","messageId":"1016","endLine":590,"endColumn":69},{"ruleId":"985","severity":1,"message":"1026","line":615,"column":23,"nodeType":"987","messageId":"988","endLine":615,"endColumn":31},{"ruleId":"985","severity":1,"message":"1040","line":3,"column":9,"nodeType":"987","messageId":"988","endLine":3,"endColumn":17},{"ruleId":"985","severity":1,"message":"1041","line":15,"column":11,"nodeType":"987","messageId":"988","endLine":15,"endColumn":18},{"ruleId":"985","severity":1,"message":"1042","line":18,"column":11,"nodeType":"987","messageId":"988","endLine":18,"endColumn":31},{"ruleId":"985","severity":1,"message":"1043","line":19,"column":12,"nodeType":"987","messageId":"988","endLine":19,"endColumn":22},{"ruleId":"985","severity":1,"message":"1044","line":19,"column":24,"nodeType":"987","messageId":"988","endLine":19,"endColumn":37},{"ruleId":"985","severity":1,"message":"1045","line":20,"column":12,"nodeType":"987","messageId":"988","endLine":20,"endColumn":22},{"ruleId":"985","severity":1,"message":"1046","line":21,"column":9,"nodeType":"987","messageId":"988","endLine":21,"endColumn":21},{"ruleId":"985","severity":1,"message":"1047","line":22,"column":9,"nodeType":"987","messageId":"988","endLine":22,"endColumn":32},{"ruleId":"1008","severity":1,"message":"1048","line":25,"column":17,"nodeType":"1049","endLine":25,"endColumn":87},{"ruleId":"985","severity":1,"message":"1050","line":52,"column":11,"nodeType":"987","messageId":"988","endLine":52,"endColumn":18},{"ruleId":"985","severity":1,"message":"1051","line":55,"column":11,"nodeType":"987","messageId":"988","endLine":55,"endColumn":27},{"ruleId":"985","severity":1,"message":"1052","line":58,"column":11,"nodeType":"987","messageId":"988","endLine":58,"endColumn":28},{"ruleId":"985","severity":1,"message":"1053","line":61,"column":11,"nodeType":"987","messageId":"988","endLine":61,"endColumn":30},{"ruleId":"985","severity":1,"message":"1054","line":64,"column":11,"nodeType":"987","messageId":"988","endLine":64,"endColumn":29},{"ruleId":"985","severity":1,"message":"1055","line":70,"column":11,"nodeType":"987","messageId":"988","endLine":70,"endColumn":35},{"ruleId":"985","severity":1,"message":"1056","line":79,"column":11,"nodeType":"987","messageId":"988","endLine":79,"endColumn":28},{"ruleId":"1057","severity":1,"message":"1058","line":5,"column":10,"nodeType":"1059","messageId":"1060","endLine":5,"endColumn":24,"fix":"1061"},{"ruleId":"985","severity":1,"message":"1062","line":64,"column":7,"nodeType":"987","messageId":"988","endLine":64,"endColumn":16},{"ruleId":"1013","severity":1,"message":"1014","line":148,"column":76,"nodeType":"1015","messageId":"1016","endLine":148,"endColumn":78},{"ruleId":"1057","severity":1,"message":"1058","line":5,"column":10,"nodeType":"1059","messageId":"1060","endLine":5,"endColumn":24,"fix":"1063"},{"ruleId":"985","severity":1,"message":"1064","line":31,"column":10,"nodeType":"987","messageId":"988","endLine":31,"endColumn":15},{"ruleId":"985","severity":1,"message":"1062","line":64,"column":7,"nodeType":"987","messageId":"988","endLine":64,"endColumn":16},{"ruleId":"985","severity":1,"message":"1065","line":109,"column":12,"nodeType":"987","messageId":"988","endLine":109,"endColumn":23},{"ruleId":"1013","severity":1,"message":"1014","line":148,"column":76,"nodeType":"1015","messageId":"1016","endLine":148,"endColumn":78},{"ruleId":"985","severity":1,"message":"1066","line":4,"column":8,"nodeType":"987","messageId":"988","endLine":4,"endColumn":18},{"ruleId":"985","severity":1,"message":"1067","line":15,"column":10,"nodeType":"987","messageId":"988","endLine":15,"endColumn":16},{"ruleId":"985","severity":1,"message":"1068","line":25,"column":8,"nodeType":"987","messageId":"988","endLine":25,"endColumn":24},{"ruleId":"985","severity":1,"message":"1042","line":68,"column":9,"nodeType":"987","messageId":"988","endLine":68,"endColumn":29},{"ruleId":"985","severity":1,"message":"1069","line":70,"column":9,"nodeType":"987","messageId":"988","endLine":70,"endColumn":20},{"ruleId":"985","severity":1,"message":"1070","line":72,"column":10,"nodeType":"987","messageId":"988","endLine":72,"endColumn":32},{"ruleId":"985","severity":1,"message":"1071","line":72,"column":34,"nodeType":"987","messageId":"988","endLine":72,"endColumn":59},{"ruleId":"985","severity":1,"message":"1072","line":74,"column":10,"nodeType":"987","messageId":"988","endLine":74,"endColumn":17},{"ruleId":"985","severity":1,"message":"1073","line":76,"column":9,"nodeType":"987","messageId":"988","endLine":76,"endColumn":15},{"ruleId":"985","severity":1,"message":"1074","line":78,"column":9,"nodeType":"987","messageId":"988","endLine":78,"endColumn":29},{"ruleId":"985","severity":1,"message":"1075","line":81,"column":9,"nodeType":"987","messageId":"988","endLine":81,"endColumn":18},{"ruleId":"1008","severity":1,"message":"1076","line":85,"column":6,"nodeType":"1010","endLine":85,"endColumn":24,"suggestions":"1077"},{"ruleId":"985","severity":1,"message":"1078","line":128,"column":11,"nodeType":"987","messageId":"988","endLine":128,"endColumn":18},{"ruleId":"985","severity":1,"message":"1079","line":159,"column":11,"nodeType":"987","messageId":"988","endLine":159,"endColumn":30},{"ruleId":"985","severity":1,"message":"1080","line":166,"column":11,"nodeType":"987","messageId":"988","endLine":166,"endColumn":30},{"ruleId":"985","severity":1,"message":"1081","line":170,"column":11,"nodeType":"987","messageId":"988","endLine":170,"endColumn":18},{"ruleId":"985","severity":1,"message":"1082","line":175,"column":11,"nodeType":"987","messageId":"988","endLine":175,"endColumn":24},{"ruleId":"1013","severity":1,"message":"1014","line":181,"column":74,"nodeType":"1015","messageId":"1016","endLine":181,"endColumn":76},{"ruleId":"1013","severity":1,"message":"1014","line":186,"column":73,"nodeType":"1015","messageId":"1016","endLine":186,"endColumn":75},{"ruleId":"985","severity":1,"message":"1083","line":194,"column":11,"nodeType":"987","messageId":"988","endLine":194,"endColumn":33},{"ruleId":"985","severity":1,"message":"1084","line":195,"column":11,"nodeType":"987","messageId":"988","endLine":195,"endColumn":23},{"ruleId":"985","severity":1,"message":"1040","line":3,"column":10,"nodeType":"987","messageId":"988","endLine":3,"endColumn":18},{"ruleId":"985","severity":1,"message":"1085","line":3,"column":20,"nodeType":"987","messageId":"988","endLine":3,"endColumn":23},{"ruleId":"985","severity":1,"message":"1086","line":3,"column":25,"nodeType":"987","messageId":"988","endLine":3,"endColumn":28},{"ruleId":"985","severity":1,"message":"1087","line":5,"column":8,"nodeType":"987","messageId":"988","endLine":5,"endColumn":24},{"ruleId":"985","severity":1,"message":"1088","line":6,"column":10,"nodeType":"987","messageId":"988","endLine":6,"endColumn":14},{"ruleId":"985","severity":1,"message":"1089","line":11,"column":9,"nodeType":"987","messageId":"988","endLine":11,"endColumn":30},{"ruleId":"1008","severity":1,"message":"1090","line":17,"column":8,"nodeType":"1010","endLine":17,"endColumn":32,"suggestions":"1091"},{"ruleId":"985","severity":1,"message":"1088","line":7,"column":10,"nodeType":"987","messageId":"988","endLine":7,"endColumn":14},{"ruleId":"985","severity":1,"message":"1041","line":27,"column":9,"nodeType":"987","messageId":"988","endLine":27,"endColumn":16},{"ruleId":"985","severity":1,"message":"1092","line":29,"column":10,"nodeType":"987","messageId":"988","endLine":29,"endColumn":20},{"ruleId":"985","severity":1,"message":"1093","line":30,"column":10,"nodeType":"987","messageId":"988","endLine":30,"endColumn":25},{"ruleId":"985","severity":1,"message":"1094","line":32,"column":10,"nodeType":"987","messageId":"988","endLine":32,"endColumn":17},{"ruleId":"1008","severity":1,"message":"1095","line":44,"column":6,"nodeType":"1010","endLine":44,"endColumn":27,"suggestions":"1096"},{"ruleId":"985","severity":1,"message":"1097","line":145,"column":9,"nodeType":"987","messageId":"988","endLine":145,"endColumn":20},{"ruleId":"1013","severity":1,"message":"1014","line":432,"column":57,"nodeType":"1015","messageId":"1016","endLine":432,"endColumn":59},{"ruleId":"985","severity":1,"message":"1098","line":1,"column":38,"nodeType":"987","messageId":"988","endLine":1,"endColumn":44},{"ruleId":"985","severity":1,"message":"1099","line":2,"column":9,"nodeType":"987","messageId":"988","endLine":2,"endColumn":14},{"ruleId":"985","severity":1,"message":"1100","line":2,"column":15,"nodeType":"987","messageId":"988","endLine":2,"endColumn":26},{"ruleId":"985","severity":1,"message":"1101","line":2,"column":28,"nodeType":"987","messageId":"988","endLine":2,"endColumn":37},{"ruleId":"985","severity":1,"message":"1102","line":2,"column":38,"nodeType":"987","messageId":"988","endLine":2,"endColumn":42},{"ruleId":"985","severity":1,"message":"1103","line":3,"column":15,"nodeType":"987","messageId":"988","endLine":3,"endColumn":19},{"ruleId":"985","severity":1,"message":"1104","line":3,"column":20,"nodeType":"987","messageId":"988","endLine":3,"endColumn":28},{"ruleId":"985","severity":1,"message":"1105","line":3,"column":44,"nodeType":"987","messageId":"988","endLine":3,"endColumn":54},{"ruleId":"985","severity":1,"message":"1106","line":7,"column":8,"nodeType":"987","messageId":"988","endLine":7,"endColumn":14},{"ruleId":"985","severity":1,"message":"1107","line":13,"column":10,"nodeType":"987","messageId":"988","endLine":13,"endColumn":17},{"ruleId":"985","severity":1,"message":"1108","line":15,"column":8,"nodeType":"987","messageId":"988","endLine":15,"endColumn":19},{"ruleId":"985","severity":1,"message":"1109","line":19,"column":17,"nodeType":"987","messageId":"988","endLine":19,"endColumn":20},{"ruleId":"985","severity":1,"message":"1110","line":20,"column":10,"nodeType":"987","messageId":"988","endLine":20,"endColumn":16},{"ruleId":"985","severity":1,"message":"1111","line":20,"column":18,"nodeType":"987","messageId":"988","endLine":20,"endColumn":24},{"ruleId":"985","severity":1,"message":"1112","line":20,"column":26,"nodeType":"987","messageId":"988","endLine":20,"endColumn":31},{"ruleId":"985","severity":1,"message":"1113","line":20,"column":33,"nodeType":"987","messageId":"988","endLine":20,"endColumn":40},{"ruleId":"985","severity":1,"message":"1114","line":22,"column":8,"nodeType":"987","messageId":"988","endLine":22,"endColumn":11},{"ruleId":"985","severity":1,"message":"1115","line":23,"column":8,"nodeType":"987","messageId":"988","endLine":23,"endColumn":24},{"ruleId":"985","severity":1,"message":"1067","line":24,"column":8,"nodeType":"987","messageId":"988","endLine":24,"endColumn":14},{"ruleId":"985","severity":1,"message":"1116","line":25,"column":8,"nodeType":"987","messageId":"988","endLine":25,"endColumn":11},{"ruleId":"985","severity":1,"message":"1117","line":26,"column":8,"nodeType":"987","messageId":"988","endLine":26,"endColumn":17},{"ruleId":"985","severity":1,"message":"1118","line":29,"column":8,"nodeType":"987","messageId":"988","endLine":29,"endColumn":18},{"ruleId":"985","severity":1,"message":"1119","line":38,"column":8,"nodeType":"987","messageId":"988","endLine":38,"endColumn":19},{"ruleId":"985","severity":1,"message":"1069","line":115,"column":11,"nodeType":"987","messageId":"988","endLine":115,"endColumn":22},{"ruleId":"985","severity":1,"message":"1072","line":119,"column":12,"nodeType":"987","messageId":"988","endLine":119,"endColumn":19},{"ruleId":"985","severity":1,"message":"1094","line":120,"column":12,"nodeType":"987","messageId":"988","endLine":120,"endColumn":19},{"ruleId":"985","severity":1,"message":"1120","line":123,"column":12,"nodeType":"987","messageId":"988","endLine":123,"endColumn":20},{"ruleId":"985","severity":1,"message":"1121","line":129,"column":12,"nodeType":"987","messageId":"988","endLine":129,"endColumn":27},{"ruleId":"985","severity":1,"message":"1122","line":131,"column":11,"nodeType":"987","messageId":"988","endLine":131,"endColumn":19},{"ruleId":"1008","severity":1,"message":"1123","line":191,"column":8,"nodeType":"1010","endLine":191,"endColumn":10,"suggestions":"1124"},{"ruleId":"985","severity":1,"message":"1125","line":222,"column":11,"nodeType":"987","messageId":"988","endLine":222,"endColumn":27},{"ruleId":"985","severity":1,"message":"1102","line":2,"column":10,"nodeType":"987","messageId":"988","endLine":2,"endColumn":14},{"ruleId":"985","severity":1,"message":"1126","line":2,"column":15,"nodeType":"987","messageId":"988","endLine":2,"endColumn":18},{"ruleId":"985","severity":1,"message":"1099","line":13,"column":11,"nodeType":"987","messageId":"988","endLine":13,"endColumn":16},{"ruleId":"985","severity":1,"message":"1067","line":13,"column":18,"nodeType":"987","messageId":"988","endLine":13,"endColumn":24},{"ruleId":"985","severity":1,"message":"1127","line":59,"column":9,"nodeType":"987","messageId":"988","endLine":59,"endColumn":16},{"ruleId":"985","severity":1,"message":"1128","line":61,"column":12,"nodeType":"987","messageId":"988","endLine":61,"endColumn":18},{"ruleId":"985","severity":1,"message":"1129","line":61,"column":20,"nodeType":"987","messageId":"988","endLine":61,"endColumn":29},{"ruleId":"985","severity":1,"message":"998","line":66,"column":12,"nodeType":"987","messageId":"988","endLine":66,"endColumn":26},{"ruleId":"985","severity":1,"message":"1130","line":67,"column":12,"nodeType":"987","messageId":"988","endLine":67,"endColumn":21},{"ruleId":"985","severity":1,"message":"999","line":68,"column":12,"nodeType":"987","messageId":"988","endLine":68,"endColumn":25},{"ruleId":"985","severity":1,"message":"1000","line":69,"column":12,"nodeType":"987","messageId":"988","endLine":69,"endColumn":20},{"ruleId":"985","severity":1,"message":"1001","line":70,"column":12,"nodeType":"987","messageId":"988","endLine":70,"endColumn":14},{"ruleId":"985","severity":1,"message":"1002","line":71,"column":12,"nodeType":"987","messageId":"988","endLine":71,"endColumn":27},{"ruleId":"985","severity":1,"message":"1003","line":73,"column":12,"nodeType":"987","messageId":"988","endLine":73,"endColumn":22},{"ruleId":"985","severity":1,"message":"1004","line":75,"column":12,"nodeType":"987","messageId":"988","endLine":75,"endColumn":23},{"ruleId":"985","severity":1,"message":"1027","line":205,"column":11,"nodeType":"987","messageId":"988","endLine":205,"endColumn":25},{"ruleId":"985","severity":1,"message":"1131","line":213,"column":11,"nodeType":"987","messageId":"988","endLine":213,"endColumn":19},{"ruleId":"1013","severity":1,"message":"1014","line":220,"column":49,"nodeType":"1015","messageId":"1016","endLine":220,"endColumn":51},{"ruleId":"985","severity":1,"message":"1102","line":2,"column":10,"nodeType":"987","messageId":"988","endLine":2,"endColumn":14},{"ruleId":"985","severity":1,"message":"1126","line":2,"column":15,"nodeType":"987","messageId":"988","endLine":2,"endColumn":18},{"ruleId":"985","severity":1,"message":"1099","line":13,"column":11,"nodeType":"987","messageId":"988","endLine":13,"endColumn":16},{"ruleId":"985","severity":1,"message":"1067","line":13,"column":18,"nodeType":"987","messageId":"988","endLine":13,"endColumn":24},{"ruleId":"985","severity":1,"message":"1127","line":59,"column":9,"nodeType":"987","messageId":"988","endLine":59,"endColumn":16},{"ruleId":"985","severity":1,"message":"1132","line":64,"column":24,"nodeType":"987","messageId":"988","endLine":64,"endColumn":37},{"ruleId":"985","severity":1,"message":"1133","line":65,"column":23,"nodeType":"987","messageId":"988","endLine":65,"endColumn":35},{"ruleId":"985","severity":1,"message":"1003","line":67,"column":12,"nodeType":"987","messageId":"988","endLine":67,"endColumn":22},{"ruleId":"985","severity":1,"message":"1004","line":69,"column":12,"nodeType":"987","messageId":"988","endLine":69,"endColumn":23},{"ruleId":"985","severity":1,"message":"1027","line":89,"column":11,"nodeType":"987","messageId":"988","endLine":89,"endColumn":25},{"ruleId":"985","severity":1,"message":"1131","line":97,"column":11,"nodeType":"987","messageId":"988","endLine":97,"endColumn":19},{"ruleId":"1013","severity":1,"message":"1014","line":104,"column":49,"nodeType":"1015","messageId":"1016","endLine":104,"endColumn":51},{"ruleId":"985","severity":1,"message":"1102","line":2,"column":10,"nodeType":"987","messageId":"988","endLine":2,"endColumn":14},{"ruleId":"985","severity":1,"message":"1126","line":2,"column":15,"nodeType":"987","messageId":"988","endLine":2,"endColumn":18},{"ruleId":"985","severity":1,"message":"1099","line":13,"column":11,"nodeType":"987","messageId":"988","endLine":13,"endColumn":16},{"ruleId":"985","severity":1,"message":"1067","line":13,"column":18,"nodeType":"987","messageId":"988","endLine":13,"endColumn":24},{"ruleId":"985","severity":1,"message":"1127","line":59,"column":9,"nodeType":"987","messageId":"988","endLine":59,"endColumn":16},{"ruleId":"985","severity":1,"message":"1132","line":64,"column":24,"nodeType":"987","messageId":"988","endLine":64,"endColumn":37},{"ruleId":"985","severity":1,"message":"1133","line":65,"column":23,"nodeType":"987","messageId":"988","endLine":65,"endColumn":35},{"ruleId":"985","severity":1,"message":"1003","line":67,"column":12,"nodeType":"987","messageId":"988","endLine":67,"endColumn":22},{"ruleId":"985","severity":1,"message":"1004","line":69,"column":12,"nodeType":"987","messageId":"988","endLine":69,"endColumn":23},{"ruleId":"985","severity":1,"message":"1027","line":89,"column":11,"nodeType":"987","messageId":"988","endLine":89,"endColumn":25},{"ruleId":"985","severity":1,"message":"1131","line":97,"column":11,"nodeType":"987","messageId":"988","endLine":97,"endColumn":19},{"ruleId":"1013","severity":1,"message":"1014","line":104,"column":49,"nodeType":"1015","messageId":"1016","endLine":104,"endColumn":51},{"ruleId":"985","severity":1,"message":"1102","line":2,"column":10,"nodeType":"987","messageId":"988","endLine":2,"endColumn":14},{"ruleId":"985","severity":1,"message":"1126","line":2,"column":15,"nodeType":"987","messageId":"988","endLine":2,"endColumn":18},{"ruleId":"985","severity":1,"message":"1099","line":13,"column":11,"nodeType":"987","messageId":"988","endLine":13,"endColumn":16},{"ruleId":"985","severity":1,"message":"1067","line":13,"column":18,"nodeType":"987","messageId":"988","endLine":13,"endColumn":24},{"ruleId":"985","severity":1,"message":"1127","line":59,"column":9,"nodeType":"987","messageId":"988","endLine":59,"endColumn":16},{"ruleId":"985","severity":1,"message":"1134","line":64,"column":12,"nodeType":"987","messageId":"988","endLine":64,"endColumn":22},{"ruleId":"985","severity":1,"message":"1132","line":64,"column":24,"nodeType":"987","messageId":"988","endLine":64,"endColumn":37},{"ruleId":"985","severity":1,"message":"1130","line":65,"column":12,"nodeType":"987","messageId":"988","endLine":65,"endColumn":21},{"ruleId":"985","severity":1,"message":"1133","line":65,"column":23,"nodeType":"987","messageId":"988","endLine":65,"endColumn":35},{"ruleId":"985","severity":1,"message":"1003","line":67,"column":12,"nodeType":"987","messageId":"988","endLine":67,"endColumn":22},{"ruleId":"985","severity":1,"message":"1004","line":69,"column":12,"nodeType":"987","messageId":"988","endLine":69,"endColumn":23},{"ruleId":"985","severity":1,"message":"1027","line":89,"column":11,"nodeType":"987","messageId":"988","endLine":89,"endColumn":25},{"ruleId":"985","severity":1,"message":"1131","line":97,"column":11,"nodeType":"987","messageId":"988","endLine":97,"endColumn":19},{"ruleId":"1013","severity":1,"message":"1014","line":104,"column":49,"nodeType":"1015","messageId":"1016","endLine":104,"endColumn":51},{"ruleId":"985","severity":1,"message":"1102","line":2,"column":10,"nodeType":"987","messageId":"988","endLine":2,"endColumn":14},{"ruleId":"985","severity":1,"message":"1126","line":2,"column":15,"nodeType":"987","messageId":"988","endLine":2,"endColumn":18},{"ruleId":"985","severity":1,"message":"1099","line":13,"column":11,"nodeType":"987","messageId":"988","endLine":13,"endColumn":16},{"ruleId":"985","severity":1,"message":"1067","line":13,"column":18,"nodeType":"987","messageId":"988","endLine":13,"endColumn":24},{"ruleId":"985","severity":1,"message":"1135","line":15,"column":10,"nodeType":"987","messageId":"988","endLine":15,"endColumn":24},{"ruleId":"985","severity":1,"message":"1136","line":18,"column":8,"nodeType":"987","messageId":"988","endLine":18,"endColumn":14},{"ruleId":"985","severity":1,"message":"1127","line":59,"column":9,"nodeType":"987","messageId":"988","endLine":59,"endColumn":16},{"ruleId":"985","severity":1,"message":"1132","line":64,"column":24,"nodeType":"987","messageId":"988","endLine":64,"endColumn":37},{"ruleId":"985","severity":1,"message":"1133","line":65,"column":23,"nodeType":"987","messageId":"988","endLine":65,"endColumn":35},{"ruleId":"985","severity":1,"message":"1003","line":67,"column":12,"nodeType":"987","messageId":"988","endLine":67,"endColumn":22},{"ruleId":"985","severity":1,"message":"1004","line":69,"column":12,"nodeType":"987","messageId":"988","endLine":69,"endColumn":23},{"ruleId":"985","severity":1,"message":"1027","line":89,"column":11,"nodeType":"987","messageId":"988","endLine":89,"endColumn":25},{"ruleId":"985","severity":1,"message":"1131","line":97,"column":11,"nodeType":"987","messageId":"988","endLine":97,"endColumn":19},{"ruleId":"1013","severity":1,"message":"1014","line":104,"column":49,"nodeType":"1015","messageId":"1016","endLine":104,"endColumn":51},{"ruleId":"985","severity":1,"message":"1098","line":1,"column":38,"nodeType":"987","messageId":"988","endLine":1,"endColumn":44},{"ruleId":"985","severity":1,"message":"1105","line":3,"column":48,"nodeType":"987","messageId":"988","endLine":3,"endColumn":58},{"ruleId":"985","severity":1,"message":"1106","line":7,"column":8,"nodeType":"987","messageId":"988","endLine":7,"endColumn":14},{"ruleId":"985","severity":1,"message":"1107","line":13,"column":10,"nodeType":"987","messageId":"988","endLine":13,"endColumn":17},{"ruleId":"985","severity":1,"message":"1137","line":13,"column":19,"nodeType":"987","messageId":"988","endLine":13,"endColumn":23},{"ruleId":"985","severity":1,"message":"1108","line":15,"column":8,"nodeType":"987","messageId":"988","endLine":15,"endColumn":19},{"ruleId":"985","severity":1,"message":"1110","line":20,"column":10,"nodeType":"987","messageId":"988","endLine":20,"endColumn":16},{"ruleId":"985","severity":1,"message":"1111","line":20,"column":18,"nodeType":"987","messageId":"988","endLine":20,"endColumn":24},{"ruleId":"985","severity":1,"message":"1112","line":20,"column":26,"nodeType":"987","messageId":"988","endLine":20,"endColumn":31},{"ruleId":"985","severity":1,"message":"1113","line":20,"column":33,"nodeType":"987","messageId":"988","endLine":20,"endColumn":40},{"ruleId":"985","severity":1,"message":"1067","line":24,"column":8,"nodeType":"987","messageId":"988","endLine":24,"endColumn":14},{"ruleId":"985","severity":1,"message":"1072","line":80,"column":12,"nodeType":"987","messageId":"988","endLine":80,"endColumn":19},{"ruleId":"985","severity":1,"message":"1138","line":80,"column":21,"nodeType":"987","messageId":"988","endLine":80,"endColumn":31},{"ruleId":"1008","severity":1,"message":"1139","line":105,"column":10,"nodeType":"1010","endLine":105,"endColumn":12,"suggestions":"1140"},{"ruleId":"1013","severity":1,"message":"1014","line":155,"column":49,"nodeType":"1015","messageId":"1016","endLine":155,"endColumn":51},{"ruleId":"985","severity":1,"message":"1141","line":1,"column":17,"nodeType":"987","messageId":"988","endLine":1,"endColumn":26},{"ruleId":"985","severity":1,"message":"1142","line":1,"column":28,"nodeType":"987","messageId":"988","endLine":1,"endColumn":36},{"ruleId":"985","severity":1,"message":"1137","line":2,"column":32,"nodeType":"987","messageId":"988","endLine":2,"endColumn":36},{"ruleId":"985","severity":1,"message":"1067","line":2,"column":44,"nodeType":"987","messageId":"988","endLine":2,"endColumn":50},{"ruleId":"985","severity":1,"message":"1143","line":2,"column":57,"nodeType":"987","messageId":"988","endLine":2,"endColumn":61},{"ruleId":"985","severity":1,"message":"1144","line":25,"column":5,"nodeType":"987","messageId":"988","endLine":25,"endColumn":22},{"ruleId":"985","severity":1,"message":"1145","line":74,"column":9,"nodeType":"987","messageId":"988","endLine":74,"endColumn":20},{"ruleId":"985","severity":1,"message":"1146","line":75,"column":10,"nodeType":"987","messageId":"988","endLine":75,"endColumn":21},{"ruleId":"985","severity":1,"message":"1147","line":75,"column":23,"nodeType":"987","messageId":"988","endLine":75,"endColumn":37},{"ruleId":"985","severity":1,"message":"1094","line":78,"column":10,"nodeType":"987","messageId":"988","endLine":78,"endColumn":17},{"ruleId":"985","severity":1,"message":"1000","line":90,"column":10,"nodeType":"987","messageId":"988","endLine":90,"endColumn":18},{"ruleId":"985","severity":1,"message":"1148","line":91,"column":10,"nodeType":"987","messageId":"988","endLine":91,"endColumn":17},{"ruleId":"1008","severity":1,"message":"1149","line":177,"column":6,"nodeType":"1010","endLine":177,"endColumn":8,"suggestions":"1150"},{"ruleId":"985","severity":1,"message":"1151","line":312,"column":9,"nodeType":"987","messageId":"988","endLine":312,"endColumn":27},{"ruleId":"985","severity":1,"message":"1152","line":316,"column":9,"nodeType":"987","messageId":"988","endLine":316,"endColumn":26},{"ruleId":"985","severity":1,"message":"1153","line":320,"column":9,"nodeType":"987","messageId":"988","endLine":320,"endColumn":27},{"ruleId":"1013","severity":1,"message":"1014","line":417,"column":45,"nodeType":"1015","messageId":"1016","endLine":417,"endColumn":47},{"ruleId":"985","severity":1,"message":"1102","line":3,"column":15,"nodeType":"987","messageId":"988","endLine":3,"endColumn":19},{"ruleId":"985","severity":1,"message":"1154","line":3,"column":35,"nodeType":"987","messageId":"988","endLine":3,"endColumn":44},{"ruleId":"985","severity":1,"message":"1155","line":3,"column":46,"nodeType":"987","messageId":"988","endLine":3,"endColumn":54},{"ruleId":"985","severity":1,"message":"1156","line":5,"column":16,"nodeType":"987","messageId":"988","endLine":5,"endColumn":27},{"ruleId":"985","severity":1,"message":"1089","line":9,"column":9,"nodeType":"987","messageId":"988","endLine":9,"endColumn":30},{"ruleId":"985","severity":1,"message":"1157","line":10,"column":9,"nodeType":"987","messageId":"988","endLine":10,"endColumn":30},{"ruleId":"985","severity":1,"message":"1158","line":13,"column":10,"nodeType":"987","messageId":"988","endLine":13,"endColumn":18},{"ruleId":"985","severity":1,"message":"1041","line":35,"column":9,"nodeType":"987","messageId":"988","endLine":35,"endColumn":16},{"ruleId":"985","severity":1,"message":"1159","line":36,"column":10,"nodeType":"987","messageId":"988","endLine":36,"endColumn":20},{"ruleId":"985","severity":1,"message":"1073","line":39,"column":9,"nodeType":"987","messageId":"988","endLine":39,"endColumn":15},{"ruleId":"985","severity":1,"message":"1160","line":42,"column":9,"nodeType":"987","messageId":"988","endLine":42,"endColumn":24},{"ruleId":"985","severity":1,"message":"1161","line":43,"column":11,"nodeType":"987","messageId":"988","endLine":43,"endColumn":21},{"ruleId":"985","severity":1,"message":"1162","line":44,"column":9,"nodeType":"987","messageId":"988","endLine":44,"endColumn":18},{"ruleId":"985","severity":1,"message":"1163","line":51,"column":9,"nodeType":"987","messageId":"988","endLine":51,"endColumn":13},{"ruleId":"985","severity":1,"message":"1164","line":53,"column":9,"nodeType":"987","messageId":"988","endLine":53,"endColumn":20},{"ruleId":"985","severity":1,"message":"1165","line":57,"column":9,"nodeType":"987","messageId":"988","endLine":57,"endColumn":20},{"ruleId":"985","severity":1,"message":"1166","line":6,"column":8,"nodeType":"987","messageId":"988","endLine":6,"endColumn":18},{"ruleId":"985","severity":1,"message":"1167","line":10,"column":10,"nodeType":"987","messageId":"988","endLine":10,"endColumn":20},{"ruleId":"985","severity":1,"message":"1168","line":69,"column":12,"nodeType":"987","messageId":"988","endLine":69,"endColumn":18},{"ruleId":"985","severity":1,"message":"1169","line":69,"column":20,"nodeType":"987","messageId":"988","endLine":69,"endColumn":29},{"ruleId":"985","severity":1,"message":"1170","line":93,"column":26,"nodeType":"987","messageId":"988","endLine":93,"endColumn":41},{"ruleId":"985","severity":1,"message":"1141","line":1,"column":26,"nodeType":"987","messageId":"988","endLine":1,"endColumn":35},{"ruleId":"985","severity":1,"message":"1171","line":2,"column":49,"nodeType":"987","messageId":"988","endLine":2,"endColumn":59},{"ruleId":"985","severity":1,"message":"1172","line":2,"column":60,"nodeType":"987","messageId":"988","endLine":2,"endColumn":74},{"ruleId":"985","severity":1,"message":"1043","line":60,"column":11,"nodeType":"987","messageId":"988","endLine":60,"endColumn":21},{"ruleId":"985","severity":1,"message":"1127","line":61,"column":9,"nodeType":"987","messageId":"988","endLine":61,"endColumn":16},{"ruleId":"985","severity":1,"message":"1173","line":68,"column":15,"nodeType":"987","messageId":"988","endLine":68,"endColumn":32},{"ruleId":"985","severity":1,"message":"1131","line":73,"column":15,"nodeType":"987","messageId":"988","endLine":73,"endColumn":23},{"ruleId":"1013","severity":1,"message":"1014","line":80,"column":53,"nodeType":"1015","messageId":"1016","endLine":80,"endColumn":55},{"ruleId":"985","severity":1,"message":"1141","line":1,"column":26,"nodeType":"987","messageId":"988","endLine":1,"endColumn":35},{"ruleId":"985","severity":1,"message":"1171","line":2,"column":49,"nodeType":"987","messageId":"988","endLine":2,"endColumn":59},{"ruleId":"985","severity":1,"message":"1172","line":2,"column":60,"nodeType":"987","messageId":"988","endLine":2,"endColumn":74},{"ruleId":"985","severity":1,"message":"1127","line":61,"column":9,"nodeType":"987","messageId":"988","endLine":61,"endColumn":16},{"ruleId":"985","severity":1,"message":"1173","line":68,"column":15,"nodeType":"987","messageId":"988","endLine":68,"endColumn":32},{"ruleId":"985","severity":1,"message":"1131","line":73,"column":15,"nodeType":"987","messageId":"988","endLine":73,"endColumn":23},{"ruleId":"1013","severity":1,"message":"1014","line":80,"column":53,"nodeType":"1015","messageId":"1016","endLine":80,"endColumn":55},{"ruleId":"985","severity":1,"message":"1174","line":1,"column":8,"nodeType":"987","messageId":"988","endLine":1,"endColumn":18},{"ruleId":"985","severity":1,"message":"1175","line":2,"column":8,"nodeType":"987","messageId":"988","endLine":2,"endColumn":23},{"ruleId":"1013","severity":1,"message":"1014","line":37,"column":45,"nodeType":"1015","messageId":"1016","endLine":37,"endColumn":47},{"ruleId":"985","severity":1,"message":"1176","line":3,"column":10,"nodeType":"987","messageId":"988","endLine":3,"endColumn":20},{"ruleId":"985","severity":1,"message":"1177","line":12,"column":7,"nodeType":"987","messageId":"988","endLine":12,"endColumn":21},{"ruleId":"1008","severity":1,"message":"1178","line":27,"column":22,"nodeType":"987","endLine":27,"endColumn":33},{"ruleId":"1013","severity":1,"message":"1014","line":60,"column":45,"nodeType":"1015","messageId":"1016","endLine":60,"endColumn":47},{"ruleId":"985","severity":1,"message":"1179","line":6,"column":11,"nodeType":"987","messageId":"988","endLine":6,"endColumn":35},{"ruleId":"985","severity":1,"message":"1180","line":8,"column":11,"nodeType":"987","messageId":"988","endLine":8,"endColumn":25},{"ruleId":"985","severity":1,"message":"1181","line":9,"column":11,"nodeType":"987","messageId":"988","endLine":9,"endColumn":23},{"ruleId":"985","severity":1,"message":"1182","line":10,"column":11,"nodeType":"987","messageId":"988","endLine":10,"endColumn":23},{"ruleId":"985","severity":1,"message":"1126","line":22,"column":10,"nodeType":"987","messageId":"988","endLine":22,"endColumn":13},{"ruleId":"985","severity":1,"message":"1183","line":22,"column":15,"nodeType":"987","messageId":"988","endLine":22,"endColumn":18},{"ruleId":"985","severity":1,"message":"1067","line":24,"column":8,"nodeType":"987","messageId":"988","endLine":24,"endColumn":14},{"ruleId":"985","severity":1,"message":"1184","line":25,"column":8,"nodeType":"987","messageId":"988","endLine":25,"endColumn":19},{"ruleId":"985","severity":1,"message":"1088","line":27,"column":9,"nodeType":"987","messageId":"988","endLine":27,"endColumn":13},{"ruleId":"985","severity":1,"message":"1144","line":31,"column":5,"nodeType":"987","messageId":"988","endLine":31,"endColumn":22},{"ruleId":"985","severity":1,"message":"1145","line":82,"column":9,"nodeType":"987","messageId":"988","endLine":82,"endColumn":20},{"ruleId":"985","severity":1,"message":"1146","line":85,"column":10,"nodeType":"987","messageId":"988","endLine":85,"endColumn":21},{"ruleId":"985","severity":1,"message":"1094","line":89,"column":10,"nodeType":"987","messageId":"988","endLine":89,"endColumn":17},{"ruleId":"985","severity":1,"message":"1000","line":99,"column":10,"nodeType":"987","messageId":"988","endLine":99,"endColumn":18},{"ruleId":"985","severity":1,"message":"1148","line":100,"column":10,"nodeType":"987","messageId":"988","endLine":100,"endColumn":17},{"ruleId":"985","severity":1,"message":"1185","line":102,"column":10,"nodeType":"987","messageId":"988","endLine":102,"endColumn":31},{"ruleId":"1008","severity":1,"message":"1186","line":181,"column":6,"nodeType":"1010","endLine":181,"endColumn":8,"suggestions":"1187"},{"ruleId":"985","severity":1,"message":"1027","line":304,"column":9,"nodeType":"987","messageId":"988","endLine":304,"endColumn":23},{"ruleId":"1013","severity":1,"message":"1014","line":396,"column":45,"nodeType":"1015","messageId":"1016","endLine":396,"endColumn":47},{"ruleId":"985","severity":1,"message":"1188","line":399,"column":10,"nodeType":"987","messageId":"988","endLine":399,"endColumn":24},{"ruleId":"1013","severity":1,"message":"1014","line":60,"column":45,"nodeType":"1015","messageId":"1016","endLine":60,"endColumn":47},{"ruleId":"1013","severity":1,"message":"1014","line":37,"column":45,"nodeType":"1015","messageId":"1016","endLine":37,"endColumn":47},{"ruleId":"985","severity":1,"message":"1176","line":3,"column":10,"nodeType":"987","messageId":"988","endLine":3,"endColumn":20},{"ruleId":"985","severity":1,"message":"986","line":4,"column":41,"nodeType":"987","messageId":"988","endLine":4,"endColumn":47},{"ruleId":"1189","replacedBy":"1190"},{"ruleId":"1191","replacedBy":"1192"},{"ruleId":"985","severity":1,"message":"989","line":6,"column":8,"nodeType":"987","messageId":"988","endLine":6,"endColumn":22},{"ruleId":"985","severity":1,"message":"1135","line":26,"column":10,"nodeType":"987","messageId":"988","endLine":26,"endColumn":24},{"ruleId":"985","severity":1,"message":"990","line":146,"column":12,"nodeType":"987","messageId":"988","endLine":146,"endColumn":17},{"ruleId":"985","severity":1,"message":"991","line":146,"column":19,"nodeType":"987","messageId":"988","endLine":146,"endColumn":27},{"ruleId":"985","severity":1,"message":"992","line":148,"column":20,"nodeType":"987","messageId":"988","endLine":148,"endColumn":29},{"ruleId":"985","severity":1,"message":"993","line":152,"column":12,"nodeType":"987","messageId":"988","endLine":152,"endColumn":24},{"ruleId":"985","severity":1,"message":"994","line":152,"column":26,"nodeType":"987","messageId":"988","endLine":152,"endColumn":41},{"ruleId":"985","severity":1,"message":"995","line":162,"column":12,"nodeType":"987","messageId":"988","endLine":162,"endColumn":38},{"ruleId":"985","severity":1,"message":"1193","line":163,"column":12,"nodeType":"987","messageId":"988","endLine":163,"endColumn":22},{"ruleId":"985","severity":1,"message":"996","line":163,"column":24,"nodeType":"987","messageId":"988","endLine":163,"endColumn":37},{"ruleId":"985","severity":1,"message":"997","line":169,"column":13,"nodeType":"987","messageId":"988","endLine":169,"endColumn":25},{"ruleId":"985","severity":1,"message":"1134","line":188,"column":13,"nodeType":"987","messageId":"988","endLine":188,"endColumn":23},{"ruleId":"985","severity":1,"message":"998","line":189,"column":13,"nodeType":"987","messageId":"988","endLine":189,"endColumn":27},{"ruleId":"985","severity":1,"message":"1130","line":190,"column":13,"nodeType":"987","messageId":"988","endLine":190,"endColumn":22},{"ruleId":"985","severity":1,"message":"999","line":191,"column":13,"nodeType":"987","messageId":"988","endLine":191,"endColumn":26},{"ruleId":"985","severity":1,"message":"1000","line":192,"column":13,"nodeType":"987","messageId":"988","endLine":192,"endColumn":21},{"ruleId":"985","severity":1,"message":"1001","line":193,"column":13,"nodeType":"987","messageId":"988","endLine":193,"endColumn":15},{"ruleId":"985","severity":1,"message":"1002","line":194,"column":13,"nodeType":"987","messageId":"988","endLine":194,"endColumn":28},{"ruleId":"985","severity":1,"message":"1003","line":196,"column":13,"nodeType":"987","messageId":"988","endLine":196,"endColumn":23},{"ruleId":"985","severity":1,"message":"1194","line":196,"column":25,"nodeType":"987","messageId":"988","endLine":196,"endColumn":38},{"ruleId":"985","severity":1,"message":"1004","line":198,"column":13,"nodeType":"987","messageId":"988","endLine":198,"endColumn":24},{"ruleId":"985","severity":1,"message":"1005","line":200,"column":13,"nodeType":"987","messageId":"988","endLine":200,"endColumn":28},{"ruleId":"985","severity":1,"message":"1006","line":200,"column":30,"nodeType":"987","messageId":"988","endLine":200,"endColumn":48},{"ruleId":"985","severity":1,"message":"1007","line":203,"column":13,"nodeType":"987","messageId":"988","endLine":203,"endColumn":31},{"ruleId":"1008","severity":1,"message":"1009","line":230,"column":8,"nodeType":"1010","endLine":230,"endColumn":38,"suggestions":"1195"},{"ruleId":"985","severity":1,"message":"1012","line":274,"column":11,"nodeType":"987","messageId":"988","endLine":274,"endColumn":42},{"ruleId":"1013","severity":1,"message":"1014","line":357,"column":28,"nodeType":"1015","messageId":"1016","endLine":357,"endColumn":30},{"ruleId":"1013","severity":1,"message":"1014","line":359,"column":35,"nodeType":"1015","messageId":"1016","endLine":359,"endColumn":37},{"ruleId":"1013","severity":1,"message":"1014","line":446,"column":49,"nodeType":"1015","messageId":"1016","endLine":446,"endColumn":51},{"ruleId":"1013","severity":1,"message":"1014","line":474,"column":69,"nodeType":"1015","messageId":"1016","endLine":474,"endColumn":71},{"ruleId":"1013","severity":1,"message":"1014","line":508,"column":49,"nodeType":"1015","messageId":"1016","endLine":508,"endColumn":51},{"ruleId":"985","severity":1,"message":"1021","line":517,"column":19,"nodeType":"987","messageId":"988","endLine":517,"endColumn":33},{"ruleId":"1022","severity":1,"message":"1023","line":517,"column":83,"nodeType":"1024","messageId":"1025","endLine":517,"endColumn":85},{"ruleId":"1013","severity":1,"message":"1014","line":575,"column":67,"nodeType":"1015","messageId":"1016","endLine":575,"endColumn":69},{"ruleId":"985","severity":1,"message":"1026","line":600,"column":23,"nodeType":"987","messageId":"988","endLine":600,"endColumn":31},{"ruleId":"985","severity":1,"message":"1027","line":731,"column":11,"nodeType":"987","messageId":"988","endLine":731,"endColumn":25},{"ruleId":"985","severity":1,"message":"1028","line":3,"column":9,"nodeType":"987","messageId":"988","endLine":3,"endColumn":15},{"ruleId":"985","severity":1,"message":"1029","line":10,"column":9,"nodeType":"987","messageId":"988","endLine":10,"endColumn":20},{"ruleId":"985","severity":1,"message":"1030","line":11,"column":13,"nodeType":"987","messageId":"988","endLine":11,"endColumn":16},{"ruleId":"985","severity":1,"message":"1031","line":23,"column":9,"nodeType":"987","messageId":"988","endLine":23,"endColumn":16},{"ruleId":"985","severity":1,"message":"1032","line":27,"column":10,"nodeType":"987","messageId":"988","endLine":27,"endColumn":18},{"ruleId":"985","severity":1,"message":"991","line":121,"column":19,"nodeType":"987","messageId":"988","endLine":121,"endColumn":27},{"ruleId":"985","severity":1,"message":"992","line":123,"column":20,"nodeType":"987","messageId":"988","endLine":123,"endColumn":29},{"ruleId":"985","severity":1,"message":"993","line":126,"column":12,"nodeType":"987","messageId":"988","endLine":126,"endColumn":24},{"ruleId":"985","severity":1,"message":"994","line":126,"column":26,"nodeType":"987","messageId":"988","endLine":126,"endColumn":41},{"ruleId":"985","severity":1,"message":"995","line":136,"column":12,"nodeType":"987","messageId":"988","endLine":136,"endColumn":38},{"ruleId":"985","severity":1,"message":"996","line":137,"column":24,"nodeType":"987","messageId":"988","endLine":137,"endColumn":37},{"ruleId":"985","severity":1,"message":"1037","line":138,"column":11,"nodeType":"987","messageId":"988","endLine":138,"endColumn":21},{"ruleId":"985","severity":1,"message":"1006","line":161,"column":30,"nodeType":"987","messageId":"988","endLine":161,"endColumn":48},{"ruleId":"985","severity":1,"message":"1021","line":192,"column":19,"nodeType":"987","messageId":"988","endLine":192,"endColumn":33},{"ruleId":"1022","severity":1,"message":"1023","line":192,"column":107,"nodeType":"1024","messageId":"1025","endLine":192,"endColumn":109},{"ruleId":"1013","severity":1,"message":"1014","line":209,"column":80,"nodeType":"1015","messageId":"1016","endLine":209,"endColumn":82},{"ruleId":"1013","severity":1,"message":"1014","line":210,"column":74,"nodeType":"1015","messageId":"1016","endLine":210,"endColumn":76},{"ruleId":"1013","severity":1,"message":"1014","line":211,"column":74,"nodeType":"1015","messageId":"1016","endLine":211,"endColumn":76},{"ruleId":"1013","severity":1,"message":"1014","line":212,"column":77,"nodeType":"1015","messageId":"1016","endLine":212,"endColumn":79},{"ruleId":"1008","severity":1,"message":"1038","line":247,"column":8,"nodeType":"1010","endLine":247,"endColumn":61,"suggestions":"1196"},{"ruleId":"985","severity":1,"message":"1012","line":291,"column":11,"nodeType":"987","messageId":"988","endLine":291,"endColumn":42},{"ruleId":"1013","severity":1,"message":"1014","line":392,"column":28,"nodeType":"1015","messageId":"1016","endLine":392,"endColumn":30},{"ruleId":"1013","severity":1,"message":"1014","line":394,"column":35,"nodeType":"1015","messageId":"1016","endLine":394,"endColumn":37},{"ruleId":"1013","severity":1,"message":"1014","line":469,"column":49,"nodeType":"1015","messageId":"1016","endLine":469,"endColumn":51},{"ruleId":"1013","severity":1,"message":"1014","line":488,"column":69,"nodeType":"1015","messageId":"1016","endLine":488,"endColumn":71},{"ruleId":"1013","severity":1,"message":"1014","line":522,"column":49,"nodeType":"1015","messageId":"1016","endLine":522,"endColumn":51},{"ruleId":"985","severity":1,"message":"1021","line":532,"column":19,"nodeType":"987","messageId":"988","endLine":532,"endColumn":33},{"ruleId":"1022","severity":1,"message":"1023","line":532,"column":83,"nodeType":"1024","messageId":"1025","endLine":532,"endColumn":85},{"ruleId":"1013","severity":1,"message":"1014","line":590,"column":67,"nodeType":"1015","messageId":"1016","endLine":590,"endColumn":69},{"ruleId":"985","severity":1,"message":"1026","line":615,"column":23,"nodeType":"987","messageId":"988","endLine":615,"endColumn":31},{"ruleId":"985","severity":1,"message":"990","line":138,"column":12,"nodeType":"987","messageId":"988","endLine":138,"endColumn":17},{"ruleId":"985","severity":1,"message":"991","line":138,"column":19,"nodeType":"987","messageId":"988","endLine":138,"endColumn":27},{"ruleId":"985","severity":1,"message":"992","line":140,"column":20,"nodeType":"987","messageId":"988","endLine":140,"endColumn":29},{"ruleId":"985","severity":1,"message":"1197","line":143,"column":12,"nodeType":"987","messageId":"988","endLine":143,"endColumn":24},{"ruleId":"985","severity":1,"message":"993","line":144,"column":12,"nodeType":"987","messageId":"988","endLine":144,"endColumn":24},{"ruleId":"985","severity":1,"message":"994","line":144,"column":26,"nodeType":"987","messageId":"988","endLine":144,"endColumn":41},{"ruleId":"985","severity":1,"message":"1198","line":145,"column":12,"nodeType":"987","messageId":"988","endLine":145,"endColumn":19},{"ruleId":"985","severity":1,"message":"1199","line":146,"column":12,"nodeType":"987","messageId":"988","endLine":146,"endColumn":32},{"ruleId":"985","severity":1,"message":"1200","line":147,"column":12,"nodeType":"987","messageId":"988","endLine":147,"endColumn":28},{"ruleId":"985","severity":1,"message":"1201","line":148,"column":12,"nodeType":"987","messageId":"988","endLine":148,"endColumn":29},{"ruleId":"985","severity":1,"message":"1202","line":150,"column":12,"nodeType":"987","messageId":"988","endLine":150,"endColumn":21},{"ruleId":"985","severity":1,"message":"1203","line":151,"column":12,"nodeType":"987","messageId":"988","endLine":151,"endColumn":18},{"ruleId":"985","severity":1,"message":"1204","line":152,"column":12,"nodeType":"987","messageId":"988","endLine":152,"endColumn":21},{"ruleId":"985","severity":1,"message":"995","line":154,"column":12,"nodeType":"987","messageId":"988","endLine":154,"endColumn":38},{"ruleId":"985","severity":1,"message":"1193","line":155,"column":12,"nodeType":"987","messageId":"988","endLine":155,"endColumn":22},{"ruleId":"985","severity":1,"message":"996","line":155,"column":24,"nodeType":"987","messageId":"988","endLine":155,"endColumn":37},{"ruleId":"985","severity":1,"message":"997","line":161,"column":13,"nodeType":"987","messageId":"988","endLine":161,"endColumn":25},{"ruleId":"985","severity":1,"message":"1134","line":179,"column":13,"nodeType":"987","messageId":"988","endLine":179,"endColumn":23},{"ruleId":"985","severity":1,"message":"998","line":180,"column":13,"nodeType":"987","messageId":"988","endLine":180,"endColumn":27},{"ruleId":"985","severity":1,"message":"1130","line":181,"column":13,"nodeType":"987","messageId":"988","endLine":181,"endColumn":22},{"ruleId":"985","severity":1,"message":"999","line":182,"column":13,"nodeType":"987","messageId":"988","endLine":182,"endColumn":26},{"ruleId":"985","severity":1,"message":"1000","line":183,"column":13,"nodeType":"987","messageId":"988","endLine":183,"endColumn":21},{"ruleId":"985","severity":1,"message":"1001","line":184,"column":13,"nodeType":"987","messageId":"988","endLine":184,"endColumn":15},{"ruleId":"985","severity":1,"message":"1033","line":185,"column":13,"nodeType":"987","messageId":"988","endLine":185,"endColumn":19},{"ruleId":"985","severity":1,"message":"1034","line":185,"column":21,"nodeType":"987","messageId":"988","endLine":185,"endColumn":30},{"ruleId":"985","severity":1,"message":"1002","line":186,"column":13,"nodeType":"987","messageId":"988","endLine":186,"endColumn":28},{"ruleId":"985","severity":1,"message":"1003","line":188,"column":13,"nodeType":"987","messageId":"988","endLine":188,"endColumn":23},{"ruleId":"985","severity":1,"message":"1004","line":190,"column":13,"nodeType":"987","messageId":"988","endLine":190,"endColumn":24},{"ruleId":"985","severity":1,"message":"1005","line":192,"column":13,"nodeType":"987","messageId":"988","endLine":192,"endColumn":28},{"ruleId":"985","severity":1,"message":"1006","line":192,"column":30,"nodeType":"987","messageId":"988","endLine":192,"endColumn":48},{"ruleId":"985","severity":1,"message":"1021","line":223,"column":19,"nodeType":"987","messageId":"988","endLine":223,"endColumn":33},{"ruleId":"1022","severity":1,"message":"1023","line":223,"column":107,"nodeType":"1024","messageId":"1025","endLine":223,"endColumn":109},{"ruleId":"1008","severity":1,"message":"1035","line":285,"column":8,"nodeType":"1010","endLine":285,"endColumn":61,"suggestions":"1205"},{"ruleId":"985","severity":1,"message":"1206","line":364,"column":12,"nodeType":"987","messageId":"988","endLine":364,"endColumn":21},{"ruleId":"985","severity":1,"message":"1207","line":414,"column":11,"nodeType":"987","messageId":"988","endLine":414,"endColumn":26},{"ruleId":"985","severity":1,"message":"1208","line":439,"column":11,"nodeType":"987","messageId":"988","endLine":439,"endColumn":34},{"ruleId":"1013","severity":1,"message":"1014","line":440,"column":28,"nodeType":"1015","messageId":"1016","endLine":440,"endColumn":30},{"ruleId":"1013","severity":1,"message":"1014","line":442,"column":35,"nodeType":"1015","messageId":"1016","endLine":442,"endColumn":37},{"ruleId":"1013","severity":1,"message":"1014","line":496,"column":49,"nodeType":"1015","messageId":"1016","endLine":496,"endColumn":51},{"ruleId":"985","severity":1,"message":"1209","line":532,"column":11,"nodeType":"987","messageId":"988","endLine":532,"endColumn":28},{"ruleId":"985","severity":1,"message":"1210","line":536,"column":11,"nodeType":"987","messageId":"988","endLine":536,"endColumn":39},{"ruleId":"1013","severity":1,"message":"1014","line":547,"column":49,"nodeType":"1015","messageId":"1016","endLine":547,"endColumn":51},{"ruleId":"985","severity":1,"message":"1211","line":550,"column":11,"nodeType":"987","messageId":"988","endLine":550,"endColumn":33},{"ruleId":"985","severity":1,"message":"1212","line":556,"column":11,"nodeType":"987","messageId":"988","endLine":556,"endColumn":31},{"ruleId":"985","severity":1,"message":"1213","line":560,"column":11,"nodeType":"987","messageId":"988","endLine":560,"endColumn":29},{"ruleId":"985","severity":1,"message":"1214","line":565,"column":11,"nodeType":"987","messageId":"988","endLine":565,"endColumn":26},{"ruleId":"1013","severity":1,"message":"1014","line":566,"column":69,"nodeType":"1015","messageId":"1016","endLine":566,"endColumn":71},{"ruleId":"985","severity":1,"message":"1215","line":569,"column":11,"nodeType":"987","messageId":"988","endLine":569,"endColumn":37},{"ruleId":"985","severity":1,"message":"1216","line":694,"column":11,"nodeType":"987","messageId":"988","endLine":694,"endColumn":27},{"ruleId":"985","severity":1,"message":"1217","line":698,"column":11,"nodeType":"987","messageId":"988","endLine":698,"endColumn":32},{"ruleId":"985","severity":1,"message":"1027","line":704,"column":11,"nodeType":"987","messageId":"988","endLine":704,"endColumn":25},{"ruleId":"985","severity":1,"message":"1026","line":721,"column":23,"nodeType":"987","messageId":"988","endLine":721,"endColumn":31},{"ruleId":"985","severity":1,"message":"1040","line":3,"column":9,"nodeType":"987","messageId":"988","endLine":3,"endColumn":17},{"ruleId":"985","severity":1,"message":"1041","line":15,"column":11,"nodeType":"987","messageId":"988","endLine":15,"endColumn":18},{"ruleId":"985","severity":1,"message":"1042","line":18,"column":11,"nodeType":"987","messageId":"988","endLine":18,"endColumn":31},{"ruleId":"985","severity":1,"message":"1043","line":19,"column":12,"nodeType":"987","messageId":"988","endLine":19,"endColumn":22},{"ruleId":"985","severity":1,"message":"1044","line":19,"column":24,"nodeType":"987","messageId":"988","endLine":19,"endColumn":37},{"ruleId":"985","severity":1,"message":"1045","line":20,"column":12,"nodeType":"987","messageId":"988","endLine":20,"endColumn":22},{"ruleId":"985","severity":1,"message":"1046","line":21,"column":9,"nodeType":"987","messageId":"988","endLine":21,"endColumn":21},{"ruleId":"985","severity":1,"message":"1047","line":22,"column":9,"nodeType":"987","messageId":"988","endLine":22,"endColumn":32},{"ruleId":"1008","severity":1,"message":"1048","line":25,"column":17,"nodeType":"1049","endLine":25,"endColumn":87},{"ruleId":"985","severity":1,"message":"1066","line":4,"column":8,"nodeType":"987","messageId":"988","endLine":4,"endColumn":18},{"ruleId":"985","severity":1,"message":"1218","line":6,"column":8,"nodeType":"987","messageId":"988","endLine":6,"endColumn":29},{"ruleId":"985","severity":1,"message":"1219","line":8,"column":8,"nodeType":"987","messageId":"988","endLine":8,"endColumn":29},{"ruleId":"985","severity":1,"message":"1220","line":9,"column":8,"nodeType":"987","messageId":"988","endLine":9,"endColumn":22},{"ruleId":"985","severity":1,"message":"1221","line":14,"column":8,"nodeType":"987","messageId":"988","endLine":14,"endColumn":15},{"ruleId":"985","severity":1,"message":"1067","line":15,"column":10,"nodeType":"987","messageId":"988","endLine":15,"endColumn":16},{"ruleId":"985","severity":1,"message":"1068","line":25,"column":8,"nodeType":"987","messageId":"988","endLine":25,"endColumn":24},{"ruleId":"985","severity":1,"message":"1069","line":70,"column":9,"nodeType":"987","messageId":"988","endLine":70,"endColumn":20},{"ruleId":"985","severity":1,"message":"1070","line":72,"column":10,"nodeType":"987","messageId":"988","endLine":72,"endColumn":32},{"ruleId":"985","severity":1,"message":"1071","line":72,"column":34,"nodeType":"987","messageId":"988","endLine":72,"endColumn":59},{"ruleId":"985","severity":1,"message":"1072","line":74,"column":10,"nodeType":"987","messageId":"988","endLine":74,"endColumn":17},{"ruleId":"985","severity":1,"message":"1073","line":76,"column":9,"nodeType":"987","messageId":"988","endLine":76,"endColumn":15},{"ruleId":"985","severity":1,"message":"1074","line":78,"column":9,"nodeType":"987","messageId":"988","endLine":78,"endColumn":29},{"ruleId":"985","severity":1,"message":"1075","line":81,"column":9,"nodeType":"987","messageId":"988","endLine":81,"endColumn":18},{"ruleId":"1008","severity":1,"message":"1076","line":85,"column":6,"nodeType":"1010","endLine":85,"endColumn":24,"suggestions":"1222"},{"ruleId":"985","severity":1,"message":"1078","line":128,"column":11,"nodeType":"987","messageId":"988","endLine":128,"endColumn":18},{"ruleId":"985","severity":1,"message":"1079","line":159,"column":11,"nodeType":"987","messageId":"988","endLine":159,"endColumn":30},{"ruleId":"985","severity":1,"message":"1223","line":162,"column":11,"nodeType":"987","messageId":"988","endLine":162,"endColumn":34},{"ruleId":"985","severity":1,"message":"1080","line":166,"column":11,"nodeType":"987","messageId":"988","endLine":166,"endColumn":30},{"ruleId":"985","severity":1,"message":"1081","line":170,"column":11,"nodeType":"987","messageId":"988","endLine":170,"endColumn":18},{"ruleId":"985","severity":1,"message":"1082","line":175,"column":11,"nodeType":"987","messageId":"988","endLine":175,"endColumn":24},{"ruleId":"1013","severity":1,"message":"1014","line":181,"column":74,"nodeType":"1015","messageId":"1016","endLine":181,"endColumn":76},{"ruleId":"1013","severity":1,"message":"1014","line":186,"column":73,"nodeType":"1015","messageId":"1016","endLine":186,"endColumn":75},{"ruleId":"985","severity":1,"message":"1083","line":194,"column":11,"nodeType":"987","messageId":"988","endLine":194,"endColumn":33},{"ruleId":"985","severity":1,"message":"1084","line":195,"column":11,"nodeType":"987","messageId":"988","endLine":195,"endColumn":23},{"ruleId":"985","severity":1,"message":"1098","line":1,"column":38,"nodeType":"987","messageId":"988","endLine":1,"endColumn":44},{"ruleId":"985","severity":1,"message":"1099","line":2,"column":9,"nodeType":"987","messageId":"988","endLine":2,"endColumn":14},{"ruleId":"985","severity":1,"message":"1100","line":2,"column":15,"nodeType":"987","messageId":"988","endLine":2,"endColumn":26},{"ruleId":"985","severity":1,"message":"1101","line":2,"column":28,"nodeType":"987","messageId":"988","endLine":2,"endColumn":37},{"ruleId":"985","severity":1,"message":"1102","line":2,"column":38,"nodeType":"987","messageId":"988","endLine":2,"endColumn":42},{"ruleId":"985","severity":1,"message":"1103","line":3,"column":15,"nodeType":"987","messageId":"988","endLine":3,"endColumn":19},{"ruleId":"985","severity":1,"message":"1104","line":3,"column":20,"nodeType":"987","messageId":"988","endLine":3,"endColumn":28},{"ruleId":"985","severity":1,"message":"1105","line":3,"column":44,"nodeType":"987","messageId":"988","endLine":3,"endColumn":54},{"ruleId":"985","severity":1,"message":"1106","line":7,"column":8,"nodeType":"987","messageId":"988","endLine":7,"endColumn":14},{"ruleId":"985","severity":1,"message":"1107","line":13,"column":10,"nodeType":"987","messageId":"988","endLine":13,"endColumn":17},{"ruleId":"985","severity":1,"message":"1108","line":15,"column":8,"nodeType":"987","messageId":"988","endLine":15,"endColumn":19},{"ruleId":"985","severity":1,"message":"1109","line":19,"column":17,"nodeType":"987","messageId":"988","endLine":19,"endColumn":20},{"ruleId":"985","severity":1,"message":"1110","line":20,"column":10,"nodeType":"987","messageId":"988","endLine":20,"endColumn":16},{"ruleId":"985","severity":1,"message":"1111","line":20,"column":18,"nodeType":"987","messageId":"988","endLine":20,"endColumn":24},{"ruleId":"985","severity":1,"message":"1112","line":20,"column":26,"nodeType":"987","messageId":"988","endLine":20,"endColumn":31},{"ruleId":"985","severity":1,"message":"1113","line":20,"column":33,"nodeType":"987","messageId":"988","endLine":20,"endColumn":40},{"ruleId":"985","severity":1,"message":"1114","line":22,"column":8,"nodeType":"987","messageId":"988","endLine":22,"endColumn":11},{"ruleId":"985","severity":1,"message":"1115","line":23,"column":8,"nodeType":"987","messageId":"988","endLine":23,"endColumn":24},{"ruleId":"985","severity":1,"message":"1067","line":24,"column":8,"nodeType":"987","messageId":"988","endLine":24,"endColumn":14},{"ruleId":"985","severity":1,"message":"1116","line":25,"column":8,"nodeType":"987","messageId":"988","endLine":25,"endColumn":11},{"ruleId":"985","severity":1,"message":"1117","line":26,"column":8,"nodeType":"987","messageId":"988","endLine":26,"endColumn":17},{"ruleId":"985","severity":1,"message":"1118","line":29,"column":8,"nodeType":"987","messageId":"988","endLine":29,"endColumn":18},{"ruleId":"985","severity":1,"message":"1119","line":38,"column":8,"nodeType":"987","messageId":"988","endLine":38,"endColumn":19},{"ruleId":"985","severity":1,"message":"1069","line":115,"column":11,"nodeType":"987","messageId":"988","endLine":115,"endColumn":22},{"ruleId":"985","severity":1,"message":"1072","line":119,"column":12,"nodeType":"987","messageId":"988","endLine":119,"endColumn":19},{"ruleId":"985","severity":1,"message":"1094","line":120,"column":12,"nodeType":"987","messageId":"988","endLine":120,"endColumn":19},{"ruleId":"985","severity":1,"message":"1120","line":123,"column":12,"nodeType":"987","messageId":"988","endLine":123,"endColumn":20},{"ruleId":"985","severity":1,"message":"1121","line":129,"column":12,"nodeType":"987","messageId":"988","endLine":129,"endColumn":27},{"ruleId":"985","severity":1,"message":"1122","line":131,"column":11,"nodeType":"987","messageId":"988","endLine":131,"endColumn":19},{"ruleId":"1008","severity":1,"message":"1123","line":191,"column":8,"nodeType":"1010","endLine":191,"endColumn":10,"suggestions":"1224"},{"ruleId":"985","severity":1,"message":"1125","line":222,"column":11,"nodeType":"987","messageId":"988","endLine":222,"endColumn":27},{"ruleId":"1057","severity":1,"message":"1058","line":5,"column":10,"nodeType":"1059","messageId":"1060","endLine":5,"endColumn":24,"fix":"1225"},{"ruleId":"985","severity":1,"message":"1226","line":29,"column":10,"nodeType":"987","messageId":"988","endLine":29,"endColumn":21},{"ruleId":"985","severity":1,"message":"1064","line":31,"column":10,"nodeType":"987","messageId":"988","endLine":31,"endColumn":15},{"ruleId":"985","severity":1,"message":"1062","line":64,"column":7,"nodeType":"987","messageId":"988","endLine":64,"endColumn":16},{"ruleId":"985","severity":1,"message":"1065","line":109,"column":12,"nodeType":"987","messageId":"988","endLine":109,"endColumn":23},{"ruleId":"985","severity":1,"message":"1094","line":110,"column":12,"nodeType":"987","messageId":"988","endLine":110,"endColumn":19},{"ruleId":"1013","severity":1,"message":"1014","line":148,"column":76,"nodeType":"1015","messageId":"1016","endLine":148,"endColumn":78},{"ruleId":"1057","severity":1,"message":"1058","line":5,"column":10,"nodeType":"1059","messageId":"1060","endLine":5,"endColumn":24,"fix":"1227"},{"ruleId":"985","severity":1,"message":"1062","line":64,"column":7,"nodeType":"987","messageId":"988","endLine":64,"endColumn":16},{"ruleId":"1013","severity":1,"message":"1014","line":148,"column":76,"nodeType":"1015","messageId":"1016","endLine":148,"endColumn":78},{"ruleId":"985","severity":1,"message":"1228","line":4,"column":8,"nodeType":"987","messageId":"988","endLine":4,"endColumn":25},{"ruleId":"1008","severity":1,"message":"1090","line":17,"column":8,"nodeType":"1010","endLine":17,"endColumn":32,"suggestions":"1229"},{"ruleId":"985","severity":1,"message":"1088","line":7,"column":10,"nodeType":"987","messageId":"988","endLine":7,"endColumn":14},{"ruleId":"985","severity":1,"message":"1041","line":27,"column":9,"nodeType":"987","messageId":"988","endLine":27,"endColumn":16},{"ruleId":"985","severity":1,"message":"1092","line":29,"column":10,"nodeType":"987","messageId":"988","endLine":29,"endColumn":20},{"ruleId":"985","severity":1,"message":"1093","line":30,"column":10,"nodeType":"987","messageId":"988","endLine":30,"endColumn":25},{"ruleId":"985","severity":1,"message":"1230","line":31,"column":10,"nodeType":"987","messageId":"988","endLine":31,"endColumn":26},{"ruleId":"985","severity":1,"message":"1094","line":32,"column":10,"nodeType":"987","messageId":"988","endLine":32,"endColumn":17},{"ruleId":"1008","severity":1,"message":"1095","line":44,"column":6,"nodeType":"1010","endLine":44,"endColumn":27,"suggestions":"1231"},{"ruleId":"985","severity":1,"message":"1097","line":145,"column":9,"nodeType":"987","messageId":"988","endLine":145,"endColumn":20},{"ruleId":"1013","severity":1,"message":"1014","line":432,"column":57,"nodeType":"1015","messageId":"1016","endLine":432,"endColumn":59},{"ruleId":"985","severity":1,"message":"1141","line":1,"column":26,"nodeType":"987","messageId":"988","endLine":1,"endColumn":35},{"ruleId":"985","severity":1,"message":"1127","line":60,"column":9,"nodeType":"987","messageId":"988","endLine":60,"endColumn":16},{"ruleId":"985","severity":1,"message":"1131","line":86,"column":15,"nodeType":"987","messageId":"988","endLine":86,"endColumn":23},{"ruleId":"1013","severity":1,"message":"1014","line":93,"column":53,"nodeType":"1015","messageId":"1016","endLine":93,"endColumn":55},{"ruleId":"985","severity":1,"message":"1141","line":1,"column":26,"nodeType":"987","messageId":"988","endLine":1,"endColumn":35},{"ruleId":"985","severity":1,"message":"1167","line":10,"column":10,"nodeType":"987","messageId":"988","endLine":10,"endColumn":20},{"ruleId":"985","severity":1,"message":"1131","line":93,"column":15,"nodeType":"987","messageId":"988","endLine":93,"endColumn":23},{"ruleId":"1013","severity":1,"message":"1014","line":100,"column":53,"nodeType":"1015","messageId":"1016","endLine":100,"endColumn":55},{"ruleId":"985","severity":1,"message":"1040","line":3,"column":10,"nodeType":"987","messageId":"988","endLine":3,"endColumn":18},{"ruleId":"985","severity":1,"message":"1085","line":3,"column":20,"nodeType":"987","messageId":"988","endLine":3,"endColumn":23},{"ruleId":"985","severity":1,"message":"1086","line":3,"column":25,"nodeType":"987","messageId":"988","endLine":3,"endColumn":28},{"ruleId":"985","severity":1,"message":"1087","line":5,"column":8,"nodeType":"987","messageId":"988","endLine":5,"endColumn":24},{"ruleId":"985","severity":1,"message":"1088","line":6,"column":10,"nodeType":"987","messageId":"988","endLine":6,"endColumn":14},{"ruleId":"985","severity":1,"message":"1089","line":11,"column":9,"nodeType":"987","messageId":"988","endLine":11,"endColumn":30},{"ruleId":"985","severity":1,"message":"1098","line":1,"column":38,"nodeType":"987","messageId":"988","endLine":1,"endColumn":44},{"ruleId":"985","severity":1,"message":"1105","line":3,"column":48,"nodeType":"987","messageId":"988","endLine":3,"endColumn":58},{"ruleId":"985","severity":1,"message":"1106","line":7,"column":8,"nodeType":"987","messageId":"988","endLine":7,"endColumn":14},{"ruleId":"985","severity":1,"message":"1107","line":13,"column":10,"nodeType":"987","messageId":"988","endLine":13,"endColumn":17},{"ruleId":"985","severity":1,"message":"1137","line":13,"column":19,"nodeType":"987","messageId":"988","endLine":13,"endColumn":23},{"ruleId":"985","severity":1,"message":"1108","line":15,"column":8,"nodeType":"987","messageId":"988","endLine":15,"endColumn":19},{"ruleId":"985","severity":1,"message":"1110","line":20,"column":10,"nodeType":"987","messageId":"988","endLine":20,"endColumn":16},{"ruleId":"985","severity":1,"message":"1111","line":20,"column":18,"nodeType":"987","messageId":"988","endLine":20,"endColumn":24},{"ruleId":"985","severity":1,"message":"1112","line":20,"column":26,"nodeType":"987","messageId":"988","endLine":20,"endColumn":31},{"ruleId":"985","severity":1,"message":"1113","line":20,"column":33,"nodeType":"987","messageId":"988","endLine":20,"endColumn":40},{"ruleId":"985","severity":1,"message":"1067","line":24,"column":8,"nodeType":"987","messageId":"988","endLine":24,"endColumn":14},{"ruleId":"985","severity":1,"message":"1072","line":80,"column":12,"nodeType":"987","messageId":"988","endLine":80,"endColumn":19},{"ruleId":"985","severity":1,"message":"1138","line":80,"column":21,"nodeType":"987","messageId":"988","endLine":80,"endColumn":31},{"ruleId":"1008","severity":1,"message":"1139","line":105,"column":10,"nodeType":"1010","endLine":105,"endColumn":12,"suggestions":"1232"},{"ruleId":"1013","severity":1,"message":"1014","line":155,"column":49,"nodeType":"1015","messageId":"1016","endLine":155,"endColumn":51},{"ruleId":"985","severity":1,"message":"1137","line":2,"column":32,"nodeType":"987","messageId":"988","endLine":2,"endColumn":36},{"ruleId":"985","severity":1,"message":"1233","line":2,"column":38,"nodeType":"987","messageId":"988","endLine":2,"endColumn":42},{"ruleId":"985","severity":1,"message":"1067","line":2,"column":44,"nodeType":"987","messageId":"988","endLine":2,"endColumn":50},{"ruleId":"985","severity":1,"message":"1103","line":2,"column":52,"nodeType":"987","messageId":"988","endLine":2,"endColumn":56},{"ruleId":"985","severity":1,"message":"1143","line":2,"column":57,"nodeType":"987","messageId":"988","endLine":2,"endColumn":61},{"ruleId":"985","severity":1,"message":"1043","line":60,"column":7,"nodeType":"987","messageId":"988","endLine":60,"endColumn":17},{"ruleId":"985","severity":1,"message":"1093","line":62,"column":10,"nodeType":"987","messageId":"988","endLine":62,"endColumn":25},{"ruleId":"985","severity":1,"message":"1094","line":63,"column":10,"nodeType":"987","messageId":"988","endLine":63,"endColumn":17},{"ruleId":"985","severity":1,"message":"1234","line":66,"column":10,"nodeType":"987","messageId":"988","endLine":66,"endColumn":23},{"ruleId":"985","severity":1,"message":"1235","line":77,"column":10,"nodeType":"987","messageId":"988","endLine":77,"endColumn":16},{"ruleId":"985","severity":1,"message":"1236","line":77,"column":18,"nodeType":"987","messageId":"988","endLine":77,"endColumn":27},{"ruleId":"985","severity":1,"message":"1237","line":78,"column":10,"nodeType":"987","messageId":"988","endLine":78,"endColumn":17},{"ruleId":"985","severity":1,"message":"1238","line":78,"column":19,"nodeType":"987","messageId":"988","endLine":78,"endColumn":29},{"ruleId":"1008","severity":1,"message":"1149","line":144,"column":6,"nodeType":"1010","endLine":144,"endColumn":8,"suggestions":"1239"},{"ruleId":"1013","severity":1,"message":"1014","line":349,"column":45,"nodeType":"1015","messageId":"1016","endLine":349,"endColumn":47},{"ruleId":"985","severity":1,"message":"1141","line":1,"column":17,"nodeType":"987","messageId":"988","endLine":1,"endColumn":26},{"ruleId":"985","severity":1,"message":"1142","line":1,"column":28,"nodeType":"987","messageId":"988","endLine":1,"endColumn":36},{"ruleId":"985","severity":1,"message":"1102","line":3,"column":15,"nodeType":"987","messageId":"988","endLine":3,"endColumn":19},{"ruleId":"985","severity":1,"message":"1154","line":3,"column":35,"nodeType":"987","messageId":"988","endLine":3,"endColumn":44},{"ruleId":"985","severity":1,"message":"1155","line":3,"column":46,"nodeType":"987","messageId":"988","endLine":3,"endColumn":54},{"ruleId":"985","severity":1,"message":"1156","line":5,"column":16,"nodeType":"987","messageId":"988","endLine":5,"endColumn":27},{"ruleId":"985","severity":1,"message":"1089","line":9,"column":9,"nodeType":"987","messageId":"988","endLine":9,"endColumn":30},{"ruleId":"985","severity":1,"message":"1157","line":10,"column":9,"nodeType":"987","messageId":"988","endLine":10,"endColumn":30},{"ruleId":"985","severity":1,"message":"1158","line":13,"column":10,"nodeType":"987","messageId":"988","endLine":13,"endColumn":18},{"ruleId":"985","severity":1,"message":"1041","line":35,"column":9,"nodeType":"987","messageId":"988","endLine":35,"endColumn":16},{"ruleId":"985","severity":1,"message":"1159","line":36,"column":10,"nodeType":"987","messageId":"988","endLine":36,"endColumn":20},{"ruleId":"985","severity":1,"message":"1073","line":39,"column":9,"nodeType":"987","messageId":"988","endLine":39,"endColumn":15},{"ruleId":"985","severity":1,"message":"1160","line":42,"column":9,"nodeType":"987","messageId":"988","endLine":42,"endColumn":24},{"ruleId":"985","severity":1,"message":"1161","line":43,"column":11,"nodeType":"987","messageId":"988","endLine":43,"endColumn":21},{"ruleId":"985","severity":1,"message":"1162","line":44,"column":9,"nodeType":"987","messageId":"988","endLine":44,"endColumn":18},{"ruleId":"985","severity":1,"message":"1163","line":51,"column":9,"nodeType":"987","messageId":"988","endLine":51,"endColumn":13},{"ruleId":"985","severity":1,"message":"1164","line":53,"column":9,"nodeType":"987","messageId":"988","endLine":53,"endColumn":20},{"ruleId":"985","severity":1,"message":"1165","line":57,"column":9,"nodeType":"987","messageId":"988","endLine":57,"endColumn":20},{"ruleId":"985","severity":1,"message":"1174","line":1,"column":8,"nodeType":"987","messageId":"988","endLine":1,"endColumn":18},{"ruleId":"985","severity":1,"message":"1175","line":2,"column":8,"nodeType":"987","messageId":"988","endLine":2,"endColumn":23},{"ruleId":"985","severity":1,"message":"1179","line":6,"column":11,"nodeType":"987","messageId":"988","endLine":6,"endColumn":35},{"ruleId":"985","severity":1,"message":"1180","line":8,"column":11,"nodeType":"987","messageId":"988","endLine":8,"endColumn":25},{"ruleId":"985","severity":1,"message":"1181","line":9,"column":11,"nodeType":"987","messageId":"988","endLine":9,"endColumn":23},{"ruleId":"985","severity":1,"message":"1182","line":10,"column":11,"nodeType":"987","messageId":"988","endLine":10,"endColumn":23},{"ruleId":"985","severity":1,"message":"1126","line":22,"column":10,"nodeType":"987","messageId":"988","endLine":22,"endColumn":13},{"ruleId":"985","severity":1,"message":"1183","line":22,"column":15,"nodeType":"987","messageId":"988","endLine":22,"endColumn":18},{"ruleId":"985","severity":1,"message":"1067","line":24,"column":8,"nodeType":"987","messageId":"988","endLine":24,"endColumn":14},{"ruleId":"985","severity":1,"message":"1184","line":25,"column":8,"nodeType":"987","messageId":"988","endLine":25,"endColumn":19},{"ruleId":"985","severity":1,"message":"1088","line":27,"column":9,"nodeType":"987","messageId":"988","endLine":27,"endColumn":13},{"ruleId":"985","severity":1,"message":"1144","line":31,"column":5,"nodeType":"987","messageId":"988","endLine":31,"endColumn":22},{"ruleId":"985","severity":1,"message":"1145","line":82,"column":9,"nodeType":"987","messageId":"988","endLine":82,"endColumn":20},{"ruleId":"985","severity":1,"message":"1146","line":85,"column":10,"nodeType":"987","messageId":"988","endLine":85,"endColumn":21},{"ruleId":"985","severity":1,"message":"1094","line":89,"column":10,"nodeType":"987","messageId":"988","endLine":89,"endColumn":17},{"ruleId":"985","severity":1,"message":"1000","line":99,"column":10,"nodeType":"987","messageId":"988","endLine":99,"endColumn":18},{"ruleId":"985","severity":1,"message":"1148","line":100,"column":10,"nodeType":"987","messageId":"988","endLine":100,"endColumn":17},{"ruleId":"985","severity":1,"message":"1185","line":102,"column":10,"nodeType":"987","messageId":"988","endLine":102,"endColumn":31},{"ruleId":"1008","severity":1,"message":"1186","line":181,"column":6,"nodeType":"1010","endLine":181,"endColumn":8,"suggestions":"1240"},{"ruleId":"985","severity":1,"message":"1027","line":304,"column":9,"nodeType":"987","messageId":"988","endLine":304,"endColumn":23},{"ruleId":"1013","severity":1,"message":"1014","line":396,"column":45,"nodeType":"1015","messageId":"1016","endLine":396,"endColumn":47},{"ruleId":"985","severity":1,"message":"1188","line":399,"column":10,"nodeType":"987","messageId":"988","endLine":399,"endColumn":24},{"ruleId":"985","severity":1,"message":"1176","line":3,"column":10,"nodeType":"987","messageId":"988","endLine":3,"endColumn":20},{"ruleId":"1013","severity":1,"message":"1014","line":37,"column":45,"nodeType":"1015","messageId":"1016","endLine":37,"endColumn":47},{"ruleId":"1013","severity":1,"message":"1014","line":60,"column":45,"nodeType":"1015","messageId":"1016","endLine":60,"endColumn":47},{"ruleId":"985","severity":1,"message":"1141","line":1,"column":26,"nodeType":"987","messageId":"988","endLine":1,"endColumn":35},{"ruleId":"985","severity":1,"message":"1241","line":15,"column":8,"nodeType":"987","messageId":"988","endLine":15,"endColumn":18},{"ruleId":"985","severity":1,"message":"1127","line":63,"column":9,"nodeType":"987","messageId":"988","endLine":63,"endColumn":16},{"ruleId":"985","severity":1,"message":"1131","line":97,"column":11,"nodeType":"987","messageId":"988","endLine":97,"endColumn":19},{"ruleId":"1013","severity":1,"message":"1014","line":104,"column":49,"nodeType":"1015","messageId":"1016","endLine":104,"endColumn":51},{"ruleId":"985","severity":1,"message":"1242","line":146,"column":9,"nodeType":"987","messageId":"988","endLine":146,"endColumn":35},{"ruleId":"1057","severity":1,"message":"1058","line":5,"column":10,"nodeType":"1059","messageId":"1060","endLine":5,"endColumn":24,"fix":"1243"},{"ruleId":"985","severity":1,"message":"1064","line":31,"column":10,"nodeType":"987","messageId":"988","endLine":31,"endColumn":15},{"ruleId":"985","severity":1,"message":"1244","line":36,"column":9,"nodeType":"987","messageId":"988","endLine":36,"endColumn":23},{"ruleId":"985","severity":1,"message":"1062","line":64,"column":7,"nodeType":"987","messageId":"988","endLine":64,"endColumn":16},{"ruleId":"985","severity":1,"message":"1065","line":109,"column":12,"nodeType":"987","messageId":"988","endLine":109,"endColumn":23},{"ruleId":"985","severity":1,"message":"1094","line":110,"column":12,"nodeType":"987","messageId":"988","endLine":110,"endColumn":19},{"ruleId":"1013","severity":1,"message":"1014","line":148,"column":76,"nodeType":"1015","messageId":"1016","endLine":148,"endColumn":78},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'LostToFollowUp' is defined but never used.","'today' is assigned a value but never used.","'setToday' is assigned a value but never used.","'setSaving' is assigned a value but never used.","'editRelative' is assigned a value but never used.","'setEditRelative' is assigned a value but never used.","'topLevelUnitCountryOptions' is assigned a value but never used.","'setPatientDTO' is assigned a value but never used.","'femaleStatus' is assigned a value but never used.","'sourceReferral' is assigned a value but never used.","'enrollSetting' is assigned a value but never used.","'tbStatus' is assigned a value but never used.","'kP' is assigned a value but never used.","'pregnancyStatus' is assigned a value but never used.","'transferIn' is assigned a value but never used.","'ovcEnrolled' is assigned a value but never used.","'hideTargetGroup' is assigned a value but never used.","'setHideTargetGroup' is assigned a value but never used.","'hospitalNumStatus2' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'basicInfo.dob', 'loadEducation', 'loadGenders', 'loadMaritalStatus', 'loadOccupation', 'loadRelationships', and 'loadTopLevelCountry'. Either include them or remove the dependency array.","ArrayExpression",["1245"],"'loadOrganisationUnitsByParentId' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'actualcontacts' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'response' is assigned a value but never used.","'handleCheckBox' is assigned a value but never used.","'format' is defined but never used.","'yupResolver' is defined but never used.","'yup' is defined but never used.","'useForm' is defined but never used.","'getValue' is defined but never used.","'newSex' is assigned a value but never used.","'setNewSex' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'basicInfo', 'getSex', 'loadEducation', 'loadGenders', 'loadMaritalStatus', 'loadOccupation', 'loadRelationships', 'loadTopLevelCountry', and 'objValues'. Either include them or remove the dependency array. You can also do a functional update 'setObjValues(o => ...)' if you only need 'objValues' in the 'setObjValues' call.",["1246"],"'userDetail' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'basicInfo', 'loadEducation', 'loadGenders', 'loadMaritalStatus', 'loadOccupation', 'loadRelationships', and 'loadTopLevelCountry'. Either include them or remove the dependency array.",["1247"],"'Dropdown' is defined but never used.","'classes' is assigned a value but never used.","'patientCurrentStatus' is assigned a value but never used.","'patientObj' is assigned a value but never used.","'setpatientObj' is assigned a value but never used.","'genderType' is assigned a value but never used.","'mentalStatus' is assigned a value but never used.","'initialEvaluationStatus' is assigned a value but never used.","Assignments to the 'gender' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ConditionalExpression","'loadEAC' is assigned a value but never used.","'loadStatusUpdate' is assigned a value but never used.","'loadPharmacyModal' is assigned a value but never used.","'loadLaboratoryModal' is assigned a value but never used.","'loadCervicalCancer' is assigned a value but never used.","'loadPrEPRegistrationForm' is assigned a value but never used.","'loadPrEPVisitForm' is assigned a value but never used.","no-useless-rename","Import token unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"1248","text":"1249"},"'useStyles' is assigned a value but never used.",{"range":"1250","text":"1249"},"'Label' is defined but never used.","'patientList' is assigned a value but never used.","'classNames' is defined but never used.","'Button' is defined but never used.","'CaptureBiometric' is defined but never used.","'permissions' is assigned a value but never used.","'patientBiometricStatus' is assigned a value but never used.","'setPatientBiometricStatus' is assigned a value but never used.","'devices' is assigned a value but never used.","'toggle' is assigned a value but never used.","'BiometricModalToggle' is assigned a value but never used.","'Arttoggle' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'PatientCurrentStatus'. Either include it or remove the dependency array.",["1251"],"'get_age' is assigned a value but never used.","'loadChildEvaluation' is assigned a value but never used.","'loadArtCommencement' is assigned a value but never used.","'loadArt' is assigned a value but never used.","'CurrentStatus' is assigned a value but never used.","'handleBiometricCapture' is assigned a value but never used.","'patientObjID' is assigned a value but never used.","'Nav' is defined but never used.","'Tab' is defined but never used.","'PerfectScrollbar' is defined but never used.","'Link' is defined but never used.","'NewlyEnrolledArtBySex' is defined but never used.","React Hook useEffect has a missing dependency: 'props.activeContent.activeTab'. Either include it or remove the dependency array. If 'setKey' needs the current value of 'props.activeContent.activeTab', you can also switch to useReducer instead of useState and read 'props.activeContent.activeTab' in the reducer.",["1252"],"'refillList' is assigned a value but never used.","'clinicVisitList' is assigned a value but never used.","'loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'ClinicVisitList', 'LaboratoryHistory', 'PharmacyList', and 'RecentActivities'. Either include them or remove the dependency array.",["1253"],"'regimenName' is assigned a value but never used.","'useRef' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'Form' is defined but never used.","'Card' is defined but never used.","'CardBody' is defined but never used.","'CardHeader' is defined but never used.","'Select' is defined but never used.","'Button2' is defined but never used.","'ThumbUpIcon' is defined but never used.","'red' is defined but never used.","'Dimmer' is defined but never used.","'Loader' is defined but never used.","'Image' is defined but never used.","'Segment' is defined but never used.","'Box' is defined but never used.","'CircularProgress' is defined but never used.","'Fab' is defined but never used.","'CheckIcon' is defined but never used.","'Typography' is defined but never used.","'UpgradeIcon' is defined but never used.","'tryAgain' is assigned a value but never used.","'selectedFingers' is assigned a value but never used.","'buttonSx' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'clear_storelist' and 'getPersonBiometrics'. Either include them or remove the dependency array.",["1254"],"'biometricFingers' is assigned a value but never used.","'Row' is defined but never used.","'history' is assigned a value but never used.","'values' is assigned a value but never used.","'setValues' is assigned a value but never used.","'hivStatus' is assigned a value but never used.","'validate' is assigned a value but never used.","'setCarePoints' is assigned a value but never used.","'setHivStatus' is assigned a value but never used.","'carePoints' is assigned a value but never used.","'DateTimePicker' is defined but never used.","'moment' is defined but never used.","'Icon' is defined but never used.","'setDevices' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'objValues.device'. Either include it or remove the dependency array.",["1255"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'Feed' is defined but never used.","'adherenceLevelObj' is assigned a value but never used.","'toggleSplit' is assigned a value but never used.","'heightValue' is assigned a value but never used.","'setHeightValue' is assigned a value but never used.","'TBForms' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'ClinicVisitList', 'GetPatientObj', 'PatientDetaild', and 'VitalSigns'. Either include them or remove the dependency array.",["1256"],"'addConditionsModal' is assigned a value but never used.","'addAllergiesModal' is assigned a value but never used.","'PostPatientService' is assigned a value but never used.","'CardTitle' is defined but never used.","'CardText' is defined but never used.","'CardContent' is defined but never used.","'NewlyEnrolledArtByAge' is defined but never used.","'Progress' is defined but never used.","'chartValue' is assigned a value but never used.","'handleItemClick' is assigned a value but never used.","'activeItem' is assigned a value but never used.","'chartPage' is assigned a value but never used.","'open' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'CancelIcon' is defined but never used.","'useHistory' is defined but never used.","'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'setPostServices' is assigned a value but never used.","'InputGroup' is defined but never used.","'InputGroupText' is defined but never used.","'handleInputChange' is assigned a value but never used.","'Highcharts' is defined but never used.","'HighchartsReact' is defined but never used.","'makeStyles' is defined but never used.","'actualTbSTatus' is assigned a value but never used.","Assignments to the 'actualTbSTatus' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'InputGroupButtonDropdown' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'Col' is defined but never used.","'ButtonGroup' is defined but never used.","'showCurrentVitalSigns' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'ClinicVisitListHistory', 'GetPatientObj', 'GetVisitById', 'VitalSigns', and 'props.activeContent.id'. Either include them or remove the dependency array. If 'setVisitId' needs the current value of 'props.activeContent.id', you can also switch to useReducer instead of useState and read 'props.activeContent.id' in the reducer.",["1257"],"'heightFunction' is assigned a value but never used.","no-native-reassign",["1258"],"no-negated-in-lhs",["1259"],"'patientDTO' is assigned a value but never used.","'setTransferIn' is assigned a value but never used.",["1260"],["1261"],"'showRelative' is assigned a value but never used.","'genders' is assigned a value but never used.","'maritalStatusOptions' is assigned a value but never used.","'educationOptions' is assigned a value but never used.","'occupationOptions' is assigned a value but never used.","'countries' is assigned a value but never used.","'states' is assigned a value but never used.","'provinces' is assigned a value but never used.",["1262"],"'getStates' is assigned a value but never used.","'handleDobChange' is assigned a value but never used.","'handleDateOfBirthChange' is assigned a value but never used.","'handleAddRelative' is assigned a value but never used.","'handleCancelSaveRelationship' is assigned a value but never used.","'handleSaveRelationship' is assigned a value but never used.","'handleDeleteRelative' is assigned a value but never used.","'handleEditRelative' is assigned a value but never used.","'getRelationship' is assigned a value but never used.","'handleInputChangeRelatives' is assigned a value but never used.","'checkPhoneNumber' is assigned a value but never used.","'checkPhoneNumberBasic' is assigned a value but never used.","'ExpansionPanelDetails' is defined but never used.","'ExpansionPanelActions' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'Divider' is defined but never used.",["1263"],"'capturePatientBiometric' is assigned a value but never used.",["1264"],{"range":"1265","text":"1249"},"'MdDashboard' is defined but never used.",{"range":"1266","text":"1249"},"'ClinicHistoryPage' is defined but never used.",["1267"],"'recentActivities' is assigned a value but never used.",["1268"],["1269"],"'List' is defined but never used.","'getPatientObj' is assigned a value but never used.","'adrObj' is assigned a value but never used.","'setAdrObj' is assigned a value but never used.","'adrList' is assigned a value but never used.","'setAdrList' is assigned a value but never used.",["1270"],["1271"],"'Biometrics' is defined but never used.","'handleInputValueCheckPulse' is assigned a value but never used.",{"range":"1272","text":"1249"},"'TiArrowForward' is defined but never used.",{"desc":"1273","fix":"1274"},{"desc":"1275","fix":"1276"},{"desc":"1277","fix":"1278"},[136,150],"token",[136,150],{"desc":"1279","fix":"1280"},{"desc":"1281","fix":"1282"},{"desc":"1283","fix":"1284"},{"desc":"1285","fix":"1286"},{"desc":"1287","fix":"1288"},{"desc":"1289","fix":"1290"},{"desc":"1291","fix":"1292"},"no-global-assign","no-unsafe-negation",{"desc":"1273","fix":"1293"},{"desc":"1277","fix":"1294"},{"desc":"1275","fix":"1295"},{"desc":"1279","fix":"1296"},{"desc":"1285","fix":"1297"},[136,150],[136,150],{"desc":"1281","fix":"1298"},{"desc":"1283","fix":"1299"},{"desc":"1287","fix":"1300"},{"desc":"1289","fix":"1301"},{"desc":"1291","fix":"1302"},[136,150],"Update the dependencies array to be: [basicInfo.dateOfRegistration, basicInfo.dob, loadEducation, loadGenders, loadMaritalStatus, loadOccupation, loadRelationships, loadTopLevelCountry]",{"range":"1303","text":"1304"},"Update the dependencies array to be: [patientObj, patientId, basicInfo.dateOfRegistration, loadGenders, getSex, loadMaritalStatus, loadEducation, loadOccupation, loadRelationships, loadTopLevelCountry, basicInfo, objValues]",{"range":"1305","text":"1306"},"Update the dependencies array to be: [patientObj, patientId, basicInfo.dateOfRegistration, loadGenders, loadMaritalStatus, loadEducation, loadOccupation, loadRelationships, loadTopLevelCountry, basicInfo]",{"range":"1307","text":"1308"},"Update the dependencies array to be: [PatientCurrentStatus, props.patientObj]",{"range":"1309","text":"1310"},"Update the dependencies array to be: [props.activeContent.activeTab, props.activeContent.id]",{"range":"1311","text":"1312"},"Update the dependencies array to be: [ClinicVisitList, LaboratoryHistory, PharmacyList, RecentActivities, props.patientObj.id]",{"range":"1313","text":"1314"},"Update the dependencies array to be: [clear_storelist, getPersonBiometrics]",{"range":"1315","text":"1316"},"Update the dependencies array to be: [objValues.device]",{"range":"1317","text":"1318"},"Update the dependencies array to be: [ClinicVisitList, GetPatientObj, PatientDetaild, VitalSigns]",{"range":"1319","text":"1320"},"Update the dependencies array to be: [ClinicVisitListHistory, GetPatientObj, GetVisitById, VitalSigns, props.activeContent.id]",{"range":"1321","text":"1322"},{"range":"1323","text":"1304"},{"range":"1324","text":"1308"},{"range":"1325","text":"1306"},{"range":"1326","text":"1310"},{"range":"1327","text":"1316"},{"range":"1328","text":"1312"},{"range":"1329","text":"1314"},{"range":"1330","text":"1318"},{"range":"1331","text":"1320"},{"range":"1332","text":"1322"},[7407,7437],"[basicInfo.dateOfRegistration, basicInfo.dob, loadEducation, loadGenders, loadMaritalStatus, loadOccupation, loadRelationships, loadTopLevelCountry]",[11410,11463],"[patientObj, patientId, basicInfo.dateOfRegistration, loadGenders, getSex, loadMaritalStatus, loadEducation, loadOccupation, loadRelationships, loadTopLevelCountry, basicInfo, objValues]",[10577,10630],"[patientObj, patientId, basicInfo.dateOfRegistration, loadGenders, loadMaritalStatus, loadEducation, loadOccupation, loadRelationships, loadTopLevelCountry, basicInfo]",[3085,3103],"[PatientCurrentStatus, props.patientObj]",[503,527],"[props.activeContent.activeTab, props.activeContent.id]",[1386,1407],"[ClinicVisitList, LaboratoryHistory, PharmacyList, RecentActivities, props.patientObj.id]",[6965,6967],"[clear_storelist, getPersonBiometrics]",[3449,3451],"[objValues.device]",[6026,6028],"[ClinicVisitList, GetPatientObj, PatientDetaild, VitalSigns]",[5940,5942],"[ClinicVisitListHistory, GetPatientObj, GetVisitById, VitalSigns, props.activeContent.id]",[8124,8154],[10577,10630],[11808,11861],[3087,3105],[6965,6967],[503,527],[1386,1407],[3449,3451],[4108,4110],[5940,5942]]