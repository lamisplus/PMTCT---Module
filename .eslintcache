[{"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\index.js":"1","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\App.js":"2","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\context\\ThemeContext.js":"3","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\reportWebVitals.js":"4","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\context\\ThemeDemo.js":"5","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Home.js":"6","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDetail.js":"7","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Patient\\RegisterPatient.js":"8","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Patient\\EnrollPatient.js":"9","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Patient\\UpdatePatientEnrollment.js":"10","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Patient\\PatientList.js":"11","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Patient\\ActiveANCPatientList.js":"12","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Patient\\PatientCard.js":"13","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Patient\\SubMenu.js":"14","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\api.js":"15","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\Index.js":"16","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PmtctServices\\Partners\\AddNewPartner.js":"17","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PmtctServices\\PmtctEnrollment.js":"18","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PmtctServices\\AncEnrollement.js":"19","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PmtctServices\\LabourDelivery.js":"20","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\History\\PatientHistory.js":"21","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\History\\RecentHistory.js":"22","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PmtctServices\\Infants\\Index.js":"23","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Consultation\\Index.js":"24","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PmtctServices\\Partners\\Index.js":"25","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PmtctServices\\Infants\\InfantRegistration.js":"26","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Consultation\\Home.js":"27","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Consultation\\InfantVisit.js":"28","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\RecencyTesting.js":"29","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\PreTest.js":"30","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\PostTest.js":"31","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\Others.js":"32","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\RiskStratification.js":"33","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\HivTestResult.js":"34","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\BasicInfo.js":"35","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\Elicitation\\Index.js":"36","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\Elicitation\\IndexContactList.js":"37","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\Elicitation\\AddIndexContact.js":"38","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PmtctServices\\PmtctEntryPoint\\index.js":"39","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Patient\\PmtctPatients.js":"40"},{"size":729,"mtime":1699025554381,"results":"41","hashOfConfig":"42"},{"size":1678,"mtime":1699272675662,"results":"43","hashOfConfig":"42"},{"size":8947,"mtime":1699025557569,"results":"44","hashOfConfig":"42"},{"size":362,"mtime":1699025557539,"results":"45","hashOfConfig":"42"},{"size":2920,"mtime":1699025557580,"results":"46","hashOfConfig":"42"},{"size":3021,"mtime":1699349506567,"results":"47","hashOfConfig":"42"},{"size":6585,"mtime":1699959718365,"results":"48","hashOfConfig":"42"},{"size":103726,"mtime":1700124088018,"results":"49","hashOfConfig":"42"},{"size":45616,"mtime":1699960352687,"results":"50","hashOfConfig":"42"},{"size":43426,"mtime":1699025617410,"results":"51","hashOfConfig":"42"},{"size":12314,"mtime":1699272675690,"results":"52","hashOfConfig":"42"},{"size":8735,"mtime":1699364139252,"results":"53","hashOfConfig":"42"},{"size":12718,"mtime":1699905054626,"results":"54","hashOfConfig":"42"},{"size":4134,"mtime":1699970543560,"results":"55","hashOfConfig":"42"},{"size":427,"mtime":1700124224710,"results":"56","hashOfConfig":"42"},{"size":13505,"mtime":1699025617094,"results":"57","hashOfConfig":"42"},{"size":22734,"mtime":1699025617542,"results":"58","hashOfConfig":"42"},{"size":26037,"mtime":1699959017147,"results":"59","hashOfConfig":"42"},{"size":25956,"mtime":1699025617457,"results":"60","hashOfConfig":"42"},{"size":36088,"mtime":1699970772802,"results":"61","hashOfConfig":"42"},{"size":16699,"mtime":1700047940267,"results":"62","hashOfConfig":"42"},{"size":28653,"mtime":1700057757274,"results":"63","hashOfConfig":"42"},{"size":11797,"mtime":1700079309952,"results":"64","hashOfConfig":"42"},{"size":2427,"mtime":1699025615490,"results":"65","hashOfConfig":"42"},{"size":9522,"mtime":1699025617558,"results":"66","hashOfConfig":"42"},{"size":17301,"mtime":1700044582392,"results":"67","hashOfConfig":"42"},{"size":30366,"mtime":1700055558384,"results":"68","hashOfConfig":"42"},{"size":43220,"mtime":1699025615506,"results":"69","hashOfConfig":"42"},{"size":31414,"mtime":1699025617172,"results":"70","hashOfConfig":"42"},{"size":77391,"mtime":1699025617156,"results":"71","hashOfConfig":"42"},{"size":30282,"mtime":1699025617141,"results":"72","hashOfConfig":"42"},{"size":12541,"mtime":1699025617125,"results":"73","hashOfConfig":"42"},{"size":65944,"mtime":1699025617194,"results":"74","hashOfConfig":"42"},{"size":58967,"mtime":1699025617072,"results":"75","hashOfConfig":"42"},{"size":34572,"mtime":1699025617056,"results":"76","hashOfConfig":"42"},{"size":1966,"mtime":1699025617225,"results":"77","hashOfConfig":"42"},{"size":8405,"mtime":1699025617241,"results":"78","hashOfConfig":"42"},{"size":33346,"mtime":1699025617210,"results":"79","hashOfConfig":"42"},{"size":4663,"mtime":1699957392985,"results":"80","hashOfConfig":"42"},{"size":8815,"mtime":1699456527291,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},"1bra3ro",{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"85"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":5,"source":null},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":5,"source":null},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":5,"source":"105","usedDeprecatedRules":"85"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"108","usedDeprecatedRules":"85"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"111","usedDeprecatedRules":"85"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"85"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"123","usedDeprecatedRules":"85"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"85"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"139","usedDeprecatedRules":"85"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"142","usedDeprecatedRules":"85"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":4,"source":null},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"85"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":6,"source":"152","usedDeprecatedRules":"85"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"85"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"85"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"85"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"85"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"85"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"85"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"85"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"85"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"85"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"184","usedDeprecatedRules":"85"},"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\index.js",["185"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\n\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\nimport SimpleReactLightbox from \"simple-react-lightbox\";\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \n\nReactDOM.render(\n\t<React.StrictMode>\n\n            <SimpleReactLightbox>\n                <BrowserRouter basename='/'>\n                    <ThemeContext>\n                        <App />\n                    </ThemeContext>  \n                </BrowserRouter>\n            </SimpleReactLightbox>\n\n\t</React.StrictMode>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n",["186","187"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\App.js",[],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\context\\ThemeContext.js",[],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\reportWebVitals.js",[],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\context\\ThemeDemo.js",[],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Home.js",["188","189"],"import React, { useState, Fragment, useEffect } from \"react\";\r\nimport { Row, Col, Card, Tab, Tabs } from \"react-bootstrap\";\r\nimport NotEnrollPatients from \"./Patient/PatientList\";\r\nimport ActiveANCPatients from \"./Patient/ActiveANCPatientList\";\r\n//import VisualisationHome from './Visualisation/Index'\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport PmtctEntryPoint from \"./PmtctServices/PmtctEntryPoint\";\r\nimport ANCPatients from \"./Patient/ActiveANCPatientList\";\r\nimport PmtctPatients from \"./Patient/PmtctPatients\";\r\n\r\n//import PageTitle from \"./../layouts/PageTitle\";\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = (props) => {\r\n  const [key, setKey] = useState(\"home\");\r\n  const [modalShow, setModalShow] = useState(false);\r\n  useEffect(() => {\r\n    setKey(\"home\");\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className=\"row page-titles mx-0\"\r\n        style={{ marginTop: \"0px\", marginBottom: \"-10px\" }}\r\n      >\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>PMTCT</h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      {/* <Link to={\"register-patient\"}> */}\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className=\" float-end mb-10\"\r\n        startIcon={<FaUserPlus size=\"10\" />}\r\n        style={{ backgroundColor: \"#014d88\" }}\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          setModalShow(true);\r\n        }}\r\n      >\r\n        <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\r\n      </Button>\r\n      {/* </Link> */}\r\n      <br />\r\n      <br />\r\n      <Row>\r\n        <Col xl={12}>\r\n          <Card style={divStyle}>\r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                  id=\"controlled-tab-example\"\r\n                  activeKey={key}\r\n                  onSelect={(k) => setKey(k)}\r\n                  className=\"mb-3\"\r\n                >\r\n                  <Tab eventKey=\"home\" title=\"Find Patients\">\r\n                    <NotEnrollPatients />\r\n                  </Tab>\r\n                  <Tab eventKey=\"anc\" title=\"ANC Patients\">\r\n                    <ANCPatients />\r\n                  </Tab>\r\n\r\n                  <Tab eventKey=\"pmtct\" title=\"General PMTCT Patients\">\r\n                    <PmtctPatients />\r\n                  </Tab>\r\n                  {/* <Tab eventKey=\"visualization\" title=\"Data Visualisation\">                   \r\n                    <VisualisationHome />\r\n                  </Tab>                     */}\r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <PmtctEntryPoint\r\n        route=\"/register-patient\"\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDetail.js",[],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Patient\\RegisterPatient.js",["190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Patient\\EnrollPatient.js",["210","211","212","213","214","215","216","217","218","219","220"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Patient\\UpdatePatientEnrollment.js",["221","222","223","224","225","226","227","228","229","230","231","232"],"import React, {useCallback, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport MatButton from \"@material-ui/core/Button\";\nimport Button from \"@material-ui/core/Button\";\nimport {FormGroup, Label, Spinner,Input,Form, InputGroup} from \"reactstrap\";\nimport {library} from '@fortawesome/fontawesome-svg-core'\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\nimport * as moment from 'moment';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card, CardContent} from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport {ToastContainer, toast} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\nimport {TiArrowBack} from 'react-icons/ti'\nimport {token, url as baseUrl } from \"../../../api\";\nimport 'react-phone-input-2/lib/style.css'\nimport  './patient.css'\n// import Form from 'react-bootstrap/Form';\nimport {  Modal } from \"react-bootstrap\";\n\n\n\n\n\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        flexGrow: 1,\n        \"& .card-title\":{\n            color:'#fff',\n            fontWeight:'bold'\n        },\n        \"& .form-control\":{\n            borderRadius:'0.25rem',\n            height:'41px'\n        },\n        \"& .card-header:first-child\": {\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\n        },\n        \"& .dropdown-toggle::after\": {\n            display: \" block !important\"\n        },\n        \"& select\":{\n            \"-webkit-appearance\": \"listbox !important\"\n        },\n        \"& p\":{\n            color:'red'\n        },\n        \"& label\":{\n            fontSize:'14px',\n            color:'#014d88',\n            fontWeight:'bold'\n        }\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    }\n}));\n\n\nconst UserRegistration = (props) => {\n    const [basicInfo, setBasicInfo]= useState(\n            {\n                fullname: \"\",\n                sex: \"\",\n                age:\"\",\n                hospitalNumber:\"\",\n            }\n    )\n    const [saving, setSaving] = useState(false);\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\n    const [ageDisabled, setAgeDisabled] = useState(true);\n    const [genders, setGenders]= useState([]);\n    const [ancNumberCheck, setAncNumberCheck] = useState(false);\n    const [errors, setErrors] = useState({})\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\n    const classes = useStyles();\n    const history = useHistory();\n    const location = useLocation();\n\n     //const [values, setValues] = useState([]);\n     const [objValues, setObjValues] = useState({   ancNo:\"\",\n            gaweeks: \"\",\n            gravida: \"\",\n            expectedDeliveryDate:\"\",\n            firstAncDate:\"\",\n            lmp: \"\",\n            parity: \"\",\n            person_uuid:\"\",\n            hivDiognosicTime:\"\",\n            referredSyphilisTreatment: \"\",\n            testResultSyphilis: \"\",\n            testedSyphilis: \"\",\n            treatedSyphilis: \"\",\n            personDto:{},\n            pmtctHtsInfo:{},\n            syphilisInfo:{},\n            partnerNotification:{},\n            sourceOfReferral:\"\",\n            staticHivStatus:\"\"\n    });\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\n     //set ro show the facility name field if is transfer in \n\n     const [open, setOpen] = React.useState(false)\n     const toggle = () => setOpen(!open);\n    const locationState = location.state;\n    let patientId = null;\n    let actionType = null;\n    let recordId = null;\n    let patientObj = {};\n    patientId = locationState ? locationState.patientId : null;\n    recordId = locationState ? locationState.id : null;\n    actionType = locationState ? locationState.actionType : null;\n    patientObj = locationState ? locationState.patientObj : {}; \n    const [sourceOfReferral, setSourceOfReferral] = useState([]);\n    const [disabledField, setDisabledField] = useState(false);\n    useEffect(() => { \n        loadGenders();\n        getSex();\n        PregnancyStatus();\n        //console.log(patientObj)\n        if(patientObj){\n            setDisabledField(actionType==='view'? true : false)\n            setObjValues ({...patientObj});\n            basicInfo.fullname=patientObj.fullname\n            basicInfo.age=patientObj.age\n            basicInfo.hospitalNumber=patientObj.hospitalNumber\n            basicInfo.sex=patientObj.sex\n            //syphilisInfo\n        }\n\n        SOURCE_REFERRAL_PMTCT() \n    }, [patientObj, patientId,actionType]);\n    //Get list of Source of Referral\n    const SOURCE_REFERRAL_PMTCT =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL_PMTCT`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setSourceOfReferral(response.data)\n        })\n        .catch((error) => {\n        //console.log(error);\n        });        \n    }\n    const getSex =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/SEX`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            let patientSex=\"\"\n            if(patientObj.sex==='female' || patientObj.sex==='Female' || patientObj.sex==='FEMALE'){\n                 patientSex= 'Female'\n            }\n            if(patientObj.sex==='Male' || patientObj.sex==='male' || patientObj.sex==='MALE' ){\n                 patientSex= 'Male'\n            }\n            const getSexId=  response.data.find((x)=> x.display===patientSex)//get patient sex ID by filtering the request\n            basicInfo.sexId=getSexId.display\n        })\n        .catch((error) => {\n        //console.log(error);\n        });        \n    }\n    const loadGenders = useCallback(async () => {\n        try {\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\n            setGenders(response.data);\n        } catch (e) {\n            \n        }\n    }, []);\n\n    const handleAgeChange = (e) => {\n        const ageNumber = e.target.value.replace(/\\D/g, '')\n        if (!ageDisabled && ageNumber) {\n            if(ageNumber!=='' && ageNumber>=60){\n                toggle()\n            }\n            if(ageNumber <=1){\n                setDisabledAgeBaseOnAge(true)\n            }else{\n                setDisabledAgeBaseOnAge(false)\n            }\n            const currentDate = new Date();\n            currentDate.setDate(15);\n            currentDate.setMonth(5);\n            const estDob = moment(currentDate.toISOString());\n            const dobNew = estDob.add((ageNumber * -1), 'years');\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\n\n        }\n        setBasicInfo({...basicInfo, age: ageNumber});\n    }\n    //End of Date of Birth and Age handling \n     /*****  Validation  */\n     const validate = () => {\n        let temp = { ...errors }\n        \n            //temp.firstAncDate = objValues.firstAncDate ? \"\" : \"This field is required\"\n            temp.gaweeks = objValues.gaweeks ? \"\" : \"This field is required\"\n            temp.gravida = objValues.gravida ? \"\" : \"This field is required\"\n            objValues.testResultSyphilis===\"Yes\" && (temp.referredSyphilisTreatment = objValues.referredSyphilisTreatment ? \"\" : \"This field is required\")\n            temp.lmp = objValues.lmp ? \"\" : \"This field is required\"\n            temp.parity = objValues.parity ? \"\" : \"This field is required\"\n            temp.testedSyphilis = objValues.testedSyphilis ? \"\" : \"This field is required\"\n            objValues.testResultSyphilis===\"Yes\" && (temp.treatedSyphilis = objValues.treatedSyphilis ? \"\" : \"This field is required\")\n            temp.sourceOfReferral = objValues.sourceOfReferral ? \"\" : \"This field is required\"\n            objValues.testedSyphilis===\"Yes\" && (temp.testResultSyphilis = objValues.testResultSyphilis ? \"\" : \"This field is required\")\n            temp.staticHivStatus = objValues.staticHivStatus ? \"\" : \"This field is required\"\n                setErrors({ ...temp })\n        return Object.values(temp).every(x => x == \"\")\n    }\n    //Handle Input Change for Basic Infor\n    const handleInputChangeBasic = e => { \n        \n        setErrors({...errors, [e.target.name]: \"\"})        \n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value});              \n    } \n\n    //Get list of KP\n    const PregnancyStatus =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            //console.log(response.data);\n            setPregnancyStatus(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    const handleInputChange = e => { \n        setErrors({...errors, [e.target.name]: \"\"}) \n        if(e.target.name==='ancNo' && e.target.value!==''){\n\n            async function getAncNumber() {\n                const ancNumber=e.target.value\n                const ancNo= {\n                    ancNo:ancNumber\n                }\n                const response = await axios.post(`${baseUrl}pmtct/anc/exist/anc-number/${ancNumber}`,ancNo,\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\n                    );\n                if(response.data===true){\n                    \n                    toast.error(\"ANC number already exist\")\n                    setAncNumberCheck(response.data)\n                }else{\n                    setAncNumberCheck(false)\n                }\n            }\n            getAncNumber();\n            }\n        if(e.target.name==='lmp' && e.target.value!==''){\n\n            async function getGa() {\n                const ga=e.target.value\n                const response = await axios.get(`${baseUrl}pmtct/anc/calculate-ga/${ga}`,\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\n                    );\n                    if(response.data>0){\n                        objValues.gaweeks=response.data\n                        setObjValues ({...objValues,  [e.target.name]: e.target.value});  \n                    }else{\n                        objValues.gaweeks=response.data\n                        toast.error(\"Please select a validate date\")\n                        setObjValues ({...objValues,  [e.target.name]: e.target.value}); \n                    }\n            }\n            getGa();\n        } \n        if(e.target.name==='parity' && e.target.value!=='' && e.target.value<=0){//The field will  not accept zero as a value\n            return;   \n        } //gravida\n        if(e.target.name==='gravida' && e.target.value!=='' && e.target.value<=0){//The field will  not accept zero as a value\n            return;   \n        }\n        if(e.target.name==='testedSyphilis' && e.target.value!=='' && e.target.value==='Yes'){//The field will  not accept zero as a value\n            objValues.testResultSyphilis=\"\"  \n            objValues.referredSyphilisTreatment=\"\"  \n            objValues.treatedSyphilis=\"\" \n            setObjValues ({...objValues,  ['testResultSyphilis']: \"\"}); \n            setObjValues ({...objValues,  ['referredSyphilisTreatment']: \"\"}); \n            setObjValues ({...objValues,  ['treatedSyphilis']: \"\"}); \n            setObjValues ({...objValues,  [e.target.name]: e.target.value}); \n        }\n        if(e.target.name==='testResultSyphilis' && e.target.value!=='' && e.target.value==='Positive'){//The field will  not accept zero as a value\n            objValues.treatedSyphilis=\"\"  \n            objValues.referredSyphilisTreatment=\"\"   \n            setObjValues ({...objValues,  ['treatedSyphilis']: \"\"}); \n            setObjValues ({...objValues,  ['referredSyphilisTreatment']: \"\"}); \n            setObjValues ({...objValues,  [e.target.name]: e.target.value}); \n        }      \n        setObjValues ({...objValues,  [e.target.name]: e.target.value});                \n    }    \n\n    //Handle CheckBox \n\n    const handleCancel =()=>{\n        history.push({ pathname: '/' });\n    }\n    const handleSubmit = async (e) => {\n        e.preventDefault(); \n\n         if(validate()){\n            try {\n\n                objValues.person_uuid = patientObj.uuid;\n                const response = await axios.put(`${baseUrl}pmtct/anc/update-anc/${recordId}`, objValues, { headers: {\"Authorization\" : `Bearer ${token}`} });\n                toast.success(\"Record updated  successful\", {position: toast.POSITION.BOTTOM_CENTER});\n                history.push({\n                    pathname: '/patient-history',\n                    state: { patientObj: patientObj }\n                });\n            } catch (error) {                \n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    if(error.response.data.apierror && error.response.data.apierror.message!==\"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message!==\"\"){\n                        toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\n                    }else{\n                        toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\n                    }\n                }\n                else{\n                    toast.error(\"Something went wrong. Please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\n                }\n            }\n        }\n\n    }\nconsole.log(errors)\n    return (\n        <>\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\n\t\t\t<ol className=\"breadcrumb\">\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PMTCT /</Link> Patient Enrollment</h4></li>\n\t\t\t</ol>\n\t\t  </div>\n            <ToastContainer autoClose={3000} hideProgressBar />\n            <Card className={classes.root}>\n                <CardContent>\n                    <Link\n                        to={{\n                            pathname: \"/patient-history\",\n                            state: { patientObj: patientObj  }\n                        }}>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className=\" float-end ms-1\"\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\n                            startIcon={<TiArrowBack />}\n                        >\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\n                        </Button>\n                    </Link>\n                    <br />\n                    <br />\n                    <div className=\"col-xl-12 col-lg-12\">\n                        <Form >\n                            <div className=\"card\">\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\n                                </div>\n\n                                <div className=\"card-body\">\n                                    <div className=\"basic-form\">\n                                        <div className=\"row\">\n                                            <div className=\"form-group mb-3 col-md-4\">\n                                                <FormGroup>\n                                                    <Label for=\"firstName\">Name</Label>\n                                                    <Input\n                                                        className=\"form-control\"\n                                                        type=\"text\"\n                                                        name=\"firstName\"\n                                                        id=\"firstName\"\n                                                        value={basicInfo.fullname}\n                                                        onChange={handleInputChangeBasic}\n                                                        style={{border: 'none', backgroundColor: 'transparent', outline:'none'}}\n                                                        \n                                                    />\n                                                    {errors.firstName !==\"\" ? (\n                                                    <span className={classes.error}>{errors.firstName}</span>\n                                                    ) : \"\" }\n                                                </FormGroup>\n                                            </div>\n                                            <div className=\"form-group mb-3 col-md-3\">\n                                                <FormGroup>\n                                                    <Label for=\"patientId\">Hospital Number </Label>\n                                                    <input\n                                                        className=\"form-control\"\n                                                        type=\"text\"\n                                                        name=\"hospitalNumber\"\n                                                        id=\"hospitalNumber\"\n                                                        value={basicInfo.hospitalNumber}\n                                                        onChange={handleInputChangeBasic}\n                                                        style={{border: 'none', backgroundColor: 'transparent', outline:'none'}}\n                                                        //disabled\n                                                    />\n                                                   \n                                                </FormGroup>\n                                            </div>            \n\n                                            <div className=\"form-group  col-md-2\">\n                                                <FormGroup>\n                                                    <Label>Sex </Label>\n                                                    <Input\n                                                            className=\"form-control\"\n                                                            name=\"sexId\"\n                                                            id=\"sexId\"\n                                                            onChange={handleInputChangeBasic}\n                                                            value={basicInfo.sex}\n                                                            style={{border: 'none', backgroundColor: 'transparent', outline:'none'}}\n                                                            \n                                                        />\n                                                </FormGroup>\n                                            </div>\n                                            <div className=\"form-group mb-3 col-md-2\">\n                                                <FormGroup>\n                                                    <Label>Age</Label>\n                                                    <input\n                                                        className=\"form-control\"\n                                                        type=\"text\"\n                                                        name=\"age\"\n                                                        id=\"age\"\n                                                        value={basicInfo.age}\n                                                        disabled={ageDisabled}\n                                                        onChange={handleAgeChange}\n                                                        style={{border: 'none', backgroundColor: 'transparent', outline:'none'}}\n                                                    />\n                                                </FormGroup>\n                                            </div>\n                                        </div>                                     \n                                    </div>\n                                </div>\n                           \n                            </div>\n\n                            {/* Adding  ENROLLEMENT FORM HERE */}\n                            <div className=\"card\">\n                            <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\n                                <h5 className=\"card-title\"  style={{color:'#fff'}}>ANC  Enrollment</h5>\n                            </div>\n                            <div className=\"card-body\">\n                            <div className=\"row\">\n                              \n                                <div className=\"form-group mb-3 col-md-6\">\n                                            <FormGroup>\n                                            <Label >ANC No <span style={{ color:\"red\"}}> *</span></Label>\n                                            <InputGroup> \n                                                <Input \n                                                    type=\"text\"\n                                                    name=\"ancNo\"\n                                                    id=\"ancNo\"\n                                                    onChange={handleInputChange}\n                                                    value={objValues.ancNo} \n                                                    disabled\n                                                />\n\n                                            </InputGroup>\n                                            {errors.ancNo !==\"\" ? (\n                                                    <span className={classes.error}>{errors.ancNo}</span>\n                                            ) : \"\" }  \n                                            {ancNumberCheck===true ? (\n                                                        <span className={classes.error}>{\"ANC number already exist\"}</span>\n                                                    ) : \"\" }         \n                                            </FormGroup>\n                                </div>\n                                <div className=\"form-group mb-3 col-md-6\">\n                                    <FormGroup>\n                                    <Label >Date of Enrollment <span style={{ color:\"red\"}}> *</span></Label>\n                                    <InputGroup> \n                                        <Input \n                                            type=\"date\"\n                                            name=\"firstAncDate\"\n                                            id=\"firstAncDate\"\n                                            onChange={handleInputChange}\n                                            value={objValues.firstAncDate} \n                                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                            disabled={disabledField}\n                                        />\n                                    </InputGroup>\n                                    {errors.firstAncDate !==\"\" ? (\n                                            <span className={classes.error}>{errors.firstAncDate}</span>\n                                    ) : \"\" }  \n                                            \n                                    </FormGroup>\n                                </div> \n                                <div className=\"form-group mb-3 col-md-6\">\n                                        <FormGroup>\n                                        <Label >Parity <span style={{ color:\"red\"}}> *</span></Label>\n                                        <InputGroup> \n                                            <Input \n                                                type=\"number\"\n                                                name=\"parity\"\n                                                id=\"parity\"\n                                                onChange={handleInputChange}\n                                                value={objValues.parity}\n                                                disabled={disabledField} \n                                            />\n\n                                        </InputGroup>\n                                        {errors.parity !==\"\" ? (\n                                                <span className={classes.error}>{errors.parity}</span>\n                                        ) : \"\" }\n                                        { objValues.parity!==\"\" && objValues.parity<=0 ? (\n                                                    <span className={classes.error}>Parity should not be less than 1</span>\n                                            ) : \"\" }\n                                        </FormGroup>\n                                </div> \n                                <div className=\"form-group mb-3 col-md-6\">\n                                        <FormGroup>\n                                        <Label >Gravida <span style={{ color:\"red\"}}> *</span></Label>\n                                        <InputGroup> \n                                            <Input \n                                                type=\"number\"\n                                                name=\"gravida\"\n                                                id=\"gravida\"\n                                                onChange={handleInputChange}\n                                                value={objValues.gravida} \n                                                disabled={disabledField}\n                                            />\n\n                                        </InputGroup>\n                                        {errors.gravida !==\"\" ? (\n                                                <span className={classes.error}>{errors.gravida}</span>\n                                        ) : \"\" }\n                                         {objValues.gravida < objValues.parity ? (\n                                                    <span className={classes.error}>Gravida should not be less Parity</span>\n                                            ) : \"\" }\n                                        </FormGroup>\n                                </div>\n                                \n                                <div className=\"form-group mb-3 col-md-6\">\n                                        <FormGroup>\n                                        <Label >Date Of Last Menstrual Period <span style={{ color:\"red\"}}> *</span></Label>\n                                        <InputGroup> \n                                            <Input \n                                                type=\"date\"\n                                                name=\"lmp\"\n                                                id=\"lmp\"\n                                                onChange={handleInputChange}\n                                                value={objValues.lmp} \n                                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                                disabled\n                                            />\n\n                                        </InputGroup>\n                                        {errors.lmp !==\"\" ? (\n                                                <span className={classes.error}>{errors.lmp}</span>\n                                        ) : \"\" }\n                                        {objValues.gaweeks===0 ? (\n                                                <span className={classes.error}>Invalid date </span>\n                                        ) : \"\" }\n                                        </FormGroup>\n                                </div>\n                                \n                                <div className=\"form-group mb-3 col-md-6\">\n                                        <FormGroup>\n                                        <Label >Gestational Age (Weeks) <span style={{ color:\"red\"}}> *</span></Label>\n                                        <InputGroup> \n                                            <Input \n                                                type=\"number\"\n                                                name=\"gaweeks\"\n                                                id=\"gaweeks\"\n                                                onChange={handleInputChange}\n                                                value={objValues.gaweeks} \n                                                disabled={disabledField}\n                                            />\n\n                                        </InputGroup>\n                                        {errors.gaweeks !==\"\" ? (\n                                                <span className={classes.error}>{errors.gaweeks}</span>\n                                        ) : \"\" }\n                                        </FormGroup>\n                                </div>\n                                \n                                <div className=\"form-group mb-3 col-md-6\">\n                                        <FormGroup>\n                                        <Label >Source of Referral <span style={{ color:\"red\"}}> *</span></Label>\n                                        <InputGroup> \n                                            <Input \n                                                type=\"select\"\n                                                name=\"sourceOfReferral\"\n                                                id=\"sourceOfReferral\"\n                                                onChange={handleInputChange}\n                                                value={objValues.sourceOfReferral}\n                                                disabled={disabledField} \n                                            >\n                                                    <option value=\"\">Select</option>\n                                                {sourceOfReferral.map((value, index) => (\n                                                    <option key={index} value={value.code}>\n                                                        {value.display}\n                                                    </option>\n                                                ))}\n                                            </Input>\n\n                                        </InputGroup>\n                                        {errors.sourceOfReferral !==\"\" ? (\n                                                <span className={classes.error}>{errors.sourceOfReferral}</span>\n                                        ) : \"\" }\n                                        </FormGroup>\n                                </div>                                \n                                                             \n                                <div className=\"form-group mb-3 col-md-6\">\n                                        <FormGroup>\n                                        <Label >Tested for syphilis <span style={{ color:\"red\"}}> *</span></Label>\n                                        <InputGroup> \n                                            <Input \n                                                type=\"select\"\n                                                name=\"testedSyphilis\"\n                                                id=\"testedSyphilis\"\n                                                onChange={handleInputChange}\n                                                value={objValues.testedSyphilis} \n                                                disabled={disabledField}\n                                            >\n                                                    <option value=\"\" >Select</option>\n                                                <option value=\"Yes\" >Yes</option>\n                                                <option value=\"No\" >No</option>\n                                            </Input>\n                                        </InputGroup> \n                                        {errors.testedSyphilis !==\"\" ? (\n                                                <span className={classes.error}>{errors.testedSyphilis}</span>\n                                        ) : \"\" }                                       \n                                        </FormGroup>\n                                </div>\n\n                                {objValues.testedSyphilis==='Yes' && (<>\n                                    <div className=\"form-group mb-3 col-md-6\">\n                                            <FormGroup>\n                                            <Label >Syphilis test result <span style={{ color:\"red\"}}> *</span></Label>\n                                            <InputGroup> \n                                                <Input \n                                                    type=\"select\"\n                                                    name=\"testResultSyphilis\"\n                                                    id=\"testResultSyphilis\"\n                                                    onChange={handleInputChange}\n                                                    value={objValues.testResultSyphilis} \n                                                    disabled={disabledField}\n                                                >\n                                                    <option value=\"\" >Select</option>\n                                                    <option value=\"Positive\" >Positive</option>\n                                                    <option value=\"Negative\" >Negative</option>\n                                                </Input>\n                                            </InputGroup> \n                                            {errors.testResultSyphilis !==\"\" ? (\n                                                    <span className={classes.error}>{errors.testResultSyphilis}</span>\n                                            ) : \"\" }                                        \n                                            </FormGroup>\n                                    </div>\n                                    {objValues.testedSyphilis==='Yes' && objValues.testResultSyphilis==='Positive' && (<>\n                                    <div className=\"form-group mb-3 col-md-6\">\n                                            <FormGroup>\n                                            <Label >Treated for syphilis (penicillin) <span style={{ color:\"red\"}}> *</span></Label>\n                                            <InputGroup> \n                                                <Input \n                                                    type=\"select\"\n                                                    name=\"treatedSyphilis\"\n                                                    id=\"treatedSyphilis\"\n                                                    onChange={handleInputChange}\n                                                    value={objValues.encounterDate} \n                                                    disabled={disabledField}\n                                                >\n                                                    <option value=\"\" >Select</option>\n                                                    <option value=\"Yes\" >Yes</option>\n                                                    <option value=\"No\" >No</option>\n                                                </Input>\n                                            </InputGroup> \n                                            {errors.treatedSyphilis !==\"\" ? (\n                                                    <span className={classes.error}>{errors.treatedSyphilis}</span>\n                                            ) : \"\" }                                        \n                                            </FormGroup>\n                                    </div>\n                                    <div className=\"form-group mb-3 col-md-6\">\n                                            <FormGroup>\n                                            <Label >Referred Syphilis +ve client <span style={{ color:\"red\"}}> *</span></Label>\n                                            <InputGroup> \n                                                <Input \n                                                    type=\"select\"\n                                                    name=\"referredSyphilisTreatment\"\n                                                    id=\"referredSyphilisTreatment\"\n                                                    onChange={handleInputChange}\n                                                    value={objValues.referredSyphilisTreatment} \n                                                    disabled={disabledField}\n                                                >\n                                                    <option value=\"\" >Select</option>\n                                                    <option value=\"Yes\" >Yes</option>\n                                                    <option value=\"No\" >No</option>\n                                                </Input>\n                                            </InputGroup>\n                                            {errors.referredSyphilisTreatment !==\"\" ? (\n                                                    <span className={classes.error}>{errors.referredSyphilisTreatment}</span>\n                                            ) : \"\" }                                         \n                                            </FormGroup>\n                                    </div>\n                                    </>)}\n                                </>)}\n                                    <div className=\"form-group mb-3 col-md-6\">\n                                            <FormGroup>\n                                            <Label >HIV Status <span style={{ color:\"red\"}}> *</span></Label>\n                                            <InputGroup> \n                                                <Input \n                                                    type=\"select\"\n                                                    name=\"staticHivStatus\"\n                                                    id=\"staticHivStatus\"\n                                                    onChange={handleInputChange}\n                                                    value={objValues.staticHivStatus} \n                                                    disabled={disabledField}\n                                                >\n                                                    <option value=\"\" >Select</option>\n                                                    <option value=\"Positive\" >Positive</option>\n                                                    <option value=\"Negative\" >Negative</option>\n                                                    <option value=\"Unknown\" >Unknown</option>\n                                                </Input>\n                                            </InputGroup>\n                                            {errors.staticHivStatus !==\"\" ? (\n                                                    <span className={classes.error}>{errors.staticHivStatus}</span>\n                                            ) : \"\" }                                         \n                                            </FormGroup>\n                                    </div>\n                            </div>\n                            </div>\n                            </div>\n                            {/* END OF HIV ENROLLEMENT FORM */}\n                            {saving ? <Spinner /> : \"\"}\n\n                            <br />\n\n                            {objValues.gaweeks >0  && ancNumberCheck!==true && objValues.gravida >= objValues.parity &&  (\n                            <MatButton\n                                type=\"submit\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                                hidden={disabledField}\n                                className={classes.button}\n                                startIcon={<SaveIcon />}\n                                disabled={disabledAgeBaseOnAge}\n                                onClick={handleSubmit}\n                            >\n                                {!saving ? (\n                                    <span style={{ textTransform: \"capitalize\" }}>Update</span>\n                                ) : (\n                                    <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\n                                )}\n                            </MatButton>\n                            )}\n                            <MatButton\n                                variant=\"contained\"\n                                className={classes.button}\n                                startIcon={<CancelIcon />}\n                                onClick={handleCancel}\n                                style={{backgroundColor:'#992E62'}}\n                            >\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\"  }}>Cancel</span>\n                            </MatButton>\n                        </Form>\n                    </div>\n                </CardContent>\n            </Card>\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered backdrop=\"static\">\n             <Modal.Header >\n            <Modal.Title id=\"contained-modal-title-vcenter\">\n                Notification!\n            </Modal.Title>\n            </Modal.Header>\n                <Modal.Body>\n                    <h4>Are you Sure of the Age entered?</h4>\n                    \n                </Modal.Body>\n            <Modal.Footer>\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\n            </Modal.Footer>\n            </Modal>\n        </>\n    );\n};\n\nexport default UserRegistration","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Patient\\PatientList.js",["233","234"],"import React, { useState } from 'react'\r\nimport MaterialTable, { MTableToolbar }  from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n//import { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n//import { FaUserPlus } from \"react-icons/fa\";\r\nimport {TiArrowForward} from 'react-icons/ti'\r\nimport PmtctEntryPoint from '../PmtctServices/PmtctEntryPoint';  \r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\n\r\nconst Patients = (props) => {    \r\n\r\n    const [showPPI, setShowPPI] = useState(true)\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [info, setInfo] = useState({});\r\n\r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now + \" year(s)\";\r\n        };\r\n    \r\n    const getHospitalNumber = (identifier) => {     \r\n        const identifiers = identifier;\r\n        const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');       \r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setShowPPI(false)\r\n        }else{\r\n            setShowPPI(true)\r\n        }\r\n    }\r\n\r\n    \r\n  return (\r\n    <div>\r\n\r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Find Patient \"\r\n              columns={[\r\n              // { title: \" ID\", field: \"Id\" },\r\n                {\r\n                  title: \"Patient Name\",\r\n                  field: \"name\",\r\n                  hidden:showPPI\r\n                },\r\n                { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n                { title: \"Sex\", field: \"gender\", filtering: false },\r\n                { title: \"Age\", field: \"age\", filtering: false },\r\n                //{ title: \"Enrollment Status\", field: \"v_status\", filtering: false },\r\n                //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n                // { title: \"ART Status\", field: \"status\", filtering: false },\r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              //isLoading={loading}\r\n                  data={query =>\r\n                    new Promise((resolve, reject) =>\r\n                        axios.get(`${baseUrl}pmtct/anc/pmtct-from-person?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                            .then(response => response)\r\n                            .then(result => {\r\n                                //console.log(result.data.records)\r\n                                resolve({\r\n                                    data: result.data.records.map((row) => ({\r\n                                        \r\n                                        name:<Link\r\n                                                to={{\r\n                                                    pathname: \"/enroll-patient\",\r\n                                                    state: { patientId : row.id, patientObj: row }\r\n                                                }}\r\n                 \r\n                                             title={\"Enroll Patient\"}\r\n                                             > {row.firstName + \" \" + row.surname}\r\n                                             </Link>\r\n                                           ,\r\n                                    hospital_number: getHospitalNumber(row.identifier),\r\n                                    gender:row && row.sex ? row.sex : \"\",\r\n                                    age: (row.dateOfBirth === 0 ||\r\n                                        row.dateOfBirth === undefined ||\r\n                                        row.dateOfBirth === null ||\r\n                                        row.dateOfBirth === \"\" )\r\n                                          ? 0\r\n                                          : calculate_age(moment(row.dateOfBirth).format(\"DD-MM-YYYY\")),\r\n                                    \r\n                                    //status: (<Label color=\"blue\" size=\"mini\">{row.currentStatus}</Label>),\r\n                                 //enroll-patient\r\n                                    actions:<div onClick={(e)=>{\r\n\r\n                                        setModalShow(true)\r\n                                        setInfo({ patientId : row.id, patientObj: row })\r\n                                    }}>\r\n                                            {/* <Link\r\n                                                to={{\r\n                                                    pathname: \"/enroll-patient\",\r\n                                                    state: { patientId : row.id, patientObj: row, entryType: 'ANC'  }\r\n                                                }}\r\n                                            > */}\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <TiArrowForward />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Enroll Patient</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            {/* </Link> */}\r\n\r\n                                            </div>\r\n                                        })),\r\n                                    page: query.page,\r\n                                    totalCount: result.data.totalRecords,\r\n                                    \r\n                                })\r\n                            })\r\n                            \r\n                    )}\r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n                    components={{\r\n                        Toolbar: props => (\r\n                        <div >\r\n                            <div className=\"form-check custom-checkbox  float-left mt-4 ml-3 \">\r\n                                <input\r\n                                type=\"checkbox\"\r\n                                className=\"form-check-input\"                       \r\n                                name=\"showPP!\"\r\n                                id=\"showPP\"\r\n                                value=\"showPP\"\r\n                                checked={showPPI===true? false : true}\r\n                                onChange={handleCheckBox}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                />\r\n                                <label\r\n                                className=\"form-check-label\"\r\n                                htmlFor=\"basic_checkbox_1\"\r\n                                >\r\n                                <b style={{color:'#014d88',fontWeight:'bold'}}>SHOW PII</b>\r\n                                </label>\r\n                            </div>\r\n                            <MTableToolbar {...props} />\r\n                        </div>\r\n                        ),\r\n                    }}\r\n            />\r\n            <PmtctEntryPoint\r\n            route=\"/enroll-patient\"\r\n            show={modalShow}\r\n            info={info}\r\n            onHide={() => setModalShow(false)\r\n            }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Patient\\ActiveANCPatientList.js",["235"],"import React, { useState } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport axios from \"axios\";\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst ANCPatients = (props) => {\r\n  const [showPPI, setShowPPI] = useState(true);\r\n  const handleCheckBox = (e) => {\r\n    if (e.target.checked) {\r\n      setShowPPI(false);\r\n    } else {\r\n      setShowPPI(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Find Patient \"\r\n        columns={[\r\n          // { title: \" ID\", field: \"Id\" },\r\n          {\r\n            title: \"Patient Name\",\r\n            field: \"name\",\r\n            hidden: showPPI,\r\n          },\r\n          {\r\n            title: \"Hospital Number\",\r\n            field: \"hospital_number\",\r\n            filtering: false,\r\n          },\r\n          { title: \"Sex\", field: \"gender\", filtering: false },\r\n          { title: \"Age\", field: \"age\", filtering: false },\r\n          //{ title: \"Enrollment Status\", field: \"v_status\", filtering: false },\r\n          //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n          // { title: \"ART Status\", field: \"status\", filtering: false },\r\n          { title: \"Actions\", field: \"actions\", filtering: false },\r\n        ]}\r\n        //isLoading={loading}\r\n        data={(query) =>\r\n          new Promise((resolve, reject) =>\r\n            axios\r\n              .get(\r\n                `${baseUrl}pmtct/anc/all-active-anc?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`,\r\n                { headers: { Authorization: `Bearer ${token}` } }\r\n              )\r\n              .then((response) => response)\r\n              .then((result) => {\r\n                resolve({\r\n                  data: result.data.records.map((row) => ({\r\n                    name: (\r\n                      <Link\r\n                        to={{\r\n                          pathname: \"/patient-history\",\r\n                          state: { patientObj: row },\r\n                        }}\r\n                        title={\"Click to view patient dashboard\"}\r\n                      >\r\n                        {\" \"}\r\n                        {row.surname}\r\n                      </Link>\r\n                    ),\r\n\r\n                    hospital_number: row.hospitalNumber,\r\n                    gender: row && row.sex ? row.sex : \"Female\",\r\n                    age: row.age,\r\n                    actions: (\r\n                      <div>\r\n                        <Link\r\n                          to={{\r\n                            pathname: \"/patient-history\",\r\n                            state: { patientObj: row, postValue: \"ANC\" },\r\n                          }}\r\n                        >\r\n                          <ButtonGroup\r\n                            variant=\"contained\"\r\n                            aria-label=\"split button\"\r\n                            style={{\r\n                              backgroundColor: \"rgb(153, 46, 98)\",\r\n                              height: \"30px\",\r\n                              width: \"215px\",\r\n                            }}\r\n                            size=\"large\"\r\n                          >\r\n                            <Button\r\n                              color=\"primary\"\r\n                              size=\"small\"\r\n                              aria-label=\"select merge strategy\"\r\n                              aria-haspopup=\"menu\"\r\n                              style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\r\n                            >\r\n                              <MdDashboard />\r\n                            </Button>\r\n                            <Button\r\n                              style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\r\n                            >\r\n                              <span\r\n                                style={{\r\n                                  fontSize: \"12px\",\r\n                                  color: \"#fff\",\r\n                                  fontWeight: \"bolder\",\r\n                                }}\r\n                              >\r\n                                Patient Dashboard\r\n                              </span>\r\n                            </Button>\r\n                          </ButtonGroup>\r\n                        </Link>\r\n                      </div>\r\n                    ),\r\n                  })),\r\n                  page: query.page,\r\n                  totalCount: result.data.totalRecords,\r\n                });\r\n              })\r\n          )\r\n        }\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: \"#014d88\",\r\n            color: \"#fff\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"200%\",\r\n            margingLeft: \"250px\",\r\n          },\r\n          filtering: false,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: 10,\r\n          debounceInterval: 400,\r\n        }}\r\n        components={{\r\n          Toolbar: (props) => (\r\n            <div>\r\n              <div className=\"form-check custom-checkbox  float-left mt-4 ml-3 \">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"form-check-input\"\r\n                  name=\"showPP!\"\r\n                  id=\"showPP\"\r\n                  value=\"showPP\"\r\n                  checked={showPPI === true ? false : true}\r\n                  onChange={handleCheckBox}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"basic_checkbox_1\">\r\n                  <b style={{ color: \"#014d88\", fontWeight: \"bold\" }}>\r\n                    SHOW PII\r\n                  </b>\r\n                </label>\r\n              </div>\r\n              <MTableToolbar {...props} />\r\n            </div>\r\n          ),\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ANCPatients;\r\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Patient\\PatientCard.js",["236","237","238","239","240","241","242","243","244","245"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Patient\\SubMenu.js",["246","247","248","249","250","251","252","253"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\api.js",[],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\Index.js",["254","255","256","257","258","259","260","261","262","263","264"],"import React, {useCallback, useEffect, useState} from \"react\";\nimport { Button} from 'semantic-ui-react'\nimport {Card, CardBody} from \"reactstrap\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {ToastContainer, toast} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\n\nimport 'react-phone-input-2/lib/style.css'\nimport { Icon, Menu, Sticky } from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css';\nimport BasicInfo from './BasicInfo'\nimport PreTest from './PreTest'\nimport HivTestResult from './HivTestResult'\nimport IndexingContactTracing from './Elicitation/Index'\nimport Others from './Others'\nimport PostTest from './PostTest'\nimport RecencyTesting from './RecencyTesting'\nimport RiskStratification from './RiskStratification'\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    },  \n    success: {\n        color: \"#4BB543 \",\n        fontSize: \"11px\",\n    },\n}));\n\n\nconst PmtctHts = (props) => {\n    const classes = useStyles();\n    const history = useHistory();\n    const location = useLocation();\n    const locationState = location.state;\n    const [saving, setSaving] = useState(false);\n    const [activeItem, setactiveItem] = useState('hiv-test');\n    const [completed, setCompleted] = useState([]);\n    const [hideOtherMenu, setHideOtherMenu] = useState(true);\n    const [patientObj, setPatientObj] = useState({\n        breastFeeding: \"\",\n        capturedBy: \"\",\n        cd4: {},\n        clientCode: \"\",\n        riskStratificationCode:\"\",\n        confirmatoryTest: {},\n        dateVisit: \"\",\n        extra: {},\n        firstTimeVisit: \"\",\n        hepatitisTesting: {},\n        hivTestResult: \"\",\n        id: \"\",\n        indexClient: \"\",\n        indexClientCode: \"\",\n        indexElicitation: [\n          {\n            address: \"\",\n            altPhoneNumber: \"\",\n            archived: 0,\n            currentlyLiveWithPartner: true,\n            datePartnerCameForTesting: \"\",\n            dob: \"\",\n            extra: {},\n            facilityId: 0,\n            firstName: \"\",\n            hangOutSpots: \"\",\n            htsClient: {\n              archived: 0,\n              breastFeeding: 0,\n              capturedBy: \"\",\n              cd4: {},\n              clientCode: \"\",\n              confirmatoryTest: {},\n              dateVisit: \"\",\n              extra: {},\n              facilityId: 0,\n              firstTimeVisit: true,\n              hepatitisTesting: {},\n              hivTestResult: \"\",\n              id: 0,\n              indexClient: true,\n              indexClientCode: \"\",\n              indexNotificationServicesElicitation: {},\n              knowledgeAssessment: {},\n              numChildren: 0,\n              numWives: 0,\n              others: {},\n              person: {\n                active: \"\",\n                address: {},\n                archived: 0,\n                contact: {},\n                contactPoint: {},\n                createdDate: \"\",\n                dateOfBirth: \"\",\n                dateOfRegistration: \"\",\n                deceased: true,\n                deceasedDateTime: \"\",\n                education: {},\n                employmentStatus: {},\n                emrId: \"\",\n                facilityId: 0,\n                firstName: \"string\",\n                gender: {},\n                hospitalNumber: \"\",\n                id: \"\",\n                identifier: {},\n                isDateOfBirthEstimated: true,\n                lastModifiedDate: \"\",\n                maritalStatus: {},\n                new: true,\n                ninNumber: \"\",\n                organization: {},\n                otherName: \"\",\n                sex: \"\",\n                surname: \"\",\n                uuid: \"\"\n              },\n              personUuid: \"\",\n              postTestCounselingKnowledgeAssessment: {},\n              pregnant: \"\",\n              previouslyTested: true,\n              recency: {},\n              referredFrom: \"\",\n              relationWithIndexClient: \"\",\n              riskAssessment: {},\n              sexPartnerRiskAssessment: {},\n              stiScreening: {},\n              syphilisTesting: {},\n              targetGroup: 0,\n              tbScreening: {},\n              test1: {},\n              testingSetting: \"\",\n              tieBreakerTest: {},\n              typeCounseling: \"\",\n              uuid: \"\"\n            },\n            htsClientUuid: \"\",\n            id: \"\",\n            isDateOfBirthEstimated: true,\n            lastName: \"\",\n            middleName: \"\",\n            notificationMethod: \"\",\n            partnerTestedPositive: \"\",\n            phoneNumber: \"\",\n            physicalHurt: \"\",\n            relationshipToIndexClient: \"\",\n            sex: \"\",\n            sexuallyUncomfortable: \"\",\n            threatenToHurt: \"\",\n            uuid: \"\"\n          }\n        ],\n        indexNotificationServicesElicitation: {},\n        knowledgeAssessment: {},\n        numChildren: \"\",\n        numWives: \"\",\n        others: {},\n        personId: props.patientObj.personId,\n        personResponseDto: {\n          active: true,\n          \n        address: {\n            address: [\n              {\n                city: \"\",\n                line: [\n                  \"\"\n                ],\n                stateId: \"\",\n                district: \"\",\n                countryId: 1,\n                postalCode: \"\",\n                organisationUnitId: 0\n              }\n            ]\n          },\n          biometricStatus: true,\n          checkInDate: \"\",\n          contact: {},\n          contactPoint:{contactPoint:[\n            {\n                type: \"phone\",\n                value: \"\"\n            }\n            ]},\n          dateOfBirth: \"\",\n          dateOfRegistration: \"\",\n          deceased: true,\n          deceasedDateTime: \"\",\n          education: {},\n          employmentStatus: {},\n          emrId: \"\",\n          encounterDate: \"\",\n          facilityId: \"\",\n          firstName: \"\",\n          gender: {},\n          id: \"\",\n          identifier: {},\n          isDateOfBirthEstimated: true,\n          maritalStatus: {},\n          ninNumber: \"\",\n          organization: {},\n          otherName: \"\",\n          sex: \"\",\n          surname: \"\",\n          visitId: \"\"\n        },\n        postTestCounselingKnowledgeAssessment: {},\n        pregnant: \"\",\n        previouslyTested: \"\",\n        recency: {},\n        referredFrom: \"\",\n        relationWithIndexClient: \"\",\n        riskAssessment: {},\n        sexPartnerRiskAssessment: {},\n        stiScreening: {},\n        syphilisTesting: {},\n        targetGroup: \"\",\n        tbScreening: {},\n        test1: {},\n        test2: {},\n        testingSetting: \"\",\n        tieBreakerTest: {},\n        typeCounseling: \"\",\n        riskStratificationResponseDto:null\n        \n    });\n    const [extra, setExtra] = useState({\n    risk:\"\",\n    index:\"\",\n    pre:\"\",\n    post:\"\",\n    recency:\"\",\n    elicitation:\"\"\n});\n    const handleItemClick =(activeItem)=>{\n        setactiveItem(activeItem)\n        //setCompleted({...completed, ...completedMenu})\n    }\n    useEffect(() => { \n        // if(locationState && locationState.patientObj){\n        //     setPatientObj(locationState.patientObject)           \n        // }\n    }, []);\n\n\n    return (\n        <>\n            <ToastContainer autoClose={3000} hideProgressBar />\n           \n            <Card >\n                <CardBody>\n                <form >\n                    <div className=\"row\">\n                    <h3>PMTCT - HIV COUNSELLING AND TESTING \n                    </h3>\n                        <br/>\n                        <br/>\n                        \n                        <div className=\"col-md-3 col-sm-3 col-lg-3\">                       \n                        <Menu  size='large'  vertical  style={{backgroundColor:\"#014D88\"}}>\n                            <Menu.Item\n                                name='inbox'\n                                active={activeItem === 'hiv-test'}\n                                onClick={()=>handleItemClick('hiv-test')}\n                                style={{backgroundColor:activeItem === 'hiv-test' ? '#000': \"\"}}\n                                //disabled={activeItem !== 'hiv-test' ? true : false}\n                            >               \n                                <span style={{color:'#fff'}}>Request {\"&\"} Result Form\n                                {completed.includes('hiv-test') && (\n                                    <Icon name='check' color='green' />\n                                )}\n                                </span>\n                                \n                                {/* <Label color='teal'>3</Label> */}\n                            </Menu.Item>                            \n                            <Menu.Item\n                                name='spam'\n                                active={activeItem === 'recency-testing'}\n                                onClick={()=>handleItemClick('recency-testing')}\n                                style={{backgroundColor:activeItem === 'recency-testing' ? '#000': \"\"}}\n                                //disabled={activeItem !== 'recency-testing' ? true : false}\n                            >\n                            {/* <Label>4</Label> */}\n                            <span style={{color:'#fff'}}>HIV Recency Testing\n                                {completed.includes('recency-testing') && (\n                                    <Icon name='check' color='green' />\n                                )}\n                            </span>\n                           \n                            </Menu.Item>\n                            <Menu.Item\n                                name='spam'\n                                active={activeItem === 'indexing'}\n                                onClick={()=>handleItemClick('indexing')}\n                                style={{backgroundColor:activeItem === 'indexing' ? '#000': \"\"}}\n                                //disabled={activeItem !== 'indexing' ? true : false}\n                            >\n                            {/* <Label>4</Label> */}\n                            <span style={{color:'#fff'}}>Index Notification Services - Elicitation\n                            {completed.includes('indexing') && (\n                                <Icon name='check' color='green' />\n                            )}\n                            </span>\n                            \n                            </Menu.Item>\n                        </Menu>\n                        </div>\n                        \n                        <div className=\"col-md-9 col-sm-9 col-lg-9 \" style={{ backgroundColor:\"#fff\", margingLeft:\"-50px\", paddingLeft:\"-20px\"}}>\n                            {activeItem==='risk' && (<RiskStratification handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj}  setHideOtherMenu={setHideOtherMenu} patientAge={props.patientObj.age} setExtra={setExtra} extra={extra} activePage={props.activePage} setActivePage={props.setActivePage}/>)}\n                            {activeItem==='basic' && (<BasicInfo handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} clientCode={props.clientCode} patientAge={props.patientObj.age} setExtra={setExtra} extra={extra}/>)}\n                            {activeItem==='pre-test-counsel' && (<PreTest handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} clientCode={props.clientCode} patientAge={props.patientObj.age}/>)}\n                            {activeItem==='hiv-test' && (<HivTestResult handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} clientCode={props.clientCode} patientAge={props.patientObj.age}/>)}\n                            {activeItem==='post-test' && (<PostTest handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} clientCode={props.clientCode} patientAge={props.patientObj.age} patientsHistory={props.patients}/>)}\n                            {activeItem==='indexing' && (<IndexingContactTracing handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} clientCode={props.clientCode} patientAge={props.patientObj.age}/>)}\n                            {activeItem==='recency-testing' && (<RecencyTesting  handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} clientCode={props.clientCode} patientAge={props.patientObj.age}/>)}\n                            {activeItem==='others' && (<Others handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} clientCode={props.clientCode} patientAge={props.patientObj.age}/>)}\n                            \n                        </div>                                   \n                    </div>\n\n                \n                    </form>\n                </CardBody>\n            </Card>                                 \n        </>\n    );\n};\n\nexport default PmtctHts","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PmtctServices\\Partners\\AddNewPartner.js",["265","266","267"],"import React, {useState, useEffect} from 'react';\nimport {Card,CardBody, FormGroup, Label, Input, InputGroup} from 'reactstrap';\nimport MatButton from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport SaveIcon from '@material-ui/icons/Save'\nimport CancelIcon from '@material-ui/icons/Cancel'\nimport axios from \"axios\";\nimport { toast} from \"react-toastify\";\nimport { url as baseUrl, token } from \"./../../../../api\";\n//import { useHistory } from \"react-router-dom\";\nimport 'react-summernote/dist/react-summernote.css'; // import styles\nimport { Spinner } from \"reactstrap\";\nimport { Button,  } from 'semantic-ui-react'\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n\n    root: {\n        flexGrow: 1,\n        \"& .card-title\":{\n            color:'#fff',\n            fontWeight:'bold'\n        },\n        \"& .form-control\":{\n            borderRadius:'0.25rem',\n            height:'41px'\n        },\n        \"& .card-header:first-child\": {\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\n        },\n        \"& .dropdown-toggle::after\": {\n            display: \" block !important\"\n        },\n        \"& select\":{\n            \"-webkit-appearance\": \"listbox !important\"\n        },\n        \"& p\":{\n            color:'red'\n        },\n        \"& label\":{\n            fontSize:'14px',\n            color:'#014d88',\n            fontWeight:'bold'\n        }\n    },\n    input: {\n        display: 'none'\n    }, \n    error: {\n        color: \"#f85032\",\n        fontSize: \"11px\",\n    },\n    success: {\n        color: \"#4BB543 \",\n        fontSize: \"11px\",\n    },\n}))\n\nconst Labourpartner = (props) => {\n    const patientObj = props.patientObj;\n    //let history = useHistory();\n    const classes = useStyles()\n    const [saving, setSaving] = useState(false);\n    const [disabledField, setDisabledField] = useState(false);\n    const [errors, setErrors] = useState({});\n    const [syphills, setSyphills] = useState([]);\n    const [referred, setReferred] = useState([]);\n    const [partner, setpartner]= useState({\n                age: \"\",\n                dateOfBirth: \"\",\n                fullName: \"\",\n                hbStatus: \"\",\n                hcStatus: \"\",\n                postTestCounseled: \"\",\n                referredTo: \"\",\n                syphillsStatus: \"\",\n                referredToOthers:\"\"\n    })\n    useEffect(() => {  \n        PARTNER_SYPHILIS_STATUS();\n        PARTNER_REFERRED_PMTCT(); \n        if(props.activeContent && props.activeContent.id) {\n            setpartner(props.activeContent.obj)\n            setDisabledField(props.activeContent.actionType===\"view\"? true : false)\n            \n        }       \n    }, [props.patientObj.id, props.activeContent]);\n    //Get list \n    const PARTNER_SYPHILIS_STATUS =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/PARTNER_SYPHILIS_STATUS`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            //console.log(response.data);\n            setSyphills(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    const PARTNER_REFERRED_PMTCT =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/PARTNER_REFERRED_PMTCT`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            //console.log(response.data);\n            setReferred(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    const handleInputChangepartnerDto = e => {  \n        setErrors({...errors, [e.target.name]: \"\"})            \n        setpartner ({...partner,  [e.target.name]: e.target.value});\n        if(e.target.name==='referredTo' && partner.referredTo!=='OTHERS'){\n            partner.referredToOthers=\"\"\n            setpartner ({...partner,  ['referredToOthers']: \"\"});\n            setpartner ({...partner,  [e.target.name]: e.target.value});\n        }\n        setpartner ({...partner,  [e.target.name]: e.target.value});\n    }\n\n    //FORM VALIDATION\n    const validate = () => {\n        let temp = { ...errors }\n        temp.age = partner.age ? \"\" : \"This field is required\"\n        //temp.hbStatus = partner.hbStatus ? \"\" : \"This field is required\"\n        //temp.hcStatus = partner.hcStatus ? \"\" : \"This field is required\"\n        temp.postTestCounseled = partner.postTestCounseled ? \"\" : \"This field is required\"\n        temp.fullName = partner.fullName ? \"\" : \"This field is required\" \n        //temp.syphillisStatus = partner.syphillisStatus ? \"\" : \"This field is required\"\n        setErrors({\n            ...temp\n            })    \n        return Object.values(temp).every(x => x == \"\")\n    }\n    /**** Submit Button Processing  */\n    const handleSubmit = (e) => {        \n        e.preventDefault();  \n        if(validate()){\n        setSaving(true);\n        axios.put(`${baseUrl}pmtct/anc/update-partnerinformation-in-anc/${props.patientObj.id}`, partner,\n        { headers: {\"Authorization\" : `Bearer ${token}`}},\n        \n        )\n            .then(response => {\n                setSaving(false);\n                //props.patientObj.commenced=true\n                toast.success(\"Record save successful\", {position: toast.POSITION.BOTTOM_CENTER});\n                props.setActiveContent({...props.activeContent, route:'partners'})\n            })\n            .catch(error => {\n                setSaving(false);\n                toast.error(\"Something went wrong\", {position: toast.POSITION.BOTTOM_CENTER});\n                \n            });\n        }else{\n            toast.error(\"All field are required\", {position: toast.POSITION.BOTTOM_CENTER});\n        } \n    }\n    const LoadPage =()=>{    \n        props.setActiveContent({...props.activeContent, route:'partners', id:\"\", actionType:\"\"})\n    }\n    \n\n  return (      \n      <div >\n         <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className=\" float-end  mr-2 mt-2\"\n            onClick={()=>LoadPage()}\n            style={{backgroundColor:\"#014d88\"}}\n            //startIcon={<FaUserPlus size=\"10\"/>}\n        >\n            <span style={{ textTransform: \"capitalize\" }}> Back</span>\n        </Button>\n        <br/><br/><br/>          \n        <Card className={classes.root}>\n            <CardBody>\n            <form >\n                <div className=\"row\">\n                    <h2>New Partner </h2>\n                    \n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >ANC Number <span style={{ color:\"red\"}}> *</span></Label>\n                            <InputGroup> \n                                <Input \n                                    type=\"text\"\n                                    name=\"ancNo\"\n                                    id=\"ancNo\"\n                                    onChange={handleInputChangepartnerDto}\n                                    value={props.patientObj.ancNo} \n                                    disabled\n                                />\n                            </InputGroup>\n                            {errors.ancNo !==\"\" ? (\n                                    <span className={classes.error}>{errors.ancNo}</span>\n                            ) : \"\" }\n                            </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Partner HIV Status </Label>\n                            <InputGroup> \n                                <Input \n                                    type=\"text\"\n                                    name=\"partnerHivSTatus\"\n                                    id=\"partnerHivSTatus\"\n                                    //onChange={handleInputChangepartnerDto}\n                                    value={props.patientObj.dynamicHivStatus!==\"Unknown\"  ? props.patientObj.dynamicHivStatus : props.patientObj.staticHivStatus}\n                                    disabled\n                                />\n                            </InputGroup>\n                            {errors.ancNo !==\"\" ? (\n                                    <span className={classes.error}>{errors.ancNo}</span>\n                            ) : \"\" }\n                            </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Partner  Full Name <span style={{ color:\"red\"}}> *</span></Label>\n                            <InputGroup> \n                                <Input \n                                    type=\"text\"\n                                    name=\"fullName\"\n                                    id=\"fullName\"\n                                    onChange={handleInputChangepartnerDto}\n                                    value={partner.fullName} \n                                    disabled={disabledField}\n                                    \n                                />\n                            </InputGroup>\n                            {errors.fullName !==\"\" ? (\n                                    <span className={classes.error}>{errors.fullName}</span>\n                            ) : \"\" }\n                            </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Partner  age <span style={{ color:\"red\"}}> *</span></Label>\n                            <InputGroup> \n                                <Input \n                                    type=\"Number\"\n                                    name=\"age\"\n                                    id=\"age\"\n                                    min={10}\n                                    onChange={handleInputChangepartnerDto}\n                                    value={partner.age} \n                                    disabled={disabledField}\n                                />\n                            </InputGroup>\n                            {errors.ancNo !==\"\" ? (\n                                    <span className={classes.error}>{errors.ancNo}</span>\n                            ) : \"\" }\n                            </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Pre-test Counseled <span style={{ color:\"red\"}}> *</span></Label>\n                            <InputGroup> \n                            <Input \n                                    type=\"select\"\n                                    name=\"preTestCounseled\"\n                                    id=\"preTestCounseled\"\n                                    onChange={handleInputChangepartnerDto}\n                                    value={partner.preTestCounseled}\n                                    disabled={disabledField} \n                                >\n                                    <option value=\"\" >Select</option>\n                                    <option value=\"Yes\" >Yes</option>\n                                    <option value=\"No\" >No</option>\n                                </Input>\n                            </InputGroup>\n                            {errors.preTestCounseled !==\"\" ? (\n                                    <span className={classes.error}>{errors.preTestCounseled}</span>\n                            ) : \"\" }\n                            </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Partner accepts  HIV test</Label>\n                            <InputGroup> \n                            <Input \n                                    type=\"select\"\n                                    name=\"acceptHivTest\"\n                                    id=\"acceptHivTest\"\n                                    onChange={handleInputChangepartnerDto}\n                                    value={partner.acceptHivTest}\n                                    disabled={disabledField} \n                                >\n                                    <option value=\"\" >Select</option>\n                                    <option value=\"Yes\" >Yes</option>\n                                    <option value=\"No\" >No</option>\n                                </Input>\n                            </InputGroup>\n                            {errors.acceptHivTest !==\"\" ? (\n                                    <span className={classes.error}>{errors.acceptHivTest}</span>\n                            ) : \"\" }\n                            </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Post-test counseled/ received test result</Label>\n                            <InputGroup> \n                            <Input \n                                    type=\"select\"\n                                    name=\"postTestCounseled\"\n                                    id=\"postTestCounseled\"\n                                    onChange={handleInputChangepartnerDto}\n                                    value={partner.postTestCounseled} \n                                    disabled={disabledField}\n                                >\n                                    <option value=\"\" >Select</option>\n                                    <option value=\"Yes\" >Yes</option>\n                                    <option value=\"No\" >No</option>\n                                </Input>\n\n                            </InputGroup>\n                            {errors.postTestCounseled !==\"\" ? (\n                                    <span className={classes.error}>{errors.postTestCounseled}</span>\n                            ) : \"\" }\n                            </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >HBV status </Label>\n                            <InputGroup> \n                            <Input \n                                    type=\"select\"\n                                    name=\"hbStatus\"\n                                    id=\"hbStatus\"\n                                    onChange={handleInputChangepartnerDto}\n                                    value={partner.hbStatus} \n                                    disabled={disabledField}\n                                >\n                                    <option value=\"\" >Select</option>\n                                    <option value=\"Positive\" >Positive</option>\n                                    <option value=\"Negative\" >Negative</option>\n                                </Input>\n\n                            </InputGroup>\n                            {errors.hbStatus !==\"\" ? (\n                                    <span className={classes.error}>{errors.hbStatus}</span>\n                            ) : \"\" }\n                            </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >HCV status </Label>\n                            <InputGroup> \n                            <Input \n                                    type=\"select\"\n                                    name=\"hcStatus\"\n                                    id=\"hcStatus\"\n                                    onChange={handleInputChangepartnerDto}\n                                    value={partner.hcStatus} \n                                    disabled={disabledField}\n                                >\n                                    <option value=\"\" >Select</option>\n                                    <option value=\"Positive\" >Positive</option>\n                                    <option value=\"Negative\" >Negative</option>\n                                </Input>\n\n                            </InputGroup>\n                            {errors.hcStatus !==\"\" ? (\n                                    <span className={classes.error}>{errors.hcStatus}</span>\n                            ) : \"\" }\n                            </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Syphillis Status </Label>\n                            <InputGroup> \n                            <Input \n                                    type=\"select\"\n                                    name=\"syphillisStatus\"\n                                    id=\"syphillisStatus\"\n                                    onChange={handleInputChangepartnerDto}\n                                    value={partner.syphillisStatus}\n                                    disabled={disabledField} \n                                >\n                                    <option value=\"\" >Select</option>                                    \n                                    {syphills.map((value) => (\n                                        <option key={value.id} value={value.display}>\n                                            {value.display}\n                                        </option>\n                                    ))}\n                                </Input>\n\n                            </InputGroup>\n                            {errors.syphillisStatus !==\"\" ? (\n                                    <span className={classes.error}>{errors.syphillisStatus}</span>\n                            ) : \"\" }\n                            </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Referred To</Label>\n                            <InputGroup> \n                                <Input \n                                    type=\"select\"\n                                    name=\"referredTo\"\n                                    id=\"referredTo\"\n                                    onChange={handleInputChangepartnerDto}\n                                    value={partner.referredTo} \n                                    disabled={disabledField}\n                                >\n                                    <option value=\"\" >Select</option> \n                                     {referred.map((value) => (\n                                        <option key={value.id} value={value.display}>\n                                            {value.display}\n                                        </option>\n                                    ))}\n                                </Input>\n                            </InputGroup>\n                            {errors.referredTo !==\"\" ? (\n                                    <span className={classes.error}>{errors.referredTo}</span>\n                            ) : \"\" }\n                            </FormGroup>\n                    </div>\n                    {partner.referredTo==='OTHERS' && (\n                        <div className=\"form-group mb-3 col-md-6\">\n                        <FormGroup>\n                        <Label >Referred To Others (Please specify)</Label>\n                        <InputGroup> \n                            <Input \n                                type=\"text\"\n                                name=\"referredToOthers\"\n                                id=\"referredToOthers\"\n                                onChange={handleInputChangepartnerDto}\n                                value={partner.referredToOthers} \n                                disabled={disabledField}\n                            >\n                                \n                            </Input>\n                        </InputGroup>\n                       \n                        </FormGroup>\n                </div>\n                    )}\n  \n            </div>\n                \n                {saving ? <Spinner /> : \"\"}\n            <br />\n            {props.activeContent && props.activeContent.actionType ===\"update\" ? (<>\n                <MatButton\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    \n                    className={classes.button}\n                    disabled={saving}\n                    startIcon={<SaveIcon />}\n                    style={{backgroundColor:\"#014d88\"}}\n                    onClick={handleSubmit}\n                    >\n                        {!saving ? (\n                        <span style={{ textTransform: \"capitalize\" }}>Update</span>\n                        ) : (\n                        <span style={{ textTransform: \"capitalize\" }}>Updating</span>\n                        )}\n                    </MatButton>\n            </>)\n            :\n            (<>\n            \n                <MatButton\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                hidden={disabledField}\n                className={classes.button}\n                disabled={saving}\n                startIcon={<SaveIcon />}\n                style={{backgroundColor:\"#014d88\"}}\n                onClick={handleSubmit}\n                >\n                    {!saving ? (\n                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\n                    ) : (\n                    <span style={{ textTransform: \"capitalize\" }}>Saving</span>\n                    )}\n                </MatButton>\n                </>)\n            }\n            \n            <MatButton\n                variant=\"contained\"\n                className={classes.button}\n                startIcon={<CancelIcon />}\n                style={{backgroundColor:'#992E62'}}\n                onClick={()=>LoadPage()}\n            >\n                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\n            </MatButton>\n            \n                </form>\n            </CardBody>\n        </Card> \n                  \n    </div>\n  );\n}\n\nexport default Labourpartner;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PmtctServices\\PmtctEnrollment.js",["268","269","270","271","272","273","274","275","276","277","278","279","280"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PmtctServices\\AncEnrollement.js",["281","282","283","284"],"import React, {useState, useEffect} from 'react';\nimport {Card,CardBody, FormGroup, Label, Input, InputGroup} from 'reactstrap';\nimport MatButton from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport SaveIcon from '@material-ui/icons/Save'\nimport CancelIcon from '@material-ui/icons/Cancel'\nimport axios from \"axios\";\nimport { toast} from \"react-toastify\";\nimport { url as baseUrl, token } from \"./../../../api\";\nimport { useHistory } from \"react-router-dom\";\nimport 'react-summernote/dist/react-summernote.css'; // import styles\nimport { Spinner } from \"reactstrap\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n\n    root: {\n        flexGrow: 1,\n        \"& .card-title\":{\n            color:'#fff',\n            fontWeight:'bold'\n        },\n        \"& .form-control\":{\n            borderRadius:'0.25rem',\n            height:'41px'\n        },\n        \"& .card-header:first-child\": {\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\n        },\n        \"& .dropdown-toggle::after\": {\n            display: \" block !important\"\n        },\n        \"& select\":{\n            \"-webkit-appearance\": \"listbox !important\"\n        },\n        \"& p\":{\n            color:'red'\n        },\n        \"& label\":{\n            fontSize:'14px',\n            color:'#014d88',\n            fontWeight:'bold'\n        }\n    },\n    input: {\n        display: 'none'\n    }, \n    error: {\n        color: \"#f85032\",\n        fontSize: \"11px\",\n    },\n    success: {\n        color: \"#4BB543 \",\n        fontSize: \"11px\",\n    },\n}))\n\nconst AncEnrollement = (props) => {\n    const patientObj = props.patientObj;\n    console.log(patientObj)\n    let history = useHistory();\n    const classes = useStyles()\n    //const [values, setValues] = useState([]);\n    const [saving, setSaving] = useState(false);\n    const [errors, setErrors] = useState({});\n\n    const [vital, setVitalSignDto]= useState({\n\n                                                bodyWeight: \"\",\n                                                diastolic: \"\",\n                                                encounterDate: \"\",\n                                                facilityId: 1,\n                                                height: \"\",\n                                                personId: \"\",\n                                                pulse: \"\",\n                                                respiratoryRate: \"\",\n                                                systolic:\"\",\n                                                temperature: \"\",\n                                                visitId:\"\"\n                                            })\n    \n    const handleInputChangeVitalSignDto = e => {            \n        setVitalSignDto ({...vital,  [e.target.name]: e.target.value});\n    }\n\n    //FORM VALIDATION\n    const validate = () => {\n        let temp = { ...errors }\n        //temp.name = details.name ? \"\" : \"This field is required\"\n        //temp.description = details.description ? \"\" : \"This field is required\"\n        setErrors({\n            ...temp\n            })    \n        return Object.values(temp).every(x => x == \"\")\n    }\n        \n    /**** Submit Button Processing  */\n    const handleSubmit = (e) => {        \n        e.preventDefault();        \n        \n        setSaving(true);\n        axios.post(`${baseUrl}patient/vital-sign/`, vital,\n        { headers: {\"Authorization\" : `Bearer ${token}`}},\n        \n        )\n            .then(response => {\n                setSaving(false);\n                props.patientObj.commenced=true\n                toast.success(\"Vital signs save successful\");\n                props.setActiveContent({...props.activeContent, route:'recent-history'})\n            })\n            .catch(error => {\n                setSaving(false);\n                toast.error(\"Something went wrong\");\n                \n            });\n        \n    }\n\n  return (      \n      <div >\n                   \n        <Card className={classes.root}>\n            <CardBody>\n            <form >\n                <div className=\"row\">\n                <h2>ANC Enrollment</h2>\n                <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >ANC No <span style={{ color:\"red\"}}> *</span></Label>\n                            <InputGroup> \n                                <Input \n                                    type=\"text\"\n                                    name=\"encounterDate\"\n                                    id=\"encounterDate\"\n                                    onChange={handleInputChangeVitalSignDto}\n                                    value={vital.encounterDate} \n                                />\n\n                            </InputGroup>\n                        \n                            </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Date of 1st ANC <span style={{ color:\"red\"}}> *</span></Label>\n                            <InputGroup> \n                                <Input \n                                    type=\"date\"\n                                    name=\"encounterDate\"\n                                    id=\"encounterDate\"\n                                    onChange={handleInputChangeVitalSignDto}\n                                    value={vital.encounterDate} \n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                />\n\n                            </InputGroup>\n                        \n                            </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Gravida</Label>\n                            <InputGroup> \n                                <Input \n                                    type=\"number\"\n                                    name=\"encounterDate\"\n                                    id=\"encounterDate\"\n                                    onChange={handleInputChangeVitalSignDto}\n                                    value={vital.encounterDate} \n                                    min=\"0\"\n                                />\n\n                            </InputGroup>\n                        \n                            </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Parity</Label>\n                            <InputGroup> \n                                <Input \n                                    type=\"number\"\n                                    name=\"encounterDate\"\n                                    id=\"encounterDate\"\n                                    onChange={handleInputChangeVitalSignDto}\n                                    value={vital.encounterDate} \n                                />\n\n                            </InputGroup>\n                        \n                            </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Date Of Last Menstrual Period <span style={{ color:\"red\"}}> *</span> </Label>\n                            <InputGroup> \n                                <Input \n                                    type=\"date\"\n                                    name=\"encounterDate\"\n                                    id=\"encounterDate\"\n                                    onChange={handleInputChangeVitalSignDto}\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                    value={vital.encounterDate} \n                                />\n\n                            </InputGroup>\n                        \n                            </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Expected Date Of Delivery </Label>\n                            <InputGroup> \n                                <Input \n                                    type=\"Date\"\n                                    name=\"encounterDate\"\n                                    id=\"encounterDate\"\n                                    onChange={handleInputChangeVitalSignDto}\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                    value={vital.encounterDate} \n                                />\n\n                            </InputGroup>\n                        \n                            </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Gestational Age (Weeks)</Label>\n                            <InputGroup> \n                                <Input \n                                    type=\"text\"\n                                    name=\"encounterDate\"\n                                    id=\"encounterDate\"\n                                    onChange={handleInputChangeVitalSignDto}\n                                    value={vital.encounterDate} \n                                />\n\n                            </InputGroup>\n                        \n                            </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Time of HIV Diagnosis</Label>\n                            <InputGroup> \n                                <Input \n                                    type=\"text\"\n                                    name=\"encounterDate\"\n                                    id=\"encounterDate\"\n                                    onChange={handleInputChangeVitalSignDto}\n                                    value={vital.encounterDate} \n                                />\n                            </InputGroup>                                        \n                            </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Source of Referral</Label>\n                            <InputGroup> \n                                <Input \n                                    type=\"text\"\n                                    name=\"encounterDate\"\n                                    id=\"encounterDate\"\n                                    onChange={handleInputChangeVitalSignDto}\n                                    value={vital.encounterDate} \n                                />\n\n                            </InputGroup>\n                        \n                            </FormGroup>\n                    </div>\n                    \n                    <h3>Syphilis Information</h3>\n                    <hr/>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Tested for syphilis?</Label>\n                            <InputGroup> \n                                <Input \n                                    type=\"select\"\n                                    name=\"encounterDate\"\n                                    id=\"encounterDate\"\n                                    onChange={handleInputChangeVitalSignDto}\n                                    value={vital.encounterDate} \n                                />\n                            </InputGroup>                                        \n                            </FormGroup>\n                    </div>\n                   \n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Test Result</Label>\n                            <InputGroup> \n                                <Input \n                                    type=\"date\"\n                                    name=\"encounterDate\"\n                                    id=\"encounterDate\"\n                                    onChange={handleInputChangeVitalSignDto}\n                                    value={vital.encounterDate} \n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                />\n                            </InputGroup>                                        \n                            </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Treated for Syphilis</Label>\n                            <InputGroup> \n                                <Input \n                                    type=\"text\"\n                                    name=\"encounterDate\"\n                                    id=\"encounterDate\"\n                                    onChange={handleInputChangeVitalSignDto}\n                                    value={vital.encounterDate} \n                                />\n                            </InputGroup>                                        \n                            </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Referred for syphilis treatment</Label>\n                            <InputGroup> \n                                <Input \n                                    type=\"text\"\n                                    name=\"encounterDate\"\n                                    id=\"encounterDate\"\n                                    onChange={handleInputChangeVitalSignDto}\n                                    value={vital.encounterDate} \n                                />\n                            </InputGroup>                                        \n                            </FormGroup>\n                    </div>\n                    <h3>PMTCT HTS</h3>\n                    <hr/>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Previously known HIV positive?</Label>\n                            <InputGroup> \n                                <Input \n                                    type=\"text\"\n                                    name=\"encounterDate\"\n                                    id=\"encounterDate\"\n                                    onChange={handleInputChangeVitalSignDto}\n                                    value={vital.encounterDate} \n                                />\n                            </InputGroup>                                        \n                            </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Date tested HIV positive</Label>\n                            <InputGroup> \n                                <Input \n                                    type=\"date\"\n                                    name=\"encounterDate\"\n                                    id=\"encounterDate\"\n                                    onChange={handleInputChangeVitalSignDto}\n                                    value={vital.encounterDate} \n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                />\n                            </InputGroup>                                        \n                            </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Accepted HIV Testing?</Label>\n                            <InputGroup> \n                                <Input \n                                    type=\"text\"\n                                    name=\"encounterDate\"\n                                    id=\"encounterDate\"\n                                    onChange={handleInputChangeVitalSignDto}\n                                    value={vital.encounterDate} \n                                />\n                            </InputGroup>                                        \n                            </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >HIV test result</Label>\n                            <InputGroup> \n                                <Input \n                                    type=\"text\"\n                                    name=\"encounterDate\"\n                                    id=\"encounterDate\"\n                                    onChange={handleInputChangeVitalSignDto}\n                                    value={vital.encounterDate} \n                                />\n                            </InputGroup>                                        \n                            </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >HIV Restesting?</Label>\n                            <InputGroup> \n                                <Input \n                                    type=\"text\"\n                                    name=\"encounterDate\"\n                                    id=\"encounterDate\"\n                                    onChange={handleInputChangeVitalSignDto}\n                                    value={vital.encounterDate} \n                                />\n                            </InputGroup>                                        \n                            </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Received HIV test result?</Label>\n                            <InputGroup> \n                                <Input \n                                    type=\"text\"\n                                    name=\"encounterDate\"\n                                    id=\"encounterDate\"\n                                    onChange={handleInputChangeVitalSignDto}\n                                    value={vital.encounterDate} \n                                />\n                            </InputGroup>                                        \n                            </FormGroup>\n                    </div>\n                    \n                    <h3>Hepatitis Information</h3>\n                    <hr/>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Tested for Hepatitis B</Label>\n                            <InputGroup> \n                                <Input \n                                    type=\"text\"\n                                    name=\"encounterDate\"\n                                    id=\"encounterDate\"\n                                    onChange={handleInputChangeVitalSignDto}\n                                    value={vital.encounterDate} \n                                />\n                            </InputGroup>                                        \n                            </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Hepatitis B test result</Label>\n                            <InputGroup> \n                                <Input \n                                    type=\"text\"\n                                    name=\"encounterDate\"\n                                    id=\"encounterDate\"\n                                    onChange={handleInputChangeVitalSignDto}\n                                    value={vital.encounterDate} \n                                />\n                            </InputGroup>                                        \n                            </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Tested for Hepatitis C</Label>\n                            <InputGroup> \n                                <Input \n                                    type=\"text\"\n                                    name=\"encounterDate\"\n                                    id=\"encounterDate\"\n                                    onChange={handleInputChangeVitalSignDto}\n                                    value={vital.encounterDate} \n                                />\n                            </InputGroup>                                        \n                            </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Hepatitis C test result</Label>\n                            <InputGroup> \n                                <Input \n                                    type=\"text\"\n                                    name=\"encounterDate\"\n                                    id=\"encounterDate\"\n                                    onChange={handleInputChangeVitalSignDto}\n                                    value={vital.encounterDate} \n                                />\n                            </InputGroup>                                        \n                            </FormGroup>\n                    </div>\n                    <h3>Partner Notification</h3>\n                    <hr/>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Agreed to partner notification?</Label>\n                            <InputGroup> \n                                <Input \n                                    type=\"select\"\n                                    name=\"encounterDate\"\n                                    id=\"encounterDate\"\n                                    onChange={handleInputChangeVitalSignDto}\n                                    value={vital.encounterDate} \n                                >\n                                    <option value=\"\">Select</option>\n                                </Input>\n                            </InputGroup>                                        \n                            </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Partner's HIV status</Label>\n                            <InputGroup> \n                                <Input \n                                    type=\"select\"\n                                    name=\"encounterDate\"\n                                    id=\"encounterDate\"\n                                    onChange={handleInputChangeVitalSignDto}\n                                    value={vital.encounterDate} \n                                >\n                                    <option value=\"\">Select</option>\n                                </Input>\n                            </InputGroup>                                        \n                            </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Partner referred to?</Label>\n                            <InputGroup> \n                                <Input \n                                    type=\"select\"\n                                    name=\"encounterDate\"\n                                    id=\"encounterDate\"\n                                    onChange={handleInputChangeVitalSignDto}\n                                    value={vital.encounterDate} \n                                >\n                                    <option value=\"\">Select</option>\n                                </Input>\n                            </InputGroup>                                        \n                            </FormGroup>\n                    </div>\n                </div>\n                \n                {saving ? <Spinner /> : \"\"}\n            <br />\n            \n            <MatButton\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n            startIcon={<SaveIcon />}\n            onClick={handleSubmit}\n            >\n                {!saving ? (\n                <span style={{ textTransform: \"capitalize\" }}>Save</span>\n                ) : (\n                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\n                )}\n            </MatButton>\n            \n            <MatButton\n                variant=\"contained\"\n                className={classes.button}\n                startIcon={<CancelIcon />}\n                \n            >\n                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\n            </MatButton>\n            \n                </form>\n            </CardBody>\n        </Card> \n                  \n    </div>\n  );\n}\n\nexport default AncEnrollement;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PmtctServices\\LabourDelivery.js",["285","286","287","288"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\History\\PatientHistory.js",["289","290"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\History\\RecentHistory.js",["291","292","293"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PmtctServices\\Infants\\Index.js",["294","295"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Consultation\\Index.js",["296","297"],"import React, {useState, Fragment, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\nimport ConsultationPage from './Home';\nimport InfantVisit from \"./InfantVisit\";\nimport { url as baseUrl , token as token} from \"./../../../api\";\n\nconst divStyle = {\n  borderRadius: \"2px\",\n  fontSize: 14,\n};\n\nconst ClinicVisitPage = (props) => {\n    const [key, setKey] = useState('home');\n    const patientObj = props.patientObj\n    const [aliveChild, setAliveChild] = useState(0)\n    useEffect ( () => {\n      setKey(props.activeContent.activeTab)\n      DeliveryInfo();\n    }, [props.patientObj.id, props.activeContent.activeTab]);\n    ///GET Delivery Object\n    const DeliveryInfo =()=>{\n      axios\n          .get(`${baseUrl}pmtct/anc/view-delivery2/${props.patientObj.ancNo}`,\n              { headers: {\"Authorization\" : `Bearer ${token}`} }\n          )\n          .then((response) => {\n          console.log(response.data)\n          setAliveChild(response.data && response.data.numberOfInfantsAlive ? response.data.numberOfInfantsAlive : 0)\n          })\n          .catch((error) => {\n          //console.log(error);\n          });\n      \n  }\n\n  return (\n    <Fragment>  \n      <Row>       \n        <Col xl={12}>\n          <Card style={divStyle}>            \n            <Card.Body>\n              {/* <!-- Nav tabs --> */}\n              <div className=\"custom-tab-1\">\n                <Tabs\n                    id=\"controlled-tab-example\"\n                    activeKey={key}\n                    onSelect={(k) => setKey(k)}\n                    className=\"mb-3\"\n                >\n\n                  <Tab eventKey=\"home\" title=\"MOTHER FOLLOW UP VISIT \">                   \n                    <ConsultationPage patientObj={patientObj} setActiveContent={props.setActiveContent} activeContent={props.activeContent}/>\n                  </Tab>\n                  {aliveChild!==0 && aliveChild > 0  && (  \n                    <Tab eventKey=\"child\" title=\"CHILD FOLLOW UP VISIT\">                   \n                    <InfantVisit patientObj={patientObj} setActiveContent={props.setActiveContent} activeContent={props.activeContent}/>\n                    </Tab>\n                  )}                   \n                </Tabs>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n        \n      </Row>\n    </Fragment>\n  );\n};\n\nexport default ClinicVisitPage;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PmtctServices\\Partners\\Index.js",["298","299"],"import React, { useEffect, useState } from 'react'\nimport MaterialTable from 'material-table';\nimport axios from \"axios\";\nimport { url as baseUrl , token as token} from \"./../../../../api\";\nimport { forwardRef } from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { toast} from \"react-toastify\";\nimport {FaUserPlus} from 'react-icons/fa'\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport 'react-toastify/dist/ReactToastify.css';\n//import {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\nimport \"@reach/menu-button/styles.css\";\nimport {  Modal } from \"react-bootstrap\";\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\n\n\nconst tableIcons = {\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nconst PatientnHistory = (props) => {\n    const [partners, setPartners] = useState([])\n    const [loading, setLoading] = useState(true)\n    const [open, setOpen] = React.useState(false)\n    const [saving, setSaving] = useState(false)\n    const [record, setRecord] = useState(null)\n    const toggle = () => setOpen(!open);\n    useEffect(() => {\n        PatientHistory()\n      }, [props.patientObj.id]);\n        ///GET LIST OF Patients\n        const PatientHistory =()=>{\n            setLoading(true)\n            axios\n               .get(`${baseUrl}pmtct/anc/${props.patientObj.id}`,\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\n               )\n               .then((response) => {\n                setLoading(false)\n                //console.log(response.data.partnerInformation)\n                setPartners(response.data.partnerInformation!==null ? [response.data.partnerInformation] : [])\n                })\n\n               .catch((error) => {\n               //console.log(error);\n               });\n           \n          }\n    \n    const LoadPage =(row,activePage)=>{    \n            props.setActiveContent({...props.activeContent, route:'add-partner', id:row, actionType:activePage, obj:row})\n    }\n    const LoadDeletePage =(row)=>{\n\n            setSaving(true)       \n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\n            axios\n            .delete(`${baseUrl}pmtct/anc/delete/partnerinfo/${props.patientObj.id}`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                toast.success(\"Record Deleted Successfully\");\n                PatientHistory()\n                toggle()\n                setSaving(false) \n            })\n            .catch((error) => {\n                setSaving(false) \n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage);\n                  }\n                  else{\n                    toast.error(\"Something went wrong. Please try again...\");\n                  }\n            });  \n        \n    }\n    const LoadModal =(row)=>{\n        toggle()\n        setRecord(row)\n    }\n\n\n  return (\n    <div>\n        {partners && partners.length<= 0 && (\n        <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className=\" float-end  mr-2 mt-2\"\n            onClick={()=>LoadPage()}\n            style={{backgroundColor:\"#014d88\"}}\n            startIcon={<FaUserPlus size=\"10\"/>}\n        >\n            <span style={{ textTransform: \"capitalize\" }}>New Partner</span>\n        </Button>\n        )}\n        <br/><br/><br/><br/>\n\n            <MaterialTable\n            icons={tableIcons}\n              title=\"List of Partners \"\n              columns={[\n                { title: \"Partner Name\", field: \"name\" },\n                { title: \"Partner Age\", field: \"age\" },\n                { title: \"Pre-test Counseled\", field: \"pre\" },\n                { title: \"Partner Accept HIV Test\", field: \"hiv\" },             \n                { title: \"Post-Test Counseled\", field: \"post\" },\n                { title: \"HBV Status\", field: \"hbv\" },\n                { title: \"HCV Status\", field: \"hcv\" },\n                { title: \"Syphillis Status\", field: \"syphillis\" },\n                { title: \"Referred To\", field: \"referred\", filtering: false },        \n                { title: \"Actions\", field: \"actions\", filtering: false }, \n              ]}\n              isLoading={loading}\n              data={partners.map((row) => ({\n                   name: row.fullName,\n                   age: row.age,\n                   pre: row.preTestCounseled,\n                   hiv: row.acceptHivTest,\n                   post: row.postTestCounseled,\n                   hbv: row.hbStatus,\n                   hcv: row.hbStatus,\n                   syphillis: row.syphillisStatus,\n                   referred: row.referredTo,\n                   actions:\n            \n                    <div>\n                        <Menu.Menu position='right'  >\n                        <Menu.Item >\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\n                            <Dropdown item text='Action'>\n\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\n                            <Dropdown.Item onClick={()=>LoadPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>\n                                <Dropdown.Item  onClick={()=>LoadPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>\n                                <Dropdown.Item  onClick={()=>LoadModal(row, 'delete')}> <Icon name='trash' /> Delete</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                            </Button>\n                        </Menu.Item>\n                        </Menu.Menu>\n                    </div>\n                  \n                  }))}\n            \n                        options={{\n                          headerStyle: {\n                              backgroundColor: \"#014d88\",\n                              color: \"#fff\",\n                          },\n                          searchFieldStyle: {\n                              width : '200%',\n                              margingLeft: '250px',\n                          },\n                          filtering: false,\n                          exportButton: false,\n                          searchFieldAlignment: 'left',\n                          pageSizeOptions:[10,20,100],\n                          pageSize:10,\n                          debounceInterval: 400\n                      }}\n            />\n         <Modal show={open} toggle={toggle} className=\"fade\" size=\"md\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered backdrop=\"static\">\n            <Modal.Header >\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n            Notification!\n        </Modal.Title>\n        </Modal.Header>\n            <Modal.Body>\n                <h4>Are you Sure you want to delete - <b>{record && record.fullName}</b></h4>\n                \n            </Modal.Body>\n        <Modal.Footer>\n            <Button onClick={()=>LoadDeletePage(record)}  style={{backgroundColor:\"red\", color:\"#fff\"}} disabled={saving}>{saving===false ? \"Yes\": \"Deleting...\"}</Button>\n            <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}} disabled={saving}>No</Button>\n            \n        </Modal.Footer>\n        </Modal>    \n    </div>\n  );\n}\n\nexport default PatientnHistory;\n\n\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PmtctServices\\Infants\\InfantRegistration.js",["300","301","302","303","304"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Consultation\\Home.js",["305","306","307","308","309","310","311","312","313","314","315"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Consultation\\InfantVisit.js",["316","317","318"],"import React, { useState, useEffect } from \"react\";\nimport { Grid, Segment, Label, List, } from 'semantic-ui-react'\n// Page titie\nimport { FormGroup, Label as FormLabelName, \n          Input,InputGroup, InputGroupText\n        } from \"reactstrap\";\nimport { url as baseUrl, token } from \"../../../api\";\nimport MatButton from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport SaveIcon from '@material-ui/icons/Save'\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { toast } from \"react-toastify\";\n\n\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    margin: theme.spacing(20),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  cardBottom: {\n    marginBottom: 20\n  },\n  Select: {\n    height: 45,\n    width: 350\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n\n  root: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  input: {\n    display: 'none'\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"11px\",\n  },\n  success: {\n    color: \"#4BB543 \",\n    fontSize: \"11px\",\n  },\n}))\n\nconst ClinicVisit = (props) => {\n  let patientObj = props.patientObj ? props.patientObj : {}\n  //console.log(patientObj.pmtctEnrollmentRespondDto.pmtctEnrollmentDate)\n  const [errors, setErrors] = useState({});\n  const [infantHospitalNumber, setInfantHospitalNumber] = useState()\n  let temp = { ...errors }\n  const classes = useStyles()\n  const [saving, setSaving] = useState(false);\n  const [infants, setInfants] = useState([])\n  const [formFilter, setFormFilter] = useState({infantArv: false,  motherArt: false, outCome:false})\n  const [timingOfArtInitiation, setTimingOfArtInitiation] = useState([]);\n  const [childStatus, setChildStatus] = useState([]);\n  const [timeMotherArt, setTimeMotherArt] = useState([]);\n  const [regimenType, setRegimenType] = useState([]);\n  const [adultRegimenLine, setAdultRegimenLine] = useState([]);\n  const [infantArv, setInfantArv] = useState([]);\n  const [agectx, setAgeCTX] = useState([]);\n  const [pcrResult, setPcrResult] = useState([])\n  const [infantOutcome, setInfantOutcome] = useState([])\n  const [disabledField, setDisabledField] = useState(false);\n  const [objValues, setObjValues] = useState({\n      infantVisitRequestDto: \"\",\n      infantArvDto: \"\",\n      infantMotherArtDto: \"\",\n      infantPCRTestDto: \"\",\n  });\n  const [infantVisitRequestDto, setInfantVisitRequestDto] = useState({\n      ageAtCtx: \"\",\n      ancNumber: props.patientObj.ancNo,\n      bodyWeight: \"\",\n      breastFeeding: \"\",\n      ctxStatus: \"\",\n      infantHospitalNumber: \"\",\n      uuid: \"\",\n      visitDate: \"\",\n      visitStatus: \"\",\n      infantOutcomeAt18Months:\"\"\n  });\n  const [infantArvDto, setInfantArvDto] = useState({\n      ageAtCtx: \"\",\n      ancNumber: props.patientObj.ancNo,\n      arvDeliveryPoint: \"\",\n      infantArvTime: \"\",\n      infantArvType: \"\",\n      infantHospitalNumber: infantHospitalNumber,\n\n});\nconst [infantMotherArtDto, setInfantMotherArtDto] = useState({\n      ancNumber: props.patientObj.ancNo,\n      motherArtInitiationTime: \"\",\n      motherArtRegimen: \"\",\n      regimenTypeId:\"\",\n      regimenId:\"\"\n\n});\nconst [infantPCRTestDto, setInfantPCRTestDto] = useState({\n      ageAtTest: \"\",\n      ancNumber: props.patientObj.ancNo,\n      dateResultReceivedAtFacility: \"\",\n      dateResultReceivedByCaregiver: \"\",\n      dateSampleCollected: \"\",\n      dateSampleSent: \"\",\n      infantHospitalNumber: infantHospitalNumber,\n      results: \"\",\n      testType: \"\",\n  });\n  //Vital signs clinical decision support \n  const [vitalClinicalSupport, setVitalClinicalSupport] = \n            useState({\n              bodyWeight: \"\",\n            })\n\n  useEffect(() => {\n    InfantInfo();\n    TIME_ART_INITIATION_PMTCT();\n    CHILD_FOLLOW_UP_VISIT_STATUS();\n    TIMING_MOTHERS_ART_INITIATION();\n    AdultRegimenLine();\n    AGE_CTX_INITIATION();\n    INFANT_ARV_PROPHYLAXIS_TYPE();\n    INFANT_PCR_RESULT();\n    INFANT_OUTCOME_AT_18_MONTHS()\n    if(props.activeContent.id && props.activeContent.id!==\"\" && props.activeContent.id!==null){\n      GetVisit(props.activeContent.id)\n      setDisabledField(props.activeContent.actionType===\"view\"? true : false)\n    }\n  }, [props.patientObj.ancNo, props.activeContent]);\n  //GEt visit information   \n  const GetVisit =(id)=>{\n    axios\n    .get(`${baseUrl}pmtct/anc/view-infantvisit/${props.activeContent.id}`,\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\n    )\n    .then((response) => {\n         setObjValues(response.data);\n         setInfantVisitRequestDto({...response.data.infantVisitRequestDto})\n         setInfantArvDto({...response.data.infantArvDto})\n         setInfantMotherArtDto({...response.data.infantMotherArtDto})\n         setInfantPCRTestDto({...response.data.infantPCRTestDto})\n         GetInfantDetail2({...response.data.infantVisitRequestDto})\n    })\n    .catch((error) => {\n    //console.log(error);\n    });          \n  }\n  //This is to get infant hospital numbet when viewing or updating infant \n  const  GetInfantDetail2=(obj)=>{\n    setInfantHospitalNumber(obj.infantHospitalNumber)\n    const InfantVisit =()=>{\n     //setLoading(true)\n     axios\n         .get(`${baseUrl}pmtct/anc/get-form-filter/${obj.infantHospitalNumber}`,\n             { headers: {\"Authorization\" : `Bearer ${token}`} }\n         )\n         .then((response) => {\n           infantVisitRequestDto.infantHospitalNumber=obj.infantHospitalNumber\n           setFormFilter(response.data)\n         })\n\n         .catch((error) => {\n         //console.log(error);\n         });\n     \n    }\n    InfantVisit()\n  }\n  ///GET LIST OF Infants\n  const InfantInfo =()=>{\n      //setLoading(true)\n      axios\n          .get(`${baseUrl}pmtct/anc/get-infant-by-ancno/${props.patientObj.ancNo}`,\n              { headers: {\"Authorization\" : `Bearer ${token}`} }\n          )\n          .then((response) => {\n          //setLoading(false)\n                  setInfants(response.data)\n          })\n\n          .catch((error) => {\n          //console.log(error);\n          });\n      \n  }\n  const TIME_ART_INITIATION_PMTCT =()=>{\n    axios\n    .get(`${baseUrl}application-codesets/v2/TIME_ART_INITIATION_PMTCT`,\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\n    )\n    .then((response) => {\n        setTimingOfArtInitiation(response.data)\n    })\n    .catch((error) => {\n    //console.log(error);\n    });        \n  }\n  const INFANT_OUTCOME_AT_18_MONTHS =()=>{\n    axios\n    .get(`${baseUrl}application-codesets/v2/INFANT_OUTCOME_AT_18_MONTHS`,\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\n    )\n    .then((response) => {\n        setInfantOutcome(response.data)\n    })\n    .catch((error) => {\n    //console.log(error);\n    });        \n  }\n  const INFANT_PCR_RESULT =()=>{\n    axios\n    .get(`${baseUrl}application-codesets/v2/INFANT_PCR_RESULT`,\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\n    )\n    .then((response) => {\n        setPcrResult(response.data)\n    })\n    .catch((error) => {\n    //console.log(error);\n    });        \n  }\n  const INFANT_ARV_PROPHYLAXIS_TYPE =()=>{\n    axios\n    .get(`${baseUrl}application-codesets/v2/INFANT_ARV_PROPHYLAXIS_TYPE`,\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\n    )\n    .then((response) => {\n        setInfantArv(response.data)\n    })\n    .catch((error) => {\n    //console.log(error);\n    });        \n  }\n  const AGE_CTX_INITIATION =()=>{\n    axios\n    .get(`${baseUrl}application-codesets/v2/AGE_CTX_INITIATION`,\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\n    )\n    .then((response) => {\n        setAgeCTX(response.data)\n    })\n    .catch((error) => {\n    //console.log(error);\n    });        \n  }\n  const TIMING_MOTHERS_ART_INITIATION =()=>{\n    axios\n    .get(`${baseUrl}application-codesets/v2/TIMING_MOTHERS_ART_INITIATION`,\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\n    )\n    .then((response) => {\n        setTimeMotherArt(response.data)\n    })\n    .catch((error) => {\n    //console.log(error);\n    });        \n  }\n  const CHILD_FOLLOW_UP_VISIT_STATUS =()=>{\n    axios\n    .get(`${baseUrl}application-codesets/v2/CHILD_FOLLOW_UP_VISIT_STATUS`,\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\n    )\n    .then((response) => {\n        setChildStatus(response.data)\n    })\n    .catch((error) => {\n    //console.log(error);\n    });        \n  }\n  const handleInputValueCheckweight =(e)=>{\n    if(e.target.name===\"bodyWeight\" && (e.target.value < 3 || e.target.value>150)){      \n      const message =\"Body weight must not be greater than 150 and less than 3\"\n      setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:message})\n    }else{\n      setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:\"\"})\n    }\n  }\n  //GET AdultRegimenLine \n  const AdultRegimenLine =()=>{\n    axios\n        .get(`${baseUrl}hiv/regimen/arv/adult`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            const artRegimen=response.data.filter((x)=> (x.id===1 || x.id===2 || x.id===14)) \n            setAdultRegimenLine(artRegimen);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });        \n}\n  const handleInputChangeInfantVisitRequestDto = e => {\n    setErrors({...temp, [e.target.name]:\"\"})   \n    //console.log(e.target.name)\n    if(e.target.name==='visitDate' && e.target.value!==''){\n\n      async function getGa() {\n          const ga=e.target.value\n          const response = await axios.get(`${baseUrl}pmtct/anc/calculate-ga3?hospitalNumber=${infantHospitalNumber}&visitDate=${ga}`,\n                  { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\n              );\n          if(response.data>=0){\n            infantPCRTestDto.ageAtTest=response.data\n              setInfantVisitRequestDto ({...infantVisitRequestDto,  [e.target.name]: e.target.value});  \n          }\n      }\n      getGa();\n  }\n    setInfantVisitRequestDto({ ...infantVisitRequestDto, [e.target.name]: e.target.value });    \n  }\n  const handleInputChangeInfantArvDto = e => {\n    setErrors({...temp, [e.target.name]:\"\"})   \n    //console.log(e.target.name), \n    setInfantArvDto({ ...infantArvDto, [e.target.name]: e.target.value });    \n  }\n  const handleInputChangeInfantMotherArtDto = e => {\n    setErrors({...temp, [e.target.name]:\"\"})   \n    //console.log(e.target.name), \n    setInfantMotherArtDto({ ...infantMotherArtDto, [e.target.name]: e.target.value });    \n  }\n  const handleInputChangeInfantPCRTestDto= e => {\n    setErrors({...temp, [e.target.name]:\"\"})   \n    //console.log(e.target.name)infantPCRTestDto, setInfantPCRTestDto\n    setInfantPCRTestDto({ ...infantPCRTestDto, [e.target.name]: e.target.value });    \n  }\n\n  //Validations of the forms\n  const validate = () => {       \n    temp.visitDate = infantVisitRequestDto.visitDate ? \"\" : \"This field is required\"\n    temp.bodyWeight = infantVisitRequestDto.bodyWeight ? \"\" : \"This field is required\"\n    setErrors({\n        ...temp\n    })\n    return Object.values(temp).every(x => x === \"\")\n  }\n\n  /**** Submit Button Processing  */\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if(validate()){\n    setSaving(true)\n      objValues.infantVisitRequestDto=infantVisitRequestDto\n      objValues.infantArvDto=infantArvDto\n      objValues.infantMotherArtDto=infantMotherArtDto\n      objValues.infantPCRTestDto=infantPCRTestDto\n      if(props.activeContent && props.activeContent.actionType){//Perform operation for updation action\n          axios.put(`${baseUrl}pmtct/anc/update-infant-visit/${props.activeContent.id}`, objValues,\n            { headers: { \"Authorization\": `Bearer ${token}` } },\n\n          )\n          .then(response => {\n            setSaving(false);\n            toast.success(\"Clinic Visit save successful\", {position: toast.POSITION.BOTTOM_CENTER});\n            props.setActiveContent({...props.activeContent, route:'recent-history'})\n          })\n          .catch(error => {\n            setSaving(false);\n            if(error.response && error.response.data){\n              let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n              toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\n            }\n            else{\n              toast.error(\"Something went wrong. Please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\n            }\n          \n          });\n        }else{\n          axios.post(`${baseUrl}pmtct/anc/infant-visit-consolidated`, objValues,\n          { headers: { \"Authorization\": `Bearer ${token}` } },\n\n            )\n            .then(response => {\n              setSaving(false);\n              toast.success(\"Clinic Visit save successful\", {position: toast.POSITION.BOTTOM_CENTER});\n              props.setActiveContent({...props.activeContent, route:'recent-history'})\n            })\n            .catch(error => {\n              setSaving(false);\n              if(error.response && error.response.data){\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\n              }\n              else{\n                toast.error(\"Something went wrong. Please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\n              }\n            \n            });\n        }\n    }\n  }\n  const handleSelecteRegimen = e => { \n    let regimenID=  e.target.value\n    //regimenTypeId regimenId\n    setInfantMotherArtDto ({...infantMotherArtDto, regimenTypeId:regimenID});\n    RegimenType(regimenID)           \n    //setErrors({...temp, [e.target.name]:\"\"})\n  }\n  //Get list of RegimenLine\n  const RegimenType =(id)=>{\n  axios\n      .get(`${baseUrl}hiv/regimen/types/${id}`,\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\n      )\n      .then((response) => {\n          //console.log(response.data);\n          setRegimenType(response.data);\n      })\n      .catch((error) => {\n      //console.log(error);\n      });\n  \n  }\n  function GetInfantDetail(obj){\n           setInfantHospitalNumber(obj.hospitalNumber)\n          const InfantVisit =()=>{\n            //setLoading(true)\n            axios\n                .get(`${baseUrl}pmtct/anc/get-form-filter/${obj.hospitalNumber}`,\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\n                )\n                .then((response) => {\n                  infantVisitRequestDto.infantHospitalNumber=obj.hospitalNumber\n                  setFormFilter(response.data)\n                })\n      \n                .catch((error) => {\n                //console.log(error);\n                });\n            \n        }\n        InfantVisit()\n  }\n\n  return (\n    <div>\n      <h2>Clinic Follow-up Visit</h2>\n      <Grid columns='equal'>\n        <Grid.Column>\n\n            <Segment>\n              <Label as='a' color='blue' ribbon>\n                Infant's\n              </Label>\n              <br />\n              <List celled>\n                  <List.Item >Given Name<span className=\"float-end\"><b>Hospital Number</b></span></List.Item>\n                  </List>\n              {infants.map((row) =>\n                  <List celled>\n                  <List.Item onClick={()=>GetInfantDetail(row)} style={{cursor: \"pointer\"}}> \n                  \n                    \n                    <Label as='a' color='blue' >\n                    {row.firstName} \n                    </Label>\n                    <Label as='a' color='teal' className=\"float-end\" tag>\n                    {row.hospitalNumber}\n                    </Label>\n                    </List.Item>\n                  \n                  </List>\n               \n              )}\n            </Segment>\n\n          \n        </Grid.Column>\n        <Grid.Column width={12}>\n        <Segment>\n            <Label as='a' color='blue'  style={{width:'106%', height:'35px'}} ribbon>\n              <h4 style={{color:'#fff'}}>Infant Clinic Visit  - {infantVisitRequestDto && infantVisitRequestDto.infantHospitalNumber ? infantVisitRequestDto.infantHospitalNumber : \" \"}</h4>\n            </Label>\n            <br /><br />\n            <div className=\"row\">\n              <div className=\"form-group mb-3 col-md-4\">\n                <FormGroup>\n                  <FormLabelName >Date of Visit <span style={{ color:\"red\"}}> *</span></FormLabelName>\n                  <Input\n                    type=\"date\"\n                    name=\"visitDate\"\n                    id=\"visitDate\"\n                    value={infantVisitRequestDto.visitDate}\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                    onChange={handleInputChangeInfantVisitRequestDto}\n                    min={props.patientObj.firstAncDate}\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                    //min={patientObj.pmtctEnrollmentRespondDto.pmtctEnrollmentDate}\n                    required\n                  />\n                 {errors.visitDate !==\"\" ? (\n                      <span className={classes.error}>{errors.visitDate}</span>\n                  ) : \"\" }\n\n                </FormGroup>\n              </div>\n              <div className=\"form-group mb-3 col-md-6\">\n                <FormGroup>\n                  <FormLabelName >Infant Hospital Number <span style={{ color:\"red\"}}> *</span></FormLabelName>\n                  <Input\n                    type=\"text\"\n                    name=\"infantHospitalNumber\"\n                    id=\"infantHospitalNumber\"\n                    value={infantVisitRequestDto.infantHospitalNumber}\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                    onChange={handleInputChangeInfantVisitRequestDto}\n                    disabled\n                  />\n                 {errors.infantHospitalNumber !==\"\" ? (\n                      <span className={classes.error}>{errors.infantHospitalNumber}</span>\n                  ) : \"\" }\n\n                </FormGroup>\n              </div>\n              <div className=\"form-group mb-3 col-md-4\">\n                <FormGroup>\n                  <FormLabelName >Mother ANC number <span style={{ color:\"red\"}}> *</span></FormLabelName>\n                  <Input\n                    type=\"text\"\n                    name=\"ancNumber\"\n                    id=\"ancNumber\"\n                    value={infantVisitRequestDto.ancNumber}\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                    onChange={handleInputChangeInfantVisitRequestDto}\n                    disabled\n                  />\n                 {errors.ancNumber !==\"\" ? (\n                      <span className={classes.error}>{errors.ancNumber}</span>\n                  ) : \"\" }\n\n                </FormGroup>\n              </div>\n\n              <div className=\" mb-3 col-md-6\">\n                        <FormGroup>\n                        <FormLabelName >Body Weight <span style={{ color:\"red\"}}> *</span></FormLabelName>\n                        <InputGroup> \n                            <Input \n                                type=\"number\"\n                                name=\"bodyWeight\"\n                                id=\"bodyWeight\"\n                                onChange={handleInputChangeInfantVisitRequestDto}\n                                min=\"1\"\n                                max=\"150\"\n                                onKeyUp={handleInputValueCheckweight} \n                                value={infantVisitRequestDto.bodyWeight}\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\n                                disabled={disabledField}\n                            />\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\n                                kg\n                            </InputGroupText>\n                        </InputGroup>\n                        {errors.bodyWeight !==\"\" ? (\n                            <span className={classes.error}>{errors.bodyWeight}</span>\n                        ) : \"\" }\n                        {vitalClinicalSupport.weight !==\"\" ? (\n                                <span className={classes.error}>{vitalClinicalSupport.weight}</span>\n                        ) : \"\"}\n                        {infantVisitRequestDto.bodyWeight!==\"\" && infantVisitRequestDto.bodyWeight <=0? (\n                                <span className={classes.error}>Invalid Body Weight </span>\n                        ) : \"\"}\n                        </FormGroup>\n                    </div> \n                     <div className=\"form-group mb-3 col-md-6\">\n                      <FormGroup>\n                        <FormLabelName >Breast Feeding ?</FormLabelName>\n                        <Input\n                          type=\"select\"\n                          name=\"breastFeeding\"\n                          id=\"breastFeeding\"\n                          value={infantVisitRequestDto.breastFeeding}\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                          onChange={handleInputChangeInfantVisitRequestDto}\n                          disabled={disabledField}\n                        >\n                        <option value=\"\">Select </option>\n                        <option value=\"YES\">YES </option>\n                        <option value=\"NO\">NO </option>\n                       \n                      </Input>\n                      {errors.breastFeeding !==\"\" ? (\n                            <span className={classes.error}>{errors.breastFeeding}</span>\n                        ) : \"\" }\n\n                      </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                      <FormGroup>\n                        <FormLabelName >CTX </FormLabelName>\n                        <Input\n                          type=\"select\"\n                          name=\"ctxStatus\"\n                          id=\"ctxStatus\"\n                          value={infantVisitRequestDto.ctxStatus}\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                          onChange={handleInputChangeInfantVisitRequestDto}\n                          disabled={disabledField}\n                        >\n                        <option value=\"\">Select </option>\n                        <option value=\"YES\">YES </option>\n                        <option value=\"NO\">NO </option>\n                       \n                      </Input>\n                      {errors.ctxStatus !==\"\" ? (\n                            <span className={classes.error}>{errors.ctxStatus}</span>\n                        ) : \"\" }\n\n                      </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-6\">\n                      <FormGroup>\n                        <FormLabelName >Visit Status</FormLabelName>\n                        <Input\n                          type=\"select\"\n                          name=\"visitStatus\"\n                          id=\"visitStatus\"\n                          value={infantVisitRequestDto.visitStatus}\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                          onChange={handleInputChangeInfantVisitRequestDto}\n                          disabled={disabledField}\n                        >\n                        <option value=\"\">Select </option>\n                        {childStatus.map((value, index) => (\n                                <option key={index} value={value.code}>\n                                    {value.display}\n                                </option>\n                            ))}\n                      </Input>\n                      {errors.visitStatus !==\"\" ? (\n                            <span className={classes.error}>{errors.visitStatus}</span>\n                        ) : \"\" }\n\n                      </FormGroup>\n                    </div>\n                    {formFilter && formFilter.outCome===true && (\n                      <div className=\"form-group mb-3 col-md-6\">\n                        <FormGroup>\n                          <FormLabelName >Infant outcome at 18 months</FormLabelName>\n                          <Input\n                            type=\"select\"\n                            name=\"infantOutcomeAt18Months\"\n                            id=\"infantOutcomeAt18Months\"\n                            value={infantVisitRequestDto.infantOutcomeAt18Months}\n                            style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                            onChange={handleInputChangeInfantVisitRequestDto}\n                            disabled={disabledField}\n                          >\n                          <option value=\"\">Select </option>\n                          {infantOutcome.map((value, index) => (\n                                  <option key={index} value={value.code}>\n                                      {value.display}\n                                  </option>\n                              ))}\n                        \n                        </Input>\n                        {errors.infantOutcomeAt18Months !==\"\" ? (\n                              <span className={classes.error}>{errors.infantOutcomeAt18Months}</span>\n                          ) : \"\" }\n\n                        </FormGroup>\n                      </div>\n                    )}              \n            </div>\n            \n            <br />\n            {formFilter && formFilter.motherArt===false && (<>\n            <Label as='a' color='teal' style={{width:'106%', height:'35px'}} ribbon>\n            <h4 style={{color:'#fff'}}>  Mother's ART </h4>\n            </Label>\n            <br /><br />\n            <div className=\"row\">\n              <div className=\" mb-3 col-md-4\">\n                <FormGroup>\n                  <FormLabelName >Timing of mother's ART Initiation </FormLabelName>\n                  <Input\n                    type=\"select\"\n                    name=\"motherArtInitiationTime\"\n                    id=\"motherArtInitiationTime\"\n                    value={infantMotherArtDto.motherArtInitiationTime}\n                    onChange={handleInputChangeInfantMotherArtDto}\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                    disabled={disabledField}\n                  >\n                    <option value=\"select\">Select </option>\n                    {timeMotherArt.map((value, index) => (\n                                    <option key={index} value={value.code}>\n                                        {value.display}\n                                    </option>\n                                ))}\n                  </Input>\n                  {errors.motherArtInitiationTime !==\"\" ? (\n                      <span className={classes.error}>{errors.motherArtInitiationTime}</span>\n                  ) : \"\" }\n                </FormGroup>\n              </div>\n             \n              <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                    <FormLabelName >Original Regimen Line </FormLabelName>\n                    <Input\n                            type=\"select\"\n                            name=\"regimenTypeId\"\n                            id=\"regimenTypeId\"\n                            value={infantMotherArtDto.regimenTypeId}\n                            onChange={handleSelecteRegimen}\n                            required\n                            style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                            disabled={disabledField}\n                            >\n                                <option value=\"\"> Select</option>\n        \n                                    {adultRegimenLine.map((value) => (\n                                    <option key={value.id} value={value.id}>\n                                        {value.description}\n                                    </option>\n                                    ))}\n                              \n                        </Input>\n                        {errors.regimenTypeId !==\"\" ? (\n                            <span className={classes.error}>{errors.regimenTypeId}</span>\n                            ) : \"\" }\n                    </FormGroup>\n                    </div>                    \n                    <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                    <FormLabelName >Original Regimen </FormLabelName>\n                    <Input\n                            type=\"select\"\n                            name=\"regimenId\"\n                            id=\"regimenId\"\n                            value={infantMotherArtDto.regimenId}\n                            onChange={handleInputChangeInfantMotherArtDto}\n                            style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                            disabled={disabledField}\n                            > \n                                <option value=\"\"> Select</option>    \n                                {regimenType.map((value) => (\n                                    <option key={value.id} value={value.id}>\n                                        {value.description}\n                                    </option>\n                                ))}\n                        </Input>\n                        {errors.regimenId !==\"\" ? (\n                            <span className={classes.error}>{errors.regimenId}</span>\n                            ) : \"\" }\n                    </FormGroup>\n                    </div>\n            </div>\n            </>)}\n            <br/>\n            {formFilter && formFilter.infantArv===false && (<>\n            <Label as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\n            <h4 style={{color:'#fff'}}> Infant ARV & CTX</h4>\n            </Label>\n            <br /><br />\n            {/* LAB Screening Form */}\n            <div className=\"row\">\n            <div className=\" mb-3 col-md-4\">\n                <FormGroup>\n                <FormLabelName >Age at CTX Initiation </FormLabelName>\n                <Input\n                type=\"select\"\n                name=\"ageAtCtx\"\n                id=\"ageAtCtx\"\n                value={infantArvDto.ageAtCtx}\n                onChange={handleInputChangeInfantArvDto}\n                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                disabled={disabledField}  \n                >\n                   <option value=\"select\">Select </option>\n                   {agectx.map((value, index) => (\n                        <option key={index} value={value.code}>\n                            {value.display}\n                        </option>\n                    ))}\n                  </Input>\n                {errors.ageAtCtx !==\"\" ? (\n                <span className={classes.error}>{errors.ageAtCtx}</span>\n                ) : \"\" }\n                </FormGroup>   \n            </div>\n            <div className=\" mb-3 col-md-4\">\n                <FormGroup>\n                  <FormLabelName >Infant ARV Type </FormLabelName>\n                  <Input\n                    type=\"select\"\n                    name=\"infantArvType\"\n                    id=\"infantArvType\"\n                    value={infantArvDto.infantArvType}\n                    onChange={handleInputChangeInfantArvDto}\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                    disabled={disabledField}\n                  >\n                    <option value=\"select\">Select </option>\n                    {infantArv.map((value) => (\n                      <option key={value.id} value={value.id}>\n                        {value.display}\n                      </option>\n                    ))}\n                  </Input>\n                  {errors.infantArvType !==\"\" ? (\n                      <span className={classes.error}>{errors.infantArvType}</span>\n                  ) : \"\" }\n                </FormGroup>\n            </div>\n            <div className=\" mb-3 col-md-4\">\n                <FormGroup>\n                  <FormLabelName > Timing of ARV Prophylaxis </FormLabelName>\n                  <Input\n                    type=\"select\"\n                    name=\"arvDeliveryPoint\"\n                    id=\"arvDeliveryPoint\"\n                    value={infantArvDto.arvDeliveryPoint}\n                    onChange={handleInputChangeInfantArvDto}\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                    disabled={disabledField}\n                  >\n                    <option value=\"select\">Select </option>\n                    <option value=\"Within 72 hour\">Within 72 hour </option>\n                    <option value=\"After 72 hour \">After 72 hour  </option>\n                  </Input>\n                  {errors.arvDeliveryPoint !==\"\" ? (\n                      <span className={classes.error}>{errors.arvDeliveryPoint}</span>\n                  ) : \"\" }\n                </FormGroup>\n            </div>\n            <div className=\" mb-3 col-md-4\">\n                <FormGroup>\n                  <FormLabelName > Place of Delivery </FormLabelName>\n                  <Input\n                    type=\"select\"\n                    name=\"infantArvTime\"\n                    id=\"infantArvTime\"\n                    value={infantArvDto.infantArvTime}\n                    onChange={handleInputChangeInfantArvDto}\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                    disabled={disabledField}\n                  >\n                    <option value=\"select\">Select </option>\n                    <option value=\"Facility Delivery\">Facility Delivery</option>\n                    <option value=\"Delivered outside facility\">Delivered outside facility </option>\n                  </Input>\n                  {errors.infantArvTime !==\"\" ? (\n                      <span className={classes.error}>{errors.infantArvTime}</span>\n                  ) : \"\" }\n                </FormGroup>\n            </div>\n            \n            </div>\n            </>)}\n            <br />\n            <Label as='a' color='black' style={{width:'106%', height:'35px'}} ribbon>\n            <h4 style={{color:'#fff'}}> Infant PCR </h4>\n            </Label>\n            <br /><br />\n            {/* LAB Screening Form */}\n            <div className=\"row\">\n                <div className=\" mb-3 col-md-6\">\n                <FormGroup>\n                <FormLabelName >Age at Test(months)</FormLabelName>\n                <Input\n                type=\"number\"\n                name=\"ageAtTest\"\n                id=\"ageAtTest\"\n                value={infantPCRTestDto.ageAtTest}\n                onChange={handleInputChangeInfantPCRTestDto}\n                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                 disabled\n                />\n                {errors.ageAtTest !==\"\" ? (\n                <span className={classes.error}>{errors.ageAtTest}</span>\n                ) : \"\" }\n                </FormGroup>   \n                </div>\n                <div className=\" mb-3 col-md-6\">\n                <FormGroup>\n                  <FormLabelName > Sample Type</FormLabelName>\n                  <Input\n                    type=\"select\"\n                    name=\"testType\"\n                    id=\"testType\"\n                    value={infantPCRTestDto.testType}\n                    onChange={handleInputChangeInfantPCRTestDto}\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                    disabled={disabledField}\n                  >\n                    <option value=\"\">Select </option>\n                    <option value=\"First PCR\">First PCR</option>\n                    <option value=\"Second PCR\">Second PCR</option>\n                    <option value=\"Confirmatory PCR\">Confirmatory PCR</option>\n                    <option value=\"First Rapid Antibody\">First Rapid Antibody </option>\n                    <option value=\"Second Rapid Antibody \">Second Rapid Antibody </option>\n                  </Input>\n                  {errors.testType !==\"\" ? (\n                      <span className={classes.error}>{errors.testType}</span>\n                  ) : \"\" }\n                </FormGroup>\n              </div>\n                <div className=\" mb-3 col-md-6\">\n                <FormGroup>\n                <FormLabelName >Date sample collected</FormLabelName>\n                <Input\n                type=\"date\"\n                name=\"dateSampleCollected\"\n                id=\"dateSampleCollected\"\n                value={infantPCRTestDto.dateSampleCollected}\n                onChange={handleInputChangeInfantPCRTestDto}\n                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                min={props.patientObj && props.patientObj.pmtctEnrollmentRespondDto ? props.patientObj.pmtctEnrollmentRespondDto.pmtctEnrollmentDate : \"\"}\n                max={moment(new Date()).format(\"YYYY-MM-DD\")} \n                disabled={disabledField} \n                />\n                {errors.dateSampleCollected !==\"\" ? (\n                <span className={classes.error}>{errors.dateSampleCollected}</span>\n                ) : \"\" }\n                </FormGroup>   \n                </div>\n                <div className=\" mb-3 col-md-6\">\n                <FormGroup>\n                <FormLabelName >Date Result Received</FormLabelName>\n                <Input\n                type=\"date\"\n                name=\"dateResultReceivedAtFacility\"\n                id=\"dateResultReceivedAtFacility\"\n                value={infantPCRTestDto.dateResultReceivedAtFacility}\n                onChange={handleInputChangeInfantPCRTestDto}\n                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                min={infantPCRTestDto.dateSampleCollected}\n                max={moment(new Date()).format(\"YYYY-MM-DD\")} \n                disabled={disabledField}  \n                />\n                {errors.dateResultReceivedAtFacility !==\"\" ? (\n                <span className={classes.error}>{errors.dateResultReceivedAtFacility}</span>\n                ) : \"\" }\n                </FormGroup>   \n                </div>\n                <div className=\" mb-3 col-md-6\">\n                <FormGroup>\n                <FormLabelName >Date Result Received By Caregiver</FormLabelName>\n                <Input\n                type=\"date\"\n                name=\"dateResultReceivedByCaregiver\"\n                id=\"dateResultReceivedByCaregiver\"\n                value={infantPCRTestDto.dateResultReceivedByCaregiver}\n                onChange={handleInputChangeInfantPCRTestDto}\n                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                min={infantPCRTestDto.dateSampleCollected}\n                max={moment(new Date()).format(\"YYYY-MM-DD\")}  \n                disabled={disabledField} \n                />\n                {errors.dateResultReceivedByCaregiver !==\"\" ? (\n                <span className={classes.error}>{errors.dateResultReceivedByCaregiver}</span>\n                ) : \"\" }\n                </FormGroup>   \n                </div>\n                <div className=\" mb-3 col-md-6\">\n                <FormGroup>\n                <FormLabelName >Date Sample Sent</FormLabelName>\n                <Input\n                  type=\"date\"\n                  name=\"dateSampleSent\"\n                  id=\"dateSampleSent\"\n                  value={infantPCRTestDto.dateSampleSent}\n                  onChange={handleInputChangeInfantPCRTestDto}\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                  min={infantPCRTestDto.dateSampleCollected}\n                  max={moment(new Date()).format(\"YYYY-MM-DD\")} \n                  disabled={disabledField} \n                  />\n                {errors.dateSampleSent !==\"\" ? (\n                <span className={classes.error}>{errors.dateSampleSent}</span>\n                ) : \"\" }\n                </FormGroup>   \n                </div>\n                <div className=\" mb-3 col-md-6\">\n                <FormGroup>\n                <FormLabelName >Result *</FormLabelName>\n                <Input\n                type=\"select\"\n                name=\"results\"\n                id=\"results\"\n                value={infantPCRTestDto.results}\n                onChange={handleInputChangeInfantPCRTestDto}\n                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                disabled={disabledField} \n                >\n                   <option value=\"select\">Select </option>\n                   {pcrResult.map((value) => (\n                      <option key={value.id} value={value.id}>\n                        {value.display}\n                      </option>\n                    ))}\n                </Input>\n                {errors.results !==\"\" ? (\n                <span className={classes.error}>{errors.results}</span>\n                ) : \"\" }\n                </FormGroup>   \n                </div>\n            </div>\n            <br />\n            <br />\n            {infantVisitRequestDto && infantVisitRequestDto.infantHospitalNumber ? (\n              <>\n              {props.activeContent && props.activeContent.actionType? (<>\n                <MatButton\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                hidden={disabledField}\n                className={classes.button}\n                startIcon={<SaveIcon />}\n                style={{backgroundColor:\"#014d88\"}}\n                onClick={handleSubmit}\n                disabled={saving}\n                >\n                    {!saving ? (\n                    <span style={{ textTransform: \"capitalize\" }}>Update</span>\n                    ) : (\n                    <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\n                    )}\n            </MatButton>\n            </>):(<>\n                <MatButton\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.button}\n                    startIcon={<SaveIcon />}\n                    style={{backgroundColor:\"#014d88\"}}\n                    onClick={handleSubmit}\n                    disabled={saving}\n                    >\n                        {!saving ? (\n                        <span style={{ textTransform: \"capitalize\" }}>Save</span>\n                        ) : (\n                        <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\n                        )}\n            </MatButton>\n            </>)}\n              </> \n              ) : \"\"\n            }\n          </Segment>\n        </Grid.Column>\n\n        </Grid>\n      {/* <AddVitals toggle={AddVitalToggle} showModal={addVitalModal} /> */}\n      \n    </div>\n  );\n};\n\nexport default ClinicVisit;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\RecencyTesting.js",["319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334"],"import React, {useCallback, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\nimport * as moment from 'moment';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card, CardContent} from \"@material-ui/core\";\nimport { toast} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport 'react-phone-input-2/lib/style.css'\nimport {Label as LabelRibbon, Button} from 'semantic-ui-react'\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport {token, url as baseUrl } from \"../../../api\";\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        },\n        \"& .card-title\":{\n            color:'#fff',\n            fontWeight:'bold'\n        },\n        \"& .form-control\":{\n            borderRadius:'0.25rem',\n            height:'41px'\n        },\n        \"& .card-header:first-child\": {\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\n        },\n        \"& .dropdown-toggle::after\": {\n            display: \" block !important\"\n        },\n        \"& select\":{\n            \"-webkit-appearance\": \"listbox !important\"\n        },\n        \"& p\":{\n            color:'red'\n        },\n        \"& label\":{\n            fontSize:'14px',\n            color:'#014d88',\n            fontWeight:'bold'\n        }\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    }\n}));\n\nconst Recency = (props) => {\n    const classes = useStyles();\n    const patientID= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.id : \"\";\n    const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\n    const [saving, setSaving] = useState(false);\n    const [errors, setErrors] = useState({});\n    const [hivTestDate, setHivTestDate] = useState(\"\");\n    let temp = { ...errors }\n    const handleItemClick =(page, completedMenu)=>{\n        props.handleItemClick(page)\n        if(props.completed.includes(completedMenu)) {\n        }else{\n            props.setCompleted([...props.completed, completedMenu])\n        }\n    }\n\n    const [objValues, setObjValues]= useState(\n        {\n            htsClientId: clientId,\n            recency: {},\n            personId: patientID,\n        }\n    )\n    const [recency, setRecency]= useState(\n        {\n            optOutRTRI:\"\", \n            optOutRTRITestName:\"\", \n            optOutRTRITestDate:\"\", \n            rencencyId:\"\",  \n            controlLine:\"\",  \n            verififcationLine:\"\", \n            longTermLine:\"\",  \n            rencencyInterpretation:\"\", \n            hasViralLoad:\"\", \n            sampleCollectedDate:\"\",\n            sampleReferanceNumber:\"\",\n            dateSampleSentToPCRLab:\"\",\n            sampleTestDate:\"\",\n            sampleType:\"\", \n            receivingPcrLab:\"\", \n            viralLoadResultClassification:\"\",\n            recencyResult:\"\", \n            finalRecencyResult:\"\",\n        }\n    )\n    \n    useEffect(() => { \n        if(props.patientObj){\n            setRecency(props.patientObj && props.patientObj.recency!==null ? props.patientObj.recency : {})\n            if(props.patientObj.confirmatoryTest && props.patientObj.confirmatoryTest.date!=='' ){\n                setHivTestDate(props.patientObj.confirmatoryTest.date)\n            }else if(props.patientObj.confirmatoryTest2 && props.patientObj.confirmatoryTest2.date2!=='' ){\n                setHivTestDate(props.patientObj.confirmatoryTest2.date2)\n            }else{\n                setHivTestDate(\"\")\n            }\n        }\n        if(recency.longTermLine==='true' && recency.verififcationLine==='true' && recency.controlLine==='true'){\n            recency.rencencyInterpretation=\"Long Term\"\n            setRecency ({...recency,  ['rencencyInterpretation']: 'Long Term'}); \n        \n        }else if(recency.longTermLine==='false' && recency.verififcationLine==='true' && recency.controlLine==='true'){\n            recency.rencencyInterpretation=\"Recent\"\n            setRecency ({...recency,  ['rencencyInterpretation']: 'Recent'});\n            //setRecency ({...recency,  ['hasViralLoad']: 'true'});\n            \n        }else if(recency.longTermLine==='false' && recency.verififcationLine==='false' && recency.controlLine==='true'){\n            recency.rencencyInterpretation=\"Negative\"\n            setRecency ({...recency,  ['rencencyInterpretation']: 'Negative'});\n            \n        }else if(recency.longTermLine==='true' && recency.verififcationLine==='true' && recency.controlLine==='false'){\n            recency.rencencyInterpretation=\"Invalid\"\n            setRecency ({...recency,  ['rencencyInterpretation']: 'Invalid'});\n           \n        }else if(recency.longTermLine==='true' && recency.verififcationLine==='false' && recency.controlLine==='true'){\n            recency.rencencyInterpretation=\"Invalid\"\n            setRecency ({...recency,  ['rencencyInterpretation']: 'Invalid'});\n            \n        }else{\n            \n            setRecency ({...recency,  ['rencencyInterpretation']: ''});\n        }\n    },[recency.longTermLine,recency.verififcationLine, recency.controlLine, props.patientObj]);\n    console.log(props.patientObj)\n    const handleInputChangeRecency = e => { \n        setErrors({...temp, [e.target.name]:\"\"})        \n        if(e.target.name ==='viralLoadResultClassification'){\n             \n            if(e.target.value ==='>=1000'){\n                recency.finalRecencyResult='RITA Recent'\n                setRecency ({...recency,  [e.target.name]: e.target.value}); \n            \n            }else if(e.target.value ==='<1000') {\n                recency.finalRecencyResult='RITA Long term'\n                setRecency ({...recency,  [e.target.name]: e.target.value}); \n            }else if(e.target.value ==='Failed run') {\n                recency.finalRecencyResult='RITA Inconclusive'\n                setRecency ({...recency,  [e.target.name]: e.target.value}); \n            }else if(e.target.value ==='Invalid viral load result') {\n                recency.finalRecencyResult='RITA Inconclusive'\n                setRecency ({...recency,  [e.target.name]: e.target.value}); \n            }else{\n                setRecency ({...recency,  [e.target.name]: e.target.value}); \n            }\n        }else if(e.target.name==='rencencyId' && e.target.value!==''){\n            const recencyIdNumberValue = checkRecencyLimit(e.target.value)\n            setRecency ({...recency,  [e.target.name]: recencyIdNumberValue});\n        }else {\n            setRecency ({...recency,  [e.target.name]: e.target.value}); \n        }\n         \n    }\n    const checkRecencyLimit=(e)=>{\n        const limit = 10;        \n        const acceptedNumber= e.slice(0, limit)\n        return  acceptedNumber   \n    }\n    /*****  Validation  */\n    const validate = () => {\n        //HTS FORM VALIDATION\n            {recency.sampleCollectedDate!=='' && (temp.sampleReferanceNumber = recency.sampleReferanceNumber ? \"\" : \"This field is required.\")}\n            {  recency.sampleCollectedDate!=='' && (temp.dateSampleSentToPCRLab = recency.dateSampleSentToPCRLab ? \"\" : \"This field is required.\")}\n            { recency.sampleCollectedDate!=='' && (temp.sampleType = recency.sampleType ? \"\" : \"This field is required.\")}\n            setErrors({ ...temp })\n        return Object.values(temp).every(x => x == \"\")\n    }\n    const handleSubmit =(e)=>{\n        e.preventDefault();\n       \n\n            objValues.htsClientId= clientId\n            objValues.recency= recency\n            objValues.personId= patientID\n            console.log(recency)\n            axios.put(`${baseUrl}hts/${clientId}/recency`,objValues,\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\n            \n            )\n            .then(response => {\n                setSaving(false);\n                props.setPatientObj(response.data)\n                //toast.success(\"Risk Assesment successful\");\n                handleItemClick('indexing', 'recency-testing' )\n\n            })\n            .catch(error => {\n                setSaving(false);\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage);\n                }\n                else{\n                    toast.error(\"Something went wrong. Please try again...\");\n                }\n            });\n        \n            \n    }\n\n\n\n    return (\n        <>\n            <Card className={classes.root}>\n                <CardBody>               \n                <h2>RECENCY FORM</h2>\n                    <form >\n                        <div className=\"row\">\n                        <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\n                            <h5 style={{color:'#fff'}}>RENCENCY</h5>\n                        </LabelRibbon>\n                        <br/><br/><br/>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Opt Out of RTRI?*</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"optOutRTRI\"\n                                        id=\"optOutRTRI\"\n                                        value={recency.optOutRTRI}\n                                        onChange={handleInputChangeRecency}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-8\"></div>\n                            {recency.optOutRTRI==='false' && (\n                            <>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Test Name *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"optOutRTRITestName\"\n                                        id=\"optOutRTRITestName\"\n                                        value={recency.optOutRTRITestName}\n                                        onChange={handleInputChangeRecency}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Asante\">Asante</option>\n                                        <option value=\"Others\">Others</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Test Date *</Label>\n                                    <Input\n                                        type=\"date\"\n                                        name=\"optOutRTRITestDate\"\n                                        id=\"optOutRTRITestDate\"\n                                        value={recency.optOutRTRITestDate}\n                                        onChange={handleInputChangeRecency}\n                                        min={hivTestDate!==\"\" && hivTestDate!==null ? hivTestDate :\"\"}\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                    \n                                    />\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Recency ID *</Label>\n                                    <Input\n                                        className=\"form-control\"\n                                        name=\"rencencyId\"\n                                        id=\"rencencyId\"\n                                        type=\"text\"\n                                        value={recency.rencencyId}\n                                        onChange={handleInputChangeRecency}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    />\n                                 \n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Control Line *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"controlLine\"\n                                        id=\"controlLine\"\n                                        value={recency.controlLine}\n                                        onChange={handleInputChangeRecency}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Verification Line *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"verififcationLine\"\n                                        id=\"verififcationLine\"\n                                        value={recency.verififcationLine}\n                                        onChange={handleInputChangeRecency}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Long Term Line *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"longTermLine\"\n                                        id=\"longTermLine\"\n                                        value={recency.longTermLine}\n                                        onChange={handleInputChangeRecency}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Recency Interpretation *</Label>\n                                    <Input\n                                        className=\"form-control\"\n                                        name=\"rencencyInterpretation\"\n                                        id=\"rencencyInterpretation\"\n                                        type=\"text\"\n                                        value={recency.rencencyInterpretation}\n                                        disabled\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    />\n                                       \n                                    \n                                </FormGroup>\n                            </div>\n                            {recency.rencencyInterpretation==='Recent' && (\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Has viral load request been made? *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hasViralLoad\"\n                                        id=\"hasViralLoad\"\n                                        value={recency.hasViralLoad}\n                                        onChange={handleInputChangeRecency}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            )}\n                            {recency.hasViralLoad==='true' && (\n                            <>\n                                <div className=\"row\">\n                                    <h4>Viral Load Classification :</h4>\n                                    <br/>\n                                <div className=\"form-group  col-md-4\">\n                                    <FormGroup>\n                                        <Label>Sample Collected Date</Label>\n                                        <Input\n                                            className=\"form-control\"\n                                            name=\"sampleCollectedDate\"\n                                            id=\"sampleCollectedDate\"\n                                            type=\"date\"\n                                            value={recency.sampleCollectedDate}\n                                            min={recency.optOutRTRITestDate}\n                                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                            onChange={handleInputChangeRecency}\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        />\n                                    \n                                    </FormGroup>\n                                </div>\n                                <div className=\"form-group  col-md-4\">\n                                    <FormGroup>\n                                        <Label>Sample Refernce Number</Label>\n                                        <Input\n                                            className=\"form-control\"\n                                            name=\"sampleReferanceNumber\"\n                                            id=\"sampleReferanceNumber\"\n                                            type=\"text\"\n                                            value={recency.sampleReferanceNumber}\n                                            onChange={handleInputChangeRecency}\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        />\n                                        {errors.sampleReferanceNumber !==\"\" ? (\n                                        <span className={classes.error}>{errors.sampleReferanceNumber}</span>\n                                        ) : \"\" }\n                                    </FormGroup>\n                                </div>\n                                <div className=\"form-group  col-md-4\">\n                                    <FormGroup>\n                                        <Label>Sample Type</Label>\n                                        <select\n                                            className=\"form-control\"\n                                            name=\"sampleType\"\n                                            id=\"sampleType\"\n                                            value={recency.sampleType}\n                                            onChange={handleInputChangeRecency}\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        >\n                                            <option value={\"\"}></option>\n                                            <option value=\"DBS\">DBS</option>\n                                            <option value=\"Plasma\">Plasma</option>\n                                            \n                                        </select>\n                                        {errors.sampleType !==\"\" ? (\n                                        <span className={classes.error}>{errors.sampleType}</span>\n                                        ) : \"\" }\n                                    </FormGroup>\n                                </div>\n                                <div className=\"form-group  col-md-4\">\n                                    <FormGroup>\n                                        <Label>Date Sample Sent to PCR Lab</Label>\n                                        <Input\n                                            className=\"form-control\"\n                                            name=\"dateSampleSentToPCRLab\"\n                                            id=\"dateSampleSentToPCRLab\"\n                                            type=\"date\"\n                                            min={recency.optOutRTRITestDate}\n                                            value={recency.dateSampleSentToPCRLab}\n                                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                            onChange={handleInputChangeRecency}\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        />\n                                         {errors.dateSampleSentToPCRLab !==\"\" ? (\n                                        <span className={classes.error}>{errors.dateSampleSentToPCRLab}</span>\n                                        ) : \"\" }\n                                    </FormGroup>\n                                </div>\n                                <div className=\"form-group  col-md-4\">\n                                    <FormGroup>\n                                        <Label>Sample Test Date</Label>\n                                        <Input\n                                            className=\"form-control\"\n                                            name=\"sampleTestDate\"\n                                            id=\"sampleTestDate\"\n                                            type=\"date\"\n                                            min={recency.optOutRTRITestDate}\n                                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                            value={recency.sampleTestDate}\n                                            onChange={handleInputChangeRecency}\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        />\n                                        \n                                    </FormGroup>\n                                </div>\n                                <div className=\"form-group  col-md-4\">\n                                    <FormGroup>\n                                        <Label>Receiving PCR Lab</Label>\n                                        <Input\n                                            className=\"form-control\"\n                                            name=\"receivingPcrLab\"\n                                            id=\"receivingPcrLab\"\n                                            type=\"text\"\n                                            value={recency.receivingPcrLab}\n                                            onChange={handleInputChangeRecency}\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        />\n                                        \n                                    </FormGroup>\n                                </div>\n                                <div className=\"form-group  col-md-4\">\n                                    <FormGroup>\n                                        <Label>Viral Load Result Classification and Result (copies/ml)</Label>\n                                        <select\n                                            className=\"form-control\"\n                                            name=\"viralLoadResultClassification\"\n                                            id=\"viralLoadResultClassification\"\n                                            value={recency.viralLoadResultClassification}\n                                            onChange={handleInputChangeRecency}\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        >\n                                            <option value={\"\"}>Select</option>\n                                            <option value=\">=1000\">{\">= \"} 1000</option>\n                                            <option value=\"<1000\">{\"< \"} 1000</option>\n                                            <option value=\"Failed run\">Failed run</option>\n                                            <option value=\"Invalid viral load result\">Invalid viral load result</option>\n                                            \n                                        </select>\n                                        \n                                    </FormGroup>\n                                </div>\n                                {/* <div className=\"form-group  col-md-4\">\n                                    <FormGroup>\n                                        <Label>Result (copies/ml)</Label>\n                                        <Input\n                                            className=\"form-control\"\n                                            name=\"recencyResult\"\n                                            id=\"recencyResult\"\n                                            type=\"text\"\n                                            value={recency.recencyResult}\n                                            onChange={handleInputChangeRecency}\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        />\n                                        \n                                    </FormGroup>\n                                </div> */}\n                                <div className=\"form-group  col-md-4\">\n                                    <FormGroup>\n                                        <Label>Final Recency Result</Label>\n                                        <Input\n                                            className=\"form-control\"\n                                            name=\"finalRecencyResult\"\n                                            id=\"finalRecencyResult\"\n                                            type=\"text\"\n                                            disabled\n                                            value={recency.finalRecencyResult}\n                                            onChange={handleInputChangeRecency}\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        />\n\n                                    </FormGroup>\n                                </div>\n                                </div>\n                            </>\n                            )}\n                            </>)}\n                                                      \n                            {saving ? <Spinner /> : \"\"}\n                            <br />\n                            <div className=\"row\">\n                            <div className=\"form-group mb-3 col-md-12\">\n                            <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('post-test','post-test')}/>\n                            <Button content='Save & Continue' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\n                            </div>\n                            </div>\n                        </div>\n                    </form>\n                </CardBody>\n            </Card>                                 \n        </>\n    );\n};\n\nexport default Recency","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\PreTest.js",["335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369"],"import React, {useCallback, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card, CardContent} from \"@material-ui/core\";\n// import AddIcon from \"@material-ui/icons/Add\";\n// import CancelIcon from \"@material-ui/icons/Cancel\";\nimport {toast} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport {token, url as baseUrl } from \"../../../api\";\nimport 'react-phone-input-2/lib/style.css'\nimport {Label as LabelRibbon, Button, Message} from 'semantic-ui-react'\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        },\n        \"& .card-title\":{\n            color:'#fff',\n            fontWeight:'bold'\n        },\n        \"& .form-control\":{\n            borderRadius:'0.25rem',\n            height:'41px'\n        },\n        \"& .card-header:first-child\": {\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\n        },\n        \"& .dropdown-toggle::after\": {\n            display: \" block !important\"\n        },\n        \"& select\":{\n            \"-webkit-appearance\": \"listbox !important\"\n        },\n        \"& p\":{\n            color:'red'\n        },\n        \"& label\":{\n            fontSize:'14px',\n            color:'#014d88',\n            fontWeight:'bold'\n        }\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    }\n}));\n\n\nconst BasicInfo = (props) => {\n    const classes = useStyles();\n    const patientID= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.id : \"\";\n    const sex= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.sex : \"\";\n    const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\n    const [saving, setSaving] = useState(false);\n    const [errors, setErrors] = useState({});\n    let temp = { ...errors }\n    const [riskAssessmentPartner, setRiskAssessmentPartner]= useState(\n        {\n            sexPartnerHivPositive:\"\",\n            newDiagnosedHivlastThreeMonths:\"\",\n            currentlyArvForPmtct :\"\",\n            knowHivPositiveOnArv :\"\",\n            knowHivPositiveAfterLostToFollowUp:\"\", \n            uprotectedAnalSex  :\"\",\n        }\n    )\n    const [objValues, setObjValues]= useState(\n        {\n            htsClientId: clientId,\n            knowledgeAssessment: {},\n            personId: patientID,\n            riskAssessment: {},\n            stiScreening: {},\n            tbScreening: {},\n            sexPartnerRiskAssessment:{}\n        }\n    )\n    const [knowledgeAssessment, setKnowledgeAssessment]= useState(\n        {\n            previousTestedHIVNegative:\"\",\n            timeLastHIVNegativeTestResult:\"\",\n            clientPregnant:\"\",\n            clientInformHivTransRoutes:\"\",\n            clientInformRiskkHivTrans:\"\",\n            clientInformPreventingsHivTrans:\"\", \n            clientInformPossibleTestResult:\"\",\n            informConsentHivTest:\"\",\n        }\n    )\n    const [riskAssessment, setRiskAssessment]= useState(\n        {\n            everHadSexualIntercourse:\"\",\n            bloodtransInlastThreeMonths:\"\",\n            uprotectedSexWithCasualLastThreeMonths:\"\",\n            uprotectedSexWithRegularPartnerLastThreeMonths:\"\", \n            unprotectedVaginalSex:\"\",  \n            uprotectedAnalSex:\"\",   \n            stiLastThreeMonths:\"\",\n            sexUnderInfluence :\"\",\n            moreThanOneSexPartnerLastThreeMonths:\"\",\n            experiencePain:\"\",\n            haveSexWithoutCondom:\"\",\n            abuseDrug:\"\",\n            bloodTransfusion:\"\",\n            consistentWeightFeverNightCough:\"\",\n            soldPaidVaginalSex:\"\",\n        }\n    )\n    const [stiScreening, setStiScreening]= useState(\n        {\n            vaginalDischarge:\"\",\n            lowerAbdominalPains :\"\",\n            urethralDischarge :\"\",\n            complaintsOfScrotal:\"\", \n            complaintsGenitalSore  :\"\",\n                \n        }\n    )\n    const [tbScreening, setTbScreening]= useState(\n        {\n            currentCough :\"\",\n            weightLoss  :\"\",\n            lymphadenopathy :\"\", \n            fever :\"\",  \n            nightSweats :\"\",\n        }\n    )\n    useEffect(() => { \n        //console.log(props.patientObj)\n        if(props.patientObj){\n            setKnowledgeAssessment(props.patientObj.knowledgeAssessment  && props.patientObj.knowledgeAssessment!==null ? props.patientObj.knowledgeAssessment : {})\n            setRiskAssessment(props.patientObj.riskAssessment  && props.patientObj.riskAssessment!==null ? props.patientObj.riskAssessment : {})\n            setRiskAssessmentPartner(props.patientObj.sexPartnerRiskAssessment && props.patientObj.sexPartnerRiskAssessment!==null ? props.patientObj.sexPartnerRiskAssessment : {})\n            setStiScreening(props.patientObj.stiScreening  && props.patientObj.stiScreening!==null? props.patientObj.stiScreening : {})\n            setTbScreening(props.patientObj.tbScreening  && props.patientObj.tbScreening!==null? props.patientObj.tbScreening : {})\n            //patientAge=calculate_age(moment(props.patientObj.personResponseDto.dateOfBirth).format(\"DD-MM-YYYY\"))\n            //console.log(props.patientObj.riskStratificationResponseDto.riskAssessment)\n            if(props.patientObj.riskStratificationResponseDto && Object.keys(props.patientObj.riskStratificationResponseDto.riskAssessment).length !== 0 && props.patientObj.riskAssessment===null){\n                setRiskAssessment({...riskAssessment, ...props.patientObj.riskStratificationResponseDto.riskAssessment})\n            }else{\n                setRiskAssessment({...riskAssessment, ...props.patientObj.riskAssessment})   \n            } \n        }\n    }, [props.patientObj]);\n    const handleItemClick =(page, completedMenu)=>{        \n        if(props.completed.includes(completedMenu)) {\n        }else{\n            props.setCompleted([...props.completed, completedMenu])\n        }\n        props.handleItemClick(page)\n    }\n\n    const handleInputChangeKnowledgeAssessment = e => { \n        //setErrors({...temp, [e.target.name]:\"\"})\n        \n        setKnowledgeAssessment ({...knowledgeAssessment,  [e.target.name]: e.target.value}); \n          \n    }\n    \n    const handleInputChangeRiskAssessment = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        setRiskAssessment ({...riskAssessment,  [e.target.name]: e.target.value});                  \n    }\n    // Getting the number count of riskAssessment True\n    const actualRiskCountTrue=Object.values(riskAssessment)\n    const riskCount=actualRiskCountTrue.filter((x)=> x==='true')\n   \n    const handleInputChangeRiskAssessmentPartner = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        setRiskAssessmentPartner ({...riskAssessmentPartner,  [e.target.name]: e.target.value});                       \n    }\n    // Getting the number count of sexPartRiskCount True\n    const actualSexPartRiskCountTrue=Object.values(riskAssessmentPartner)\n    const sexPartRiskCount=actualSexPartRiskCountTrue.filter((x)=> x==='true')\n\n    const handleInputChangeStiScreening = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        setStiScreening ({...stiScreening,  [e.target.name]: e.target.value});            \n    }\n    // Getting the number count of STI True\n    const actualStiTrue=Object.values(stiScreening)\n    const stiCount=actualStiTrue.filter((x)=> x==='true')\n    \n    const [tbCount, settbCount] = useState(0);\n    const handleInputChangeTbScreening = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        \n        if(e.target.value==='true') {\n            const newcount = tbCount +1\n            if(newcount>=0 && newcount <=5){\n                settbCount(newcount)\n            }\n        }\n        if(e.target.value==='false') {\n            const newcount = tbCount -1\n            //settbCount(newcount)\n            //console.log(newcount)\n            if(newcount <=0 ){\n                \n                settbCount(0)\n            }else{\n                settbCount(newcount)\n            }\n        } \n        setTbScreening ({...tbScreening,  [e.target.name]: e.target.value});          \n    }\n     /*****  Validation  */\n     const validate = () => {\n        //HTS FORM VALIDATION\n           temp.previousTestedHIVNegative = knowledgeAssessment.previousTestedHIVNegative ? \"\" : \"This field is required.\"\n           {knowledgeAssessment.previousTestedHIVNegative==='true' && ( temp.timeLastHIVNegativeTestResult = knowledgeAssessment.timeLastHIVNegativeTestResult ? \"\" : \"This field is required.\")}\n           temp.clientPregnant = knowledgeAssessment.clientPregnant ? \"\" : \"This field is required.\"\n           temp.clientInformHivTransRoutes = knowledgeAssessment.clientInformHivTransRoutes ? \"\" : \"This field is required.\"\n           temp.clientInformRiskkHivTrans = knowledgeAssessment.clientInformRiskkHivTrans ? \"\" : \"This field is required.\"\n           temp.clientInformPreventingsHivTrans = knowledgeAssessment.clientInformPreventingsHivTrans ? \"\" : \"This field is required.\"\n           temp.clientInformPossibleTestResult = knowledgeAssessment.clientInformPossibleTestResult ? \"\" : \"This field is required.\"\n           temp.informConsentHivTest = knowledgeAssessment.informConsentHivTest ? \"\" : \"This field is required.\"  \n\n            temp.currentCough = tbScreening.currentCough ? \"\" : \"This field is required.\"\n            temp.weightLoss = tbScreening.weightLoss ? \"\" : \"This field is required.\"\n            temp.lymphadenopathy = tbScreening.lymphadenopathy ? \"\" : \"This field is required.\"\n            temp.fever = tbScreening.fever ? \"\" : \"This field is required.\"\n            temp.nightSweats = tbScreening.nightSweats ? \"\" : \"This field is required.\"\n\n            {props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (temp.vaginalDischarge = stiScreening.vaginalDischarge ? \"\" : \"This field is required.\" )}\n            {props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (temp.lowerAbdominalPains = stiScreening.lowerAbdominalPains ? \"\" : \"This field is required.\")}\n            {props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.urethralDischarge = stiScreening.urethralDischarge ? \"\" : \"This field is required.\")}\n            {props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.complaintsOfScrotal = stiScreening.complaintsOfScrotal ? \"\" : \"This field is required.\")}\n            {props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.complaintsGenitalSore = stiScreening.complaintsGenitalSore ? \"\" : \"This field is required.\")}\n \n            {props.patientObj.targetGroup===\"473\" && (temp.everHadSexualIntercourse = riskAssessment.everHadSexualIntercourse ? \"\" : \"This field is required.\")}\n            {props.patientObj.targetGroup===\"473\" && (temp.bloodtransInlastThreeMonths = riskAssessment.bloodtransInlastThreeMonths ? \"\" : \"This field is required.\")}\n            {props.patientObj.targetGroup===\"473\" && (temp.uprotectedSexWithCasualLastThreeMonths = riskAssessment.uprotectedSexWithCasualLastThreeMonths ? \"\" : \"This field is required.\")}\n            {props.patientObj.targetGroup===\"473\" && (temp.uprotectedSexWithRegularPartnerLastThreeMonths = riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths ? \"\" : \"This field is required.\")}\n            {props.patientObj.targetGroup===\"473\" && (temp.unprotectedVaginalSex = riskAssessment.unprotectedVaginalSex ? \"\" : \"This field is required.\")}\n\n            {props.patientObj.targetGroup===\"473\" && (temp.uprotectedAnalSex = riskAssessment.uprotectedAnalSex ? \"\" : \"This field is required.\")}\n            {props.patientObj.targetGroup===\"473\" && (temp.sexUnderInfluence = riskAssessment.sexUnderInfluence ? \"\" : \"This field is required.\")}\n            {props.patientObj.targetGroup===\"473\" && (temp.uprotectedSexWithCasualLastThreeMonths = riskAssessment.uprotectedSexWithCasualLastThreeMonths ? \"\" : \"This field is required.\")}\n            {props.patientObj.targetGroup===\"473\" && (temp.moreThanOneSexPartnerLastThreeMonths = riskAssessment.moreThanOneSexPartnerLastThreeMonths ? \"\" : \"This field is required.\")}\n            \n            \n            {props.patientObj.targetGroup!==\"473\" && (temp.experiencePain = riskAssessment.experiencePain ? \"\" : \"This field is required.\")}\n\n            {props.patientObj.targetGroup!==\"473\" && (temp.haveSexWithoutCondom = riskAssessment.haveSexWithoutCondom ? \"\" : \"This field is required.\")}\n            {props.patientObj.targetGroup!==\"473\" && (temp.abuseDrug = riskAssessment.abuseDrug ? \"\" : \"This field is required.\")}\n            {props.patientObj.targetGroup!==\"473\" && (temp.bloodTransfusion = riskAssessment.bloodTransfusion ? \"\" : \"This field is required.\")}\n            {props.patientObj.targetGroup!==\"473\" && (temp.consistentWeightFeverNightCough = riskAssessment.consistentWeightFeverNightCough ? \"\" : \"This field is required.\")}\n            {props.patientObj.targetGroup!==\"473\" && (temp.soldPaidVaginalSex = riskAssessment.soldPaidVaginalSex ? \"\" : \"This field is required.\")}\n\n            temp.sexPartnerHivPositive = tbScreening.sexPartnerHivPositive ? \"\" : \"This field is required.\"\n            {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.newDiagnosedHivlastThreeMonths = tbScreening.newDiagnosedHivlastThreeMonths ? \"\" : \"This field is required.\")}\n            {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.currentlyArvForPmtct = tbScreening.currentlyArvForPmtct ? \"\" : \"This field is required.\")}\n            {riskAssessmentPartner.sexPartnerHivPositive==='true' && ( temp.knowHivPositiveOnArv = tbScreening.knowHivPositiveOnArv ? \"\" : \"This field is required.\")}\n            {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.knowHivPositiveAfterLostToFollowUp = tbScreening.knowHivPositiveAfterLostToFollowUp ? \"\" : \"This field is required.\")}\n            {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.uprotectedAnalSex = tbScreening.uprotectedAnalSex ? \"\" : \"This field is required.\")}\n            \n            setErrors({ ...temp })\n        return Object.values(temp).every(x => x == \"\")\n    }\n    const handleSubmit =(e)=>{\n        e.preventDefault();\n\n            objValues.htsClientId= clientId\n            objValues.knowledgeAssessment= knowledgeAssessment\n            objValues.personId= patientID\n            objValues.riskAssessment= riskAssessment\n            objValues.stiScreening=stiScreening\n            objValues.tbScreening=tbScreening\n            objValues.sexPartnerRiskAssessment=riskAssessmentPartner\n            axios.put(`${baseUrl}hts/${clientId}/pre-test-counseling`,objValues,\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\n            \n            )\n            .then(response => {\n                setSaving(false);\n                props.setPatientObj(response.data)\n                //toast.success(\"Risk Assesment successful\");\n                handleItemClick('hiv-test', 'pre-test-counsel' )\n\n            })\n            .catch(error => {\n                setSaving(false);\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage);\n                }\n                else{\n                    toast.error(\"Something went wrong. Please try again...\");\n                }\n            });\n            \n    }\n    console.log(riskAssessmentPartner)\n\n    return (\n        <>\n            <Card className={classes.root}>\n                <CardBody>\n               \n                <h2>PRE TEST COUNSELING</h2>\n                    <form >\n                        <div className=\"row\">\n\n                        <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'rgb(0,181,173)', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Knowledge Assessment</div>\n                     \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Previously tested HIV negative *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"previousTestedHIVNegative\"\n                                        id=\"previousTestedHIVNegative\"\n                                        value={knowledgeAssessment.previousTestedHIVNegative}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.previousTestedHIVNegative !==\"\" ? (\n                                    <span className={classes.error}>{errors.previousTestedHIVNegative}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            {knowledgeAssessment.previousTestedHIVNegative==='true' && (\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Time of last HIV Negative test Result*</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"timeLastHIVNegativeTestResult\"\n                                        id=\"timeLastHIVNegativeTestResult\"\n                                        value={knowledgeAssessment.timeLastHIVNegativeTestResult}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"<1\"> {\"< 1\"} month</option>\n                                        <option value=\"1-3 Months\">1-3 Months</option>\n                                        <option value=\"4-6 Months\">4-6 Months</option>\n                                        <option value=\">6 Months\"> {\">6\"} Months</option>\n                                        \n                                    </select>\n                                    {errors.timeLastHIVNegativeTestResult !==\"\" ? (\n                                    <span className={classes.error}>{errors.timeLastHIVNegativeTestResult}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            {sex ==='Female' && (\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client pregnant *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientPregnant\"\n                                        id=\"clientPregnant\"\n                                        value={knowledgeAssessment.clientPregnant}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.clientPregnant !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientPregnant}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                             )}\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client informed about HIV transmission routes *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientInformHivTransRoutes\"\n                                        id=\"clientInformHivTransRoutes\"\n                                        value={knowledgeAssessment.clientInformHivTransRoutes}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.clientInformHivTransRoutes !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientInformHivTransRoutes}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client informed about risk factors for HIV transmission *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientInformRiskkHivTrans\"\n                                        id=\"clientInformRiskkHivTrans\"\n                                        value={knowledgeAssessment.clientInformRiskkHivTrans}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.clientInformRiskkHivTrans !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientInformRiskkHivTrans}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client informed on preventing HIV transmission methods *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientInformPreventingsHivTrans\"\n                                        id=\"clientInformPreventingsHivTrans\"\n                                        value={knowledgeAssessment.clientInformPreventingsHivTrans}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.clientInformPreventingsHivTrans !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientInformPreventingsHivTrans}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client informed about possible test results *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientInformPossibleTestResult\"\n                                        id=\"clientInformPossibleTestResult\"\n                                        value={knowledgeAssessment.clientInformPossibleTestResult}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.clientInformPossibleTestResult !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientInformPossibleTestResult}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Informed consent for HIV testing given *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"informConsentHivTest\"\n                                        id=\"informConsentHivTest\"\n                                        value={knowledgeAssessment.informConsentHivTest}\n                                        onChange={handleInputChangeKnowledgeAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.informConsentHivTest !==\"\" ? (\n                                    <span className={classes.error}>{errors.informConsentHivTest}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <hr/>\n                            <br/>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#000', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Clinical TB screening</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Current cough *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"currentCough\"\n                                        id=\"currentCough\"\n                                        value={tbScreening.currentCough}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.currentCough !==\"\" ? (\n                                    <span className={classes.error}>{errors.currentCough}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Weight loss *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"weightLoss\"\n                                        id=\"weightLoss\"\n                                        value={tbScreening.weightLoss}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.weightLoss !==\"\" ? (\n                                    <span className={classes.error}>{errors.weightLoss}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Lymphadenopathy (swelling of the lymph nodes) *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"lymphadenopathy\"\n                                        id=\"lymphadenopathy\"\n                                        value={tbScreening.lymphadenopathy}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.lymphadenopathy !==\"\" ? (\n                                    <span className={classes.error}>{errors.lymphadenopathy}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Fever *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"fever\"\n                                        id=\"fever\"\n                                        value={tbScreening.fever}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.fever !==\"\" ? (\n                                    <span className={classes.error}>{errors.fever}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Night sweats*</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"nightSweats\"\n                                        id=\"nightSweats\"\n                                        value={tbScreening.nightSweats}\n                                        onChange={handleInputChangeTbScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.nightSweats !==\"\" ? (\n                                    <span className={classes.error}>{errors.nightSweats}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <Message warning>\n                                <h4>TB Screening score (calculate the sum of the TB assessment) If score {\">= 1\"}, test for Xper MTB RIF or refer to TB service </h4>\n                                <b>Score : {tbCount}</b>\n                            </Message>\n                            <hr/>\n                            <br/>\n                           {props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && ( <>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Ever had sexual intercourse </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"everHadSexualIntercourse\"\n                                        id=\"everHadSexualIntercourse\"\n                                        value={riskAssessment.everHadSexualIntercourse}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.everHadSexualIntercourse !==\"\" ? (\n                                    <span className={classes.error}>{errors.everHadSexualIntercourse}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Blood transfusion in last 3 months *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"bloodtransInlastThreeMonths\"\n                                        id=\"bloodtransInlastThreeMonths\"\n                                        value={riskAssessment.bloodtransInlastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.bloodtransInlastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.bloodtransInlastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected sex with casual partner in last 3 months *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedSexWithCasualLastThreeMonths\"\n                                        id=\"uprotectedSexWithCasualLastThreeMonths\"\n                                        value={riskAssessment.uprotectedSexWithCasualLastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.uprotectedSexWithCasualLastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedSexWithCasualLastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected sex with regular partner in the last 3months</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\n                                        id=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\n                                        value={riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.uprotectedSexWithRegularPartnerLastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedSexWithRegularPartnerLastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected vaginal sex</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"unprotectedVaginalSex\"\n                                        id=\"unprotectedVaginalSex\"\n                                        value={riskAssessment.unprotectedVaginalSex}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.unprotectedVaginalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.unprotectedVaginalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected Anal sex</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedAnalSex\"\n                                        id=\"uprotectedAnalSex\"\n                                        value={riskAssessment.uprotectedAnalSex}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.uprotectedAnalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedAnalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>         \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>STI in last 3 months *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"stiLastThreeMonths\"\n                                        id=\"stiLastThreeMonths\"\n                                        value={riskAssessment.stiLastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.stiLastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.stiLastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Sex under the influence of drugs or alcohol*</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"sexUnderInfluence\"\n                                        id=\"sexUnderInfluence\"\n                                        value={riskAssessment.sexUnderInfluence}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.sexUnderInfluence !==\"\" ? (\n                                    <span className={classes.error}>{errors.sexUnderInfluence}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>More than 1 sex partner during last 3 months*</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"moreThanOneSexPartnerLastThreeMonths\"\n                                        id=\"moreThanOneSexPartnerLastThreeMonths\"\n                                        value={riskAssessment.moreThanOneSexPartnerLastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.moreThanOneSexPartnerLastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.moreThanOneSexPartnerLastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <Message warning>\n                                <h4>Personal HIV Risk assessment score (sum of all 7 answers)</h4>\n                                <b>Score : {riskCount.length}</b>\n                            </Message>\n                            <hr/>\n                            <br/>\n                            </>)}\n                            {props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && ( <>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/your partner experienced lower abdominal pain, smelly discharge, blisters and wounds around you/partner vagina, penis anus or mouth?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"experiencePain\"\n                                        id=\"experiencePain\"\n                                        value={riskAssessment.experiencePain}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.experiencePain !==\"\" ? (\n                                    <span className={classes.error}>{errors.experiencePain}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner had sex without a condom with someone of unknown HIV status, or you/partner raped by person with unknown HIV status? *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"haveSexWithoutCondom\"\n                                        id=\"haveSexWithoutCondom\"\n                                        value={riskAssessment.haveSexWithoutCondom}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.haveSexWithoutCondom !==\"\" ? (\n                                    <span className={classes.error}>{errors.haveSexWithoutCondom}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you had a condom burst with your partner during sexual intercourse?  *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"haveCondomBurst\"\n                                        id=\"haveCondomBurst\"\n                                        value={riskAssessment.haveCondomBurst}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.haveCondomBurst !==\"\" ? (\n                                    <span className={classes.error}>{errors.haveCondomBurst}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Do you/partner share needles/syringes, other sharp objects or used abuse drug substances of any kind?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"abuseDrug\"\n                                        id=\"abuseDrug\"\n                                        value={riskAssessment.abuseDrug}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.abuseDrug !==\"\" ? (\n                                    <span className={classes.error}>{errors.abuseDrug}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner had any blood or blood product transfusion?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"bloodTransfusion\"\n                                        id=\"bloodTransfusion\"\n                                        value={riskAssessment.bloodTransfusion}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.bloodTransfusion !==\"\" ? (\n                                    <span className={classes.error}>{errors.bloodTransfusion}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner experienced coughing, weight loss, fever, night sweats consistently?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"consistentWeightFeverNightCough\"\n                                        id=\"consistentWeightFeverNightCough\"\n                                        value={riskAssessment.consistentWeightFeverNightCough}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.consistentWeightFeverNightCough !==\"\" ? (\n                                    <span className={classes.error}>{errors.consistentWeightFeverNightCough}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>            \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner paid or sold vaginal, anal or oral sex? *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"soldPaidVaginalSex\"\n                                        id=\"soldPaidVaginalSex\"\n                                        value={riskAssessment.soldPaidVaginalSex}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.soldPaidVaginalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.soldPaidVaginalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <Message warning>\n                                <h4>Personal HIV Risk assessment score (sum of all 7 answers)</h4>\n                                <b>Score :{riskCount.length}</b>\n                            </Message>\n                            <hr/>\n                            <br/>\n                            </>)}\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Sex Partner Risk Assessment (Last 3 months)</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you had sex with a partner who is HIV positive? </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"sexPartnerHivPositive\"\n                                        id=\"sexPartnerHivPositive\"\n                                        value={riskAssessmentPartner.sexPartnerHivPositive}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.sexPartnerHivPositive !==\"\" ? (\n                                    <span className={classes.error}>{errors.sexPartnerHivPositive}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            {riskAssessmentPartner.sexPartnerHivPositive==='true' && (<>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Is sex partner newly diagnosed with HIV and started treatment less than 3-6 months ago?*</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"newDiagnosedHivlastThreeMonths\"\n                                        id=\"newDiagnosedHivlastThreeMonths\"\n                                        value={riskAssessmentPartner.newDiagnosedHivlastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.newDiagnosedHivlastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.newDiagnosedHivlastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Is sex partner pregnant and currently receiving ARV for PMTCT?*</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"currentlyArvForPmtct\"\n                                        id=\"currentlyArvForPmtct\"\n                                        value={riskAssessmentPartner.currentlyArvForPmtct}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.currentlyArvForPmtct !==\"\" ? (\n                                    <span className={classes.error}>{errors.currentlyArvForPmtct}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Known HIV positive partner on ARV with an unsurpressed VL</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"knowHivPositiveOnArv\"\n                                        id=\"knowHivPositiveOnArv\"\n                                        value={riskAssessmentPartner.knowHivPositiveOnArv}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.knowHivPositiveOnArv !==\"\" ? (\n                                    <span className={classes.error}>{errors.knowHivPositiveOnArv}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Known HIV positive recently returned to treatment after being lost to follow up</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"knowHivPositiveAfterLostToFollowUp\"\n                                        id=\"knowHivPositiveAfterLostToFollowUp\"\n                                        value={riskAssessmentPartner.knowHivPositiveAfterLostToFollowUp}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.knowHivPositiveAfterLostToFollowUp !==\"\" ? (\n                                    <span className={classes.error}>{errors.knowHivPositiveAfterLostToFollowUp}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected Anal sex</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedAnalSex\"\n                                        id=\"uprotectedAnalSex\"\n                                        value={riskAssessmentPartner.uprotectedAnalSex}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.uprotectedAnalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedAnalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            </>)}\n                            <Message warning>\n                                <h4>Sex Partner Risk Assessment score (sum of all 6 answers)</h4>\n                                <b>Score :{sexPartRiskCount.length}</b>\n                            </Message>        \n                            \n                            <hr/>\n                            <br/>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#014D88', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Syndromic STI Screening</div>\n                            {props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (\n                            <>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of vaginal discharge or burning when urinating?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"vaginalDischarge\"\n                                        id=\"vaginalDischarge\"\n                                        value={stiScreening.vaginalDischarge}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.vaginalDischarge !==\"\" ? (\n                                    <span className={classes.error}>{errors.vaginalDischarge}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of lower abdominal pains with or without vaginal discharge?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"lowerAbdominalPains\"\n                                        id=\"lowerAbdominalPains\"\n                                        value={stiScreening.lowerAbdominalPains}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.lowerAbdominalPains !==\"\" ? (\n                                    <span className={classes.error}>{errors.lowerAbdominalPains}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            </>)}\n                            {props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (\n                            <>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of urethral discharge or burning when urinating?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"urethralDischarge\"\n                                        id=\"urethralDischarge\"\n                                        value={stiScreening.urethralDischarge}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.urethralDischarge !==\"\" ? (\n                                    <span className={classes.error}>{errors.urethralDischarge}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of scrotal swelling and pain</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"complaintsOfScrotal\"\n                                        id=\"complaintsOfScrotal\"\n                                        value={stiScreening.complaintsOfScrotal}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.complaintsOfScrotal !==\"\" ? (\n                                    <span className={classes.error}>{errors.complaintsOfScrotal}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of genital sore(s) or swollen inguinal lymph nodes with or without pains?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"complaintsGenitalSore\"\n                                        id=\"complaintsGenitalSore\"\n                                        value={stiScreening.complaintsGenitalSore}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.complaintsGenitalSore !==\"\" ? (\n                                    <span className={classes.error}>{errors.complaintsGenitalSore}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            </>)} \n                            <Message warning>\n                                <h4>Calculate the sum of the STI screening. If {\">= \"}1, should be referred for STI test </h4>\n                                <b>Score :{stiCount.length}</b>\n                            </Message>\n                           \n                            {saving ? <Spinner /> : \"\"}\n                            <br />\n                            <div className=\"row\">\n                            <div className=\"form-group mb-3 col-md-12\">\n                            <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('basic','basic')}/>\n                            <Button content='Save & Continue' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\n                            </div>\n                            </div>\n                        </div>\n                    </form>\n                </CardBody>\n            </Card>                                 \n        </>\n    );\n};\n\nexport default BasicInfo","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\PostTest.js",["370","371","372","373","374"],"import React, {useCallback, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card} from \"@material-ui/core\";\n// import AddIcon from \"@material-ui/icons/Add\";\n// import CancelIcon from \"@material-ui/icons/Cancel\";\nimport { toast} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { useHistory, } from \"react-router-dom\";\nimport {token, url as baseUrl } from \"../../../api\";\nimport 'react-phone-input-2/lib/style.css'\nimport {Label as LabelRibbon, Button, Message} from 'semantic-ui-react'\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        },\n        \"& .card-title\":{\n            color:'#fff',\n            fontWeight:'bold'\n        },\n        \"& .form-control\":{\n            borderRadius:'0.25rem',\n            height:'41px'\n        },\n        \"& .card-header:first-child\": {\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\n        },\n        \"& .dropdown-toggle::after\": {\n            display: \" block !important\"\n        },\n        \"& select\":{\n            \"-webkit-appearance\": \"listbox !important\"\n        },\n        \"& p\":{\n            color:'red'\n        },\n        \"& label\":{\n            fontSize:'14px',\n            color:'#014d88',\n            fontWeight:'bold'\n        }\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    }\n}));\n\n\nconst PostTest = (props) => {\n    const classes = useStyles();\n    const history = useHistory();\n    const patientID= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.id : \"\";\n    const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\n    const [saving, setSaving] = useState(false);\n    console.log(props.patientObj)\n    ///const [errors, setErrors] = useState({});\n    const [objValues, setObjValues]= useState(\n        {\n            htsClientId: clientId,\n            postTestCounselingKnowledgeAssessment: {},\n            personId: patientID,\n        }\n    )\n\n    const [postTest, setPostTest]= useState(\n        {\n            hivTestResult:\"\", \n            hivTestBefore:\"\", \n            hivRequestResult:\"\", \n            hivRequestResultCt:\"\",                             \n            clientReceivedHivTestResult:\"\", \n            postTestCounseling:\"\", \n            riskReduction:\"\", \n            postTestDisclosure:\"\",\n            bringPartnerHivtesting:\"\", \n            childrenHivtesting:\"\", \n            informationFp:\"\", \n            partnerFpThanCondom:\"\", \n            partnerFpUseCondom:\"\",\n            correctCondomUse:\"\", \n            condomProvidedToClient:\"\", \n            unprotectedSexRegularPartnerLastThreeMonth:\"\", \n            referredToServices:\"\",\n        }\n    )\n    useEffect(() => { \n        //console.log(props.patientObj)\n        if(props.patientObj && props.patientObj.postTestCounselingKnowledgeAssessment){\n            setPostTest(props.patientObj.postTestCounselingKnowledgeAssessment) \n        }else{\n            ///setPostTest(props.patientObj && props.patientObj.postTestCounselingKnowledgeAssessment!==null ? props.patientObj.postTestCounselingKnowledgeAssessment : {}) \n            if(postTest.hivTestResult===\"\" && props.patientObj.hivTestResult!==\"\" && props.patientObj.hivTestResult!==null && (props.patientObj.hivTestResult==='Positive' || props.patientObj.hivTestResult2==='Positive')){\n                postTest.hivTestResult='True'\n                setPostTest({...postTest, hivTestResult:'True' })\n            }else if(postTest.hivTestResult===\"\"  && props.patientObj.hivTestResult!==\"\" && props.patientObj.hivTestResult!==null && (props.patientObj.hivTestResult==='Negative' || props.patientObj.hivTestResult2==='Negative')){\n                postTest.hivTestResult='False'\n                setPostTest({...postTest, hivTestResult:'False' })\n            }\n        }\n    }, [props.patientObj,postTest.hivTestResult]);\n    const handleInputChangePostTest = e => { \n        //setErrors({...temp, [e.target.name]:\"\"})        \n        setPostTest ({...postTest,  [e.target.name]: e.target.value});           \n    }\n    const handleItemClick =(page, completedMenu)=>{\n        props.handleItemClick(page)\n        if(props.completed.includes(completedMenu)) {\n\n        }else{\n            props.setCompleted([...props.completed, completedMenu])\n        }\n    }\n    const handleSubmit =(e)=>{\n        e.preventDefault();\n        //handleItemClick('recency-testing', 'post-test')\n        if(!(Object.values(postTest).every(x => x === \"\"))){\n            objValues.htsClientId=  props.patientObj.id\n            objValues.postTestCounselingKnowledgeAssessment= postTest\n            objValues.personId= props.patientObj.personResponseDto.id\n            axios.put(`${baseUrl}hts/${ props.patientObj.id}/post-test-counseling`,objValues,\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\n            \n            )\n            .then(response => {\n                setSaving(false);\n                props.setPatientObj(response.data)\n                //toast.success(\"Risk Assesment successful\");\n                if(postTest.hivTestResult==='True'){\n                    handleItemClick('recency-testing', 'post-test')\n                }else if(postTest.hivTestResult==='False'){\n                    history.push('/');\n                }\n                \n\n            })\n            .catch(error => {\n                setSaving(false);\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage);\n                }\n                else{\n                    toast.error(\"Something went wrong. Please try again...\");\n                }\n            });\n        }else{\n            toast.error(\"All post test fields are required\")  \n        \n        }\n            \n    }\n\n    console.log(postTest.hivTestResult)\n    return (\n        <>\n            <Card className={classes.root}>\n                <CardBody>\n               \n                <h2 >POST TEST COUNSELING</h2>\n                    <form >\n                        <div className=\"row\">\n                        <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\n                            {/* <h5 style={{color:'#fff'}}>Knowledge Assessment</h5> */}\n                        </LabelRibbon>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>HIV test result *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hivTestResult\"\n                                        id=\"hivTestResult\"\n                                        value={postTest.hivTestResult}\n                                        onChange={handleInputChangePostTest}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"True\">Positive</option>\n                                        <option value=\"False\">Negative</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you been tested for HIV before within this year? *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hivTestBefore\"\n                                        id=\"hivTestBefore\"\n                                        value={postTest.hivTestBefore}\n                                        onChange={handleInputChangePostTest}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Not previously tested\">Not previously tested</option>\n                                        <option value=\"Previously tested negative\">Previously tested negative</option>\n                                        <option value=\"Previously tested positive in HIV care\">Previously tested positive in HIV care</option>\n                                        <option value=\"Previously tested positive not in HIV care\">Previously tested positive not in HIV care</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>HIV Request and Result form signed by tester *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hivRequestResult\"\n                                        id=\"hivRequestResult\"\n                                        value={postTest.hivRequestResult}\n                                        onChange={handleInputChangePostTest}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>HIV Request and Result form filled with CT Intake Form *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hivRequestResultCt\"\n                                        id=\"hivRequestResultCt\"\n                                        value={postTest.hivRequestResultCt}\n                                        onChange={handleInputChangePostTest}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client received HIV test result *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clientReceivedHivTestResult\"\n                                        id=\"clientReceivedHivTestResult\"\n                                        value={postTest.clientReceivedHivTestResult}\n                                        onChange={handleInputChangePostTest}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Post test counseling done *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"postTestCounseling\"\n                                        id=\"postTestCounseling\"\n                                        value={postTest.postTestCounseling}\n                                        onChange={handleInputChangePostTest}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Risk reduction plan developed *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"riskReduction\"\n                                        id=\"riskReduction\"\n                                        value={postTest.riskReduction}\n                                        onChange={handleInputChangePostTest}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Post test disclosure plan developed *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"postTestDisclosure\"\n                                        id=\"postTestDisclosure\"\n                                        value={postTest.postTestDisclosure}\n                                        onChange={handleInputChangePostTest}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>                            \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Will bring partner(s) for HIV testing *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"bringPartnerHivtesting\"\n                                        id=\"bringPartnerHivtesting\"\n                                        value={postTest.bringPartnerHivtesting}\n                                        onChange={handleInputChangePostTest}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Will bring own children {'<5'} years for HIV testing *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"childrenHivtesting\"\n                                        id=\"childrenHivtesting\"\n                                        value={postTest.childrenHivtesting}\n                                        onChange={handleInputChangePostTest}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Provided with information on FP and dual contraception *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"informationFp\"\n                                        id=\"informationFp\"\n                                        value={postTest.informationFp}\n                                        onChange={handleInputChangePostTest}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client/Partner use FP methods (other than condom)*</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"partnerFpThanCondom\"\n                                        id=\"partnerFpThanCondom\"\n                                        value={postTest.partnerFpThanCondom}\n                                        onChange={handleInputChangePostTest}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client/Partner use condoms as (one) FP method </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"partnerFpUseCondom\"\n                                        id=\"partnerFpUseCondom\"\n                                        value={postTest.partnerFpUseCondom}\n                                        onChange={handleInputChangePostTest}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Correct condom use demonstrated *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"correctCondomUse\"\n                                        id=\"correctCondomUse\"\n                                        value={postTest.correctCondomUse}\n                                        onChange={handleInputChangePostTest}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Condoms provided to client *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"condomProvidedToClient\"\n                                        id=\"condomProvidedToClient\"\n                                        value={postTest.condomProvidedToClient}\n                                        onChange={handleInputChangePostTest}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            {/* <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected sex with regular partner in the last 3months</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"unprotectedSexRegularPartnerLastThreeMonth\"\n                                        id=\"unprotectedSexRegularPartnerLastThreeMonth\"\n                                        value={postTest.unprotectedSexRegularPartnerLastThreeMonth}\n                                        onChange={handleInputChangePostTest}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div> */}\n                            {/* <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected sex with regular particular in the last 3 months</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"sex\"\n                                        id=\"sex\"\n                                        \n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Yes\">Yes</option>\n                                        <option value=\"No\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div> */}\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Client referred to other services *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"referredToServices\"\n                                        id=\"referredToServices\"\n                                        value={postTest.referredToServices}\n                                        onChange={handleInputChangePostTest}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <Message success>\n                                <h4>If client tests HIV negative, and HIV Risk Assessment Score {\">0\"} or\n                                    there is evidence for a STI syndrome, recommend re-testing after 3 months</h4>\n                                \n                            </Message>\n                                                \n                            {saving ? <Spinner /> : \"\"}\n                            <br />\n                            <div className=\"row\">\n                            <div className=\"form-group mb-3 col-md-12\">\n                                <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('hiv-test', 'hiv-test')}/>\n                                {postTest.hivTestResult==='True' && (\n                                    <Button content='Save & Continue' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\n                                )}\n                                {postTest.hivTestResult==='False' && (\n                                    <Button content='Save & Finish' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\n                                )}\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </CardBody>\n            </Card>                                 \n        </>\n    );\n};\n\nexport default PostTest","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\Others.js",["375","376","377","378","379","380","381","382","383","384"],"import React, {useCallback, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport MatButton from \"@material-ui/core/Button\";\nimport Button from \"@material-ui/core/Button\";\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\nimport * as moment from 'moment';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card, CardContent} from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\n// import AddIcon from \"@material-ui/icons/Add\";\n// import CancelIcon from \"@material-ui/icons/Cancel\";\n// import {ToastContainer, toast} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\n// import {token, url as baseUrl } from \"../../../api\";\nimport 'react-phone-input-2/lib/style.css'\nimport {Label as LabelRibbon} from 'semantic-ui-react'\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        },\n        \"& .card-title\":{\n            color:'#fff',\n            fontWeight:'bold'\n        },\n        \"& .form-control\":{\n            borderRadius:'0.25rem',\n            height:'41px'\n        },\n        \"& .card-header:first-child\": {\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\n        },\n        \"& .dropdown-toggle::after\": {\n            display: \" block !important\"\n        },\n        \"& select\":{\n            \"-webkit-appearance\": \"listbox !important\"\n        },\n        \"& p\":{\n            color:'red'\n        },\n        \"& label\":{\n            fontSize:'14px',\n            color:'#014d88',\n            fontWeight:'bold'\n        }\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    }\n}));\n\n\nconst BasicInfo = (props) => {\n    const classes = useStyles();\n    const [saving, setSaving] = useState(false);\n    const [errors, setErrors] = useState({});\n    const handleItemClick =(page, completedMenu)=>{\n        props.handleItemClick(page)\n        if(props.completed.includes(completedMenu)) {\n\n        }else{\n            props.setCompleted([...props.completed, completedMenu])\n        }\n    }\n\n    return (\n        <>\n            <Card className={classes.root}>\n                <CardBody>\n               \n                <h3 >OTHERS - (Resquest {\"& \"} Result Form)</h3>\n               <hr/>\n                <br/>\n                    <form >\n                        <div className=\"row\">\n                        <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\n                            <h5 style={{color:'#fff'}}>Syphilis Testing</h5>\n                        </LabelRibbon>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Syphilis test result *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"syphilisTestResult\"\n                                        id=\"syphilisTestResult\"\n                                        \n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Yes\">Reactive</option>\n                                        <option value=\"No\">Non-Reactive</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <hr/>\n                            <br/>\n                            <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\n                            <h5 style={{color:'#fff'}}>Hepatitis B Testing</h5>\n                            </LabelRibbon>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Hepatitis B virus test result *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hepatitisBTestResult\"\n                                        id=\"hepatitisBTestResult\"\n                                        \n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Yes\">Positive</option>\n                                        <option value=\"No\">Negative</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Hepatitis C virus test result *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hepatitisCTestResult\"\n                                        id=\"hepatitisCTestResult\"\n                                        \n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                       <option value={\"\"}></option>\n                                        <option value=\"Yes\">Positive</option>\n                                        <option value=\"No\">Negative</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>HIV Request and Result form filled with CT Intake Form *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hivRequestResultCT\"\n                                        id=\"hivRequestResultCT\"\n                                        \n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Yes\">Yes</option>\n                                        <option value=\"No\">No</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Completed By</Label>\n                                <Input\n                                    type=\"number\"\n                                    name=\"completedBy\"\n                                    id=\"completedBy\"\n                                    // value={objValues.lastViralLoad}\n                                    // onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                   \n                                />\n                                \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Longitude</Label>\n                                <Input\n                                    type=\"number\"\n                                    name=\"longitude\"\n                                    id=\"longitude\"\n                                    // value={objValues.lastViralLoad}\n                                    // onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                   \n                                />\n                                \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Latitude</Label>\n                                <Input\n                                    type=\"number\"\n                                    name=\"latitude\"\n                                    id=\"latitude\"\n                                    // value={objValues.lastViralLoad}\n                                    // onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                   \n                                />\n                                \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Adhoc Code</Label>\n                                <Input\n                                    type=\"number\"\n                                    name=\"adhocCode\"\n                                    id=\"adhocCode\"\n                                    // value={objValues.lastViralLoad}\n                                    // onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                   \n                                />\n                                \n                                </FormGroup>\n                            </div>\n                                                      \n                            {saving ? <Spinner /> : \"\"}\n                            <br />\n                            <div className=\"row\">\n                            <div className=\"form-group mb-3 col-md-6\">\n                            <MatButton\n                            type=\"button\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.button}\n                            startIcon={<SaveIcon />}\n                            onClick={()=>handleItemClick('basic','others')}\n                            style={{backgroundColor:\"#014d88\"}}\n                            //disabled={objValues.dateOfEac1===\"\" ? true : false}\n                            >\n                            {!saving ? (\n                            <span style={{ textTransform: \"capitalize\" }}>Save</span>\n                            ) : (\n                            <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\n                            )}\n                            </MatButton>\n                            </div>\n                            </div>\n                        </div>\n                    </form>\n                </CardBody>\n            </Card>                                 \n        </>\n    );\n};\n\nexport default BasicInfo","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\RiskStratification.js",["385","386","387","388","389","390"],"\nimport React, { useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\nimport * as moment from 'moment';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card,} from \"@material-ui/core\";\nimport { toast} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { useHistory, } from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport {token, url as baseUrl } from \"../../../api\";\nimport 'react-phone-input-2/lib/style.css'\nimport 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport 'react-phone-input-2/lib/style.css'\nimport { Button} from 'semantic-ui-react'\nimport {  Modal } from \"react-bootstrap\";\nimport {Label as LabelRibbon, Message} from 'semantic-ui-react'\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        },\n        \"& .card-title\":{\n            color:'#fff',\n            fontWeight:'bold'\n        },\n        \"& .form-control\":{\n            borderRadius:'0.25rem',\n            height:'41px'\n        },\n        \"& .card-header:first-child\": {\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\n        },\n        \"& .dropdown-toggle::after\": {\n            display: \" block !important\"\n        },\n        \"& select\":{\n            \"-webkit-appearance\": \"listbox !important\"\n        },\n        \"& p\":{\n            color:'red'\n        },\n        \"& label\":{\n            fontSize:'14px',\n            color:'#014d88',\n            fontWeight:'bold'\n        }\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    },\n    success:{\n        color: 'green',\n        fontSize: '12.8px',\n        fontWeight:'bold'\n    }\n}));\n\n\nconst RiskStratification = (props) => {\n    const classes = useStyles();\n    const history = useHistory();\n    console.log(props)\n    const [enrollSetting, setEnrollSetting] = useState([]);\n    let riskCountQuestion=[]\n    const [kP, setKP] = useState([]);\n    const [errors, setErrors] = useState({});\n    const [saving, setSaving] = useState(false);\n    let temp = { ...errors }\n    const [open, setOpen] = React.useState(false)\n    const toggle = () => setOpen(!open);\n    const [setting, setSetting] = useState([]);\n    const [riskCount, setRiskCount] = useState(0);\n    const [objValues, setObjValues]= useState(\n        {\n            age:props.patientAge,\n            dob:\"\",//props.patientObj.dateOfBirth && props.patientObj.dateOfBirth!==null ? props.patientObj.dateOfBirth :\"\",\n            visitDate: \"\",         \n            dateOfBirth: \"\",//props.patientObj.dateOfBirth && props.patientObj.dateOfBirth!==null ? props.patientObj.dateOfBirth :\"\",\n            dateOfRegistration: \"\",//props.patientObj.dateOfRegistration,\n            isDateOfBirthEstimated: \"\",//props.patientObj.isDateOfBirthEstimated,//\n            targetGroup:\"\",\n            testingSetting:\"\",//\n            modality  :\"\", //\n            code:\"\",\n            personId: props.patientObj.personId,\n            riskAssessment: {},\n            entryPoint:\"\"\n\n        }\n    )\n    const [riskAssessment, setRiskAssessment]= useState(\n        {\n            everHadSexualIntercourse:\"\",\n            bloodtransInlastThreeMonths:\"\",\n            uprotectedSexWithCasualLastThreeMonths:\"\",\n            uprotectedSexWithRegularPartnerLastThreeMonths:\"\", \n            unprotectedVaginalSex:\"\",  \n            uprotectedAnalSex:\"\",   \n            stiLastThreeMonths:\"\",\n            sexUnderInfluence :\"\",\n            moreThanOneSexPartnerLastThreeMonths:\"\",\n            experiencePain:\"\",\n            haveSexWithoutCondom:\"\",\n            abuseDrug:\"\",\n            bloodTransfusion:\"\",\n            consistentWeightFeverNightCough:\"\",\n            soldPaidVaginalSex:\"\",\n            //New Question\n            lastHivTestForceToHaveSex:\"\", \n            lastHivTestHadAnal:\"\",\n            lastHivTestInjectedDrugs:\"\",\n            whatWasTheResult:\"\",\n            lastHivTestDone:\"\",\n            diagnosedWithTb:\"\",\n            lastHivTestPainfulUrination:\"\",\n            lastHivTestBloodTransfusion:\"\",\n            lastHivTestVaginalOral:\"\",\n            lastHivTestBasedOnRequest:\"\"\n        }\n    )\n    useEffect(() => { \n        KP();\n        EnrollmentSetting();\n    }, [props.patientObj]);\n    //Get list of HIV STATUS ENROLLMENT\n    const EnrollmentSetting =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/TEST_SETTING`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            //console.log(response.data);\n            setEnrollSetting(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    //Get list of KP\n    const KP =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setKP(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    const handleInputChange = e => { \n        setErrors({...temp, [e.target.name]:\"\"})\n        if(e.target.name==='testingSetting' && e.target.value!==\"\"){\n            SettingModality(e.target.value)\n            setObjValues ({...objValues,  [e.target.name]: e.target.value}); \n        }\n        if(e.target.name==='modality' && e.target.value!==\"\"){\n            //SettingModality(e.target.value)\n            if(e.target.value===\"TEST_SETTING_STANDALONE_HTS_PMTCT_(ANC1_ONLY)\"){\n                setRiskCount(1)\n                setObjValues ({...objValues,  [e.target.name]: e.target.value}); \n            }else if(e.target.value===\"TEST_SETTING_STANDALONE_HTS_EMERGENCY\"){\n                //setRiskCount(1)\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\n            }else if(e.target.value===\"TEST_SETTING_STANDALONE_HTS_INDEX\"){\n                setRiskCount(1)\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\n            }else if(e.target.value===\"TEST_SETTING_STANDALONE_HTS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\"){\n                setRiskCount(1)\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\n            }else if(e.target.value===\"TEST_SETTING_STANDALONE_HTS_STI\"){\n                setRiskCount(1)\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\n            }else if(e.target.value===\"TEST_SETTING_STANDALONE_HTS_TB\"){\n                setRiskCount(1)\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\n            }else if(e.target.value===\"TEST_SETTING_CT_STI\"){\n                setRiskCount(1)\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\n            }else if(e.target.value===\"TEST_SETTING_CT_PMTCT\"){\n                setRiskCount(1)\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\n            }else if(e.target.value===\"TEST_SETTING_CT_TB\"){\n                setRiskCount(1)\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\n            }else if(e.target.value===\"TEST_SETTING_TB_TB\"){\n                setRiskCount(1)\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\n            }else if(e.target.value===\"TEST_SETTING_STI_STI\"){\n                setRiskCount(1)\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\n            }else if(e.target.value===\"TEST_SETTING_OPD_STI\"){\n                //setRiskCount(1)\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\n            }else if(e.target.value===\"TEST_SETTING_OUTREACH_INDEX\"){\n                setRiskCount(1)\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\n            }else{\n                setRiskCount(0)\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\n            }\n            \n        }\n        \n        setObjValues ({...objValues,  [e.target.name]: e.target.value});            \n    }\n    //Date of Birth and Age handle \n    //Get list of DSD Model Type\n    function SettingModality (settingId) {\n        const setting = settingId\n        axios\n           .get(`${baseUrl}application-codesets/v2/${setting}`,\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\n           )\n           .then((response) => {\n               setSetting(response.data);\n           })\n           .catch((error) => {\n           //console.log(error);\n           });\n       \n    }\n    //End of Date of Birth and Age handling \n    /*****  Validation  */\n    const validate = () => {\n        //HTS FORM VALIDATION\n            temp.dateVisit = objValues.visitDate ? \"\" : \"This field is required.\"  \n            temp.testingSetting = objValues.testingSetting ? \"\" : \"This field is required.\"\n            temp.modality = objValues.modality ? \"\" : \"This field is required.\"  \n            props.patientObj.age>15 && (temp.targetGroup = objValues.targetGroup ? \"\" : \"This field is required.\" )             \n            //targetGroup            \n                setErrors({ ...temp })\n        return Object.values(temp).every(x => x == \"\")\n    }\n    const handleItemClick =(page, completedMenu)=>{\n        props.handleItemClick(page)\n        if(props.completed.includes(completedMenu)) {\n\n        }else{\n            props.setCompleted([...props.completed, completedMenu])\n        }\n    }\n         // Getting the number count of riskAssessment True\n    const actualRiskCountTrue=Object.values(riskAssessment)\n    riskCountQuestion=actualRiskCountTrue.filter((x)=> x==='true')\n    const handleInputChangeRiskAssessment = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        setRiskAssessment ({...riskAssessment,  [e.target.name]: e.target.value}); \n                            \n    }\n    const handleSubmit =(e)=>{\n        e.preventDefault();\n            //console.log(riskAssessment)\n            props.patientObj.targetGroup = objValues.targetGroup\n            props.patientObj.testingSetting = objValues.testingSetting\n            props.patientObj.dateVisit= objValues.visitDate\n            props.patientObj.riskAssessment =riskAssessment \n            \n            objValues.riskAssessment=riskAssessment\n            if((riskCount>0 || riskCountQuestion.length>0) && props.patientAge>15){\n                if(validate()){\n                    axios.post(`${baseUrl}risk-stratification`,objValues,\n                    { headers: {\"Authorization\" : `Bearer ${token}`}},\n                    \n                    )\n                    .then(response => {\n                        setSaving(false);\n                        objValues.code=response.data.code\n                        props.setExtra(objValues)\n                        handleItemClick('basic', 'risk' )\n                        props.setHideOtherMenu(false)\n                        //toast.success(\"Risk stratification save succesfully!\");\n                    })\n                    .catch(error => {\n                        setSaving(false);\n                        if(error.response && error.response.data){\n                            let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                            toast.error(errorMessage,  {position: toast.POSITION.BOTTOM_CENTER});\n                        }\n                        else{\n                            toast.error(\"Something went wrong. Please try again...\",  {position: toast.POSITION.BOTTOM_CENTER});\n                        }\n                    });\n                }else{\n                    toast.error(\"All fields are required\",  {position: toast.POSITION.BOTTOM_CENTER});\n                }  \n            }\n            // else{\n            //     if(validate()){\n            //         axios.post(`${baseUrl}risk-stratification`,objValues,\n            //         { headers: {\"Authorization\" : `Bearer ${token}`}},\n                    \n            //         )\n            //         .then(response => {\n            //             setSaving(false);\n            //             objValues.code=response.data.code\n            //             props.patientObj.riskStratificationResponseDto = response.data\n            //             props.setActivePage({...props.activePage, activePage:\"home\"})\n            //             //props.setExtra(objValues)\n            //             //handleItemClick('basic', 'risk' )\n            //             //props.setHideOtherMenu(false)\n            //             // history.push({\n            //             //     pathname: '/patient-history',\n            //             //     state: {patientObject: props.patientObj, patientObj: props.patientObj.personResponseDto, clientCode:props.patientObj.clientCode}\n            //             // });\n            //             toast.success(\"Risk stratification save succesfully!\",  {position: toast.POSITION.BOTTOM_CENTER});\n            //         })\n            //         .catch(error => {\n            //             console.log(error)\n            //             setSaving(false);\n            //             if(error.response && error.response.data){\n            //                 let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n            //                 toast.error(errorMessage,  {position: toast.POSITION.BOTTOM_CENTER});\n            //             }\n            //             else{\n            //                 toast.error(\"Something went wrong. Please try again...\",  {position: toast.POSITION.BOTTOM_CENTER});\n            //             }\n            //         });\n            //     }else{\n            //         toast.error(\"All fields are required\",  {position: toast.POSITION.BOTTOM_CENTER});\n            //     } \n            // }\n            if(props.patientAge<15){\n                if(validate()){\n                    axios.post(`${baseUrl}risk-stratification`,objValues,\n                    { headers: {\"Authorization\" : `Bearer ${token}`}},\n                    \n                    )\n                    .then(response => {\n                        setSaving(false);\n                        props.patientObj.riskStratificationResponseDto=response.data\n                        objValues.code=response.data.code\n                        props.setExtra(objValues)\n                        props.setHideOtherMenu(false)\n                        handleItemClick('basic', 'risk' )\n                        //toast.success(\"Risk stratification save succesfully!\");\n                    })\n                    .catch(error => {\n                        setSaving(false);\n                        if(error.response && error.response.data){\n                            let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                            toast.error(errorMessage,  {position: toast.POSITION.BOTTOM_CENTER});\n                        }\n                        else{\n                            toast.error(\"Something went wrong. Please try again...\");\n                        }\n                    });\n                }else{\n                    toast.error(\"All fields are required\",  {position: toast.POSITION.BOTTOM_CENTER});\n                }\n                \n            }else{\n                props.setExtra(objValues)\n                if(validate()){\n                    axios.post(`${baseUrl}risk-stratification`,objValues,\n                    { headers: {\"Authorization\" : `Bearer ${token}`}},\n                    \n                    )\n                    .then(response => {\n                        setSaving(false);\n                        props.patientObj.riskStratificationResponseDto=response.data\n                        objValues.code=response.data.code\n                        props.setExtra(objValues)\n                        //toast.success(\"Risk stratification save succesfully!\");\n                    })\n                    .catch(error => {\n                        setSaving(false);\n                        if(error.response && error.response.data){\n                            let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                            toast.error(errorMessage,  {position: toast.POSITION.BOTTOM_CENTER});\n                        }\n                        else{\n                            toast.error(\"Something went wrong. Please try again...\",  {position: toast.POSITION.BOTTOM_CENTER});\n                        }\n                    });\n                }else{\n                    toast.error(\"All fields are required\",  {position: toast.POSITION.BOTTOM_CENTER});\n                }\n            }\n            \n    }\n\n    return (\n        <>  \n        \n            <Card className={classes.root}>\n                <CardBody>   \n                <h2 style={{color:'#000'}}>RISK STRATIFICATION</h2>\n                <br/>\n                    <form >\n                        <div className=\"row\">\n                        <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Modality</div>\n                            <div className=\"row\">\n                            <div className=\"form-group  col-md-6\">\n                                <FormGroup>\n                                    <Label>Entry Point </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"entryPoint\"\n                                        id=\"entryPoint\"\n                                        value={objValues.entryPoint}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}>Select</option>                                      \n                                        <option value=\"Facility\">Facility</option>\n                                        <option value=\"Community\">Community</option>\n                                    </select>\n                                    {errors.entryPoint !==\"\" ? (\n                                    <span className={classes.error}>{errors.entryPoint}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-6\">\n                                <FormGroup>\n                                <Label for=\"\">Visit Date * </Label>\n                                <Input\n                                    type=\"date\"\n                                    name=\"visitDate\"\n                                    id=\"visitDate\"\n                                    value={objValues.visitDate}\n                                    onChange={handleInputChange}\n                                    min=\"1983-12-31\"\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                    \n                                />\n                                {errors.dateVisit !==\"\" ? (\n                                    <span className={classes.error}>{errors.dateVisit}</span>\n                                ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-6\">\n                                <FormGroup>\n                                    <Label>Setting</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"testingSetting\"\n                                        id=\"testingSetting\"\n                                        value={objValues.testingSetting}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}>Select</option>\n                                        {enrollSetting.map((value) => (\n                                            <option key={value.id} value={value.code}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                        {/* <option value=\"TEST_SETTING_CT\">CT</option>\n                                        <option value=\"TEST_SETTING_TB\">TB</option>\n                                        <option value=\"TEST_SETTING_STI\">STI</option>\n                                        <option value=\"TEST_SETTING_OPD\">OPD</option>\n                                        <option value=\"TEST_SETTING_WARD\">WARD</option>\n                                        <option value=\"TEST_SETTING_STANDALONE_HTS\">STANDALONE HTS</option>\n                                        \n                                        <option value=\"TEST_SETTING_FP\">FP</option>\n                                        <option value=\"TEST_SETTING_OUTREACH\">OUTREACH</option>\n                                        <option value=\"TEST_SETTING_OTHERS\">OTHERS</option> */}\n\n                                    </select>\n                                    {errors.testingSetting !==\"\" ? (\n                                    <span className={classes.error}>{errors.testingSetting}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-6\">\n                                <FormGroup>\n                                    <Label>Modality</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"modality\"\n                                        id=\"modality\"\n                                        value={objValues.modality}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}>Select</option>\n                                        {setting.map((value) => (\n                                            <option key={value.code} value={value.code}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                        \n                                    </select>\n                                    {errors.modality !==\"\" ? (\n                                    <span className={classes.error}>{errors.modality}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            \n                            </div>\n                            <br/>\n                           \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Target Group *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"targetGroup\"\n                                        id=\"targetGroup\"\n                                        onChange={handleInputChange}\n                                        value={objValues.targetGroup}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        {kP.map((value) => (\n                                            <option key={value.id} value={value.code}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                    </select>\n                                    {errors.targetGroup !==\"\" ? (\n                                        <span className={classes.error}>{errors.targetGroup}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                           \n\n                            <br />\n                             \n                            {props.patientAge>15 && ( <>\n                            {/* {(objValues.targetGroup!==\"\" && objValues.targetGroup===\"TARGET_GROUP_GEN_POP\" )&& ( <>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Ever had sexual intercourse </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"everHadSexualIntercourse\"\n                                        id=\"everHadSexualIntercourse\"\n                                        value={riskAssessment.everHadSexualIntercourse}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.everHadSexualIntercourse !==\"\" ? (\n                                    <span className={classes.error}>{errors.everHadSexualIntercourse}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Blood transfusion in last 3 months *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"bloodtransInlastThreeMonths\"\n                                        id=\"bloodtransInlastThreeMonths\"\n                                        value={riskAssessment.bloodtransInlastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.bloodtransInlastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.bloodtransInlastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected sex with casual partner in last 3 months *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedSexWithCasualLastThreeMonths\"\n                                        id=\"uprotectedSexWithCasualLastThreeMonths\"\n                                        value={riskAssessment.uprotectedSexWithCasualLastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.uprotectedSexWithCasualLastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedSexWithCasualLastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected sex with regular partner in the last 3months</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\n                                        id=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\n                                        value={riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.uprotectedSexWithRegularPartnerLastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedSexWithRegularPartnerLastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected vaginal sex</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"unprotectedVaginalSex\"\n                                        id=\"unprotectedVaginalSex\"\n                                        value={riskAssessment.unprotectedVaginalSex}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.unprotectedVaginalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.unprotectedVaginalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected Anal sex</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedAnalSex\"\n                                        id=\"uprotectedAnalSex\"\n                                        value={riskAssessment.uprotectedAnalSex}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.uprotectedAnalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedAnalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>         \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>STI in last 3 months *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"stiLastThreeMonths\"\n                                        id=\"stiLastThreeMonths\"\n                                        value={riskAssessment.stiLastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.stiLastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.stiLastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Sex under the influence of drugs or alcohol*</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"sexUnderInfluence\"\n                                        id=\"sexUnderInfluence\"\n                                        value={riskAssessment.sexUnderInfluence}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.sexUnderInfluence !==\"\" ? (\n                                    <span className={classes.error}>{errors.sexUnderInfluence}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>More than 1 sex partner during last 3 months*</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"moreThanOneSexPartnerLastThreeMonths\"\n                                        id=\"moreThanOneSexPartnerLastThreeMonths\"\n                                        value={riskAssessment.moreThanOneSexPartnerLastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.moreThanOneSexPartnerLastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.moreThanOneSexPartnerLastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                          \n                            <br/>\n                            </>)} */}\n                            {(objValues.targetGroup!==\"\" && objValues.targetGroup===\"TARGET_GROUP_GEN_POP\" ) && ( <>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Is this HIV test based on a Clinician/Doctor/Health Care Provider’s  request? *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"lastHivTestBasedOnRequest\"\n                                        id=\"lastHivTestBasedOnRequest\"\n                                        value={riskAssessment.lastHivTestBasedOnRequest}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.lastHivTestBasedOnRequest !==\"\" ? (\n                                    <span className={classes.error}>{errors.lastHivTestBasedOnRequest}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>When was your last HIV test done?  *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"lastHivTestDone\"\n                                        id=\"lastHivTestDone\"\n                                        value={riskAssessment.lastHivTestDone}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.lastHivTestDone !==\"\" ? (\n                                    <span className={classes.error}>{errors.lastHivTestDone}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>What was the result? *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"whatWasTheResult\"\n                                        id=\"whatWasTheResult\"\n                                        value={riskAssessment.whatWasTheResult}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.whatWasTheResult !==\"\" ? (\n                                    <span className={classes.error}>{errors.whatWasTheResult}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Since your last HIV test, have you had anal or vaginal or oral sex without a condom with someone who was HIV positive or unaware of their HIV status? *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"lastHivTestVaginalOral\"\n                                        id=\"lastHivTestVaginalOral\"\n                                        value={riskAssessment.lastHivTestVaginalOral}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.lastHivTestVaginalOral !==\"\" ? (\n                                    <span className={classes.error}>{errors.lastHivTestVaginalOral}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Since your last HIV test, have you had a blood or blood product transfusion? *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"lastHivTestBloodTransfusion\"\n                                        id=\"lastHivTestBloodTransfusion\"\n                                        value={riskAssessment.lastHivTestBloodTransfusion}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.lastHivTestBloodTransfusion !==\"\" ? (\n                                    <span className={classes.error}>{errors.lastHivTestBloodTransfusion}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>    \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Since your last HIV test, have you experienced painful urination, lower abdominal pain, vaginal or penile discharge, pain during sexual intercourse, thick, cloudy, or foul smelling discharge and/or small bumps or blisters near the mouth, penis, vagina, or anal areas? *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"lastHivTestPainfulUrination\"\n                                        id=\"lastHivTestPainfulUrination\"\n                                        value={riskAssessment.lastHivTestPainfulUrination}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.lastHivTestPainfulUrination !==\"\" ? (\n                                    <span className={classes.error}>{errors.lastHivTestPainfulUrination}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>   \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you been diagnosed with TB or currently have any of the following symptoms : cough, fever, weight loss, night sweats? *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"diagnosedWithTb\"\n                                        id=\"diagnosedWithTb\"\n                                        value={riskAssessment.diagnosedWithTb}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.diagnosedWithTb !==\"\" ? (\n                                    <span className={classes.error}>{errors.diagnosedWithTb}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Since your last HIV test, have you ever injected drugs, shared needles or other sharp objects with someone known to be HIV positive or who you didn’t know their HIV status? *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"lastHivTestInjectedDrugs\"\n                                        id=\"sexUnderInfluence\"\n                                        value={riskAssessment.lastHivTestInjectedDrugs}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.lastHivTestInjectedDrugs !==\"\" ? (\n                                    <span className={classes.error}>{errors.lastHivTestInjectedDrugs}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Since your last HIV test, have you had anal, oral or vaginal sex in exchange for money or other benefits? *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"lastHivTestHadAnal\"\n                                        id=\"lastHivTestHadAnal\"\n                                        value={riskAssessment.lastHivTestHadAnal}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.lastHivTestHadAnal !==\"\" ? (\n                                    <span className={classes.error}>{errors.lastHivTestHadAnal}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Since your last HIV test, have you been forced to have sex? *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"lastHivTestForceToHaveSex\"\n                                        id=\"moreThanOneSexPartnerLastThreeMonths\"\n                                        value={riskAssessment.lastHivTestForceToHaveSex}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.lastHivTestForceToHaveSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.lastHivTestForceToHaveSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <br/>\n                            </>)}\n                            {(objValues.targetGroup!==\"\" && objValues.targetGroup!==\"TARGET_GROUP_GEN_POP\" ) && ( <>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/your partner experienced lower abdominal pain, smelly discharge, blisters and wounds around you/partner vagina, penis anus or mouth?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"experiencePain\"\n                                        id=\"experiencePain\"\n                                        value={riskAssessment.experiencePain}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.experiencePain !==\"\" ? (\n                                    <span className={classes.error}>{errors.experiencePain}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner had sex without a condom with someone of unknown HIV status, or you/partner raped by person with unknown HIV status? *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"haveSexWithoutCondom\"\n                                        id=\"haveSexWithoutCondom\"\n                                        value={riskAssessment.haveSexWithoutCondom}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.haveSexWithoutCondom !==\"\" ? (\n                                    <span className={classes.error}>{errors.haveSexWithoutCondom}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you had a condom burst with your partner during sexual intercourse?  *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"haveCondomBurst\"\n                                        id=\"haveCondomBurst\"\n                                        value={riskAssessment.haveCondomBurst}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.haveCondomBurst !==\"\" ? (\n                                    <span className={classes.error}>{errors.haveCondomBurst}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Do you/partner share needles/syringes, other sharp objects or used abuse drug substances of any kind?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"abuseDrug\"\n                                        id=\"abuseDrug\"\n                                        value={riskAssessment.abuseDrug}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.abuseDrug !==\"\" ? (\n                                    <span className={classes.error}>{errors.abuseDrug}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner had any blood or blood product transfusion?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"bloodTransfusion\"\n                                        id=\"bloodTransfusion\"\n                                        value={riskAssessment.bloodTransfusion}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.bloodTransfusion !==\"\" ? (\n                                    <span className={classes.error}>{errors.bloodTransfusion}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner experienced coughing, weight loss, fever, night sweats consistently?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"consistentWeightFeverNightCough\"\n                                        id=\"consistentWeightFeverNightCough\"\n                                        value={riskAssessment.consistentWeightFeverNightCough}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.consistentWeightFeverNightCough !==\"\" ? (\n                                    <span className={classes.error}>{errors.consistentWeightFeverNightCough}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>            \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you/partner paid or sold vaginal, anal or oral sex? *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"soldPaidVaginalSex\"\n                                        id=\"soldPaidVaginalSex\"\n                                        value={riskAssessment.soldPaidVaginalSex}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.soldPaidVaginalSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.soldPaidVaginalSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                           \n                            <br/>\n                            </>)}\n                            </>)}\n                            <br/>\n                            <Message warning>\n                                <h4>Personal HIV Risk assessment score </h4>\n                                <b>Score :{riskCount + (props.patientAge>15 ?riskCountQuestion.length : 0)}</b>\n                            </Message>\n                            <hr/>\n                            <br/>\n                            <div className=\"row\">\n                            <div className=\"form-group mb-3 col-md-6\">\n                           \n                            <Button content='Save' type=\"submit\" icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\n                            </div>\n                            </div>\n                        </div>\n                    </form>\n                    \n                </CardBody>\n            </Card> \n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered>\n             <Modal.Header >\n            <Modal.Title id=\"contained-modal-title-vcenter\">\n                Notification!\n            </Modal.Title>\n            </Modal.Header>\n                <Modal.Body>\n                    <h4>Are you Sure of the Age entered?</h4>\n                    \n                </Modal.Body>\n            <Modal.Footer>\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\n            </Modal.Footer>\n            </Modal>                             \n        </>\n    );\n};\n\nexport default RiskStratification","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\HivTestResult.js",["391","392","393","394","395"],"import React, {useCallback, useEffect, useState} from \"react\";\n\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\nimport * as moment from 'moment';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card, CardContent} from \"@material-ui/core\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport {toast} from \"react-toastify\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport axios from \"axios\";\nimport {token, url as baseUrl } from \"../../../api\";\nimport 'react-phone-input-2/lib/style.css'\nimport {Label as LabelRibbon, Button} from 'semantic-ui-react'\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        },\n        \"& .card-title\":{\n            color:'#fff',\n            fontWeight:'bold'\n        },\n        \"& .form-control\":{\n            borderRadius:'0.25rem',\n            height:'41px'\n        },\n        \"& .card-header:first-child\": {\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\n        },\n        \"& .dropdown-toggle::after\": {\n            display: \" block !important\"\n        },\n        \"& select\":{\n            \"-webkit-appearance\": \"listbox !important\"\n        },\n        \"& p\":{\n            color:'red'\n        },\n        \"& label\":{\n            fontSize:'14px',\n            color:'#014d88',\n            fontWeight:'bold'\n        }\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    }\n}));\n\n\nconst HivTestResult = (props) => {\n    const classes = useStyles();\n    const [saving, setSaving] = useState(false);\n    const [errors, setErrors] = useState({});\n    let temp = { ...errors }\n    console.log(props.patientObj)\n    const patientID= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.id : \"\";\n    const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\n    const [hivTestDate, setHivTestDate] = useState(\"\");\n    const [showCD4Count, setShowCD4Count] = useState(true);\n    const calculate_age = dob => {\n        var today = new Date();\n        var dateParts = dob.split(\"-\");\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\n        var age_now = today.getFullYear() - birthDate.getFullYear();\n        var m = today.getMonth() - birthDate.getMonth();\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n                    age_now--;\n                }\n            if (age_now === 0) {\n                    return m + \" month(s)\";\n                }\n                return age_now ;\n    };\n    const patientAge=calculate_age(moment(props.patientObj.personResponseDto && props.patientObj.personResponseDto.dateOfBirth ? props.patientObj.personResponseDto.dateOfBirth : 0).format(\"DD-MM-YYYY\"))\n   \n    const [objValues, setObjValues]= useState(\n        {\n            confirmatoryTest: {},\n            confirmatoryTest2: {},\n            hivTestResult: \"\",\n            hivTestResult2: \"\",\n            htsClientId:\"\",\n            personId: props.patientObj  ? props.patientObj.id : \"\",\n            test1: {},\n            test2: {},\n            tieBreakerTest: {},\n            tieBreakerTest2: {},\n            syphilisTesting:{},\n            hepatitisTesting:{},\n            others:{},\n            cd4:{},\n        }\n    )\n    const handleInputChange = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        setObjValues ({...objValues,  [e.target.name]: e.target.value});            \n    }\n    const [initialTest1, setInitailTest]= useState(\n        {\n            date:\"\",\n            result:\"\",            \n        }\n    )\n    const [initialTest12, setInitailTest2]= useState(\n        {\n            date2 :\"\",\n            result2  :\"\",            \n        }\n    )\n    const handleInputChangeCd4Count = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        setCd4Count ({...cd4Count,  [e.target.name]: e.target.value});            \n    }\n    const [cd4Count, setCd4Count]= useState(\n        {\n            cd4Count:\"\",\n            cd4SemiQuantitative:\"\",\n            cd4FlowCyteometry:\"\"            \n        }\n    )\n    const handleInputChangeInitial = e => { \n        //setErrors({...temp, [e.target.name]:\"\"})\n        if(e.target.value==='No'){\n            setInitailTest ({...initialTest1,  [e.target.name]: e.target.value}); \n            setConfirmatoryTest({\n                date :\"\",\n                result  :\"\",            \n            })\n            setTieBreakerTest({\n                date :\"\",\n                result  :\"\",            \n            })\n            //This is to show cd4 count section\n            setShowCD4Count(false)\n                \n        }else{\n            setInitailTest ({...initialTest1,  [e.target.name]: e.target.value});\n            //This is to show cd4 count section \n            setShowCD4Count(true)\n        }            \n    }\n    const handleInputChangeInitial2 = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        if(e.target.value==='No'){\n            setInitailTest2 ({...initialTest12,  [e.target.name]: e.target.value});  \n            setConfirmatoryTest2({\n                date2 :\"\",\n                result2  :\"\",            \n            })\n            setTieBreakerTest2({\n                date2 :\"\",\n                result2  :\"\",            \n            })\n            //This is to show cd4 count section\n            setShowCD4Count(false)\n        }else{\n            setInitailTest2 ({...initialTest12,  [e.target.name]: e.target.value});\n            //This is to show cd4 count section \n            setShowCD4Count(true) \n        }           \n    }\n    const [confirmatoryTest, setConfirmatoryTest]= useState(\n        {\n            date :\"\",\n            result  :\"\",            \n        }\n    )\n    const [confirmatoryTest2, setConfirmatoryTest2]= useState(\n        {\n            date2 :\"\",\n            result2  :\"\",            \n        }\n    )\n    const handleInputChangeConfirmatory = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        setConfirmatoryTest ({...confirmatoryTest,  [e.target.name]: e.target.value});\n        //This is to show cd4 count section \n        if(initialTest1.result==='Yes' && e.target.value==='Yes'){\n            setShowCD4Count(true)\n\n        }else{\n            setShowCD4Count(true)\n        }              \n    }\n    const handleInputChangeConfirmatory2 = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        setConfirmatoryTest2 ({...confirmatoryTest2,  [e.target.name]: e.target.value}); \n        //This is to show cd4 count section \n        if(initialTest12.result2==='Yes' && e.target.value==='Yes'){\n            setShowCD4Count(true)\n\n        }else{\n            setShowCD4Count(true)\n        }                 \n    }\n    const [tieBreakerTest, setTieBreakerTest]= useState(\n        {\n            date :\"\",\n            result  :\"\",            \n        }\n    )\n    const [tieBreakerTest2, setTieBreakerTest2]= useState(\n        {\n            date2 :\"\",\n            result2  :\"\",            \n        }\n    )\n    const handleInputChangeTie = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        setTieBreakerTest ({...tieBreakerTest,  [e.target.name]: e.target.value});  \n        //This is to show cd4 count section\n        if(confirmatoryTest.result==='No' && e.target.value==='Yes'){\n            setShowCD4Count(true)\n        }else if(confirmatoryTest.result==='No' && e.target.value==='No'){\n            setShowCD4Count(false)\n        }else{\n            setShowCD4Count(true)\n        }         \n    }\n    const handleInputChangeTie2 = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        setTieBreakerTest2 ({...tieBreakerTest2,  [e.target.name]: e.target.value});\n        //This is to show cd4 count section\n        if(confirmatoryTest2.result2==='No' && e.target.value==='Yes'){\n            setShowCD4Count(true)\n        }else if(confirmatoryTest2.result2==='No' && e.target.value==='No'){\n            setShowCD4Count(false)\n        }else{\n            setShowCD4Count(true)\n        }                     \n    }\n    const [syphills, setSyphills]= useState(\n        {\n            syphilisTestResult :\"\",\n           // result  :\"\",            \n        }\n    )\n    const handleInputChangeSyphills = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        setSyphills ({...syphills,  [e.target.name]: e.target.value});            \n    }\n    const [hepatitis, setHepatitis]= useState(\n        {\n            hepatitisCTestResult :\"\",\n            hepatitisBTestResult  :\"\", \n            longitude:\"\",\n            latitude:\"\",\n            adhocCode :\"\"                       \n        }\n    )\n    const handleInputChangeHepatitis = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        setHepatitis ({...hepatitis,  [e.target.name]: e.target.value});            \n    }\n    const [others, setOthers]= useState(\n        {\n            longitude:\"\",\n            latitude:\"\",\n            adhocCode :\"\"                       \n        }\n    )\n    useEffect(() => { \n        //console.log(props.patientObj)\n        if(props.patientObj){\n            if(props.patientObj.dateVisit && props.patientObj.dateVisit!=='' ){\n                setHivTestDate(props.patientObj.dateVisit)\n            }else{\n                setHivTestDate(\"\")\n            }\n            setCd4Count(props.patientObj  && props.patientObj.cd4!==null? props.patientObj.cd4 : {})\n            //setInitailTest(props.patientObj  && props.patientObj.test1!==null? props.patientObj.test1 : {})\n            //setConfirmatoryTest(props.patientObj  && props.patientObj.confirmatoryTest!==null? props.patientObj.confirmatoryTest : {})\n            setTieBreakerTest(props.patientObj && props.patientObj.tieBreakerTest!==null ? props.patientObj.tieBreakerTest : {})\n            setSyphills(props.patientObj  && props.patientObj.syphilisTesting!==null ? props.patientObj.syphilisTesting : {})\n            setHepatitis(props.patientObj  && props.patientObj.hepatitisTesting!==null ? props.patientObj.hepatitisTesting : {})\n            setOthers(props.patientObj  && props.patientObj.others!==null ? props.patientObj.others : {})\n            \n            //setInitailTest2(props.patientObj  && props.patientObj.test2!==null? props.patientObj.test2 : {})\n            //setConfirmatoryTest2(props.patientObj  && props.patientObj.confirmatoryTest2!==null? props.patientObj.confirmatoryTest2 : {})\n            //setTieBreakerTest2(props.patientObj && props.patientObj.tieBreakerTest2!==null ? props.patientObj.tieBreakerTest2 : {})\n        }\n    }, [props.patientObj]);//initialTest12, tieBreakerTest2, confirmatoryTest2, \n\n    const handleInputChangeOthers = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        setOthers ({...others,  [e.target.name]: e.target.value});            \n    }\n    const handleItemClick =(page, completedMenu)=>{\n        props.handleItemClick(page)\n        if(props.completed.includes(completedMenu)) {\n\n        }else{\n            props.setCompleted([...props.completed, completedMenu])\n        }\n    }\n    const validate = () => {\n        //HTS FORM VALIDATION\n        initialTest1.date!==\"\" &&  (temp.date = initialTest1.result ? \"\" : \"This field is required.\")\n        // initialTest1.result!==\"\"  && (temp.date = confirmatoryTest.date ? \"\" : \"This field is required.\")\n        // initialTest1.result!==\"\"  && (temp.date = tieBreakerTest.date ? \"\" : \"This field is required.\")\n              \n                setErrors({ ...temp })\n        return Object.values(temp).every(x => x == \"\")\n    }\n    const handleSubmit =(e)=>{\n        e.preventDefault();\n        if(validate()){\n                    //logic to get Hiv result test\n        if(initialTest12.result2==='No' ){\n            objValues.hivTestResult2=\"Negative\"\n        }else if(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='Yes'){\n            objValues.hivTestResult2=\"Positive\" \n        }\n        // else if(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='No' && tieBreakerTest2.result2===''){\n        //     objValues.hivTestResult2=\"Negative\" \n        // }\n        else if(confirmatoryTest2.result2==='No' && tieBreakerTest2.result2==='Yes'){\n            objValues.hivTestResult2=\"Positive\" \n        }else if(confirmatoryTest2.result2==='No' && tieBreakerTest2.result2==='No'){\n            objValues.hivTestResult2=\"Negative\" \n        }else{\n            objValues.hivTestResult2=\"\"\n        }\n      \n        if(initialTest1.result==='No' ){\n            objValues.hivTestResult=\"Negative\"\n        }else if(initialTest1.result==='Yes' && confirmatoryTest.result==='Yes'){\n            objValues.hivTestResult=\"Positive\"\n        }\n        // else if(initialTest1.result==='Yes' && confirmatoryTest.result==='No' && tieBreakerTest.result===''){\n        //     objValues.hivTestResult=\"Negative\"\n        // }\n        else if(confirmatoryTest.result==='No' && tieBreakerTest.result==='Yes'){\n            objValues.hivTestResult=\"Positive\"\n        }else if(confirmatoryTest.result==='No' && tieBreakerTest.result==='No'){\n            objValues.hivTestResult=\"Negative\"\n        }else{\n            objValues.hivTestResult=\"\"\n        }\n            objValues.htsClientId= clientId\n            objValues.confirmatoryTest= confirmatoryTest\n            objValues.confirmatoryTest2= confirmatoryTest2\n            objValues.personId= patientID\n            objValues.test1= initialTest1\n            objValues.test2= initialTest12\n            objValues.tieBreakerTest=tieBreakerTest\n            objValues.tieBreakerTest2=tieBreakerTest2\n            objValues.syphilisTesting=syphills\n            objValues.hepatitisTesting=hepatitis\n           \n            objValues.cd4=cd4Count\n            objValues.others=others\n            axios.put(`${baseUrl}hts/${clientId}/request-result`,objValues,\n            { headers: {\"Authorization\" : `Bearer ${token}`}}, )\n            .then(response => {\n                setSaving(false);\n                props.setPatientObj(response.data)\n                //console.log(response.data)\n                //props.setPatientObj(props && props.patientObj ? props.patientObj : \"\")\n                //toast.success(\"HIV test successful\");\n                handleItemClick('post-test', 'hiv-test')\n            })\n            .catch(error => {\n                setSaving(false);\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage);\n                }\n                else{\n                    toast.error(\"Something went wrong. Please try again...\");\n                }\n            });\n        }   \n    }\n\n    return (\n        <>\n            <Card className={classes.root}>\n                <CardBody>\n               \n                <h2 style={{color:'#000'}}>REQUEST AND RESULT FORM</h2>\n                    <form >\n                        <div className=\"row\">\n                        <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\n                        <h4 style={{color:'#fff'}}>HIV TEST RESULT</h4>\n                        </LabelRibbon>\n                           <br/>\n                           <div className=\"form-group  col-md-2\"></div>\n                            <h4>Initial HIV Test 1:</h4>\n                            <div className=\"form-group mb-3 col-md-5\">\n                                <FormGroup>\n                                <Label for=\"\"> Date  </Label>\n                                <Input\n                                    type=\"date\"\n                                    name=\"date\"\n                                    id=\"date\"\n                                    value={initialTest1.date}\n                                    onChange={handleInputChangeInitial}\n                                    min={hivTestDate!==\"\" && hivTestDate!==null ? hivTestDate  :\"\"}\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                    required\n                                />\n                                {errors.date !==\"\" ? (\n                                    <span className={classes.error}>{errors.date}</span>\n                                ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            {initialTest1.date && (\n                            <div className=\"form-group  col-md-5\">\n                                <FormGroup>\n                                    <Label>Result </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"result\"\n                                        id=\"result\"\n                                        value={initialTest1.result}\n                                        onChange={handleInputChangeInitial}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={ initialTest1.date===\"\"? true : false}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Yes\">Reactive</option>\n                                        <option value=\"No\">Non Reactive</option>\n                                        \n                                    </select>\n                                    {errors.result !==\"\" ? (\n                                    <span className={classes.error}>{errors.result}</span>\n                                ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            <div className=\"form-group  col-md-2\"></div>\n                            {initialTest1.result ==='Yes' && (\n                            <>\n                            <h4>Confirmatory Test:</h4>\n                            <div className=\"form-group mb-3 col-md-5\">\n                                <FormGroup>\n                                <Label for=\"\"> Date  </Label>\n                                <Input\n                                    type=\"date\"\n                                    name=\"date\"\n                                    id=\"date\"\n                                    value={confirmatoryTest.date}\n                                    onChange={handleInputChangeConfirmatory}\n                                    min={initialTest1.date}\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                    required\n                                />\n                                {errors.dateOfEac1 !==\"\" ? (\n                                    <span className={classes.error}>{errors.dateOfEac1}</span>\n                                ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            {confirmatoryTest.date && (\n                            <div className=\"form-group  col-md-5\">\n                                <FormGroup>\n                                    <Label>Result </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"result\"\n                                        id=\"result\"\n                                        value={confirmatoryTest.result}\n                                        onChange={handleInputChangeConfirmatory}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={confirmatoryTest.date===''? true : false}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Yes\">Reactive</option>\n                                        <option value=\"No\">Non Reactive</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            )}\n                            <div className=\"form-group  col-md-2\"></div>\n                            </>\n                            )}\n                            {confirmatoryTest.result ==='No' && (\n                            <>\n                            <h4>Tie Breaker Test:</h4>\n                            <div className=\"form-group mb-3 col-md-5\">\n                                <FormGroup>\n                                <Label for=\"\"> Date  </Label>\n                                <Input\n                                    type=\"date\"\n                                    name=\"date\"\n                                    id=\"date\"\n                                    value={tieBreakerTest.date}\n                                    onChange={handleInputChangeTie}\n                                    min={confirmatoryTest.date}\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                    required\n                                />\n                               \n                                </FormGroup>\n                            </div>\n                            {tieBreakerTest.date && (\n                            <div className=\"form-group  col-md-5\">\n                                <FormGroup>\n                                    <Label>Result </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"result\"\n                                        id=\"result\"\n                                        value={tieBreakerTest.result}\n                                        onChange={handleInputChangeTie}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={tieBreakerTest.date===''? true : false}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Yes\">Reactive</option>\n                                        <option value=\"No\">Non Reactive</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            )}\n                            <div className=\"form-group  col-md-2\"></div>\n\n                            </>)}\n                            <div className=\"row\">\n                            <div className=\"form-group  col-md-12\">  \n                                {initialTest1.result==='No' &&  (\n                                    <LabelRibbon color=\"green\" >\n                                        Negative\n                                    </LabelRibbon>\n                                )}                       \n                                {initialTest1.result==='No' && confirmatoryTest.result==='No' &&  (\n                                    <LabelRibbon color=\"green\" >\n                                    Negative\n                                </LabelRibbon>\n                                )}\n                                \n                                {(initialTest1.result==='Yes' && confirmatoryTest.result==='Yes' ) && (\n                                    <>\n                                    <LabelRibbon color=\"red\" >\n                                        Positive\n                                    </LabelRibbon>\n                                    <br/>\n                                    <hr/>\n                                    <div className=\"row\">\n                                        <h4>Initial HIV Test 2:</h4>\n                                        <div className=\"form-group mb-3 col-md-5\">\n                                            <FormGroup>\n                                            <Label for=\"\"> Date </Label>\n                                            <Input\n                                                type=\"date\"\n                                                name=\"date2\"\n                                                id=\"date2\"\n                                                value={initialTest12.date2}\n                                                onChange={handleInputChangeInitial2}\n                                                min={confirmatoryTest.date}\n                                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                                required\n                                            />\n                                            {errors.date2 !==\"\" ? (\n                                                <span className={classes.error}>{errors.date2}</span>\n                                            ) : \"\" }\n                                            </FormGroup>\n                                        </div>\n\n                                        <div className=\"form-group  col-md-5\">\n                                            <FormGroup>\n                                                <Label>Result  </Label>\n                                                <select\n                                                    className=\"form-control\"\n                                                    name=\"result2\"\n                                                    id=\"result2\"\n                                                    value={initialTest12.result2}\n                                                    onChange={handleInputChangeInitial2}\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                    disabled={initialTest12.date2===''? true : false}\n                                                >\n                                                    <option value={\"\"}></option>\n                                                    <option value=\"Yes\">Reactive</option>\n                                                    <option value=\"No\">Non Reactive</option>\n                                                    \n                                                </select>\n                                                {errors.result2 !==\"\" ? (\n                                                <span className={classes.error}>{errors.result2}</span>\n                                            ) : \"\" }\n                                            </FormGroup>\n                                        </div>\n                                   \n                                        <div className=\"form-group  col-md-2\"></div>\n                                        {initialTest12.result2 ==='Yes' && (\n                                        <>\n                                        <h4>Confirmatory Test 2:</h4>\n                                        <div className=\"form-group mb-3 col-md-5\">\n                                            <FormGroup>\n                                            <Label for=\"\"> Date  </Label>\n                                            <Input\n                                                type=\"date\"\n                                                name=\"date2\"\n                                                id=\"date2\"\n                                                value={confirmatoryTest2.date2}\n                                                onChange={handleInputChangeConfirmatory2}\n                                                min={initialTest12.date2}\n                                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                                required\n                                            />\n                                           \n                                            </FormGroup>\n                                        </div>\n                                        <div className=\"form-group  col-md-5\">\n                                            <FormGroup>\n                                                <Label>Result </Label>\n                                                <select\n                                                    className=\"form-control\"\n                                                    name=\"result2\"\n                                                    id=\"result2\"\n                                                    value={confirmatoryTest2.result2}\n                                                    onChange={handleInputChangeConfirmatory2}\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                    disabled={confirmatoryTest2.date2===''? true : false}\n                                                >\n                                                    <option value={\"\"}></option>\n                                                    <option value=\"Yes\">Reactive</option>\n                                                    <option value=\"No\">Non Reactive</option>\n                                                    \n                                                </select>\n                                                \n                                            </FormGroup>\n                                        </div>\n                                        <div className=\"form-group  col-md-2\"></div>\n                                        </>\n                                        )}\n                                        {confirmatoryTest2.result2 ==='No' && (\n                                        <>\n                                        <h4>Tie Breaker Test 2:</h4>\n                                        <div className=\"form-group mb-3 col-md-5\">\n                                            <FormGroup>\n                                            <Label for=\"\"> Date  </Label>\n                                            <Input\n                                                type=\"date\"\n                                                name=\"date2\"\n                                                id=\"date2\"\n                                                value={tieBreakerTest2.date2}\n                                                onChange={handleInputChangeTie2}\n                                                min={confirmatoryTest2.date2}\n                                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                                required\n                                            />\n                                        \n                                            </FormGroup>\n                                        </div>\n                                        <div className=\"form-group  col-md-5\">\n                                            <FormGroup>\n                                                <Label>Result </Label>\n                                                <select\n                                                    className=\"form-control\"\n                                                    name=\"result2\"\n                                                    id=\"result2\"\n                                                    value={tieBreakerTest2.result2}\n                                                    onChange={handleInputChangeTie2}\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                    disabled={tieBreakerTest2.date2===''?true : false}\n                                                >\n                                                    <option value={\"\"}></option>\n                                                    <option value=\"Yes\">Reactive</option>\n                                                    <option value=\"No\">Non Reactive</option>\n                                                    \n                                                </select>\n                                                \n                                            </FormGroup>\n                                        </div>\n                                        <div className=\"form-group  col-md-2\"></div>\n            \n                                        </>)}\n                                    </div>\n                                    </>\n                                )}\n                                {/* This is result for Test 1 */}\n                                {/* {(initialTest1.result==='Yes' && confirmatoryTest.result==='No' && tieBreakerTest.result==='' ) && (\n                                    <LabelRibbon color=\"green\" >\n                                        Negative\n                                    </LabelRibbon>\n                                )} */}\n                                {(confirmatoryTest.result==='No' && tieBreakerTest.result==='Yes' ) && (<>\n                                    <LabelRibbon color=\"red\" >\n                                        Positive\n                                    </LabelRibbon>\n                                    <br/>\n                                    <hr/>\n                                   \n                                    <div className=\"row\">\n                                        <h4>Initial HIV Test 2:</h4>\n                                        <div className=\"form-group mb-3 col-md-5\">\n                                            <FormGroup>\n                                            <Label for=\"\"> Date  </Label>\n                                            <Input\n                                                type=\"date\"\n                                                name=\"date2\"\n                                                id=\"date2\"\n                                                value={initialTest12.date2}\n                                                onChange={handleInputChangeInitial2}\n                                                min={ tieBreakerTest.date}\n                                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                                required\n                                            />\n                                            {errors.date2 !==\"\" ? (\n                                                <span className={classes.error}>{errors.date2}</span>\n                                            ) : \"\" }\n                                            </FormGroup>\n                                        </div>\n                                        <div className=\"form-group  col-md-5\">\n                                            <FormGroup>\n                                                <Label>Result  </Label>\n                                                <select\n                                                    className=\"form-control\"\n                                                    name=\"result2\"\n                                                    id=\"result2\"\n                                                    value={initialTest12.result2}\n                                                    onChange={handleInputChangeInitial2}\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                    disabled={initialTest12.date2===''?true : false}\n                                                >\n                                                    <option value={\"\"}></option>\n                                                    <option value=\"Yes\">Reactive</option>\n                                                    <option value=\"No\">Non Reactive</option>\n                                                    \n                                                </select>\n                                                {errors.result2 !==\"\" ? (\n                                                <span className={classes.error}>{errors.result2}</span>\n                                            ) : \"\" }\n                                            </FormGroup>\n                                        </div>\n                                        <div className=\"form-group  col-md-2\"></div>\n                                        {initialTest12.result2 ==='Yes' && (\n                                        <>\n                                        <h4>Confirmatory Test 2:</h4>\n                                        <div className=\"form-group mb-3 col-md-5\">\n                                            <FormGroup>\n                                            <Label for=\"\"> Date  </Label>\n                                            <Input\n                                                type=\"date\"\n                                                name=\"date2\"\n                                                id=\"date2\"\n                                                value={confirmatoryTest2.date2}\n                                                onChange={handleInputChangeConfirmatory2}\n                                                min={initialTest12.date2}\n                                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                                required\n                                            />\n                                           \n                                            </FormGroup>\n                                        </div>\n                                        <div className=\"form-group  col-md-5\">\n                                            <FormGroup>\n                                                <Label>Result </Label>\n                                                <select\n                                                    className=\"form-control\"\n                                                    name=\"result2\"\n                                                    id=\"result2\"\n                                                    value={confirmatoryTest2.result2}\n                                                    onChange={handleInputChangeConfirmatory2}\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                    disabled={confirmatoryTest2.date2===''?true : false}\n                                                >\n                                                    <option value={\"\"}></option>\n                                                    <option value=\"Yes\">Reactive</option>\n                                                    <option value=\"No\">Non Reactive</option>\n                                                    \n                                                </select>\n                                                \n                                            </FormGroup>\n                                        </div>\n                                        <div className=\"form-group  col-md-2\"></div>\n                                        </>\n                                        )}\n                                        {confirmatoryTest2.result2 ==='No' && (\n                                        <>\n                                        <h4>Tie Breaker Test 2:</h4>\n                                        <div className=\"form-group mb-3 col-md-5\">\n                                            <FormGroup>\n                                            <Label for=\"\"> Date  </Label>\n                                            <Input\n                                                type=\"date\"\n                                                name=\"date2\"\n                                                id=\"date2\"\n                                                value={tieBreakerTest2.date2}\n                                                onChange={handleInputChangeTie2}\n                                                min={confirmatoryTest2.date2}\n                                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                                required\n                                            />\n                                        \n                                            </FormGroup>\n                                        </div>\n                                        <div className=\"form-group  col-md-5\">\n                                            <FormGroup>\n                                                <Label>Result </Label>\n                                                <select\n                                                    className=\"form-control\"\n                                                    name=\"result2\"\n                                                    id=\"result2\"\n                                                    value={tieBreakerTest2.result2}\n                                                    onChange={handleInputChangeTie2}\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                    disabled={tieBreakerTest2.date2===''?true : false}\n                                                >\n                                                    <option value={\"\"}></option>\n                                                    <option value=\"Yes\">Reactive</option>\n                                                    <option value=\"No\">Non Reactive</option>\n                                                    \n                                                </select>\n                                                \n                                            </FormGroup>\n                                        </div>\n                                        <div className=\"form-group  col-md-2\"></div>\n            \n                                        </>)}\n                                    </div>\n                                    </>\n                                )}\n                                {(confirmatoryTest.result==='No' && tieBreakerTest.result==='No' && (initialTest1.result==='Yes' || initialTest1.result==='Yes' || initialTest1.result==='')) && (\n                                    <LabelRibbon color=\"green\" >\n                                        Negative\n                                    </LabelRibbon>\n                                )}\n                                 {/* END of  result for Test 1 */}\n                                {/* This is result for Test 2 */}\n                                {initialTest12.result2 && initialTest12.result2==='No' &&  (\n                                    <LabelRibbon color=\"green\" >\n                                        Negative\n                                    </LabelRibbon>\n                                )} \n                                {initialTest12.result2==='No' && confirmatoryTest2.result2==='No'  && (\n                                    <LabelRibbon color=\"green\" >\n                                        Negative\n                                    </LabelRibbon>\n                                )}\n                                \n                                {(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='Yes' ) && (\n                                    <>\n                                    <LabelRibbon color=\"red\" >\n                                        Positive\n                                    </LabelRibbon>\n                                    <br/>\n                                    </>\n                                )}\n                                {/* {(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='No' && tieBreakerTest2.result2==='' ) && (\n                                    <LabelRibbon color=\"green\" >\n                                        Negative\n                                    </LabelRibbon>\n                                )} */}\n                                {(confirmatoryTest2.result2==='No' && tieBreakerTest2.result2==='Yes' ) && (\n                                    <LabelRibbon color=\"red\" >\n                                        Positive\n                                    </LabelRibbon>\n                                )}\n                                {(confirmatoryTest2.result2==='No' && tieBreakerTest2.result2==='No' && (initialTest12.result2==='Yes' || initialTest12.result2==='Yes' || initialTest12.result2==='')) && (\n                                    <LabelRibbon color=\"green\" >\n                                        Negative\n                                    </LabelRibbon>\n                                )}\n                                \n                                 {/* END of  result for Test 2*/}\n                            </div>\n                            </div>\n                            {showCD4Count && (<>\n                            <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\n                                <h5 style={{color:'#fff'}}>CD4 Count</h5>\n                            </LabelRibbon>\n                            <br/> <br/>\n                            <div className=\"form-group  col-md-5\">\n                                <FormGroup>\n                                    <Label>CD4 Count </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"cd4Count\"\n                                        id=\"cd4Count\"\n                                        value={cd4Count.cd4Count}\n                                        onChange={handleInputChangeCd4Count}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Semi-Quantitative\">Semi-Quantitative</option>\n                                        <option value=\"Flow Cyteometry\">Flow Cyteometry</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            {cd4Count.cd4Count ==='Semi-Quantitative' && (\n                            <div className=\"form-group  col-md-5\">\n                                <FormGroup>\n                                    <Label>CD4 Count Value</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"cd4SemiQuantitative\"\n                                        id=\"cd4SemiQuantitative\"\n                                        value={cd4Count.cd4SemiQuantitative}\n                                        onChange={handleInputChangeCd4Count}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Semi-Quantitative\">{\"<200\"}</option>\n                                        <option value=\"Flow Cyteometry\">{\">=200\"}</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            )}\n                            {cd4Count.cd4Count ==='Flow Cyteometry' && (\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">CD4 Count Value</Label>\n                                <Input\n                                    type=\"text\"\n                                    name=\"cd4FlowCyteometry\"\n                                    id=\"cd4FlowCyteometry\"\n                                    value={cd4Count.cd4FlowCyteometry}\n                                    onChange={handleInputChangeCd4Count}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                    \n                                />\n                                 \n                                </FormGroup>\n                            </div>\n                            )}\n                            <div className=\"form-group  col-md-7\"></div>\n                           \n                            </>)}\n                            <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\n                            <h5 style={{color:'#fff'}}>Syphilis Testing</h5>\n                        </LabelRibbon>\n                        <br/> <br/>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Syphilis test result *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"syphilisTestResult\"\n                                        id=\"syphilisTestResult\"\n                                        value={syphills.syphilisTestResult}\n                                        onChange={handleInputChangeSyphills}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Yes\">Reactive</option>\n                                        <option value=\"No\">Non-Reactive</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n \n                            <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\n                            <h5 style={{color:'#fff'}}>Hepatitis Testing</h5>\n                            </LabelRibbon>\n                            <br/> <br/>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Hepatitis B virus test result *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hepatitisBTestResult\"\n                                        id=\"hepatitisBTestResult\"\n                                        value={hepatitis.hepatitisBTestResult}\n                                        onChange={handleInputChangeHepatitis}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Yes\">Positive</option>\n                                        <option value=\"No\">Negative</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Hepatitis C virus test result *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hepatitisCTestResult\"\n                                        id=\"hepatitisCTestResult\"\n                                        value={hepatitis.hepatitisCTestResult}\n                                        onChange={handleInputChangeHepatitis}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                       <option value={\"\"}></option>\n                                        <option value=\"Yes\">Positive</option>\n                                        <option value=\"No\">Negative</option>\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\n                            <h5 style={{color:'#fff'}}>Others</h5>\n                            </LabelRibbon>\n                            <br/> <br/>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Longitude</Label>\n                                <Input\n                                    type=\"number\"\n                                    name=\"longitude\"\n                                    id=\"longitude\"\n                                    value={others.longitude}\n                                    onChange={handleInputChangeOthers}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                   \n                                />\n                                \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Latitude</Label>\n                                <Input\n                                    type=\"number\"\n                                    name=\"latitude\"\n                                    id=\"latitude\"\n                                    value={others.latitude}\n                                    onChange={handleInputChangeOthers}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                   \n                                />\n                                \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Adhoc Code</Label>\n                                <Input\n                                    type=\"number\"\n                                    name=\"adhocCode\"\n                                    id=\"adhocCode\"\n                                    value={others.adhocCode}\n                                    onChange={handleInputChangeOthers}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                   \n                                />\n                                \n                                </FormGroup>\n                            </div>\n                            \n                            {saving ? <Spinner /> : \"\"}\n                            <br />\n                            <div className=\"row\">\n                            <div className=\"form-group mb-3 col-md-12\">\n                            {patientAge<=15 ? \n                            (<>\n                                <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('basic', 'basic')}/>\n                            </>)\n                            :\n                            (<>\n                                <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('pre-test-counsel', 'pre-test-counsel')}/>\n                            </>)\n                            }\n                            \n                            <Button content='Save & Continue' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\n                            </div>\n                            </div>\n                        </div>\n                    </form>\n                </CardBody>\n            </Card>                                 \n        </>\n    );\n};\n\nexport default HivTestResult","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\BasicInfo.js",["396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414"],"\nimport React, { useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport MatButton from \"@material-ui/core/Button\";\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\nimport * as moment from 'moment';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card, CardContent} from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\n// import AddIcon from \"@material-ui/icons/Add\";\n// import CancelIcon from \"@material-ui/icons/Cancel\";\nimport {ToastContainer, toast} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport {token, url as baseUrl } from \"../../../api\";\nimport 'react-phone-input-2/lib/style.css'\nimport { Button} from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport PhoneInput from 'react-phone-input-2'\nimport 'react-phone-input-2/lib/style.css'\nimport {  Modal } from \"react-bootstrap\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        },\n        \"& .card-title\":{\n            color:'#fff',\n            fontWeight:'bold'\n        },\n        \"& .form-control\":{\n            borderRadius:'0.25rem',\n            height:'41px'\n        },\n        \"& .card-header:first-child\": {\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\n        },\n        \"& .dropdown-toggle::after\": {\n            display: \" block !important\"\n        },\n        \"& select\":{\n            \"-webkit-appearance\": \"listbox !important\"\n        },\n        \"& p\":{\n            color:'red'\n        },\n        \"& label\":{\n            fontSize:'14px',\n            color:'#014d88',\n            fontWeight:'bold'\n        }\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    },\n    success:{\n        color: 'green',\n        fontSize: '12.8px',\n        fontWeight:'bold'\n    }\n}));\n\n\nconst BasicInfo = (props) => {\n    console.log(props)\n    const classes = useStyles();\n    const history = useHistory();\n    const [errors, setErrors] = useState({});\n    const [saving, setSaving] = useState(false);\n    const [hideNumChild, setHideNumChild] = useState(false);\n    const [kP, setKP] = useState([]);\n    const [enrollSetting, setEnrollSetting] = useState([]);\n    const [sourceReferral, setSourceReferral] = useState([]);\n    const [gender, setGender] = useState([])\n    const [counselingType, setCounselingType] = useState([]);\n    const [pregnancyStatus, setPregnancyStatus] = useState([]);\n    const [indexTesting, setIndexTesting]= useState([]);\n    let temp = { ...errors }\n    const [clientCodeetail, setclientCodeetail]= useState(\"\");\n    const [clientCodeetail2, setclientCodeetail2]= useState(\"\");\n    const [clientCodeCheck, setClientCodeCheck]= useState(\"\");\n\n    const [objValues, setObjValues]= useState(\n        {\n            active: true,\n            personId: props.patientObj.personId,\n            clientCode: props.patientObj && props.patientObj.clientCode ? props.patientObj.clientCode :\"\",  \n            breastFeeding:props.patientObj && props.patientObj.breastFeeding ? props.patientObj.breastFeeding :\"\",\n            dateVisit: props.patientObj && props.patientObj.dateVisit ? props.patientObj.dateVisit :\"\",\n            firstTimeVisit: props.patientObj && props.patientObj.firstTimeVisit ? props.patientObj.firstTimeVisit :\"\",\n            indexClient: props.patientObj && props.patientObj.indexClient ? props.patientObj.indexClient :\"\",\n            numChildren: props.patientObj && props.patientObj.numChildren ? props.patientObj.numChildren :\"\",\n            numWives: props.patientObj && props.patientObj.numWives ? props.patientObj.numWives :\"\",\n            pregnant:props.patientObj && props.patientObj.pregnant ? props.patientObj.pregnant :\"\",           \n            previouslyTested: props.patientObj ? props.patientObj.previouslyTested :\"\",\n            referredFrom: props.patientObj ? props.patientObj.referredFrom :\"\",\n            riskAssessment:  props.patientObj && props.patientObj.riskAssessment? props.patientObj.riskAssessment : {},\n            riskStratificationCode:props.extra && props.extra.code!=='' ? props.extra.code : \"\",\n            targetGroup: props.patientObj && props.patientObj.targetGroup? props.patientObj.targetGroup :\"\",\n            testingSetting:props.patientObj ? props.patientObj.testingSetting :\"\",\n            typeCounseling: props.patientObj ? props.patientObj.typeCounseling :\"\",\n            relationshipWithIndexClient:props.patientObj ? props.patientObj.relationshipWithIndexClient :\"\",\n            indexClientCode:props.patientObj ? props.patientObj.indexClientCode :\"\",\n        }\n    )    \n    useEffect(() => { \n        KP(); \n        EnrollmentSetting(); \n        SourceReferral();\n        Genders();\n        CounselingType();\n        PregnancyStatus()\n        IndexTesting();\n    }, [ props.patientObj]);\n    //Get list of KP\n    const KP =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setKP(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    //Get list of IndexTesting\n    const IndexTesting =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/INDEX_TESTING`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setIndexTesting(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    //Get list of KP\n    const PregnancyStatus =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setPregnancyStatus(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    \n    //Get list of KP\n    const CounselingType =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/COUNSELING_TYPE`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setCounselingType(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    //Get list of HIV STATUS ENROLLMENT\n    const EnrollmentSetting =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/TEST_SETTING`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            //console.log(response.data);\n            setEnrollSetting(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n\n    //Get list of Source of Referral\n    const SourceReferral =()=>{\n            axios\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                //console.log(response.data);\n                setSourceReferral(response.data);\n            })\n            .catch((error) => {\n            //console.log(error);\n            });        \n    }\n    //Get list of Genders from \n    const Genders =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/GENDER`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            //console.log(response.data);\n            setGender(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });        \n    }\n    const handleInputChange = e => { \n        setErrors({...temp, [e.target.name]:\"\"}) \n        if(e.target.name==='indexClientCode' && e.target.value!==''){\n            async function getIndexClientCode() {\n                const indexClientCode=e.target.value\n                const response = await axios.get(`${baseUrl}hts/client/${indexClientCode}`,\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\n                    );\n                if(response.data!=='Record Not Found'){\n                    setclientCodeetail2(\"\")\n                    setclientCodeetail(response.data)\n                    \n                }else{\n                    setclientCodeetail(\"\")\n                    setclientCodeetail2(response.data)\n                }\n            }\n            getIndexClientCode();\n        }         \n        setObjValues ({...objValues,  [e.target.name]: e.target.value});            \n    }\n\n    /*****  Validation  */\n    const validate = () => {\n        //HTS FORM VALIDATION\n        \n           temp.clientCode = objValues.clientCode ? \"\" : \"This field is required.\"\n            temp.typeCounseling = objValues.typeCounseling ? \"\" : \"This field is required.\"\n            temp.testingSetting = objValues.testingSetting ? \"\" : \"This field is required.\"\n            temp.targetGroup = objValues.targetGroup ? \"\" : \"This field is required.\"\n            temp.referredFrom = objValues.referredFrom ? \"\" : \"This field is required.\"\n            temp.previouslyTested = objValues.previouslyTested ? \"\" : \"This field is required.\" \n            temp.indexClient = objValues.indexClient ? \"\" : \"This field is required.\"  \n            temp.firstTimeVisit = objValues.firstTimeVisit ? \"\" : \"This field is required.\" \n            temp.dateVisit = objValues.dateVisit ? \"\" : \"This field is required.\"               \n                setErrors({ ...temp })\n        return Object.values(temp).every(x => x == \"\")\n    }\n    const handleItemClick =(page, completedMenu)=>{\n        props.handleItemClick(page)\n        if(props.completed.includes(completedMenu)) {\n\n        }else{\n            props.setCompleted([...props.completed, completedMenu])\n        }\n    }\n    //checkClientCode\n    const checkClientCode = e => { \n\n        async function getIndexClientCode() {\n            const indexClientCode=objValues.clientCode\n            const response = await axios.get(`${baseUrl}hts/client/${indexClientCode}`,\n                    { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\n                );\n            if(response.data!=='Record Not Found'){\n                setClientCodeCheck(\"Client code already exist\")\n            }else{\n                setClientCodeCheck(\"\")\n            }\n        }\n        getIndexClientCode();\n                          \n    }\n    const handleSubmit =(e)=>{\n        e.preventDefault();\n        const patientForm ={\n            clientCode: objValues.clientCode,\n            dateVisit: objValues.dateVisit,\n            extra: {},\n            firstTimeVisit: objValues.firstTimeVisit,\n            indexClient: objValues.indexClient,\n            numChildren: objValues.numChildren,\n            numWives: objValues.numWives,\n            personId: props.patientObj.personId,\n            hospitalNumber:objValues.clientCode,\n            previouslyTested: objValues.previouslyTested,\n            referredFrom: objValues.referredFrom,\n            targetGroup: objValues.targetGroup,\n            testingSetting: objValues.testingSetting,\n            typeCounseling:objValues.typeCounseling,\n            breastFeeding:objValues.breastFeeding,\n            pregnant:objValues.pregnant,\n            relationshipWithIndexClient:objValues.relationshipWithIndexClient,\n            riskStratificationCode:props.extra && props.extra.code!=='' ? props.extra.code : \"\",\n            }\n\n            if(validate()){\n            axios.post(`${baseUrl}hts`,patientForm,\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\n            \n            )\n            .then(response => {\n                setSaving(false);\n                props.setPatientObj(response.data)\n                //toast.success(\"HTS Test successful\");\n                if(props.patientAge>15){\n                    handleItemClick('pre-test-counsel', 'basic' )\n                }else{\n                    handleItemClick('hiv-test', 'baisc')\n                }\n\n            })\n            .catch(error => {\n                setSaving(false);\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\n                }\n                else{\n                    toast.error(\"Something went wrong. Please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\n                }\n            });\n            }else{\n                toast.error(\"All fields are required\",  {position: toast.POSITION.BOTTOM_CENTER});\n            }\n    }\n\n\n    return (\n        <>  \n        \n            <Card className={classes.root}>\n                <CardBody>   \n                <h2 style={{color:'#000'}}>CLIENT INTAKE FORM </h2>\n                <br/>\n                    <form >\n                        <div className=\"row\">\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Target Group *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"targetGroup\"\n                                        id=\"targetGroup\"\n                                        onChange={handleInputChange}\n                                        value={objValues.targetGroup}\n                                        disabled\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        {kP.map((value) => (\n                                            <option key={value.id} value={value.code}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                    </select>\n                                    {errors.targetGroup !==\"\" ? (\n                                        <span className={classes.error}>{errors.targetGroup}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Client Code *</Label>\n                                <Input\n                                    type=\"text\"\n                                    name=\"clientCode\"\n                                    id=\"clientCode\"\n                                    value={objValues.clientCode}\n                                    onChange={handleInputChange}\n                                    //disabled={props.clientCode!==\"\" && props.clientCode!==null? true : false}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                   \n                                />\n                                {errors.clientCode !==\"\" ? (\n                                    <span className={classes.error}>{errors.clientCode}</span>\n                                ) : \"\" }                                \n                                </FormGroup>\n                            </div>                           \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Referred From *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"referredFrom\"\n                                        id=\"referredFrom\"\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        {sourceReferral.map((value) => (\n                                            <option key={value.id} value={value.id}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                    </select>\n                                    {errors.referredFrom !==\"\" ? (\n                                        <span className={classes.error}>{errors.referredFrom}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Setting*</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"testingSetting\"\n                                        id=\"testingSetting\"\n                                        value={objValues.testingSetting}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        {enrollSetting.map((value) => (\n                                            <option key={value.id} value={value.code}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                    </select>\n                                    {errors.testingSetting !==\"\" ? (\n                                        <span className={classes.error}>{errors.testingSetting}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Visit Date  </Label>\n                                <Input\n                                    type=\"date\"\n                                    name=\"dateVisit\"\n                                    id=\"dateVisit\"\n                                    value={objValues.dateVisit}\n                                    onChange={handleInputChange}\n                                    min={objValues.dateOfRegistration}\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                    \n                                />\n                                {errors.dateVisit !==\"\" ? (\n                                    <span className={classes.error}>{errors.dateVisit}</span>\n                                ) : \"\" }\n                                </FormGroup>\n                            </div>\n\n                            {/* {(objValues.targetGroup!=='457' && objValues.targetGroup!==\"\") && (\n                            <div className=\"form-group  col-md-4\">\n                            <FormGroup>\n                                <Label>Gender</Label>\n                                <select\n                                    className=\"form-control\"\n                                    name=\"genderId\"\n                                    id=\"genderId\"\n                                    value={objValues.genderId}\n                                    onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                >\n                                    <option value={\"\"}></option>\n                                    {gender.map((value) => (\n                                        <option key={value.id} value={value.id}>\n                                            {value.display}\n                                        </option>\n                                    ))}\n                                </select>\n                               \n                            </FormGroup>\n                            </div>\n                            )} */}\n\n                            {(objValues.age>9 ) && (\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Number of Children {'<5'} years</Label>\n                                    <Input\n                                        type=\"number\"\n                                        name=\"numChildren\"\n                                        id=\"numChildren\"\n                                        min={0}\n                                        value={objValues.numChildren}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                   \n                                    /> \n                                     \n                                </FormGroup>\n                            </div>\n                            )}\n                            {(objValues.age > 9 && objValues.sexId=='376') && (\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Number of wives/co-wives</Label>\n                                    <Input\n                                        type=\"number\"\n                                        name=\"numWives\"\n                                        id=\"numWives\"\n                                        min={0}\n                                        value={objValues.numWives}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                   \n                                    />\n                                    \n                                </FormGroup>\n                            </div>\n                            )}\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Index Testing</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"indexClient\"\n                                        id=\"indexClient\"\n                                        value={objValues.indexClient}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">YES</option>\n                                        <option value=\"false\">NO</option>\n                                    </select>\n                                    {errors.indexClient !==\"\" ? (\n                                        <span className={classes.error}>{errors.indexClient}</span>\n                                    ) : \"\" }   \n                                </FormGroup>\n                            </div>\n                            {objValues.indexClient==='true' && (\n                            <>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Relationship of the index client</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"relationshipWithIndexClient\"\n                                        id=\"relationshipWithIndexClient\"\n                                        value={objValues.relationshipWithIndexClient}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        {indexTesting.map((value) => (\n                                            <option key={value.id} value={value.id}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                             <div className=\"form-group  col-md-4\">\n                             <FormGroup>\n                                 <Label>Index Client Code/ID</Label>\n                                 <Input\n                                     type=\"text\"\n                                     name=\"indexClientCode\"\n                                     id=\"indexClientCode\"\n                                     value={objValues.indexClientCode}\n                                     onBlur ={checkClientCode}\n                                     onChange={handleInputChange}\n                                     style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                \n                                 />\n                                 {clientCodeCheck!==\"\" ? (\n                                <span className={classes.error}>{clientCodeCheck}</span>\n                            ) : \"\" }  \n                             </FormGroup>\n                            </div>\n                            </>\n                            )}\n                            {objValues.sex==='377' && (\n                            <>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Pregnant</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"pregnant\"\n                                        id=\"pregnant\"\n                                        value={objValues.pregnant}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        {pregnancyStatus.map((value) => (\n                                            <option key={value.id} value={value.id}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Breast Feeding</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"breastFeeding\"\n                                        id=\"breastFeeding\"\n                                        value={objValues.breastFeeding}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">YES</option>\n                                        <option value=\"false\">NO</option>\n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            </>\n                            )}\n                           \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>First time visit</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"firstTimeVisit\"\n                                        id=\"firstTimeVisit\"\n                                        value={objValues.firstTimeVisit}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">YES</option>\n                                        <option value=\"false\">NO</option>\n                                        \n                                    </select>\n                                    {errors.firstTimeVisit !==\"\" ? (\n                                        <span className={classes.error}>{errors.firstTimeVisit}</span>\n                                    ) : \"\" }    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Previously tested within the last 3 months</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"previouslyTested\"\n                                        id=\"previouslyTested\"\n                                        value={objValues.previouslyTested}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">YES</option>\n                                        <option value=\"false\">NO</option>\n                                    </select>\n                                    {errors.previouslyTested !==\"\" ? (\n                                        <span className={classes.error}>{errors.previouslyTested}</span>\n                                    ) : \"\" }    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Type of Counseling</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"typeCounseling\"\n                                        id=\"typeCounseling\"\n                                        value={objValues.typeCounseling}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        {counselingType.map((value) => (\n                                            <option key={value.id} value={value.id}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                        \n                                    </select>\n                                    {errors.typeCounseling !==\"\" ? (\n                                        <span className={classes.error}>{errors.typeCounseling}</span>\n                                    ) : \"\" }   \n                                </FormGroup>\n                            </div>\n                            \n                            <br />\n                            <div className=\"row\">\n                            <div className=\"form-group mb-3 col-md-6\">\n\n                            <Button content='Save & Continue' type=\"submit\" icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\n                            </div>\n                            </div>\n                        </div>\n                    </form>\n                </CardBody>\n            </Card>\n                                  \n        </>\n    );\n};\n\nexport default BasicInfo","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\Elicitation\\Index.js",["415","416","417","418","419"],"import React, {useState, Fragment } from \"react\";\n\nimport { Row, Col, Card, } from \"react-bootstrap\";\nimport AddIndexContact from './AddIndexContact';\nimport IndexContactList from './IndexContactList'\nimport { FaUserPlus } from \"react-icons/fa\";\nimport { Link } from 'react-router-dom';\n//import Button from '@material-ui/core/Button';\nimport {Label as LabelRibbon, Button} from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css';\n\n\nconst Elicitation = (props) => {\n    //console.log(props.patientObj)\n    const [activePage, setActivePage]= useState('list')\n    const handleIClickPage =(activeItem)=>{\n        setActivePage(activeItem)\n    }\n    const handleItemClick =(page, completedMenu)=>{\n        props.handleItemClick(page)\n        if(props.completed.includes(completedMenu)) {\n\n        }else{\n            props.setCompleted([...props.completed, completedMenu])\n        }\n    }\n    const handleDone=()=>{\n      props.setActivePage({...props.activePage, activePage:\"recent-history\",})\n    }\n\n  return (\n    <Fragment>  \n     \n      <Row>       \n        <Col md={12}>\n            {activePage==='list' &&\n                (\n                    <IndexContactList activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>\n                )\n            }\n            {activePage==='add' && (\n                  <AddIndexContact activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>        \n            )}\n            <br />\n                <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-6\">\n                <Button content='Done' icon='list' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleDone()}/>\n                \n                </div>\n                </div>\n        </Col>\n        \n      </Row>\n    </Fragment>\n  );\n};\n\nexport default Elicitation;\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\Elicitation\\IndexContactList.js",["420","421","422","423","424","425","426","427"],"import React, { useEffect, useState } from 'react'\nimport MaterialTable from 'material-table';\nimport axios from \"axios\";\nimport { url as baseUrl, token } from \"./../../../../api\";\n//import { token as token } from \"./../../../api\";\nimport { forwardRef } from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport { makeStyles } from '@material-ui/core/styles'\n//import { useHistory } from \"react-router-dom\";\nimport { FaUserPlus } from \"react-icons/fa\";\nimport \"@reach/menu-button/styles.css\";\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\nimport moment from \"moment\";\n\nconst tableIcons = {\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        }\n    },\n    input: {\n        display: 'none'\n    },\n    error: {\n        color: \"#f85032\",\n        fontSize: \"11px\",\n    },\n    success: {\n        color: \"#4BB543 \",\n        fontSize: \"11px\",\n    }, \n}))\n\n\n\nconst PatientnHistory = (props) => {\n\n    const [indexClientList, setIndexClientList] = useState([])\n    //const [patientObj, setpatientObj] = useState([])\n    const patientId = props.patientObj && props.patientObj.id ? props.patientObj.id: null\n    //const [key, setKey] = useState('home');\n    //console.log(props)\n    useEffect(() => {\n        patients()\n      }, []);\n    ///GET LIST OF Patients\n    async function patients() {\n        axios\n            .get(`${baseUrl}hts/${props.patientObj.id}/index-elicitation`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                console.log(response.data)\n                setIndexClientList(response.data);\n            })\n            .catch((error) => {    \n            });        \n    }\n    const handleItemClickPage =(page)=>{\n        props.handleIClickPage(page)\n    }\n    const handleIEditIndex =(page, activePage)=> {\n        console.log(page)\n        console.log(activePage)\n        //props.setActivePage({...props.activePage, activePage:\"activePage\", activeObject:row, actionType:actionType})\n        //props.handleIClickPage(page)\n    }\n\n    const calculate_age = dob => {\n        var today = new Date();\n        var dateParts = dob.split(\"-\");\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\n        var age_now = today.getFullYear() - birthDate.getFullYear();\n        var m = today.getMonth() - birthDate.getMonth();\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n                    age_now--;\n                }\n            if (age_now === 0) {\n                    return m + \" month(s)\";\n                }\n                return age_now + \" year(s)\";\n      };\n\n\n  return (\n    <div>     \n        <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className=\" float-end  mr-2 mt-2\"\n            onClick={()=>handleItemClickPage('add')}\n            //startIcon={<FaUserPlus size=\"10\"/>}\n        >\n            <span style={{ textTransform: \"capitalize\" }}>New Index Client </span>\n        </Button>\n        <br/><br/><br/><br/>\n            <MaterialTable\n            icons={tableIcons}\n              title=\"List of index client \"\n              columns={[\n              { title: \"Name\", field: \"name\" },\n              { title: \"Age\", field: \"age\" },\n              { title: \"Phone Number\", field: \"phone\" },  \n              {title: \"Adress\",field: \"address\",},   \n              { title: \"Actions\", field: \"actions\", filtering: false }, \n              ]}\n              data={ indexClientList.map((row) => ({\n                name: row.firstName + \" \" + row.lastName,\n                age:calculate_age(moment(row.dob).format(\"DD-MM-YYYY\")),\n                phone:row.phoneNumber, \n                address:row.address,  \n                actions:(\n                        <>\n                        {/* <Menu.Menu position='right'  >\n                            <Menu.Item >\n                                <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\n                                <Dropdown item text='Action'>\n\n                                <Dropdown.Menu style={{ marginTop:\"10px\", }}>\n                                \n                                <Dropdown.Item  \n                                //onClick={()=>handleIEditIndex(row, 'update')}\n                                >\n                                    <Icon name='edit' />Edit</Dropdown.Item>\n                                <Dropdown.Item  \n                                //onClick={()=>LoadDeletePage(row, 'delete')}\n                                > <Icon name='trash' /> Delete</Dropdown.Item>\n                                </Dropdown.Menu>\n                            </Dropdown>\n                                </Button>\n                            </Menu.Item>\n                        </Menu.Menu> */}\n                        </>\n                        )\n                    }))}\n            \n                        options={{\n                          headerStyle: {\n                              //backgroundColor: \"#9F9FA5\",\n                              color: \"#000\",\n                          },\n                          searchFieldStyle: {\n                              width : '200%',\n                              margingLeft: '250px',\n                          },\n                          filtering: false,\n                          exportButton: false,\n                          searchFieldAlignment: 'left',\n                          pageSizeOptions:[10,20,100],\n                          pageSize:10,\n                          debounceInterval: 400\n                      }}\n            />\n\n    </div>\n  );\n}\n\nexport default PatientnHistory;\n\n\n","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PMTCTHTSEnrollment\\Elicitation\\AddIndexContact.js",["428","429","430","431","432","433","434","435","436","437"],"import React, {useCallback, useEffect, useState} from \"react\";\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\nimport * as moment from 'moment';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card, CardContent} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport {token, url as baseUrl } from \"../../../../api\";\nimport { toast} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\n// import {token, url as baseUrl } from \"../../../api\";\nimport 'react-phone-input-2/lib/style.css'\nimport {Button} from 'semantic-ui-react'\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport PhoneInput from 'react-phone-input-2'\nimport 'react-phone-input-2/lib/style.css'\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        },\n        \"& .card-title\":{\n            color:'#fff',\n            fontWeight:'bold'\n        },\n        \"& .form-control\":{\n            borderRadius:'0.25rem',\n            height:'41px'\n        },\n        \"& .card-header:first-child\": {\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\n        },\n        \"& .dropdown-toggle::after\": {\n            display: \" block !important\"\n        },\n        \"& select\":{\n            \"-webkit-appearance\": \"listbox !important\"\n        },\n        \"& p\":{\n            color:'red'\n        },\n        \"& label\":{\n            fontSize:'14px',\n            color:'#014d88',\n            fontWeight:'bold'\n        }\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    }\n}));\n\n\nconst AddIndexContact = (props) => {\n    const classes = useStyles();\n    const [saving, setSaving] = useState(false);\n    const [errors, setErrors] = useState({});\n    const [sexs, setSexs] = useState([])\n    const [notificationContact, setNotificationContact] = useState([])\n    const [ageDisabled, setAgeDisabled] = useState(true);\n    const [indexTesting, setIndexTesting]= useState([]);\n    const [consent, setConsent]= useState([]);\n    const [hivTestDate, setHivTestDate] = useState(\"\");\n   \n    const [objValuesIndex, setObjValuesIndex]= useState( {\n        htsClientId: null,\n        indexNotificationServicesElicitation: {},\n        personId: null\n      })\n   \n    const [objValues, setObjValues]= useState(\n        {\n            firstName: \"\",\n            middleName: \"\",\n            lastName:\"\",\n            dob:\"\",\n            phoneNumber:\"\",\n            altPhoneNumber: \"\",\n            sex: \"\",\n            htsClientId:props  && props.patientObj ? props.patientObj.id : \"\",\n            physicalHurt: \"\",\n            threatenToHurt: \"\",\n            address: \"\", \n            hangOutSpots: \"\",\n            relativeToIndexClient: \"\",\n            currentlyLiveWithPartner: \"\", \n            partnerTestedPositive: \"\",\n            sexuallyUncomfortable: \"\", \n            notificationMethod : \"\",\n            datePartnerCameForTesting: \"\",\n        }\n    )\n           \n    useEffect(() => { \n        Sex();\n        NotificationContact();\n        IndexTesting();\n        Consent();\n        if(props.patientObj){\n\n            if(props.patientObj.dateVisit && props.patientObj.dateVisit!=='' ){\n                setHivTestDate(props.patientObj.dateVisit)\n            }else{\n                setHivTestDate(\"\")\n            }\n        }\n    }, [props.patientObj]);\n\n    //Get list of Genders from \n    const Sex =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/SEX`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            //console.log(response.data);\n            setSexs(response.data);\n\n        })\n        .catch((error) => {\n        //console.log(error);\n        });        \n    }\n    //Get list of IndexTesting\n    const IndexTesting =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/INDEX_TESTING`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setIndexTesting(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    ///CONSENT\tYes\t\ten\tCONSENT\n    const Consent =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/CONSENT`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setConsent(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    const NotificationContact =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/NOTIFICATION_CONTACT`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            //console.log(response.data);\n            setNotificationContact(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });        \n    }\n    const handleItemClick =(page, completedMenu)=>{\n        props.handleItemClick(page)\n        if(props.completed.includes(completedMenu)) {\n\n        }else{\n            props.setCompleted([...props.completed, completedMenu])\n        }\n        \n    }\n    const handleItemClickPage =(page)=>{\n        props.handleIClickPage(page)\n    }\n    const handleInputChange = e => { \n        //setErrors({...temp, [e.target.name]:\"\"})\n        if(e.target.name==='firstName' && e.target.value!==''){\n            const name = alphabetOnly(e.target.value)\n            setObjValues ({...objValues,  [e.target.name]: name});\n        }\n        if(e.target.name==='lastName' && e.target.value!==''){\n            const name = alphabetOnly(e.target.value)\n            setObjValues ({...objValues,  [e.target.name]: name});\n        }\n        if(e.target.name==='middleName' && e.target.value!==''){\n            const name = alphabetOnly(e.target.value)\n            setObjValues ({...objValues,  [e.target.name]: name});\n        } \n        // if((e.target.name !=='maritalStatusId' && e.target.value!=='5' )){//logic for marital status\n        //     setHideNumChild(true)\n        // }else{\n        //     setHideNumChild(false)\n        // }         \n        setObjValues ({...objValues,  [e.target.name]: e.target.value});            \n    }\n    //Date of Birth and Age handle \n    const handleDobChange = (e) => {\n        if (e.target.value) {\n            const today = new Date();\n            const birthDate = new Date(e.target.value);\n            let age_now = today.getFullYear() - birthDate.getFullYear();\n            const m = today.getMonth() - birthDate.getMonth();\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n                age_now--;\n            }\n            objValues.age=age_now\n            \n            //setBasicInfo({...basicInfo, age: age_now});        \n        } else {\n            setObjValues({...objValues, age:  \"\"});\n        }\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\n   \n        setObjValues({...objValues, dob: e.target.value});\n        \n    }\n    const handleDateOfBirthChange = (e) => {\n        if (e.target.value == \"Actual\") {\n            objValues.isDateOfBirthEstimated=false\n            setAgeDisabled(true);\n        } else if (e.target.value == \"Estimated\") {\n            objValues.isDateOfBirthEstimated=true\n            setAgeDisabled(false);\n        }\n    }\n    const handleAgeChange = (e) => {\n        if (!ageDisabled && e.target.value) {\n            const currentDate = new Date();\n            currentDate.setDate(15);\n            currentDate.setMonth(5);\n            const estDob = moment(currentDate.toISOString());\n            const dobNew = estDob.add((e.target.value * -1), 'years');\n            setObjValues({...objValues, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\n            objValues.dob =moment(dobNew).format(\"YYYY-MM-DD\")\n\n        }\n        setObjValues({...objValues, age: e.target.value});\n    }\n    //End of Date of Birth and Age handling \n    const checkPhoneNumberBasic=(e, inputName)=>{\n        const limit = 10;\n        setObjValues({...objValues,  [inputName]: e.slice(0, limit)});     \n    }\n    const alphabetOnly=(value)=>{\n        const result = value.replace(/[^a-z]/gi, '');\n        return result\n    }\n    const handleSubmit =(e)=>{\n        e.preventDefault();     \n        objValues.isDateOfBirthEstimated=objValues.isDateOfBirthEstimated==true ? 1 : 0\n            axios.post(`${baseUrl}index-elicitation`,objValues,\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\n            \n            )\n            .then(response => {\n                setSaving(false);\n                toast.success(\"Record save successful\",  {position: toast.POSITION.BOTTOM_CENTER});\n                handleItemClickPage('list')\n\n            })\n            .catch(error => {\n                setSaving(false);\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage,  {position: toast.POSITION.BOTTOM_CENTER});\n                }\n                else{\n                    toast.error(\"Something went wrong. Please try again...\",  {position: toast.POSITION.BOTTOM_CENTER});\n                }\n            });\n            \n    }\n\n    return (\n        <>\n            <Card className={classes.root}>\n                <CardBody>\n                \n                <h2 style={{color:'#000'}}>Index Notification Services - Elicitation \n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className=\" float-end  mr-2 mt-2\"\n                    onClick={()=>handleItemClickPage('list')}\n                    //startIcon={<FaUserPlus size=\"10\"/>}\n                >\n                    <span style={{ textTransform: \"capitalize\" }}> Back To Client Index List</span>\n                </Button>\n                </h2>\n                <br/><br/>    \n                    <form >\n                        <div className=\"row\">\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">First Name</Label>\n                                <Input\n                                    type=\"text\"\n                                    name=\"firstName\"\n                                    id=\"firstName\"\n                                    value={objValues.firstName}\n                                    onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                   \n                                />\n                                \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Middle Name</Label>\n                                <Input\n                                    type=\"text\"\n                                    name=\"middleName\"\n                                    id=\"middleName\"\n                                    value={objValues.middleName}\n                                    onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                    \n                                />\n                                \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Last Name</Label>\n                                <Input\n                                    type=\"text\"\n                                    name=\"lastName\"\n                                    id=\"lastName\"\n                                    value={objValues.lastName}\n                                    onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                   \n                                />\n                                \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-2 col-md-2\">\n                                <FormGroup>\n                                    <Label>Date Of Birth</Label>\n                                    <div className=\"radio\">\n                                        <label>\n                                            <input\n                                                type=\"radio\"\n                                                value=\"Actual\"\n                                                name=\"dateOfBirth\"\n                                                defaultChecked\n                                                \n                                                onChange={(e) => handleDateOfBirthChange(e)}\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                            /> Actual\n                                        </label>\n                                    </div>\n                                    <div className=\"radio\">\n                                        <label>\n                                            <input\n                                                type=\"radio\"\n                                                value=\"Estimated\"\n                                                name=\"dateOfBirth\"\n                                                \n                                                onChange={(e) => handleDateOfBirthChange(e)}\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                            /> Estimated\n                                        </label>\n                                    </div>\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-3\">\n                                <FormGroup>\n                                    <Label>Date</Label>\n                                    <input\n                                        className=\"form-control\"\n                                        type=\"date\"\n                                        name=\"dob\"\n                                        id=\"dob\"\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                        value={objValues.dob}\n                                        onChange={handleDobChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    />\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-3\">\n                                <FormGroup>\n                                    <Label>Age</Label>\n                                    <input\n                                        className=\"form-control\"\n                                        type=\"number\"\n                                        name=\"age\"\n                                        id=\"age\"\n                                        value={objValues.age}\n                                        disabled={ageDisabled}\n                                        onChange={handleAgeChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    />\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Phone Number</Label>\n                                \n                                    <PhoneInput\n                                        containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\n                                        inputStyle={{width:'100%',borderRadius:'0px'}}\n                                        country={'ng'}\n                                        placeholder=\"(234)7099999999\"\n                                        minLength={10}\n                                        name=\"phoneNumber\"\n                                        id=\"phoneNumber\"\n                                        masks={{ng: '...-...-....', at: '(....) ...-....'}}\n                                        value={objValues.phoneNumber}\n                                        onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\n                                        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\n                                    />\n                                    {errors.phoneNumber !==\"\" ? (\n                                        <span className={classes.error}>{errors.phoneNumber}</span>\n                                        ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            \n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Alternative Phone Number</Label>\n                                <PhoneInput\n                                        containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\n                                        inputStyle={{width:'100%',borderRadius:'0px'}}\n                                        country={'ng'}\n                                        placeholder=\"(234)7099999999\"\n                                        minLength={10}\n                                        name=\"altPhoneNumber\"\n                                        id=\"altPhoneNumber\"\n                                        masks={{ng: '...-...-....', at: '(....) ...-....'}}\n                                        value={objValues.altPhoneNumber}\n                                        onChange={(e)=>{checkPhoneNumberBasic(e,'altPhoneNumber')}}\n                                        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\n                                    />\n                                \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Sex *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"sex\"\n                                        id=\"sex\"\n                                        value={objValues.sex}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        {sexs.map((value) => (\n                                            <option key={value.id} value={value.id}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>                           \n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Address</Label>\n                                <Input\n                                    type=\"text\"\n                                    name=\"address\"\n                                    id=\"address\"\n                                    value={objValues.address}\n                                    onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}                                   \n                                />                                \n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">Hang-out spots</Label>\n                                <Input\n                                    type=\"text\"\n                                    name=\"hangOutSpots\"\n                                    id=\"hangOutSpots\"\n                                    value={objValues.hangOutSpots}\n                                    onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}                                   \n                                />                                \n                                </FormGroup>\n                            </div>\n\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Relationship to Index Client *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"relativeToIndexClient\"\n                                        id=\"relativeToIndexClient\"\n                                        value={objValues.relativeToIndexClient}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        {indexTesting.map((value) => (\n                                            <option key={value.id} value={value.id}>\n                                                {value.display}\n                                            </option>\n                                            ))}\n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Do you currently live with this partner? *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"currentlyLiveWithPartner\"\n                                        id=\"currentlyLiveWithPartner\"\n                                        value={objValues.currentlyLiveWithPartner}\n                                        onChange={handleInputChange}        \n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value={\"true\"}>Yes</option>\n                                        <option value={\"false\"}>No</option>\n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>As far as you know, as this partner ever tested positive for HIV *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"partnerTestedPositive\"\n                                        id=\"partnerTestedPositive\"\n                                        value={objValues.partnerTestedPositive}\n                                        onChange={handleInputChange} \n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        {consent.map((value) => (\n                                            <option key={value.id} value={value.id}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Has this partner ever hit, kick, slapped or otherwise physical hurt you? *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"physicalHurt\"\n                                        id=\"physicalHurt\"\n                                        value={objValues.physicalHurt}\n                                        onChange={handleInputChange} \n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                         <option value={\"\"}></option>\n                                        {consent.map((value) => (\n                                            <option key={value.id} value={value.id}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Has this partner ever threaten to hurt you? *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"threatenToHurt\"\n                                        id=\"threatenToHurt\"\n                                        value={objValues.threatenToHurt}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        {consent.map((value) => (\n                                            <option key={value.id} value={value.id}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n                           \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Has this partner ever threaten force you to do something sexually that made you uncomfortable ?  *</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"sexuallyUncomfortable\"\n                                        id=\"sexuallyUncomfortable\"\n                                        value={objValues.sexuallyUncomfortable}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                         <option value={\"\"}></option>\n                                        {consent.map((value) => (\n                                            <option key={value.id} value={value.id}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                    </select>\n                                    \n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Notification Method selected*</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"notificationMethod\"\n                                        id=\"notificationMethod\"\n                                        value={objValues.notificationMethod}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    >\n                                        <option value={\"\"}></option>\n                                        {notificationContact.map((value) => (\n                                            <option key={value.id} value={value.id}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                        \n                                    </select>\n                                    \n                                </FormGroup>\n                            </div>\n\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                <Label for=\"\">If contract by which date will partner come for testing?</Label>\n                                <Input\n                                    type=\"date\"\n                                    name=\"datePartnerCameForTesting\"\n                                    id=\"datePartnerCameForTesting\"\n                                    value={objValues.datePartnerCameForTesting}\n                                    onChange={handleInputChange}\n                                    min={hivTestDate}\n                                    //max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                    \n                                />\n                                {errors.datePartnerComeForTesting !==\"\" ? (\n                                    <span className={classes.error}>{errors.datePartnerComeForTesting}</span>\n                                ) : \"\" }\n                                </FormGroup>\n                            </div>\n                           \n                            {saving ? <Spinner /> : \"\"}\n                            <br />\n                            <div className=\"row\">\n                            <div className=\"form-group mb-3 col-md-6\">\n                           \n                            <Button content='Save' icon='save' labelPosition='left' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\n                            </div>\n                            </div>\n                        </div>\n                    </form>\n                </CardBody>\n            </Card>                                 \n        </>\n    );\n};\n\nexport default AddIndexContact","C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\PmtctServices\\PmtctEntryPoint\\index.js",["438","439","440","441","442","443","444","445","446","447"],"C:\\Users\\ganiyat.yakub\\lamisplus\\modules\\PMTCT-module-main\\src\\main\\webapp\\jsx\\components\\Patient\\PmtctPatients.js",["448"],"import React, { useState } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport axios from \"axios\";\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst PmtctPatients = (props) => {\r\n  const [showPPI, setShowPPI] = useState(true);\r\n  const handleCheckBox = (e) => {\r\n    if (e.target.checked) {\r\n      setShowPPI(false);\r\n    } else {\r\n      setShowPPI(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Find Patient \"\r\n        columns={[\r\n          // { title: \" ID\", field: \"Id\" },\r\n          {\r\n            title: \"Patient Name\",\r\n            field: \"name\",\r\n            hidden: showPPI,\r\n          },\r\n          {\r\n            title: \"Hospital Number\",\r\n            field: \"hospital_number\",\r\n            filtering: false,\r\n          },\r\n          { title: \"Sex\", field: \"gender\", filtering: false },\r\n          { title: \"Age\", field: \"age\", filtering: false },\r\n          //{ title: \"Enrollment Status\", field: \"v_status\", filtering: false },\r\n          //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n          // { title: \"ART Status\", field: \"status\", filtering: false },\r\n          { title: \"Actions\", field: \"actions\", filtering: false },\r\n        ]}\r\n        //isLoading={loading}\r\n        data={(query) =>\r\n          new Promise((resolve, reject) =>\r\n            axios\r\n              .get(\r\n                `${baseUrl}pmtct/anc/all-active-pmtct?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`,\r\n                { headers: { Authorization: `Bearer ${token}` } }\r\n              )\r\n              .then((response) => response)\r\n              .then((result) => {\r\n                console.log(\"general PMTCT PATIENT\", result);\r\n                resolve({\r\n                  data: result.data.records.map((row) => ({\r\n                    name: (\r\n                      <Link\r\n                        to={{\r\n                          pathname: \"/patient-history\",\r\n                          state: { patientObj: row },\r\n                        }}\r\n                        title={\"Click to view patient dashboard\"}\r\n                      >\r\n                        {\" \"}\r\n                        {row.surname ? row.surname : row.fullName}\r\n                      </Link>\r\n                    ),\r\n\r\n                    hospital_number: row.hospitalNumber,\r\n                    gender: row && row.sex ? row.sex : \"Female\",\r\n                    age: row.age,\r\n                    actions: (\r\n                      <div>\r\n                        <Link\r\n                          to={{\r\n                            pathname: \"/patient-history\",\r\n                            state: { patientObj: row },\r\n                          }}\r\n                        >\r\n                          <ButtonGroup\r\n                            variant=\"contained\"\r\n                            aria-label=\"split button\"\r\n                            style={{\r\n                              backgroundColor: \"rgb(153, 46, 98)\",\r\n                              height: \"30px\",\r\n                              width: \"215px\",\r\n                            }}\r\n                            size=\"large\"\r\n                          >\r\n                            <Button\r\n                              color=\"primary\"\r\n                              size=\"small\"\r\n                              aria-label=\"select merge strategy\"\r\n                              aria-haspopup=\"menu\"\r\n                              style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\r\n                            >\r\n                              <MdDashboard />\r\n                            </Button>\r\n                            <Button\r\n                              style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\r\n                            >\r\n                              <span\r\n                                style={{\r\n                                  fontSize: \"12px\",\r\n                                  color: \"#fff\",\r\n                                  fontWeight: \"bolder\",\r\n                                }}\r\n                              >\r\n                                Patient Dashboard\r\n                              </span>\r\n                            </Button>\r\n                          </ButtonGroup>\r\n                        </Link>\r\n                      </div>\r\n                    ),\r\n                  })),\r\n                  page: query.page,\r\n                  totalCount: result.data.totalRecords,\r\n                });\r\n              })\r\n          )\r\n        }\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: \"#014d88\",\r\n            color: \"#fff\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"200%\",\r\n            margingLeft: \"250px\",\r\n          },\r\n          filtering: false,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: 10,\r\n          debounceInterval: 400,\r\n        }}\r\n        components={{\r\n          Toolbar: (props) => (\r\n            <div>\r\n              <div className=\"form-check custom-checkbox  float-left mt-4 ml-3 \">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"form-check-input\"\r\n                  name=\"showPP!\"\r\n                  id=\"showPP\"\r\n                  value=\"showPP\"\r\n                  checked={showPPI === true ? false : true}\r\n                  onChange={handleCheckBox}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"basic_checkbox_1\">\r\n                  <b style={{ color: \"#014d88\", fontWeight: \"bold\" }}>\r\n                    SHOW PII\r\n                  </b>\r\n                </label>\r\n              </div>\r\n              <MTableToolbar {...props} />\r\n            </div>\r\n          ),\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PmtctPatients;\r\n",{"ruleId":"449","severity":1,"message":"450","line":4,"column":41,"nodeType":"451","messageId":"452","endLine":4,"endColumn":47},{"ruleId":"453","replacedBy":"454"},{"ruleId":"455","replacedBy":"456"},{"ruleId":"449","severity":1,"message":"457","line":4,"column":8,"nodeType":"451","messageId":"452","endLine":4,"endColumn":25},{"ruleId":"449","severity":1,"message":"458","line":6,"column":10,"nodeType":"451","messageId":"452","endLine":6,"endColumn":14},{"ruleId":"449","severity":1,"message":"459","line":31,"column":10,"nodeType":"451","messageId":"452","endLine":31,"endColumn":24},{"ruleId":"449","severity":1,"message":"460","line":159,"column":10,"nodeType":"451","messageId":"452","endLine":159,"endColumn":36},{"ruleId":"449","severity":1,"message":"461","line":176,"column":10,"nodeType":"451","messageId":"452","endLine":176,"endColumn":22},{"ruleId":"449","severity":1,"message":"462","line":197,"column":18,"nodeType":"451","messageId":"452","endLine":197,"endColumn":30},{"ruleId":"449","severity":1,"message":"463","line":209,"column":10,"nodeType":"451","messageId":"452","endLine":209,"endColumn":20},{"ruleId":"449","severity":1,"message":"464","line":211,"column":10,"nodeType":"451","messageId":"452","endLine":211,"endColumn":25},{"ruleId":"465","severity":1,"message":"466","line":241,"column":6,"nodeType":"467","endLine":241,"endColumn":36,"suggestions":"468"},{"ruleId":"469","severity":1,"message":"470","line":361,"column":24,"nodeType":"471","messageId":"472","endLine":361,"endColumn":26},{"ruleId":"469","severity":1,"message":"470","line":363,"column":31,"nodeType":"471","messageId":"472","endLine":363,"endColumn":33},{"ruleId":"469","severity":1,"message":"470","line":476,"column":47,"nodeType":"471","messageId":"472","endLine":476,"endColumn":49},{"ruleId":"469","severity":1,"message":"470","line":604,"column":47,"nodeType":"471","messageId":"472","endLine":604,"endColumn":49},{"ruleId":"449","severity":1,"message":"473","line":615,"column":13,"nodeType":"451","messageId":"452","endLine":615,"endColumn":27},{"ruleId":"474","severity":1,"message":"475","line":618,"column":26,"nodeType":"476","messageId":"477","endLine":618,"endColumn":28},{"ruleId":"469","severity":1,"message":"470","line":675,"column":37,"nodeType":"471","messageId":"472","endLine":675,"endColumn":39},{"ruleId":"469","severity":1,"message":"470","line":791,"column":37,"nodeType":"471","messageId":"472","endLine":791,"endColumn":39},{"ruleId":"478","severity":1,"message":"479","line":996,"column":36,"nodeType":"480","messageId":"481","endLine":996,"endColumn":62,"fix":"482"},{"ruleId":"478","severity":1,"message":"483","line":997,"column":36,"nodeType":"480","messageId":"481","endLine":997,"endColumn":69,"fix":"484"},{"ruleId":"478","severity":1,"message":"485","line":998,"column":36,"nodeType":"480","messageId":"481","endLine":998,"endColumn":59,"fix":"486"},{"ruleId":"478","severity":1,"message":"485","line":1009,"column":36,"nodeType":"480","messageId":"481","endLine":1009,"endColumn":59,"fix":"487"},{"ruleId":"478","severity":1,"message":"483","line":1010,"column":36,"nodeType":"480","messageId":"481","endLine":1010,"endColumn":69,"fix":"488"},{"ruleId":"449","severity":1,"message":"489","line":28,"column":10,"nodeType":"451","messageId":"452","endLine":28,"endColumn":15},{"ruleId":"449","severity":1,"message":"490","line":125,"column":18,"nodeType":"451","messageId":"452","endLine":125,"endColumn":27},{"ruleId":"449","severity":1,"message":"491","line":127,"column":23,"nodeType":"451","messageId":"452","endLine":127,"endColumn":37},{"ruleId":"449","severity":1,"message":"492","line":128,"column":10,"nodeType":"451","messageId":"452","endLine":128,"endColumn":17},{"ruleId":"449","severity":1,"message":"464","line":167,"column":10,"nodeType":"451","messageId":"452","endLine":167,"endColumn":25},{"ruleId":"465","severity":1,"message":"493","line":218,"column":6,"nodeType":"467","endLine":218,"endColumn":59,"suggestions":"494"},{"ruleId":"478","severity":1,"message":"479","line":445,"column":36,"nodeType":"480","messageId":"481","endLine":445,"endColumn":62,"fix":"495"},{"ruleId":"478","severity":1,"message":"483","line":446,"column":36,"nodeType":"480","messageId":"481","endLine":446,"endColumn":69,"fix":"496"},{"ruleId":"478","severity":1,"message":"485","line":447,"column":36,"nodeType":"480","messageId":"481","endLine":447,"endColumn":59,"fix":"497"},{"ruleId":"478","severity":1,"message":"485","line":458,"column":36,"nodeType":"480","messageId":"481","endLine":458,"endColumn":59,"fix":"498"},{"ruleId":"478","severity":1,"message":"483","line":459,"column":36,"nodeType":"480","messageId":"481","endLine":459,"endColumn":69,"fix":"499"},{"ruleId":"449","severity":1,"message":"490","line":104,"column":20,"nodeType":"451","messageId":"452","endLine":104,"endColumn":29},{"ruleId":"449","severity":1,"message":"491","line":106,"column":25,"nodeType":"451","messageId":"452","endLine":106,"endColumn":39},{"ruleId":"449","severity":1,"message":"492","line":107,"column":12,"nodeType":"451","messageId":"452","endLine":107,"endColumn":19},{"ruleId":"449","severity":1,"message":"464","line":136,"column":13,"nodeType":"451","messageId":"452","endLine":136,"endColumn":28},{"ruleId":"465","severity":1,"message":"500","line":168,"column":8,"nodeType":"467","endLine":168,"endColumn":42,"suggestions":"501"},{"ruleId":"469","severity":1,"message":"470","line":250,"column":49,"nodeType":"471","messageId":"472","endLine":250,"endColumn":51},{"ruleId":"478","severity":1,"message":"502","line":323,"column":43,"nodeType":"480","messageId":"481","endLine":323,"endColumn":69,"fix":"503"},{"ruleId":"478","severity":1,"message":"504","line":324,"column":43,"nodeType":"480","messageId":"481","endLine":324,"endColumn":76,"fix":"505"},{"ruleId":"478","severity":1,"message":"506","line":325,"column":43,"nodeType":"480","messageId":"481","endLine":325,"endColumn":66,"fix":"507"},{"ruleId":"478","severity":1,"message":"506","line":331,"column":43,"nodeType":"480","messageId":"481","endLine":331,"endColumn":66,"fix":"508"},{"ruleId":"478","severity":1,"message":"504","line":332,"column":43,"nodeType":"480","messageId":"481","endLine":332,"endColumn":76,"fix":"509"},{"ruleId":"449","severity":1,"message":"510","line":350,"column":23,"nodeType":"451","messageId":"452","endLine":350,"endColumn":31},{"ruleId":"511","severity":1,"message":"512","line":5,"column":10,"nodeType":"513","messageId":"514","endLine":5,"endColumn":24,"fix":"515"},{"ruleId":"469","severity":1,"message":"470","line":86,"column":76,"nodeType":"471","messageId":"472","endLine":86,"endColumn":78},{"ruleId":"511","severity":1,"message":"512","line":4,"column":10,"nodeType":"513","messageId":"514","endLine":4,"endColumn":24,"fix":"516"},{"ruleId":"449","severity":1,"message":"517","line":61,"column":9,"nodeType":"451","messageId":"452","endLine":61,"endColumn":20},{"ruleId":"449","severity":1,"message":"518","line":62,"column":22,"nodeType":"451","messageId":"452","endLine":62,"endColumn":35},{"ruleId":"449","severity":1,"message":"519","line":63,"column":10,"nodeType":"451","messageId":"452","endLine":63,"endColumn":32},{"ruleId":"449","severity":1,"message":"520","line":63,"column":34,"nodeType":"451","messageId":"452","endLine":63,"endColumn":59},{"ruleId":"449","severity":1,"message":"521","line":67,"column":10,"nodeType":"451","messageId":"452","endLine":67,"endColumn":17},{"ruleId":"449","severity":1,"message":"522","line":69,"column":9,"nodeType":"451","messageId":"452","endLine":69,"endColumn":15},{"ruleId":"449","severity":1,"message":"523","line":71,"column":9,"nodeType":"451","messageId":"452","endLine":71,"endColumn":29},{"ruleId":"449","severity":1,"message":"524","line":72,"column":10,"nodeType":"451","messageId":"452","endLine":72,"endColumn":19},{"ruleId":"449","severity":1,"message":"525","line":74,"column":9,"nodeType":"451","messageId":"452","endLine":74,"endColumn":18},{"ruleId":"465","severity":1,"message":"526","line":79,"column":6,"nodeType":"467","endLine":79,"endColumn":24,"suggestions":"527"},{"ruleId":"449","severity":1,"message":"528","line":3,"column":10,"nodeType":"451","messageId":"452","endLine":3,"endColumn":18},{"ruleId":"449","severity":1,"message":"529","line":14,"column":9,"nodeType":"451","messageId":"452","endLine":14,"endColumn":16},{"ruleId":"449","severity":1,"message":"518","line":18,"column":22,"nodeType":"451","messageId":"452","endLine":18,"endColumn":35},{"ruleId":"449","severity":1,"message":"530","line":19,"column":10,"nodeType":"451","messageId":"452","endLine":19,"endColumn":20},{"ruleId":"449","severity":1,"message":"531","line":20,"column":7,"nodeType":"451","messageId":"452","endLine":20,"endColumn":19},{"ruleId":"449","severity":1,"message":"532","line":21,"column":7,"nodeType":"451","messageId":"452","endLine":21,"endColumn":30},{"ruleId":"465","severity":1,"message":"533","line":25,"column":7,"nodeType":"534","endLine":25,"endColumn":77},{"ruleId":"449","severity":1,"message":"535","line":66,"column":9,"nodeType":"451","messageId":"452","endLine":66,"endColumn":21},{"ruleId":"449","severity":1,"message":"536","line":1,"column":16,"nodeType":"451","messageId":"452","endLine":1,"endColumn":27},{"ruleId":"449","severity":1,"message":"537","line":2,"column":10,"nodeType":"451","messageId":"452","endLine":2,"endColumn":16},{"ruleId":"449","severity":1,"message":"538","line":5,"column":25,"nodeType":"451","messageId":"452","endLine":5,"endColumn":30},{"ruleId":"449","severity":1,"message":"458","line":8,"column":9,"nodeType":"451","messageId":"452","endLine":8,"endColumn":13},{"ruleId":"449","severity":1,"message":"539","line":11,"column":22,"nodeType":"451","messageId":"452","endLine":11,"endColumn":28},{"ruleId":"449","severity":1,"message":"529","line":37,"column":11,"nodeType":"451","messageId":"452","endLine":37,"endColumn":18},{"ruleId":"449","severity":1,"message":"540","line":38,"column":11,"nodeType":"451","messageId":"452","endLine":38,"endColumn":18},{"ruleId":"449","severity":1,"message":"541","line":40,"column":11,"nodeType":"451","messageId":"452","endLine":40,"endColumn":24},{"ruleId":"449","severity":1,"message":"542","line":41,"column":12,"nodeType":"451","messageId":"452","endLine":41,"endColumn":18},{"ruleId":"449","severity":1,"message":"490","line":41,"column":20,"nodeType":"451","messageId":"452","endLine":41,"endColumn":29},{"ruleId":"449","severity":1,"message":"543","line":44,"column":12,"nodeType":"451","messageId":"452","endLine":44,"endColumn":25},{"ruleId":"449","severity":1,"message":"544","line":82,"column":11,"nodeType":"451","messageId":"452","endLine":82,"endColumn":21},{"ruleId":"478","severity":1,"message":"545","line":142,"column":39,"nodeType":"480","messageId":"481","endLine":142,"endColumn":63,"fix":"546"},{"ruleId":"469","severity":1,"message":"470","line":160,"column":49,"nodeType":"471","messageId":"472","endLine":160,"endColumn":51},{"ruleId":"449","severity":1,"message":"547","line":2,"column":10,"nodeType":"451","messageId":"452","endLine":2,"endColumn":18},{"ruleId":"449","severity":1,"message":"548","line":10,"column":3,"nodeType":"451","messageId":"452","endLine":10,"endColumn":17},{"ruleId":"449","severity":1,"message":"549","line":12,"column":19,"nodeType":"451","messageId":"452","endLine":12,"endColumn":32},{"ruleId":"449","severity":1,"message":"550","line":16,"column":8,"nodeType":"451","messageId":"452","endLine":16,"endColumn":18},{"ruleId":"449","severity":1,"message":"551","line":23,"column":10,"nodeType":"451","messageId":"452","endLine":23,"endColumn":17},{"ruleId":"449","severity":1,"message":"540","line":94,"column":7,"nodeType":"451","messageId":"452","endLine":94,"endColumn":14},{"ruleId":"449","severity":1,"message":"552","line":102,"column":10,"nodeType":"451","messageId":"452","endLine":102,"endColumn":20},{"ruleId":"449","severity":1,"message":"553","line":103,"column":10,"nodeType":"451","messageId":"452","endLine":103,"endColumn":25},{"ruleId":"465","severity":1,"message":"554","line":184,"column":6,"nodeType":"467","endLine":184,"endColumn":8,"suggestions":"555"},{"ruleId":"465","severity":1,"message":"556","line":190,"column":6,"nodeType":"467","endLine":190,"endColumn":14,"suggestions":"557"},{"ruleId":"449","severity":1,"message":"558","line":225,"column":15,"nodeType":"451","messageId":"452","endLine":225,"endColumn":18},{"ruleId":"474","severity":1,"message":"559","line":225,"column":46,"nodeType":"476","messageId":"560","endLine":225,"endColumn":48},{"ruleId":"469","severity":1,"message":"470","line":313,"column":47,"nodeType":"471","messageId":"472","endLine":313,"endColumn":49},{"ruleId":"449","severity":1,"message":"561","line":1,"column":26,"nodeType":"451","messageId":"452","endLine":1,"endColumn":35},{"ruleId":"449","severity":1,"message":"540","line":84,"column":9,"nodeType":"451","messageId":"452","endLine":84,"endColumn":16},{"ruleId":"449","severity":1,"message":"562","line":110,"column":11,"nodeType":"451","messageId":"452","endLine":110,"endColumn":19},{"ruleId":"469","severity":1,"message":"470","line":117,"column":49,"nodeType":"471","messageId":"472","endLine":117,"endColumn":51},{"ruleId":"449","severity":1,"message":"550","line":13,"column":8,"nodeType":"451","messageId":"452","endLine":13,"endColumn":18},{"ruleId":"449","severity":1,"message":"563","line":18,"column":10,"nodeType":"451","messageId":"452","endLine":18,"endColumn":20},{"ruleId":"465","severity":1,"message":"564","line":146,"column":6,"nodeType":"467","endLine":146,"endColumn":48,"suggestions":"565"},{"ruleId":"469","severity":1,"message":"470","line":335,"column":47,"nodeType":"471","messageId":"472","endLine":335,"endColumn":49},{"ruleId":"511","severity":1,"message":"512","line":5,"column":10,"nodeType":"513","messageId":"514","endLine":5,"endColumn":24,"fix":"566"},{"ruleId":"465","severity":1,"message":"567","line":70,"column":6,"nodeType":"467","endLine":70,"endColumn":27,"suggestions":"568"},{"ruleId":"465","severity":1,"message":"569","line":40,"column":6,"nodeType":"467","endLine":40,"endColumn":27,"suggestions":"570"},{"ruleId":"469","severity":1,"message":"470","line":433,"column":47,"nodeType":"471","messageId":"472","endLine":433,"endColumn":49},{"ruleId":"469","severity":1,"message":"470","line":645,"column":47,"nodeType":"471","messageId":"472","endLine":645,"endColumn":49},{"ruleId":"511","severity":1,"message":"512","line":4,"column":26,"nodeType":"513","messageId":"514","endLine":4,"endColumn":40,"fix":"571"},{"ruleId":"465","severity":1,"message":"572","line":73,"column":6,"nodeType":"467","endLine":73,"endColumn":8,"suggestions":"573"},{"ruleId":"511","severity":1,"message":"512","line":6,"column":27,"nodeType":"513","messageId":"514","endLine":6,"endColumn":41,"fix":"574"},{"ruleId":"465","severity":1,"message":"575","line":20,"column":8,"nodeType":"467","endLine":20,"endColumn":60,"suggestions":"576"},{"ruleId":"511","severity":1,"message":"512","line":4,"column":27,"nodeType":"513","messageId":"514","endLine":4,"endColumn":41,"fix":"577"},{"ruleId":"465","severity":1,"message":"567","line":61,"column":10,"nodeType":"467","endLine":61,"endColumn":31,"suggestions":"578"},{"ruleId":"449","severity":1,"message":"563","line":18,"column":10,"nodeType":"451","messageId":"452","endLine":18,"endColumn":20},{"ruleId":"449","severity":1,"message":"579","line":22,"column":10,"nodeType":"451","messageId":"452","endLine":22,"endColumn":20},{"ruleId":"449","severity":1,"message":"580","line":98,"column":29,"nodeType":"451","messageId":"452","endLine":98,"endColumn":49},{"ruleId":"465","severity":1,"message":"581","line":128,"column":6,"nodeType":"467","endLine":128,"endColumn":51,"suggestions":"582"},{"ruleId":"469","severity":1,"message":"470","line":186,"column":47,"nodeType":"471","messageId":"472","endLine":186,"endColumn":49},{"ruleId":"449","severity":1,"message":"583","line":6,"column":3,"nodeType":"451","messageId":"452","endLine":6,"endColumn":7},{"ruleId":"449","severity":1,"message":"584","line":7,"column":3,"nodeType":"451","messageId":"452","endLine":7,"endColumn":7},{"ruleId":"449","severity":1,"message":"537","line":8,"column":3,"nodeType":"451","messageId":"452","endLine":8,"endColumn":9},{"ruleId":"449","severity":1,"message":"585","line":9,"column":3,"nodeType":"451","messageId":"452","endLine":9,"endColumn":7},{"ruleId":"449","severity":1,"message":"586","line":10,"column":3,"nodeType":"451","messageId":"452","endLine":10,"endColumn":7},{"ruleId":"465","severity":1,"message":"587","line":141,"column":6,"nodeType":"467","endLine":141,"endColumn":27,"suggestions":"588"},{"ruleId":"478","severity":1,"message":"589","line":242,"column":36,"nodeType":"480","messageId":"481","endLine":242,"endColumn":52,"fix":"590"},{"ruleId":"478","severity":1,"message":"591","line":248,"column":36,"nodeType":"480","messageId":"481","endLine":248,"endColumn":52,"fix":"592"},{"ruleId":"478","severity":1,"message":"593","line":249,"column":36,"nodeType":"480","messageId":"481","endLine":249,"endColumn":53,"fix":"594"},{"ruleId":"478","severity":1,"message":"595","line":257,"column":36,"nodeType":"480","messageId":"481","endLine":257,"endColumn":54,"fix":"596"},{"ruleId":"469","severity":1,"message":"470","line":296,"column":47,"nodeType":"471","messageId":"472","endLine":296,"endColumn":49},{"ruleId":"449","severity":1,"message":"544","line":61,"column":7,"nodeType":"451","messageId":"452","endLine":61,"endColumn":17},{"ruleId":"449","severity":1,"message":"597","line":70,"column":10,"nodeType":"451","messageId":"452","endLine":70,"endColumn":31},{"ruleId":"465","severity":1,"message":"598","line":146,"column":6,"nodeType":"467","endLine":146,"endColumn":51,"suggestions":"599"},{"ruleId":"449","severity":1,"message":"536","line":1,"column":16,"nodeType":"451","messageId":"452","endLine":1,"endColumn":27},{"ruleId":"449","severity":1,"message":"600","line":3,"column":52,"nodeType":"451","messageId":"452","endLine":3,"endColumn":56},{"ruleId":"449","severity":1,"message":"601","line":6,"column":15,"nodeType":"451","messageId":"452","endLine":6,"endColumn":26},{"ruleId":"449","severity":1,"message":"602","line":101,"column":23,"nodeType":"451","messageId":"452","endLine":101,"endColumn":35},{"ruleId":"478","severity":1,"message":"603","line":144,"column":39,"nodeType":"480","messageId":"481","endLine":144,"endColumn":78,"fix":"604"},{"ruleId":"478","severity":1,"message":"603","line":148,"column":39,"nodeType":"480","messageId":"481","endLine":148,"endColumn":75,"fix":"605"},{"ruleId":"478","severity":1,"message":"603","line":153,"column":39,"nodeType":"480","messageId":"481","endLine":153,"endColumn":77,"fix":"606"},{"ruleId":"478","severity":1,"message":"603","line":157,"column":39,"nodeType":"480","messageId":"481","endLine":157,"endColumn":76,"fix":"607"},{"ruleId":"478","severity":1,"message":"603","line":161,"column":39,"nodeType":"480","messageId":"481","endLine":161,"endColumn":76,"fix":"608"},{"ruleId":"478","severity":1,"message":"603","line":165,"column":39,"nodeType":"480","messageId":"481","endLine":165,"endColumn":69,"fix":"609"},{"ruleId":"465","severity":1,"message":"610","line":167,"column":7,"nodeType":"467","endLine":167,"endColumn":94,"suggestions":"611"},{"ruleId":"449","severity":1,"message":"562","line":203,"column":11,"nodeType":"451","messageId":"452","endLine":203,"endColumn":19},{"ruleId":"612","severity":1,"message":"613","line":205,"column":13,"nodeType":"614","messageId":"615","endLine":205,"endColumn":144},{"ruleId":"612","severity":1,"message":"613","line":206,"column":13,"nodeType":"614","messageId":"615","endLine":206,"endColumn":148},{"ruleId":"612","severity":1,"message":"613","line":207,"column":13,"nodeType":"614","messageId":"615","endLine":207,"endColumn":123},{"ruleId":"469","severity":1,"message":"470","line":209,"column":49,"nodeType":"471","messageId":"472","endLine":209,"endColumn":51},{"ruleId":"449","severity":1,"message":"536","line":1,"column":16,"nodeType":"451","messageId":"452","endLine":1,"endColumn":27},{"ruleId":"449","severity":1,"message":"616","line":3,"column":46,"nodeType":"451","messageId":"452","endLine":3,"endColumn":51},{"ruleId":"449","severity":1,"message":"600","line":3,"column":52,"nodeType":"451","messageId":"452","endLine":3,"endColumn":56},{"ruleId":"449","severity":1,"message":"601","line":5,"column":15,"nodeType":"451","messageId":"452","endLine":5,"endColumn":26},{"ruleId":"449","severity":1,"message":"617","line":15,"column":18,"nodeType":"451","messageId":"452","endLine":15,"endColumn":29},{"ruleId":"449","severity":1,"message":"602","line":107,"column":23,"nodeType":"451","messageId":"452","endLine":107,"endColumn":35},{"ruleId":"465","severity":1,"message":"618","line":184,"column":8,"nodeType":"467","endLine":184,"endColumn":26,"suggestions":"619"},{"ruleId":"449","severity":1,"message":"562","line":248,"column":12,"nodeType":"451","messageId":"452","endLine":248,"endColumn":20},{"ruleId":"612","severity":1,"message":"613","line":251,"column":12,"nodeType":"614","messageId":"615","endLine":251,"endColumn":194},{"ruleId":"612","severity":1,"message":"613","line":265,"column":13,"nodeType":"614","messageId":"615","endLine":265,"endColumn":177},{"ruleId":"612","severity":1,"message":"613","line":266,"column":13,"nodeType":"614","messageId":"615","endLine":266,"endColumn":182},{"ruleId":"612","severity":1,"message":"613","line":267,"column":13,"nodeType":"614","messageId":"615","endLine":267,"endColumn":194},{"ruleId":"612","severity":1,"message":"613","line":268,"column":13,"nodeType":"614","messageId":"615","endLine":268,"endColumn":198},{"ruleId":"612","severity":1,"message":"613","line":269,"column":13,"nodeType":"614","messageId":"615","endLine":269,"endColumn":202},{"ruleId":"612","severity":1,"message":"613","line":271,"column":13,"nodeType":"614","messageId":"615","endLine":271,"endColumn":161},{"ruleId":"612","severity":1,"message":"613","line":272,"column":13,"nodeType":"614","messageId":"615","endLine":272,"endColumn":167},{"ruleId":"612","severity":1,"message":"613","line":273,"column":13,"nodeType":"614","messageId":"615","endLine":273,"endColumn":189},{"ruleId":"612","severity":1,"message":"613","line":274,"column":13,"nodeType":"614","messageId":"615","endLine":274,"endColumn":205},{"ruleId":"612","severity":1,"message":"613","line":275,"column":13,"nodeType":"614","messageId":"615","endLine":275,"endColumn":155},{"ruleId":"612","severity":1,"message":"613","line":277,"column":13,"nodeType":"614","messageId":"615","endLine":277,"endColumn":147},{"ruleId":"612","severity":1,"message":"613","line":278,"column":13,"nodeType":"614","messageId":"615","endLine":278,"endColumn":147},{"ruleId":"612","severity":1,"message":"613","line":279,"column":13,"nodeType":"614","messageId":"615","endLine":279,"endColumn":189},{"ruleId":"612","severity":1,"message":"613","line":280,"column":13,"nodeType":"614","messageId":"615","endLine":280,"endColumn":185},{"ruleId":"612","severity":1,"message":"613","line":283,"column":13,"nodeType":"614","messageId":"615","endLine":283,"endColumn":141},{"ruleId":"612","severity":1,"message":"613","line":285,"column":13,"nodeType":"614","messageId":"615","endLine":285,"endColumn":153},{"ruleId":"612","severity":1,"message":"613","line":286,"column":13,"nodeType":"614","messageId":"615","endLine":286,"endColumn":131},{"ruleId":"612","severity":1,"message":"613","line":287,"column":13,"nodeType":"614","messageId":"615","endLine":287,"endColumn":145},{"ruleId":"612","severity":1,"message":"613","line":288,"column":13,"nodeType":"614","messageId":"615","endLine":288,"endColumn":175},{"ruleId":"612","severity":1,"message":"613","line":289,"column":13,"nodeType":"614","messageId":"615","endLine":289,"endColumn":149},{"ruleId":"612","severity":1,"message":"613","line":292,"column":13,"nodeType":"614","messageId":"615","endLine":292,"endColumn":186},{"ruleId":"612","severity":1,"message":"613","line":293,"column":13,"nodeType":"614","messageId":"615","endLine":293,"endColumn":166},{"ruleId":"612","severity":1,"message":"613","line":294,"column":13,"nodeType":"614","messageId":"615","endLine":294,"endColumn":167},{"ruleId":"612","severity":1,"message":"613","line":295,"column":13,"nodeType":"614","messageId":"615","endLine":295,"endColumn":194},{"ruleId":"612","severity":1,"message":"613","line":296,"column":13,"nodeType":"614","messageId":"615","endLine":296,"endColumn":160},{"ruleId":"469","severity":1,"message":"470","line":299,"column":49,"nodeType":"471","messageId":"472","endLine":299,"endColumn":51},{"ruleId":"449","severity":1,"message":"536","line":1,"column":16,"nodeType":"451","messageId":"452","endLine":1,"endColumn":27},{"ruleId":"449","severity":1,"message":"616","line":3,"column":46,"nodeType":"451","messageId":"452","endLine":3,"endColumn":51},{"ruleId":"449","severity":1,"message":"600","line":3,"column":52,"nodeType":"451","messageId":"452","endLine":3,"endColumn":56},{"ruleId":"449","severity":1,"message":"602","line":95,"column":23,"nodeType":"451","messageId":"452","endLine":95,"endColumn":35},{"ruleId":"465","severity":1,"message":"620","line":138,"column":8,"nodeType":"467","endLine":138,"endColumn":49,"suggestions":"621"},{"ruleId":"449","severity":1,"message":"536","line":1,"column":16,"nodeType":"451","messageId":"452","endLine":1,"endColumn":27},{"ruleId":"449","severity":1,"message":"561","line":1,"column":29,"nodeType":"451","messageId":"452","endLine":1,"endColumn":38},{"ruleId":"449","severity":1,"message":"622","line":2,"column":8,"nodeType":"451","messageId":"452","endLine":2,"endColumn":13},{"ruleId":"449","severity":1,"message":"537","line":4,"column":8,"nodeType":"451","messageId":"452","endLine":4,"endColumn":14},{"ruleId":"449","severity":1,"message":"600","line":5,"column":52,"nodeType":"451","messageId":"452","endLine":5,"endColumn":56},{"ruleId":"449","severity":1,"message":"623","line":6,"column":13,"nodeType":"451","messageId":"452","endLine":6,"endColumn":19},{"ruleId":"449","severity":1,"message":"601","line":8,"column":15,"nodeType":"451","messageId":"452","endLine":8,"endColumn":26},{"ruleId":"449","severity":1,"message":"490","line":95,"column":20,"nodeType":"451","messageId":"452","endLine":95,"endColumn":29},{"ruleId":"449","severity":1,"message":"624","line":96,"column":12,"nodeType":"451","messageId":"452","endLine":96,"endColumn":18},{"ruleId":"449","severity":1,"message":"625","line":96,"column":20,"nodeType":"451","messageId":"452","endLine":96,"endColumn":29},{"ruleId":"449","severity":1,"message":"626","line":4,"column":38,"nodeType":"451","messageId":"452","endLine":4,"endColumn":45},{"ruleId":"449","severity":1,"message":"600","line":4,"column":52,"nodeType":"451","messageId":"452","endLine":4,"endColumn":56},{"ruleId":"449","severity":1,"message":"617","line":21,"column":18,"nodeType":"451","messageId":"452","endLine":21,"endColumn":29},{"ruleId":"449","severity":1,"message":"540","line":97,"column":11,"nodeType":"451","messageId":"452","endLine":97,"endColumn":18},{"ruleId":"449","severity":1,"message":"542","line":103,"column":12,"nodeType":"451","messageId":"452","endLine":103,"endColumn":18},{"ruleId":"469","severity":1,"message":"470","line":270,"column":49,"nodeType":"471","messageId":"472","endLine":270,"endColumn":51},{"ruleId":"449","severity":1,"message":"536","line":1,"column":16,"nodeType":"451","messageId":"452","endLine":1,"endColumn":27},{"ruleId":"449","severity":1,"message":"600","line":3,"column":52,"nodeType":"451","messageId":"452","endLine":3,"endColumn":56},{"ruleId":"449","severity":1,"message":"601","line":6,"column":15,"nodeType":"451","messageId":"452","endLine":6,"endColumn":26},{"ruleId":"449","severity":1,"message":"627","line":133,"column":11,"nodeType":"451","messageId":"452","endLine":133,"endColumn":28},{"ruleId":"469","severity":1,"message":"470","line":342,"column":49,"nodeType":"471","messageId":"472","endLine":342,"endColumn":51},{"ruleId":"449","severity":1,"message":"628","line":4,"column":8,"nodeType":"451","messageId":"452","endLine":4,"endColumn":17},{"ruleId":"449","severity":1,"message":"626","line":5,"column":38,"nodeType":"451","messageId":"452","endLine":5,"endColumn":45},{"ruleId":"449","severity":1,"message":"600","line":5,"column":52,"nodeType":"451","messageId":"452","endLine":5,"endColumn":56},{"ruleId":"449","severity":1,"message":"601","line":8,"column":15,"nodeType":"451","messageId":"452","endLine":8,"endColumn":26},{"ruleId":"449","severity":1,"message":"629","line":9,"column":8,"nodeType":"451","messageId":"452","endLine":9,"endColumn":16},{"ruleId":"449","severity":1,"message":"630","line":12,"column":9,"nodeType":"451","messageId":"452","endLine":12,"endColumn":23},{"ruleId":"449","severity":1,"message":"458","line":15,"column":9,"nodeType":"451","messageId":"452","endLine":15,"endColumn":13},{"ruleId":"449","severity":1,"message":"631","line":15,"column":27,"nodeType":"451","messageId":"452","endLine":15,"endColumn":38},{"ruleId":"449","severity":1,"message":"632","line":23,"column":8,"nodeType":"451","messageId":"452","endLine":23,"endColumn":18},{"ruleId":"449","severity":1,"message":"489","line":25,"column":11,"nodeType":"451","messageId":"452","endLine":25,"endColumn":16},{"ruleId":"449","severity":1,"message":"540","line":103,"column":11,"nodeType":"451","messageId":"452","endLine":103,"endColumn":18},{"ruleId":"449","severity":1,"message":"542","line":105,"column":12,"nodeType":"451","messageId":"452","endLine":105,"endColumn":18},{"ruleId":"449","severity":1,"message":"633","line":106,"column":12,"nodeType":"451","messageId":"452","endLine":106,"endColumn":24},{"ruleId":"449","severity":1,"message":"634","line":106,"column":26,"nodeType":"451","messageId":"452","endLine":106,"endColumn":41},{"ruleId":"449","severity":1,"message":"635","line":110,"column":12,"nodeType":"451","messageId":"452","endLine":110,"endColumn":18},{"ruleId":"449","severity":1,"message":"636","line":115,"column":12,"nodeType":"451","messageId":"452","endLine":115,"endColumn":27},{"ruleId":"449","severity":1,"message":"637","line":116,"column":12,"nodeType":"451","messageId":"452","endLine":116,"endColumn":28},{"ruleId":"469","severity":1,"message":"470","line":283,"column":49,"nodeType":"471","messageId":"472","endLine":283,"endColumn":51},{"ruleId":"469","severity":1,"message":"470","line":523,"column":67,"nodeType":"471","messageId":"472","endLine":523,"endColumn":69},{"ruleId":"449","severity":1,"message":"585","line":3,"column":20,"nodeType":"451","messageId":"452","endLine":3,"endColumn":24},{"ruleId":"449","severity":1,"message":"638","line":6,"column":10,"nodeType":"451","messageId":"452","endLine":6,"endColumn":20},{"ruleId":"449","severity":1,"message":"458","line":7,"column":10,"nodeType":"451","messageId":"452","endLine":7,"endColumn":14},{"ruleId":"449","severity":1,"message":"617","line":9,"column":18,"nodeType":"451","messageId":"452","endLine":9,"endColumn":29},{"ruleId":"449","severity":1,"message":"639","line":19,"column":11,"nodeType":"451","messageId":"452","endLine":19,"endColumn":26},{"ruleId":"449","severity":1,"message":"638","line":27,"column":10,"nodeType":"451","messageId":"452","endLine":27,"endColumn":20},{"ruleId":"449","severity":1,"message":"528","line":29,"column":10,"nodeType":"451","messageId":"452","endLine":29,"endColumn":18},{"ruleId":"449","severity":1,"message":"640","line":29,"column":27,"nodeType":"451","messageId":"452","endLine":29,"endColumn":31},{"ruleId":"449","severity":1,"message":"583","line":29,"column":33,"nodeType":"451","messageId":"452","endLine":29,"endColumn":37},{"ruleId":"449","severity":1,"message":"641","line":52,"column":7,"nodeType":"451","messageId":"452","endLine":52,"endColumn":16},{"ruleId":"449","severity":1,"message":"642","line":101,"column":11,"nodeType":"451","messageId":"452","endLine":101,"endColumn":20},{"ruleId":"465","severity":1,"message":"643","line":106,"column":10,"nodeType":"467","endLine":106,"endColumn":12,"suggestions":"644"},{"ruleId":"449","severity":1,"message":"645","line":123,"column":11,"nodeType":"451","messageId":"452","endLine":123,"endColumn":27},{"ruleId":"449","severity":1,"message":"536","line":1,"column":16,"nodeType":"451","messageId":"452","endLine":1,"endColumn":27},{"ruleId":"449","severity":1,"message":"600","line":2,"column":52,"nodeType":"451","messageId":"452","endLine":2,"endColumn":56},{"ruleId":"449","severity":1,"message":"601","line":5,"column":15,"nodeType":"451","messageId":"452","endLine":5,"endColumn":26},{"ruleId":"449","severity":1,"message":"625","line":94,"column":20,"nodeType":"451","messageId":"452","endLine":94,"endColumn":29},{"ruleId":"449","severity":1,"message":"646","line":102,"column":12,"nodeType":"451","messageId":"452","endLine":102,"endColumn":26},{"ruleId":"449","severity":1,"message":"647","line":102,"column":28,"nodeType":"451","messageId":"452","endLine":102,"endColumn":45},{"ruleId":"449","severity":1,"message":"639","line":200,"column":11,"nodeType":"451","messageId":"452","endLine":200,"endColumn":26},{"ruleId":"469","severity":1,"message":"470","line":255,"column":28,"nodeType":"471","messageId":"472","endLine":255,"endColumn":30},{"ruleId":"469","severity":1,"message":"470","line":258,"column":35,"nodeType":"471","messageId":"472","endLine":258,"endColumn":37},{"ruleId":"469","severity":1,"message":"470","line":287,"column":74,"nodeType":"471","messageId":"472","endLine":287,"endColumn":76},{"ruleId":"449","severity":1,"message":"648","line":5,"column":27,"nodeType":"451","messageId":"452","endLine":5,"endColumn":35},{"ruleId":"449","severity":1,"message":"649","line":7,"column":10,"nodeType":"451","messageId":"452","endLine":7,"endColumn":13},{"ruleId":"449","severity":1,"message":"650","line":8,"column":10,"nodeType":"451","messageId":"452","endLine":8,"endColumn":25},{"ruleId":"465","severity":1,"message":"651","line":14,"column":6,"nodeType":"467","endLine":14,"endColumn":8,"suggestions":"652"},{"ruleId":"653","severity":1,"message":"654","line":62,"column":19,"nodeType":"655","messageId":"472","endLine":62,"endColumn":31},{"ruleId":"653","severity":1,"message":"656","line":63,"column":19,"nodeType":"655","messageId":"472","endLine":63,"endColumn":25},{"ruleId":"653","severity":1,"message":"654","line":93,"column":19,"nodeType":"655","messageId":"472","endLine":93,"endColumn":31},{"ruleId":"653","severity":1,"message":"656","line":94,"column":19,"nodeType":"655","messageId":"472","endLine":94,"endColumn":25},{"ruleId":"653","severity":1,"message":"654","line":110,"column":17,"nodeType":"655","messageId":"472","endLine":110,"endColumn":29},{"ruleId":"653","severity":1,"message":"656","line":111,"column":17,"nodeType":"655","messageId":"472","endLine":111,"endColumn":23},{"ruleId":"511","severity":1,"message":"512","line":4,"column":10,"nodeType":"513","messageId":"514","endLine":4,"endColumn":24,"fix":"657"},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-native-reassign",["658"],"no-negated-in-lhs",["659"],"'ActiveANCPatients' is defined but never used.","'Link' is defined but never used.","'DateTimePicker' is defined but never used.","'topLevelUnitCountryOptions' is assigned a value but never used.","'femaleStatus' is assigned a value but never used.","'setEnrollDto' is assigned a value but never used.","'carePoints' is assigned a value but never used.","'pregnancyStatus' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'basicInfo.dob', 'loadEducation', 'loadGenders', 'loadMaritalStatus', 'loadOccupation', 'loadRelationships', and 'loadTopLevelCountry'. Either include them or remove the dependency array.","ArrayExpression",["660"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'actualcontacts' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-useless-computed-key","Unnecessarily computed property [\"testResultSyphilis\"] found.","Property","unnecessarilyComputedProperty",{"range":"661","text":"662"},"Unnecessarily computed property [\"referredSyphilisTreatment\"] found.",{"range":"663","text":"664"},"Unnecessarily computed property [\"treatedSyphilis\"] found.",{"range":"665","text":"666"},{"range":"667","text":"666"},{"range":"668","text":"664"},"'Modal' is defined but never used.","'setSaving' is assigned a value but never used.","'setAgeDisabled' is assigned a value but never used.","'genders' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'basicInfo', 'getSex', 'loadGenders', 'locationState', and 'objValues'. Either include them or remove the dependency array. You can also do a functional update 'setObjValues(o => ...)' if you only need 'objValues' in the 'setObjValues' call.",["669"],{"range":"670","text":"662"},{"range":"671","text":"664"},{"range":"672","text":"666"},{"range":"673","text":"666"},{"range":"674","text":"664"},"React Hook useEffect has missing dependencies: 'basicInfo', 'getSex', and 'loadGenders'. Either include them or remove the dependency array.",["675"],"Unnecessarily computed property ['testResultSyphilis'] found.",{"range":"676","text":"677"},"Unnecessarily computed property ['referredSyphilisTreatment'] found.",{"range":"678","text":"679"},"Unnecessarily computed property ['treatedSyphilis'] found.",{"range":"680","text":"681"},{"range":"682","text":"681"},{"range":"683","text":"679"},"'response' is assigned a value but never used.","no-useless-rename","Import token unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"684","text":"685"},{"range":"686","text":"685"},"'permissions' is assigned a value but never used.","'setpatientObj' is assigned a value but never used.","'patientBiometricStatus' is assigned a value but never used.","'setPatientBiometricStatus' is assigned a value but never used.","'devices' is assigned a value but never used.","'toggle' is assigned a value but never used.","'BiometricModalToggle' is assigned a value but never used.","'hivStatus' is assigned a value but never used.","'Arttoggle' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'PatientCurrentStatus' and 'patientObj'. Either include them or remove the dependency array.",["687"],"'Dropdown' is defined but never used.","'classes' is assigned a value but never used.","'genderType' is assigned a value but never used.","'mentalStatus' is assigned a value but never used.","'initialEvaluationStatus' is assigned a value but never used.","Assignments to the 'gender' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ConditionalExpression","'loadPmtctHts' is assigned a value but never used.","'useCallback' is defined but never used.","'Button' is defined but never used.","'toast' is defined but never used.","'Sticky' is defined but never used.","'history' is assigned a value but never used.","'locationState' is assigned a value but never used.","'saving' is assigned a value but never used.","'hideOtherMenu' is assigned a value but never used.","'patientObj' is assigned a value but never used.","Unnecessarily computed property ['referredToOthers'] found.",{"range":"688","text":"689"},"'Redirect' is defined but never used.","'InputGroupText' is defined but never used.","'FormLabelName' is defined but never used.","'CancelIcon' is defined but never used.","'Message' is defined but never used.","'entryPoint' is assigned a value but never used.","'entryPointValue' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'GetPatientPMTCT', 'POINT_ENTRY_PMTCT', 'enroll', 'locationState.patientObj.person_uuid', 'locationState.patientObj.person_uuidd', 'locationState.patientObj.uuid', 'props.activeContent.actionType', 'props.activeContent.id', 'props.patientObj.person_uuid', and 'props.patientObj?.uuid'. Either include them or remove the dependency array. If 'setSisabledField' needs the current value of 'props.activeContent.actionType', you can also switch to useReducer instead of useState and read 'props.activeContent.actionType' in the reducer.",["690"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["691"],"'ans' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'useEffect' is defined but never used.","'validate' is assigned a value but never used.","'useHistory' is defined but never used.","React Hook useEffect has a missing dependency: 'GetPatientLabourDTO'. Either include it or remove the dependency array.",["692"],{"range":"693","text":"685"},"React Hook useEffect has a missing dependency: 'PatientHistory'. Either include it or remove the dependency array.",["694"],"React Hook useEffect has missing dependencies: 'InfantInfo', 'RecentActivities', and 'SummaryChart'. Either include them or remove the dependency array.",["695"],{"range":"696","text":"685"},"React Hook useEffect has missing dependencies: 'DeliveryInfo', 'InfantInfo', 'InfantInfoByUuid', and 'props.patientObj.ancNo'. Either include them or remove the dependency array.",["697"],{"range":"698","text":"685"},"React Hook useEffect has a missing dependency: 'DeliveryInfo'. Either include it or remove the dependency array.",["699"],{"range":"700","text":"685"},["701"],"'NoStroller' is defined but never used.","'setNewDateOfDelivery' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'infantInfo' and 'props.activeContent'. Either include them or remove the dependency array. You can also do a functional update 'setInfantInfo(i => ...)' if you only need 'infantInfo' in the 'setInfantInfo' call.",["702"],"'Icon' is defined but never used.","'List' is defined but never used.","'Card' is defined but never used.","'Feed' is defined but never used.","React Hook useEffect has a missing dependency: 'GetVisit'. Either include it or remove the dependency array.",["703"],"Unnecessarily computed property [\"fpMethod\"] found.",{"range":"704","text":"705"},"Unnecessarily computed property [\"dsdModel\"] found.",{"range":"706","text":"707"},"Unnecessarily computed property [\"dsdOption\"] found.",{"range":"708","text":"709"},"Unnecessarily computed property [\"transferTo\"] found.",{"range":"710","text":"711"},"'timingOfArtInitiation' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'GetVisit' and 'InfantInfo'. Either include them or remove the dependency array.",["712"],"'Form' is defined but never used.","'CardContent' is defined but never used.","'setObjValues' is assigned a value but never used.","Unnecessarily computed property ['rencencyInterpretation'] found.",{"range":"713","text":"714"},{"range":"715","text":"714"},{"range":"716","text":"714"},{"range":"717","text":"714"},{"range":"718","text":"714"},{"range":"719","text":"714"},"React Hook useEffect has a missing dependency: 'recency'. Either include it or remove the dependency array. You can also do a functional update 'setRecency(r => ...)' if you only need 'recency' in the 'setRecency' call.",["720"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Input' is defined but never used.","'LabelRibbon' is defined but never used.","React Hook useEffect has a missing dependency: 'riskAssessment'. Either include it or remove the dependency array. You can also do a functional update 'setRiskAssessment(r => ...)' if you only need 'riskAssessment' in the 'setRiskAssessment' call.",["721"],"React Hook useEffect has a missing dependency: 'postTest'. Either include it or remove the dependency array. You can also do a functional update 'setPostTest(p => ...)' if you only need 'postTest' in the 'setPostTest' call.",["722"],"'axios' is defined but never used.","'moment' is defined but never used.","'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'Spinner' is defined but never used.","'handleInputChange' is assigned a value but never used.","'MatButton' is defined but never used.","'SaveIcon' is defined but never used.","'ToastContainer' is defined but never used.","'useLocation' is defined but never used.","'PhoneInput' is defined but never used.","'hideNumChild' is assigned a value but never used.","'setHideNumChild' is assigned a value but never used.","'gender' is assigned a value but never used.","'clientCodeetail' is assigned a value but never used.","'clientCodeetail2' is assigned a value but never used.","'FaUserPlus' is defined but never used.","'handleItemClick' is assigned a value but never used.","'Menu' is defined but never used.","'useStyles' is assigned a value but never used.","'patientId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'patients'. Either include it or remove the dependency array.",["723"],"'handleIEditIndex' is assigned a value but never used.","'objValuesIndex' is assigned a value but never used.","'setObjValuesIndex' is assigned a value but never used.","'Fragment' is defined but never used.","'key' is assigned a value but never used.","'postPartumValue' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["724"],"no-dupe-keys","Duplicate key 'borderRadius'.","ObjectExpression","Duplicate key 'border'.",{"range":"725","text":"685"},"no-global-assign","no-unsafe-negation",{"desc":"726","fix":"727"},[32862,32884],"\"testResultSyphilis\"",[32929,32958],"\"referredSyphilisTreatment\"",[33003,33022],"\"treatedSyphilis\"",[33423,33442],[33487,33516],{"desc":"728","fix":"729"},[14125,14147],[14192,14221],[14266,14285],[14686,14705],[14750,14779],{"desc":"730","fix":"731"},[12093,12115],"'testResultSyphilis'",[12166,12195],"'referredSyphilisTreatment'",[12246,12265],"'treatedSyphilis'",[12649,12668],[12719,12748],[145,159],"token",[143,157],{"desc":"732","fix":"733"},[4333,4353],"'referredToOthers'",{"desc":"734","fix":"735"},{"desc":"736","fix":"737"},{"desc":"738","fix":"739"},[181,195],{"desc":"740","fix":"741"},{"desc":"742","fix":"743"},[148,162],{"desc":"744","fix":"745"},[257,271],{"desc":"746","fix":"747"},[148,162],{"desc":"740","fix":"748"},{"desc":"749","fix":"750"},{"desc":"751","fix":"752"},[6789,6801],"\"fpMethod\"",[7048,7060],"\"dsdModel\"",[7104,7117],"\"dsdOption\"",[7448,7462],"\"transferTo\"",{"desc":"753","fix":"754"},[4666,4692],"'rencencyInterpretation'",[4929,4955],[5263,5289],[5529,5555],[5793,5819],[5913,5939],{"desc":"755","fix":"756"},{"desc":"757","fix":"758"},{"desc":"759","fix":"760"},{"desc":"761","fix":"762"},{"desc":"763","fix":"764"},[143,157],"Update the dependencies array to be: [basicInfo.dateOfRegistration, basicInfo.dob, loadEducation, loadGenders, loadMaritalStatus, loadOccupation, loadRelationships, loadTopLevelCountry]",{"range":"765","text":"766"},"Update the dependencies array to be: [patientObj, patientId, basicInfo.dateOfRegistration, locationState, loadGenders, getSex, basicInfo, objValues]",{"range":"767","text":"768"},"Update the dependencies array to be: [patientObj, patientId, actionType, loadGenders, getSex, basicInfo]",{"range":"769","text":"770"},"Update the dependencies array to be: [PatientCurrentStatus, patientObj, props.patientObj]",{"range":"771","text":"772"},"Update the dependencies array to be: [GetPatientPMTCT, POINT_ENTRY_PMTCT, enroll, locationState.patientObj.person_uuid, locationState.patientObj.person_uuidd, locationState.patientObj.uuid, props.activeContent.actionType, props.activeContent.id, props.patientObj.person_uuid, props.patientObj?.uuid]",{"range":"773","text":"774"},"Update the dependencies array to be: [enroll, props]",{"range":"775","text":"776"},"Update the dependencies array to be: [props.patientObj.id, props.activeContent, GetPatientLabourDTO]",{"range":"777","text":"778"},"Update the dependencies array to be: [PatientHistory, props.patientObj.id]",{"range":"779","text":"780"},"Update the dependencies array to be: [InfantInfo, RecentActivities, SummaryChart, props.patientObj.id]",{"range":"781","text":"782"},"Update the dependencies array to be: [DeliveryInfo, InfantInfo, InfantInfoByUuid, props.patientObj.ancNo]",{"range":"783","text":"784"},"Update the dependencies array to be: [props.patientObj.id, props.activeContent.activeTab, DeliveryInfo]",{"range":"785","text":"786"},{"range":"787","text":"780"},"Update the dependencies array to be: [props.patientObj.id, props.activeContent.id, props.activeContent, infantInfo]",{"range":"788","text":"789"},"Update the dependencies array to be: [GetVisit, props.activeContent]",{"range":"790","text":"791"},"Update the dependencies array to be: [props.patientObj.ancNo, props.activeContent, InfantInfo, GetVisit]",{"range":"792","text":"793"},"Update the dependencies array to be: [recency.longTermLine, recency.verififcationLine, recency.controlLine, props.patientObj, recency]",{"range":"794","text":"795"},"Update the dependencies array to be: [props.patientObj, riskAssessment]",{"range":"796","text":"797"},"Update the dependencies array to be: [props.patientObj, postTest.hivTestResult, postTest]",{"range":"798","text":"799"},"Update the dependencies array to be: [patients]",{"range":"800","text":"801"},"Update the dependencies array to be: [props]",{"range":"802","text":"803"},[7072,7102],"[basicInfo.dateOfRegistration, basicInfo.dob, loadEducation, loadGenders, loadMaritalStatus, loadOccupation, loadRelationships, loadTopLevelCountry]",[6586,6639],"[patientObj, patientId, basicInfo.dateOfRegistration, locationState, loadGenders, getSex, basicInfo, objValues]",[5321,5355],"[patientObj, patientId, actionType, loadGenders, getSex, basicInfo]",[2673,2691],"[PatientCurrentStatus, patientObj, props.patientObj]",[5066,5068],"[GetPatientPMTCT, POINT_ENTRY_PMTCT, enroll, locationState.patientObj.person_uuid, locationState.patientObj.person_uuidd, locationState.patientObj.uuid, props.activeContent.actionType, props.activeContent.id, props.patientObj.person_uuid, props.patientObj?.uuid]",[5173,5181],"[enroll, props]",[3663,3705],"[props.patientObj.id, props.activeContent, GetPatientLabourDTO]",[3383,3404],"[PatientHistory, props.patientObj.id]",[1399,1420],"[InfantInfo, RecentActivities, SummaryChart, props.patientObj.id]",[3391,3393],"[DeliveryInfo, InfantInfo, InfantInfoByUuid, props.patientObj.ancNo]",[629,681],"[props.patientObj.id, props.activeContent.activeTab, DeliveryInfo]",[3100,3121],[3312,3357],"[props.patientObj.id, props.activeContent.id, props.activeContent, infantInfo]",[3648,3669],"[GetVisit, props.activeContent]",[4311,4356],"[props.patientObj.ancNo, props.activeContent, InfantInfo, GetVisit]",[5963,6050],"[recency.longTermLine, recency.verififcationLine, recency.controlLine, props.patientObj, recency]",[6724,6742],"[props.patientObj, riskAssessment]",[4817,4858],"[props.patientObj, postTest.hivTestResult, postTest]",[3901,3903],"[patients]",[460,462],"[props]"]