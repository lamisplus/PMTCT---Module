{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/components/Visualisation/DashboardAnalytics/SummaryView/Highcharts/ReceivingArtByAge.js","main/webapp/jsx/components/Visualisation/DashboardAnalytics/SummaryView/Highcharts/ReceivingArtBySex.js","main/webapp/jsx/components/Visualisation/DashboardAnalytics/SummaryView/Index.js","main/webapp/jsx/components/Visualisation/Index.js","main/webapp/jsx/components/Patient/PatientListIit.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/CaptureBiometric.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/components/History/RecentHistory.js","main/webapp/jsx/components/Consultation/ADR/Index.js","main/webapp/jsx/components/Consultation/OpportunisticInfection/Index.js","main/webapp/jsx/components/Consultation/TBScreening/Index.js","main/webapp/jsx/components/Consultation/Allergies/AddAllergy.js","main/webapp/jsx/components/Consultation/Conditions/AddCondition.js","main/webapp/jsx/components/Consultation/PostPatient/Index.js","main/webapp/jsx/components/Consultation/Home.js","main/webapp/jsx/components/Consultation/ViewUpdate/ADR/Index.js","main/webapp/jsx/components/Consultation/ViewUpdate/OpportunisticInfection/Index.js","main/webapp/jsx/components/Consultation/ViewUpdate/TBScreening/Index.js","main/webapp/jsx/components/Consultation/ViewUpdate/History/ConsultationPage.js","main/webapp/jsx/components/Consultation/ViewUpdate/ClinicHistory.js","main/webapp/jsx/components/Consultation/Index.js","main/webapp/jsx/components/PmtctServices/PmtctEnrollment.js","main/webapp/jsx/components/PmtctServices/AncEnrollement.js","main/webapp/jsx/components/PmtctServices/LabourDelivery.js","main/webapp/jsx/images/fingerprintimage.png","main/webapp/jsx/components/Patient/Biometric.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/RegisterPatient.js","main/webapp/jsx/components/Patient/EnrollPatient.js","main/webapp/jsx/components/Patient/UpdatePatientEnrollment.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["token","URLSearchParams","window","location","search","get","url","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","Patients","makeStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","width","marginTop","submit","cardBottom","marginBottom","Select","height","button","root","input","error","color","fontSize","success","useState","patientList","setPatientList","loading","setLoading","axios","baseUrl","headers","then","response","data","catch","useEffect","patients","calculate_age","dob","today","Date","dateParts","split","dateObject","birthDate","age_now","getFullYear","m","getMonth","getDate","getHospitalNumber","identifier","hospitalNumber","find","obj","type","value","icons","title","columns","field","filtering","isLoading","map","row","name","currentStatus","to","pathname","state","patientObj","personDto","firstName","surname","patientId","id","hospital_number","gender","sex","age","dateOfBirth","undefined","moment","format","actions","ButtonGroup","variant","style","backgroundColor","size","Button","fontWeight","options","headerStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","pageSize","debounceInterval","Highcharts","setOptions","colors","getOptions","radialGradient","cx","cy","r","stops","brighten","ReceivingArtByAge","chart","plotBackgroundColor","plotBorderWidth","plotShadow","text","tooltip","pointFormat","accessibility","point","valueSuffix","plotOptions","pie","allowPointSelect","cursor","dataLabels","enabled","connectorColor","showInLegend","series","sliced","y","ReceivingArtBySex","align","verticalAlign","distance","startAngle","endAngle","center","innerSize","useStyles","SummaryView","activeItem","React","anchorEl","Boolean","padding","md","lg","sm","xs","className","CardBody","highcharts","subtitle","legend","layout","xAxis","categories","labels","x","yAxis","allowDecimals","responsive","rules","condition","maxWidth","chartOptions","credits","options2","Widget","class","divStyle","borderRadius","Home","key","setKey","startIcon","textTransform","Row","Col","xl","Card","Body","Tabs","activeKey","onSelect","k","Tab","eventKey","withStyles","heading","typography","pxToRem","secondaryHeading","palette","secondary","icon","details","column","flexBasis","helper","borderLeft","divider","unit","link","primary","main","textDecoration","classes","patientObjs","permissions","biometricStatus","setBiometricStatus","setDevices","setHivStatus","PatientCurrentStatus","CheckBiometric","console","log","ExpansionPanel","defaultExpanded","ExpansionPanelSummary","expandIcon","root2","phoneNumber","contactPoint","getPhoneNumber","address","city","getAddress","Typography","Label","Detail","as","onClick","setActiveContent","activeContent","route","tag","ExpansionPanelDetails","Divider","ExpansionPanelActions","navItemText","SubMenu","setGenderType","Observation","observation","mental","filter","evaluation","length","Menu","inverted","Item","RecentHistory","vitaLoad","setViralLoad","setRefillList","setClinicVisitList","recentActivities","setRecentActivities","history","useHistory","activeAccordionHeaderShadow","setActiveAccordionHeaderShadow","LaboratoryHistory","PharmacyList","ClinicVisitList","RecentActivities","LabObject","forEach","index","array","dataOrders","labOrder","tests","push","LoadViewPage","action","path","actionType","activeTab","Accordion","defaultActiveKey","i","Toggle","Text","date","Collapse","activities","activity","Dropdown","viewBox","version","stroke","strokeWidth","fill","fillRule","viewable","deletable","delete","toast","errorMessage","apierror","message","test","status","labTestOrderStatus","orderDate","labTestGroupName","labTestName","viralLoadIndicationName","labTestOrderStatusName","Alert","RelativeList","relative","removeRelativeLocation","adr","adrOnsetDate","IconButton","ADR","errors","setErrors","temp","prepSideEffect","setPrepSideEffect","PrepSideEffect","handAdrleInputChange","e","setAdrObj","adrObj","target","adrList","splice","setAdrList","FormGroup","Input","onChange","border","required","min","artStartDate","max","Object","values","every","Icon","List","Table","striped","InfectionList","removeInfection","illnessInfection","ondateInfection","handleInfectionInputChange","setInfection","infection","infectionList","setInfectionList","TBScreeningForm","tbStatus","setTbStatus","TBForms","setTBForms","TBStatus","tbObj","antiTBDrug","newTbStatus","handleInputChange","setTbObj","currentOnIpt","coughing","nightSweat","fever","contactWithTBCase","lethergy","tbStatusId","AddAllergy","saving","setSaving","allergy","show","showModal","toggle","Header","Spinner","preventDefault","post","patientsVitalsSigns","AddCondition","commenced","newDate","PostPatient","selectedOption","setSelectedOption","services","setServices","filterService","moduleServiceCode","entries","label","moduleServiceName","ServicesPost","encounterDate","facilityId","personId","serviceCode","visitId","postServices","isMulti","noOptionsMessage","serviceArr","ClinicVisit","dropdownOpen","setDropdownOpen","toggleDropDown","clinicVisitList","getPatientObj","setGetPatientObj","clinicalStage","setClinicalStage","functionalStatus","setFunctionalStatus","adherenceLevel","setAdherenceLevel","addConditionModal","setAddConditionModal","addAllergyModal","setAddAllergyModal","postPatientModal","setPostPatientModal","currentVitalSigns","setcurrentVitalSigns","showCurrentVitalSigns","setShowCurrentVitalSigns","bodyWeight","diastolic","systolic","pulse","temperature","respiratoryRate","vitalClinicalSupport","setVitalClinicalSupport","adheres","adrScreened","adverseDrugReactions","artStatusId","cd4","cd4Percentage","clinicalNote","clinicalStageId","functionalStatusId","hivEnrollmentId","nextAppointment","lmpDate","oiScreened","opportunisticInfections","tbScreen","stiIds","stiTreated","uuid","visitDate","whoStagingId","objValues","setObjValues","serviceTypeId","vital","setVitalSignDto","FunctionalStatus","WhoStaging","AdherenceLevel","VitalSigns","GetPatientObj","PatientDetaild","lastVitalSigns","patObJ","handleInputChangeVitalSignDto","Grid","Column","Segment","ribbon","visit","celled","vitalSignDto","paddingBottom","paddingTop","borderTop","Math","round","artCommence","checked","htmlFor","InputGroup","onKeyUp","InputGroupText","addonType","isOpen","toFixed","enrollment","dateOfRegistration","disabled","labTestGroupId","enableUpdate","setVisitId","enableUpdateButton","setEnableUpdateButton","setEnableUpdate","isCommencement","ClinicVisitListHistory","GetVisitById","visitID","content","basic","pointing","put","hidden","ClinicVisitHistory","ConsultationPage","ClinicVisitPage","ClinicHistory","AncPnc","AncEnrollement","LabourDelivery","fontFamily","marginLeft","lineHeight","checkUrl","Biometrics","biometricDevices","setbiometricDevices","biometricType","templateType","device","fingerType","setFingerType","pageLoading","setPageLoading","showCapture","setshowCapture","setTryAgain","setSuccess","storedBiometrics","setStoredBiometrics","capturedFingered","setCapturedFingered","setSelectedFingers","getPersonBiometrics","bgcolor","green","fingersCodeset","personCapturedFingers","_","uniq","biometricItems","item","extend","captured","includes","clear_storelist","TemplateType","flex","boxShadow","minHeight","flexWrap","biometric","lastModifiedDate","drop","borderColor","marginRight","xmlns","xmlnsXlink","alignRight","finger","newStoredBiometrics","reject","updatePatientBiometricStatus","justifyContent","src","fingerprintimage","alt","Badge","iso","severity","AlertTitle","for","deviceName","selectedDevice","errorType","errorName","validate","setTimeout","ERROR","biometricsEnrollments","capturedBiometricsList","uniqBy","horizontal","paddingLeft","Content","capturedObj","art","setArt","CardContent","Biometric","PmtctEnrollment","library","add","faCheckSquare","faCoffee","faEdit","faTrash","demo","background","default","inline","UserRegistration","active","contact","deceased","deceasedDateTime","genderId","otherName","maritalStatusId","educationId","employmentStatusId","isDateOfBirthEstimated","altPhonenumber","countryId","stateId","district","sexId","ninNumber","basicInfo","setBasicInfo","phone","email","relationshipId","lastName","middleName","relatives","setRelatives","toISOString","substr","replace","contacts","setContacts","disabledAgeBaseOnAge","setDisabledAgeBaseOnAge","ageDisabled","setAgeDisabled","showRelative","setShowRelative","genders","setGenders","maritalStatusOptions","setMaritalStatusOptions","educationOptions","setEducationOptions","occupationOptions","setOccupationOptions","relationshipOptions","setRelationshipOptions","countries","setCountries","states","setStates","provinces","setProvinces","settopLevelUnitCountryOptions","userDetail","user","useLocation","setfemaleStatus","ancNo","gaweeks","gravida","expectedDeliveryDate","lmp","parity","hivDiognosicTime","referredSyphilisTreatment","testResultSyphilis","testedSyphilis","treatedSyphilis","pmtctHtsInfo","syphilisInfo","partnerNotification","setCarePoints","setSourceReferral","setEnrollSetting","setKP","setPregnancyStatus","hospitalNumStatus","setHospitalNumStatus","setHospitalNumStatus2","open","setOpen","locationState","loadGenders","loadMaritalStatus","loadEducation","loadOccupation","loadRelationships","loadTopLevelCountry","CareEntryPoint","SourceReferral","HivStatus","EnrollmentSetting","KP","PregnancyStatus","GetCountry","alert","useCallback","handleDateOfBirthChange","handleInputChangeBasic","alphabetOnly","ninNumberValue","checkNINLimit","getHosiptalNumber","hosiptalNumber","uniqueId","getRelationship","relationship","handleInputChangeRelatives","handleSubmit","newConatctsInfo","contactInfo","line","fullName","patientForm","landmark","checkPhoneNumberBasic","inputName","slice","autoClose","hideProgressBar","margingRight","Form","defaultChecked","currentDate","setDate","setMonth","dobNew","abs","maritalStatusOption","occupationOption","educationOption","containerStyle","inputStyle","country","placeholder","maxLength","masks","ng","at","getCountryId","setStateByCountryId","handleEditRelative","handleDeleteRelative","checkPhoneNumber","validateRelatives","centered","backdrop","Title","Footer","flexGrow","patientDTO","femaleStatus","entryPointId","facilityName","statusAtRegistrationId","dateConfirmedHiv","sourceOfReferrer","enrollmentSettingId","pregnancyStatusId","dateOfLpm","targetGroupId","ovc_enrolled","ovcNumber","householdNumber","referredToOVCPartner","dateReferredToOVCPartner","referredFromOVCPartner","dateReferredFromOVCPartner","careEntryPointOther","carePoints","sourceReferral","hivStatus","enrollSetting","kP","pregnancyStatus","transferIn","setTransferIn","ovcEnrolled","setOvcEnrolled","hideTargetGroup","getSex","identifiers","altphone","maritalStatus","employmentStatus","education","getStateId","patientAge","getSexId","dateOfRegistration1","person","hivEnrollment","position","POSITION","TOP_RIGHT","sourceOfReferrerId","hospitalNumStatus2","getCharacters","handleCheckBox","floor","random","App","PatientDetail","RegisterPatient","EnrollPatient","UpdatePatientEnrollment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","sideBarStyle","setSideBarStyle","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","body","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","sidebarpositions","openMenuToggle","setDemoTheme","setAttr","themeSettings","children","ReactDOM","render","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.67dc4c78.chunk.js","sourcesContent":["export const  token = (new URLSearchParams(window.location.search)).get(\"jwt\")\r\nexport const url = '/api/v1/'\r\n// export const url =  'http://localhost:8383/api/v1/';\r\n// export const  token = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNjY0ODk5Nzc1fQ.WGJILdhMPYiQzYhTXQOpq3lihtwKwFJGrZX5jc-S2iGnfqQefqbbDIKl01LF7NMy9XI8Zukba0abw38nfcHUxg';\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n//import { FaUserPlus } from \"react-icons/fa\";\r\nimport {TiArrowForward} from 'react-icons/ti'\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n    const [patientList, setPatientList] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            setLoading(true)\r\n            axios\r\n                .get(`${baseUrl}pmtct/anc`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    setLoading(false)\r\n                    setPatientList(response.data);\r\n                   \r\n                })\r\n                .catch((error) => {  \r\n                    setLoading(false)  \r\n                });        \r\n        }\r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now + \" year(s)\";\r\n        };\r\n    \r\n    const getHospitalNumber = (identifier) => {     \r\n        const identifiers = identifier;\r\n        const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');       \r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n    const sampleObj =[\r\n        {\r\n          \"id\": 3,\r\n          \"visitId\": null,\r\n          \"facilityId\": 1616,\r\n          \"active\": true,\r\n          \"surname\": \"Eeka\",\r\n          \"ninNumber\": \"34444444444\",\r\n          \"emrId\": null,\r\n          \"firstName\": \"Emeka\",\r\n          \"otherName\": null,\r\n          \"sex\": \"Female\",\r\n          \"gender\": {\r\n            \"id\": 377,\r\n            \"display\": \"Female\"\r\n          },\r\n          \"deceased\": false,\r\n          \"maritalStatus\": {\r\n            \"id\": 5,\r\n            \"display\": \"Single\"\r\n          },\r\n          \"employmentStatus\": {\r\n            \"id\": 88,\r\n            \"display\": \"Unemployed\"\r\n          },\r\n          \"education\": {\r\n            \"id\": 10,\r\n            \"display\": \"None\"\r\n          },\r\n          \"organization\": null,\r\n          \"biometricStatus\": false,\r\n          \"dateOfBirth\": \"1979-06-15\",\r\n          \"deceasedDateTime\": null,\r\n          \"identifier\": {\r\n            \"identifier\": [\r\n              {\r\n                \"type\": \"HospitalNumber\",\r\n                \"value\": \"344\",\r\n                \"assignerId\": 1\r\n              }\r\n            ]\r\n          },\r\n          \"contact\": null,\r\n          \"contactPoint\": {\r\n            \"contactPoint\": [\r\n              {\r\n                \"type\": \"email\",\r\n                \"value\": \"guest@lamisplus.org\"\r\n              },\r\n              {\r\n                \"type\": \"altphone\",\r\n                \"value\": \"2344444444\"\r\n              },\r\n              {\r\n                \"type\": \"phone\",\r\n                \"value\": \"2344444444\"\r\n              }\r\n            ]\r\n          },\r\n          \"address\": {\r\n            \"address\": [\r\n              {\r\n                \"city\": \"abuha\",\r\n                \"line\": [\r\n                  \"abuja\"\r\n                ],\r\n                \"stateId\": 2,\r\n                \"district\": \"39\",\r\n                \"countryId\": 1,\r\n                \"postalCode\": \"\",\r\n                \"organisationUnitId\": 0\r\n              }\r\n            ]\r\n          },\r\n          \"dateOfRegistration\": \"2022-09-02\",\r\n          \"checkInDate\": null,\r\n          \"encounterDate\": null,\r\n          \"currentStatus\": \"ACTIVE ON ART\",\r\n          \"enrollment\": {\r\n            \"facilityId\": 1616,\r\n            \"id\": 2,\r\n            \"uniqueId\": \"344\",\r\n            \"entryPointId\": 16,\r\n            \"targetGroupId\": 151,\r\n            \"dateConfirmedHiv\": \"2022-09-02\",\r\n            \"dateEnrolledPMTCT\": null,\r\n            \"sourceOfReferrerId\": 43,\r\n            \"timeHivDiagnosis\": null,\r\n            \"pregnant\": null,\r\n            \"breastfeeding\": null,\r\n            \"dateOfRegistration\": \"2022-09-02\",\r\n            \"statusAtRegistrationId\": 54,\r\n            \"enrollmentSettingId\": 51,\r\n            \"dateStarted\": null,\r\n            \"personId\": 3,\r\n            \"facilityName\": \"\",\r\n            \"ovcNumber\": \"\",\r\n            \"dateOfLpm\": null,\r\n            \"pregnancyStatusId\": 72,\r\n            \"tbStatusId\": 67,\r\n            \"visitId\": 4,\r\n            \"houseHoldNumber\": null,\r\n            \"careEntryPointOther\": \"\",\r\n            \"referredToOVCPartner\": \"\",\r\n            \"referredFromOVCPartner\": \"\",\r\n            \"dateReferredToOVCPartner\": null,\r\n            \"dateReferredFromOVCPartner\": null\r\n          },\r\n          \"artCommence\": {\r\n            \"id\": 5,\r\n            \"visitDate\": \"2022-09-16\",\r\n            \"cd4\": 34,\r\n            \"cd4Percentage\": 34,\r\n            \"isCommencement\": true,\r\n            \"functionalStatusId\": 123,\r\n            \"clinicalNote\": \"test\",\r\n            \"uuid\": \"7176ec2d-c929-4ced-9349-7ddf5ebf5697\",\r\n            \"hivEnrollmentId\": null,\r\n            \"whoStagingId\": 119,\r\n            \"regimenId\": 1,\r\n            \"regimenTypeId\": 1,\r\n            \"vitalSignId\": 3,\r\n            \"facilityId\": 1616,\r\n            \"personId\": 3,\r\n            \"clinicalStageId\": 119,\r\n            \"lmpDate\": null,\r\n            \"visitId\": 4,\r\n            \"vitalSignDto\": {\r\n              \"id\": 3,\r\n              \"bodyWeight\": 33,\r\n              \"diastolic\": 90,\r\n              \"captureDate\": null,\r\n              \"height\": 90,\r\n              \"personId\": 3,\r\n              \"visitId\": 4,\r\n              \"systolic\": 90,\r\n              \"temperature\": 36,\r\n              \"pulse\": 45,\r\n              \"respiratoryRate\": 44,\r\n              \"archived\": 0,\r\n              \"facilityId\": 1616\r\n            },\r\n            \"isViralLoadAtStartOfArt\": false,\r\n            \"viralLoadAtStartOfArt\": null,\r\n            \"dateOfViralLoadAtStartOfArt\": null\r\n          },\r\n          \"artClinicVisits\": [],\r\n          \"artPharmacyRefills\": null,\r\n          \"mentalHealth\": true,\r\n          \"commenced\": true,\r\n          \"enrolled\": true,\r\n          \"clinicalEvaluation\": true,\r\n          \"isDateOfBirthEstimated\": true\r\n        },\r\n      \r\n      ]\r\n\r\n  return (\r\n    <div>\r\n\r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Find Patient \"\r\n              columns={[\r\n              // { title: \" ID\", field: \"Id\" },\r\n                {\r\n                  title: \"Patient Name\",\r\n                  field: \"name\",\r\n                },\r\n                { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n                { title: \"Sex\", field: \"gender\", filtering: false },\r\n                { title: \"Age\", field: \"age\", filtering: false },\r\n                //{ title: \"Enrollment Status\", field: \"v_status\", filtering: false },\r\n                //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n                // { title: \"ART Status\", field: \"status\", filtering: false },\r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              isLoading={loading}\r\n              data={ patientList.map((row) => ({\r\n                  //Id: manager.id,\r\n                    name:row.currentStatus!== \"Not Enrolled\" ?\r\n                        (\r\n                           <>\r\n                            <Link\r\n                            to ={{\r\n                                pathname: \"/patient-history\",\r\n                                state: { patientObj: row  }\r\n                            }}\r\n\r\n                            title={\"Click to view patient dashboard\"}\r\n                            > {row.personDto.firstName + \" \" + row.personDto.surname}\r\n                            </Link>\r\n                            </>\r\n                        ):\r\n                        (\r\n                            <>\r\n                             <Link\r\n                                to={{\r\n                                    pathname: \"/enroll-patient\",\r\n                                    state: { patientId : row.id, patientObj: row }\r\n                                }}\r\n \r\n                             title={\"Enroll Patient\"}\r\n                             > {row.personDto.firstName + \" \" + row.personDto.surname}\r\n                             </Link>\r\n                             </>\r\n                         ),\r\n                    hospital_number: getHospitalNumber(row.personDto.identifier),\r\n                    gender:row && row.personDto.sex ? row.personDto.sex : \"\",\r\n                    age: (row.personDto.dateOfBirth === 0 ||\r\n                        row.personDto.dateOfBirth === undefined ||\r\n                        row.personDto.dateOfBirth === null ||\r\n                        row.personDto.dateOfBirth === \"\" )\r\n                          ? 0\r\n                          : calculate_age(moment(row.personDto.dateOfBirth).format(\"DD-MM-YYYY\")),\r\n                    \r\n                    //status: (<Label color=\"blue\" size=\"mini\">{row.currentStatus}</Label>),\r\n                 \r\n                    actions:\r\n            \r\n                    <div>\r\n\r\n                                {row.currentStatus!== \"Not Enrolled\" ?\r\n                                    (\r\n                                        <>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: { patientObj: row.personDto  }\r\n                                                }}\r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Patient Dashboard</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    (\r\n                                        <>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/enroll-patient\",\r\n                                                    state: { patientId : row.id, patientObj: row }\r\n                                                }}\r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <TiArrowForward />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Enroll Patient</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link>\r\n                                        </>\r\n                                    )\r\n\r\n                                }\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import Highcharts from 'highcharts';\r\n\r\n// Radialize the colors\r\nHighcharts.setOptions({\r\n    colors: Highcharts.map(Highcharts.getOptions().colors, function (color) {\r\n        return {\r\n            radialGradient: {\r\n                cx: 0.5,\r\n                cy: 0.3,\r\n                r: 0.7\r\n            },\r\n            stops: [\r\n                [0, color],\r\n                [1, Highcharts.color(color).brighten(-0.3).get('rgb')] // darken\r\n            ]\r\n        };\r\n    })\r\n});\r\n\r\nexport const ReceivingArtByAge = {\r\n    chart: {\r\n        \r\n        plotBackgroundColor: null,\r\n        plotBorderWidth: null,\r\n        plotShadow: false,\r\n        type: 'pie'\r\n    },\r\n    title: {\r\n        text: 'Number of Adults and Children currently receiving ART by Age'\r\n    },\r\n    tooltip: {\r\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n    },\r\n    accessibility: {\r\n        point: {\r\n            valueSuffix: '%'\r\n        }\r\n    },\r\n    plotOptions: {\r\n        pie: {\r\n            allowPointSelect: true,\r\n            cursor: 'pointer',\r\n            dataLabels: {\r\n                enabled: true,\r\n                format: '<b>{point.name}</b>: {point.percentage:.1f} %',\r\n                connectorColor: 'black'\r\n            },\r\n            showInLegend: true\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'Currently Receiving ART By Age',\r\n        data: [\r\n            { name: '25 + ',  sliced: true, y: 61.41 },\r\n            { name: '20-24 ', y: 11.84 },\r\n            { name: '10-19 ', y: 10.85 },\r\n            { name: '≤ 9 ', y: 4.67 },\r\n           \r\n        ]\r\n    }]\r\n};","export const ReceivingArtBySex = {\r\n    chart: {\r\n        plotBackgroundColor: null,\r\n        plotBorderWidth: 0,\r\n        plotShadow: false\r\n    },\r\n    title: {\r\n        text: 'Number of Adults and Children newly enrolled on ART by Sex',\r\n        align: 'center',\r\n        verticalAlign: 'middle',\r\n        y: -160\r\n    },\r\n    tooltip: {\r\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n    },\r\n    accessibility: {\r\n        point: {\r\n            valueSuffix: '%'\r\n        }\r\n    },\r\n    plotOptions: {\r\n        pie: {\r\n            \r\n            dataLabels: {\r\n                enabled: true,\r\n                distance: -50,\r\n                format: '<b>{point.name}</b>: {point.percentage:.1f} %',\r\n                style: {\r\n                    fontWeight: 'bold',\r\n                    color: 'white'\r\n                }\r\n            },\r\n            startAngle: -90,\r\n            endAngle: 90,\r\n            center: ['50%', '75%'],\r\n            size: '110%',\r\n            showInLegend: true\r\n        }\r\n    },\r\n    series: [{\r\n        type: 'pie',\r\n        name: 'Newly Enrolled on ART ',\r\n        innerSize: '50%',\r\n        data: [\r\n            ['Male', 58.9],\r\n            ['Female', 13.29],\r\n            \r\n        ]\r\n    }]\r\n};","import React, { useState } from 'react';\r\n\r\nimport { Col, Form,CardBody,  Row,CardTitle, CardText,\r\n   } from \"reactstrap\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Highcharts from 'highcharts';\r\n import HighchartsReact from 'highcharts-react-official';\r\nimport {NewlyEnrolledArtBySex} from './Highcharts/NewlyEnrolledArtBySex';\r\nimport {NewlyEnrolledArtByAge} from './Highcharts/NewlyEnrolledArtByAge';\r\nimport {ReceivingArtByAge}  from './Highcharts/ReceivingArtByAge';\r\nimport {ReceivingArtBySex} from './Highcharts/ReceivingArtBySex';\r\nimport { Progress } from 'reactstrap';\r\n\r\n\r\n// Load Highcharts modules\r\n//require(\"highcharts/modules/exporting\")(Highcharts);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n},\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst SummaryView = (props) => {\r\n  const classes = useStyles();\r\n  const [chartValue, setChartValue] = useState(\"\");\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const toggle = () => setDropdownOpen(!dropdownOpen);\r\n  const [state, setState] = useState({ activeItem: 'gamepad' })\r\n\r\n  const handleItemClick = (e, { name }) => setState({ activeItem: name })\r\n  const { activeItem } = state\r\n  const chartPage  = e => {\r\n\r\n    setChartValue(e)\r\n  }\r\n\r\n  //Menu Icon \r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div  spacing={5} style={{ padding: 20 }} >\r\n      <Row>\r\n        <Col md={12}>\r\n          {/* The second Column Card Layout  */}\r\n        <Row>\r\n                 \r\n                  <Col  lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\r\n                  <Card><CardBody>\r\n                    <HighchartsReact highcharts={Highcharts} options={ReceivingArtBySex} />\r\n                  </CardBody></Card>\r\n                  </Col>\r\n                  <Col  lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\r\n                  <Card><CardBody>\r\n                    <HighchartsReact highcharts={Highcharts} options={ReceivingArtByAge} />\r\n                  </CardBody></Card>\r\n                  </Col>\r\n              </Row>\r\n\r\n           \r\n        </Col>\r\n      </Row>\r\n\r\n      \r\n\r\n      \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SummaryView;\r\n","import React, { Fragment } from \"react\";\r\n// BS\r\nimport { Dropdown, Nav, Tab } from \"react-bootstrap\";\r\n/// Scroll\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { Link } from \"react-router-dom\";\r\n// images\r\nimport SummaryView from './DashboardAnalytics/SummaryView/Index';\r\nimport Highcharts from 'highcharts'\r\nimport HighchartsReact from 'highcharts-react-official'\r\nimport {NewlyEnrolledArtBySex} from './DashboardAnalytics/SummaryView/Highcharts/NewlyEnrolledArtBySex';\r\n\r\nconst options = {\r\n  chart: {\r\n    type: 'column'\r\n},\r\n\r\ntitle: {\r\n    text: 'Viral Load Cascade among new patients eligible after 6 months'\r\n},\r\n\r\nsubtitle: {\r\n    text: ''\r\n},\r\n\r\nlegend: {\r\n    align: 'right',\r\n    verticalAlign: 'middle',\r\n    layout: 'vertical'\r\n},\r\n\r\nxAxis: {\r\n    categories: ['Number Eligble', 'Number of Sample Collected', 'Number Tested', 'Number Suppressed'],\r\n    labels: {\r\n        x: -10\r\n    }\r\n},\r\n\r\nyAxis: {\r\n    allowDecimals: false,\r\n    title: {\r\n        text: 'Amount'\r\n    }\r\n},\r\n\r\nseries: [{\r\n    name: 'Number Eligble',\r\n    data: [20, 40, 30, 3]\r\n}, {\r\n    name: 'Number of Sample Collected',\r\n    data: [62, 41, 22, 22]\r\n}, {\r\n    name: 'Number Tested',\r\n    data: [200, 45, 30,20]\r\n}, {\r\n  name: 'Number Suppressed',\r\n  data: [40, 40, 10, 90]\r\n}],\r\n\r\nresponsive: {\r\n    rules: [{\r\n        condition: {\r\n            maxWidth: 500\r\n        },\r\n        chartOptions: {\r\n            legend: {\r\n                align: 'center',\r\n                verticalAlign: 'bottom',\r\n                layout: 'horizontal'\r\n            },\r\n            yAxis: {\r\n                labels: {\r\n                    align: 'left',\r\n                    x: 0,\r\n                    y: -5\r\n                },\r\n                title: {\r\n                    text: null\r\n                }\r\n            },\r\n            subtitle: {\r\n                text: null\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            }\r\n        }\r\n    }]\r\n}\r\n}\r\nconst options2 = {\r\n  chart: {\r\n    type: 'column'\r\n},\r\n\r\ntitle: {\r\n    text: 'Viral Load Cascade among patients currently on ART eligible after 12 months of last VL result'\r\n},\r\n\r\nsubtitle: {\r\n    text: ''\r\n},\r\n\r\nlegend: {\r\n    align: 'right',\r\n    verticalAlign: 'middle',\r\n    layout: 'vertical'\r\n},\r\n\r\nxAxis: {\r\n    categories: ['Number Eligble', 'Number of Sample Collected', 'Number Tested', 'Number Suppressed'],\r\n    labels: {\r\n        x: -10\r\n    }\r\n},\r\n\r\nyAxis: {\r\n    allowDecimals: false,\r\n    title: {\r\n        text: 'Amount'\r\n    }\r\n},\r\n\r\nseries: [{\r\n    name: 'Number Eligble',\r\n    data: [200, 40, 30, 3]\r\n}, {\r\n    name: 'Number of Sample Collected',\r\n    data: [62, 41, 22, 22]\r\n}, {\r\n    name: 'Number Tested',\r\n    data: [2000, 450, 300,200]\r\n}, {\r\n  name: 'Number Suppressed',\r\n  data: [40, 40, 100, 90]\r\n}],\r\n\r\nresponsive: {\r\n    rules: [{\r\n        condition: {\r\n            maxWidth: 500\r\n        },\r\n        chartOptions: {\r\n            legend: {\r\n                align: 'center',\r\n                verticalAlign: 'bottom',\r\n                layout: 'horizontal'\r\n            },\r\n            yAxis: {\r\n                labels: {\r\n                    align: 'left',\r\n                    x: 0,\r\n                    y: -5\r\n                },\r\n                title: {\r\n                    text: null\r\n                }\r\n            },\r\n            subtitle: {\r\n                text: null\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            }\r\n        }\r\n    }]\r\n}\r\n}\r\nconst Widget = () => {\r\n  return (\r\n    <Fragment>     \r\n      <div className=\"row\">\r\n       <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-primary text-danger\">\r\n                <i class=\"fa fa-user-plus\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">NEWLY DIAGNOSED HIV+</p>\r\n                  <h4 className=\"mb-0\">3280</h4>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-warning text-warning\">\r\n                <i class=\"fa fa-heartbeat\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">CURRENT ON ART</p>\r\n                  <h4 className=\"mb-0\">2570</h4>\r\n                  {/* <span className=\"badge badge-warning\">+3.5%</span> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body  p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-danger text-danger\">\r\n                <i class=\"fa fa-compress\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">VIRALLY SUPPRESSED</p>\r\n                  <h4 className=\"mb-0\">50</h4>\r\n                  {/* <span className=\"badge badge-danger\">-3.5%</span> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-success text-success\">\r\n                <i class=\"fa fa-users\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">CURRENTLY ACTIVE</p>\r\n                  <h4 className=\"mb-0\">2340</h4>\r\n                  {/* <span className=\"badge badge-success\">-3.5%</span> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <SummaryView />\r\n        <div className=\"col-xl-6 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <HighchartsReact\r\n            highcharts={Highcharts}\r\n            options={options}\r\n          />\r\n        </div>\r\n        <div className=\"col-xl-6 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <HighchartsReact\r\n            highcharts={Highcharts}\r\n            options={options2}\r\n          />\r\n        </div>\r\n        \r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Widget;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n//import { FaUserPlus } from \"react-icons/fa\";\r\nimport {TiArrowForward} from 'react-icons/ti'\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n    const [patientList, setPatientList] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            setLoading(true)\r\n            axios\r\n                .get(`${baseUrl}hiv/patients/iit`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    setLoading(false)\r\n                    setPatientList(response.data);\r\n                   \r\n                })\r\n                .catch((error) => {  \r\n                    setLoading(false)  \r\n                });        \r\n        }\r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now + \" year(s)\";\r\n        };\r\n    \r\n    const getHospitalNumber = (identifier) => {     \r\n        const identifiers = identifier;\r\n        const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');       \r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n\r\n  return (\r\n    <div>\r\n\r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Find Patient \"\r\n              columns={[\r\n              // { title: \" ID\", field: \"Id\" },\r\n                {\r\n                  title: \"Patient Name\",\r\n                  field: \"name\",\r\n                },\r\n                { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n                { title: \"Sex\", field: \"gender\", filtering: false },\r\n                { title: \"Age\", field: \"age\", filtering: false },\r\n                //{ title: \"Enrollment Status\", field: \"v_status\", filtering: false },\r\n                //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n                { title: \"ART Status\", field: \"status\", filtering: false },\r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              isLoading={loading}\r\n              data={ patientList.map((row) => ({\r\n                  //Id: manager.id,\r\n                    name:row.currentStatus!== \"Not Enrolled\" ?\r\n                        (\r\n                           <>\r\n                            <Link\r\n                            to ={{\r\n                                pathname: \"/patient-history\",\r\n                                state: { patientObj: row  }\r\n                            }}\r\n\r\n                            title={\"Click to view patient dashboard\"}\r\n                            > {row.firstName + \" \" + row.surname}\r\n                            </Link>\r\n                            </>\r\n                        ):\r\n                        (\r\n                            <>\r\n                             <Link\r\n                                to={{\r\n                                    pathname: \"/enroll-patient\",\r\n                                    state: { patientId : row.id, patientObj: row }\r\n                                }}\r\n \r\n                             title={\"Enroll Patient\"}\r\n                             > {row.firstName + \" \" + row.surname}\r\n                             </Link>\r\n                             </>\r\n                         ),\r\n                    hospital_number: getHospitalNumber(row.identifier),\r\n                    gender:row && row.sex ? row.sex : \"\",\r\n                    age: (row.dateOfBirth === 0 ||\r\n                        row.dateOfBirth === undefined ||\r\n                        row.dateOfBirth === null ||\r\n                        row.dateOfBirth === \"\" )\r\n                          ? 0\r\n                          : calculate_age(moment(row.dateOfBirth).format(\"DD-MM-YYYY\")),\r\n                    \r\n                    status: (<Label color=\"blue\" size=\"mini\">{row.currentStatus}</Label>),\r\n                 \r\n                    actions:\r\n            \r\n                    <div>\r\n\r\n                                {row.currentStatus!== \"Not Enrolled\" ?\r\n                                    (\r\n                                        <>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: { patientObj: row  }\r\n                                                }}\r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Patient Dashboard</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    (\r\n                                        <>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/enroll-patient\",\r\n                                                    state: { patientId : row.id, patientObj: row }\r\n                                                }}\r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <TiArrowForward />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Enroll Patient</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link>\r\n                                        </>\r\n                                    )\r\n\r\n                                }\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import React, {useState, Fragment } from \"react\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport Dashboard from './Patient/PatientList'\r\nimport VisualisationHome from './Visualisation/Index'\r\nimport LostToFollowUp from './Patient/PatientListIit'\r\nimport { Link } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button';\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\n//import PageTitle from \"./../layouts/PageTitle\";\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n    const [key, setKey] = useState('home');\r\n\r\n\r\n  return (\r\n    <Fragment>  \r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4>PMTCT</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Link to={\"register-patient\"}>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end mb-10\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n                style={{backgroundColor:'#014d88'}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\r\n            </Button>\r\n        </Link>\r\n        <br/><br/>\r\n      <Row>       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n                  \r\n                  <Tab eventKey=\"home\" title=\"Find Patients\">                   \r\n                    <Dashboard />\r\n                  </Tab>\r\n                 \r\n                  <Tab eventKey=\"visualization\" title=\"Data Visualisation\">                   \r\n                    <VisualisationHome />\r\n                  </Tab>                    \r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n        Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n        } from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nconst CaptureBiometric = (props) => {\r\n    const classes = useStyles()\r\n    const biometricDevices = props.biometricDevices\r\n    const patientID= props && props.patientId ? props.patientId : \"\"\r\n    \r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:patientID, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState(props.biometricDevices);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n   // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([])\r\n     console.log(biometricDevices)\r\n    const buttonSx = {\r\n      ...(success && {\r\n        bgcolor: green[500],\r\n        '&:hover': {\r\n          bgcolor: green[700],\r\n        },\r\n      }),\r\n    };\r\n\r\n\r\n    useEffect(() => {      \r\n        TemplateType();\r\n        if(objValues.device===\"\"){\r\n            setshowCapture(false)\r\n        }\r\n        \r\n      }, []);\r\n     //Get list of Finger index\r\n     const TemplateType =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setFingerType(response.data);\r\n           })\r\n           .catch((error) => {\r\n           });\r\n       \r\n     }\r\n\r\n     //check if device is plugged or not \r\n     const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        console.log(checkUrl)\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n           .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n            if(response.data.errorType ===\"ERROR\"){\r\n                toast.error(response.data.errorName + \" is not plug\");\r\n                //setshowCapture(true)\r\n            }else{\r\n                setshowCapture(true)\r\n            }\r\n           })\r\n           .catch((error) => {\r\n           });\r\n     }\r\n     // handle the input changes \r\n\r\n     const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //to capture  selected index finger \r\n    const captureFinger = (e) => {        \r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                  setLoading(true);\r\n                  if(response.data.type ===\"ERROR\"){                   \r\n                    setLoading(false);\r\n                    setTryAgain(true);\r\n                    window.setTimeout(() => {\r\n                        setTryAgain(false);\r\n                      }, 5000);\r\n                    toast.error(response.data.message.ERROR);\r\n                  }else{\r\n                    const templateType= response.data.templateType\r\n                    setTryAgain(false);\r\n                    setSuccess(true)\r\n                    window.setTimeout(() => {\r\n                        setSuccess(false)\r\n                        setLoading(false);                        \r\n                      }, 5000);\r\n                                        \r\n                    setCapturedFingered([...capturedFingered, response.data])\r\n                    fingerType.splice(templateType, 1);\r\n                    setFingerType([...fingerType]);\r\n                  }\r\n                  //toast.success(\"Record save successful\");\r\n              })\r\n              .catch(error => {                 \r\n              });\r\n        }\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {        \r\n        e.preventDefault();\r\n        if(capturedFingered.length > 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1]\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                toast.success(\"Biometric save successful\");\r\n                setCapturedFingered([])\r\n                props.setPatientBiometricStatus(true)\r\n                props.togglestatus()\r\n            })\r\n            .catch(error => {\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }else{\r\n            \r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n  }  \r\n    \r\n // console.log(capturedFingered)\r\n\r\n    return (\r\n        <div >\r\n            <Card >\r\n                <CardBody>\r\n                    <Modal isOpen={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"lg\">\r\n                        <Form >\r\n                            <ModalHeader toggle={props.togglestatus}>capture Biometric</ModalHeader>\r\n                            <ModalBody>\r\n                                <Card>\r\n                                {/* <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader> */}\r\n                                    <CardBody>\r\n                                    <Row form>\r\n                                    <ToastContainer />\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Device </Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"device\"\r\n                                                    id=\"device\"\r\n                                                    onChange={checkDevice}\r\n                                                    value={objValues.device}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Device </option>\r\n                                                {biometricDevices.map(({ id, name }) => (\r\n                                                    <option key={id} value={name}>\r\n                                                        {name}\r\n                                                    </option>\r\n                                                ))}\r\n                                              \r\n                                            </Input>\r\n                                            {errors.device !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.device}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Finger </option>\r\n\r\n                                                {fingerType.map((value) => (\r\n                                                    <option key={value.id} value={value.display}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                            {errors.templateType !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.templateType}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        \r\n\r\n                                        <Col md={4}>\r\n                                        \r\n                                        <MatButton\r\n                                            type='button'\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={captureFinger}\r\n                                            className={'mt-4'}\r\n                                            startIcon={<FingerprintIcon />}\r\n                                        >\r\n                                            Capture Finger\r\n                                        </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n                                        \r\n                                        </>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                        }\r\n                                        {/* <img width='500' height='200' src={responseImage}/> */}\r\n                                        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                                       \r\n                                     {loading && (\r\n                                        <>\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                </Fab>\r\n                                                {loading && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: green[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {tryAgain && (\r\n                                        <>\r\n                                        \r\n\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                 <FingerprintIcon />\r\n                                                </Fab>\r\n                                                {tryAgain && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: red[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            Click to Recapture Again\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {/*  */}\r\n                                        </Col>\r\n                                       \r\n                                            \r\n                                        </Row>\r\n\r\n                                    <Row>\r\n                                 {capturedFingered.length >=1 ? (  \r\n                                     <>                               \r\n                                    <Col md={12} >\r\n                                        <h3>Captured Fingerprints</h3>\r\n                                    </Col>\r\n                                    <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {capturedFingered.map((x) => (\r\n                                                <List.Item>\r\n                                                    {/* <List.Header><Icon name='cancel'  color='red' /> </List.Header> */}\r\n                                                    <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                    {/* <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col> */}\r\n                                    <br/><br/><br/><br/><br/><br/>\r\n                                        <Col md={12} >\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={saveBiometrics}\r\n                                                // className={classes.button}\r\n                                                startIcon={<SaveIcon/>}\r\n                                            >\r\n                                                Save Capture\r\n                                            </MatButton>\r\n                                        </Col>\r\n                                    </> \r\n                                    )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                    </Row>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </ModalBody>\r\n                        </Form>\r\n\r\n                    </Modal>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CaptureBiometric;\r\n","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Link } from 'react-router-dom'\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\n//import Chip from '@material-ui/core/Chip';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Button } from 'semantic-ui-react';\r\nimport {Label,} from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CaptureBiometric from './CaptureBiometric';\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  const patientCurrentStatus=props.patientObj && props.patientObj.currentStatus===\"Died (Confirmed)\" ? true : false ;\r\n  const patientObjs = props.patientObj ? props.patientObj : {}\r\n  const permissions= props.permissions ? props.permissions : [];\r\n  const [patientObj, setpatientObj] = useState(patientObjs)\r\n  const [patientBiometricStatus, setPatientBiometricStatus]= useState(props.patientObj.biometricStatus);\r\n  const [biometricStatus, setBiometricStatus] = useState(false);\r\n  const [devices, setDevices] = useState([]);\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  const [biometricModal, setBiometricModal] = useState(false);\r\n  const BiometricModalToggle = () => setBiometricModal(!biometricModal);\r\n  const [hivStatus, setHivStatus] = useState();\r\n  const [artModal, setArtModal] = useState(false);\r\n  const Arttoggle = () => setArtModal(!artModal);\r\n  useEffect(() => {\r\n    PatientCurrentStatus();\r\n    CheckBiometric();\r\n  }, [props.patientObj]);\r\n\r\n  //Get list of KP\r\n  const CheckBiometric =()=>{\r\n      axios\r\n        .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setBiometricStatus(response.data);\r\n            if(response.data===true){\r\n              axios\r\n                  .get(`${baseUrl}biometrics/devices`,\r\n                      { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                  )\r\n                  .then((response) => {\r\n                      setDevices(response.data);\r\n                      \r\n                  })\r\n                  .catch((error) => {\r\n                      console.log(error)\r\n                  });\r\n            \r\n              }\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    \r\n  }\r\n    ///GET LIST OF Patients\r\n    async function PatientCurrentStatus() {\r\n        axios\r\n            .get(`${baseUrl}hiv/status/patient-current/${patientObj.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n\r\n              setHivStatus(response.data);\r\n            })\r\n            .catch((error) => {    \r\n            });        \r\n    }\r\n    const get_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now ;\r\n    }\r\n    const calculate_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now + \" year(s)\";\r\n    };\r\n\r\n    const loadChildEvaluation =(row)=> {\r\n      props.setActiveContent('child-evaluation')\r\n    }\r\n    const capturePatientBiometric =(row)=> {\r\n      //props.setActiveContent('biometrics')\r\n      props.setActiveContent({...props.activeContent, route:'biometrics', obj:row})\r\n    }\r\n    const loadArtCommencement =(row)=> {\r\n      props.setActiveContent('art-commencement')\r\n    }\r\n    \r\n    const loadArt =(row)=> {\r\n        setpatientObj({...patientObj, ...row});\r\n            setArtModal(!artModal)\r\n    }\r\n    \r\n    const CurrentStatus = ()=>{\r\n\r\n          return (  <Label color=\"blue\" size=\"mini\">{hivStatus}</Label>);\r\n  }\r\n    const getHospitalNumber = (identifier) => {     \r\n      const identifiers = identifier;\r\n      const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');       \r\n      return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n    const getPhoneNumber = (identifier) => {     \r\n      const identifiers = identifier;\r\n      const phoneNumber = identifiers.contactPoint.find(obj => obj.type == 'phone');       \r\n      return phoneNumber ? phoneNumber.value : '';\r\n    };\r\n    const getAddress = (identifier) => {     \r\n      const identifiers = identifier;\r\n      const address = identifiers.address.find(obj => obj.city);      \r\n      return address ? address.city : '';\r\n    };\r\n    const handleBiometricCapture = (id) => { \r\n      let patientObjID= id\r\n      setBiometricModal(!biometricModal);\r\n    }\r\n\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n       <ExpansionPanel defaultExpanded>\r\n\r\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n                \r\n                <Row>\r\n                \r\n                    <Col md={12}>\r\n                    <Row className={\"mt-1\"}>\r\n                    <Col md={12} className={classes.root2}>\r\n                        <b style={{fontSize: \"25px\"}}>\r\n                        {patientObj.firstName + \" \" + patientObj.surname }\r\n                        </b>\r\n                        <Link to={\"/\"} >\r\n                        <ButtonMui\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-2 mr-2 mt-2\"\r\n                            //startIcon={<FaUserPlus size=\"10\"/>}\r\n                            startIcon={<TiArrowBack  />}\r\n                            style={{backgroundColor:\"rgb(153, 46, 98)\", color:'#fff', height:'35px'}}\r\n\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                        </ButtonMui>\r\n                      </Link>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Patient ID : <b>{getHospitalNumber(patientObj.identifier) }</b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        Date Of Birth : <b>{patientObj.dateOfBirth }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Age : <b>{calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))}</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Gender :{\" \"}\r\n                        <b>{patientObj.sex && patientObj.sex!==null ?  patientObj.sex : '' }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Phone Number : <b>{getPhoneNumber(patientObj.contactPoint)}</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Address : <b>{getAddress(patientObj.address)} </b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    <Col md={12}>\r\n                      {biometricStatus===true ? (\r\n                          <>\r\n                              <div >\r\n                                  <Typography variant=\"caption\">\r\n                                      <Label color={props.patientObj.biometricStatus===true? \"green\" : \"red\"} size={\"mini\"}>\r\n                                          Biometric Status\r\n                                          <Label.Detail>{props.patientObj.biometricStatus===true? \"Captured\" : \"Not Capture\"}</Label.Detail>\r\n                                      </Label>\r\n                                      {props.patientObj.biometricStatus!==true ? (\r\n                                    \r\n                                          <>\r\n                                             \r\n                                                  <>\r\n                                                  <Label as='a' color='teal' onClick={() => capturePatientBiometric(patientObj)} tag>\r\n                                                      Capture Now\r\n                                                  </Label>\r\n                                                  </>\r\n                                            \r\n                                          </>\r\n                                      )\r\n                                      :\"\"\r\n                                      }\r\n                                      \r\n                                  </Typography>\r\n                              </div>\r\n                          </>\r\n                          )\r\n                          :\r\n                          <>\r\n                              <div >\r\n                                  <Typography variant=\"caption\">\r\n                                      <Label color={\"red\"} size={\"mini\"}>\r\n                                          Biometric Not Install\r\n                                          \r\n                                      </Label>\r\n                                    \r\n                                  </Typography>\r\n                              </div>\r\n                          </>\r\n                      }\r\n                    </Col>\r\n                    </Row>\r\n                    </Col>\r\n                </Row>\r\n            \r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails className={classes.details}>\r\n                \r\n                    {/* <Button\r\n                      color='red'\r\n                      content='BloodType'\r\n                      //icon='heart'\r\n                      label={{ basic: true, color: 'red', pointing: 'left', content: 'AB+' }}\r\n                    /> */}                                  \r\n                    {/* <Button\r\n                        basic\r\n                        color='blue'\r\n                        content='Height'\r\n                        icon='fork'\r\n                        label={{\r\n                            as: 'a',\r\n                            basic: true,\r\n                            color: 'blue',\r\n                            pointing: 'left',\r\n                            content: '74.5 in',\r\n                        }}\r\n                      />               */}\r\n                      {/* <Button\r\n                        basic\r\n                        color='blue'\r\n                        content='Weight'\r\n                        icon='fork'\r\n                        label={{\r\n                            as: 'a',\r\n                            basic: true,\r\n                            color: 'blue',\r\n                            pointing: 'left',\r\n                            content: '74.5 in',\r\n                        }}\r\n                      /> */}\r\n                               \r\n                {/* <div className={classes.column}>\r\n                  <Button primary  floated='left' onClick={() => get_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\")) > 5 ? loadAdultEvaluation(patientObj) :loadChildEvaluation(patientObj) }><span style={{fontSize:\"11px\"}}>Initial Clinic Evaluation</span></Button>\r\n                </div> */}\r\n                {/* {patientCurrentStatus !==true && props.patientObj.enrollment.targetGroupId !==\"456\" ?                   \r\n                  (\r\n                    <>\r\n                      <div className={classes.column}>\r\n                        <Button primary  floated='left' onClick={() => loadMentalHealthScreening(patientObj) }><span style={{fontSize:\"11px\"}}>Mental Health Screening</span></Button>\r\n                      </div>\r\n                    </>\r\n                  ) :\"\"           \r\n                } */}\r\n               {/* {patientObj.commenced!==true && (\r\n                <div className={classes.column} style={{paddingLeft:\"20px\"}}>\r\n                {\" \"}<Button primary onClick={() => loadArt(patientObj)} ><span style={{fontSize:\"11px\"}}>ART Commencement </span></Button>\r\n                </div>\r\n                )\r\n               }\r\n                     */}\r\n                </ExpansionPanelDetails>\r\n                <Divider />\r\n                <ExpansionPanelActions expandIcon={<ExpandMoreIcon />}>\r\n                \r\n                </ExpansionPanelActions>\r\n            </ExpansionPanel>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {Dropdown, Menu } from \"semantic-ui-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navItemText: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction SubMenu(props) {\r\n    const classes = useStyles();\r\n    let gender=\"\"\r\n    const patientObjs = props.patientObj ? props.patientObj : {}\r\n    const patientCurrentStatus=props.patientObj && props.patientObj.currentStatus===\"Died (Confirmed)\" ? true : false ;\r\n    const [patientObj, setpatientObj] = useState(patientObjs)\r\n    const [genderType, setGenderType] = useState()\r\n    let mentalStatus=false\r\n    let initialEvaluationStatus=false\r\n    useEffect(() => {\r\n        Observation();\r\n        gender =props.patientObj && props.patientObj.sex ? props.patientObj.sex : null\r\n        setGenderType(gender===\"Female\" ? true : false)\r\n    }, [props.patientObj]);\r\n     //Get list of RegimenLine\r\n     const Observation =()=>{\r\n        axios\r\n            .get(`${baseUrl}observation/person/${props.patientObj.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                const observation = response.data\r\n                const mental= observation.filter((x)=> x.type==='mental health')\r\n                const evaluation= observation.filter((x)=> x.type==='initial evaluation')\r\n                if(mental.length > 1){\r\n                    mentalStatus=true\r\n                }\r\n                if(evaluation.length > 1){\r\n                    initialEvaluationStatus=true\r\n                }\r\n\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });\r\n        \r\n        }\r\n    const loadAncPnc =(row)=> {\r\n        props.setActiveContent({...props.activeContent, route:'anc-pnc'})\r\n    }\r\n    const loadLabourDelivery =(row)=> {\r\n        props.setActiveContent({...props.activeContent, route:'labour-delivery'})\r\n    }\r\n    const onClickConsultation = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'consultation'})\r\n    }\r\n    const onClickHome = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n    }\r\n\r\n\r\n    return (\r\n         <div>\r\n            <Menu size=\"mini\" color={\"black\"} inverted >\r\n                <Menu.Item onClick={() => onClickHome()} > Home</Menu.Item>  \r\n                <Menu.Item onClick={() => loadAncPnc()} >PMTCT Enrollment</Menu.Item>                \r\n                <Menu.Item onClick={() => onClickConsultation()} >Follow Up Visit</Menu.Item>                \r\n                <Menu.Item onClick={() => loadLabourDelivery()} >Labour and Delivery</Menu.Item>\r\n                                   \r\n            </Menu>             \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default SubMenu;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\n// BS\r\nimport { Dropdown,} from \"react-bootstrap\";\r\n/// Scroll\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport {  Card,Accordion } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n      width: '100%',\r\n  },\r\n  heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      fontWeight: 'bolder',\r\n  },\r\n}));\r\nconst RecentHistory = (props) => {\r\n  const classes = useStyles();\r\n  const [vitaLoad, setViralLoad]=useState([])\r\n  const [refillList, setRefillList] = useState([])\r\n  const [clinicVisitList, setClinicVisitList] = useState([])\r\n  const [recentActivities, setRecentActivities] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  let history = useHistory();\r\n  const [\r\n    activeAccordionHeaderShadow,\r\n    setActiveAccordionHeaderShadow,\r\n  ] = useState(0);\r\n\r\n  useEffect(() => {\r\n    LaboratoryHistory();\r\n    PharmacyList();\r\n    ClinicVisitList();\r\n    RecentActivities();\r\n  }, [props.patientObj.id]);\r\n\r\n  //Get list of LaboratoryHistory\r\n  const RecentActivities =()=>{\r\n    axios\r\n       .get(`${baseUrl}hiv/patients/${props.patientObj.id}/activities?full=false`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n       )\r\n       .then((response) => {\r\n          setRecentActivities(response.data)\r\n       })\r\n       .catch((error) => {\r\n       //console.log(error);\r\n       });\r\n   \r\n  }\r\n  //Get list of LaboratoryHistory\r\n  const LaboratoryHistory =()=>{\r\n    axios\r\n       .get(`${baseUrl}laboratory/orders/patients/${props.patientObj.id}`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n       )\r\n       .then((response) => {\r\n           let LabObject= []\r\n                response.data.forEach(function(value, index, array) {\r\n                    const dataOrders = value.labOrder.tests                    \r\n                    if(dataOrders[index]) {\r\n                        dataOrders.forEach(function(value, index, array) {\r\n                            LabObject.push(value)\r\n                        })                       \r\n                    }                   \r\n                });\r\n              setViralLoad(LabObject)\r\n       })\r\n       .catch((error) => {\r\n       //console.log(error);\r\n       });\r\n   \r\n  }\r\n   //GET LIST Drug Refill\r\n   async function PharmacyList() {\r\n    setLoading(true)\r\n    axios\r\n        .get(`${baseUrl}hiv/art/pharmacy/patient?pageNo=0&pageSize=10&personId=${props.patientObj.id}`,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setLoading(false)\r\n            setRefillList(response.data);                \r\n        })\r\n        .catch((error) => {  \r\n            setLoading(false)  \r\n        });        \r\n  }\r\n   //GET LIST Drug Refill\r\n   async function ClinicVisitList() {\r\n    setLoading(true)\r\n    axios\r\n        .get(`${baseUrl}hiv/art/clinic-visit/person?pageNo=0&pageSize=10&personId=${props.patientObj.id}`,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setLoading(false)\r\n            setClinicVisitList(response.data);                \r\n        })\r\n        .catch((error) => {  \r\n            setLoading(false)  \r\n        });        \r\n  }\r\n  const labStatus =(status)=> {\r\n      if(status===0){\r\n        return \"timeline-badge info\"\r\n      }else if(status===1){\r\n        return \"timeline-badge warning\"\r\n      }else if(status===2){\r\n        return \"timeline-badge success\"\r\n      }else if(status===3){\r\n        return \"timeline-badge danger\"\r\n      }else if(status===4){\r\n        return \"timeline-badge primary\"\r\n      }else if(status===5){\r\n        return \"timeline-badge info\"\r\n      }else {\r\n        return \"timeline-badge secondary\"\r\n      }\r\n  }\r\n  const ActivityName =(name)=> {\r\n      if(name==='HIV Enrollment'){\r\n        return \"HE\"\r\n      }else if(name==='Pharmacy refill'){\r\n        return \"PR\"\r\n      }else if(name==='Clinical evaluation'){\r\n        return \"CE\"\r\n      }else if(name==='Clinic visit follow up'){\r\n        return \"CV\"\r\n      }else if(name==='ART Commencement'){\r\n        return \"AC\"\r\n      }else {\r\n        return \"RA\"\r\n      }\r\n  }\r\n  const regimenName =(regimenObj)=> {\r\n    let regimenArr = []\r\n    regimenObj.forEach(function (value, index, array) {\r\n      //console.log(value)\r\n        regimenArr.push(value['name'])\r\n    })\r\n    return regimenArr.toString();\r\n  }\r\n  const LoadViewPage =(row,action)=>{\r\n        \r\n    if(row.path==='Mental-health'){        \r\n        props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id, actionType:action})\r\n\r\n    }else if(row.path==='Art-commence'){\r\n        props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id, actionType:action})\r\n\r\n    }else if(row.path==='Clinical-evaluation'){\r\n        props.setActiveContent({...props.activeContent, route:'adult-clinic-eveluation-view', id:row.id, actionType:action})\r\n\r\n    }else if(row.path==='eac1'){\r\n        props.setActiveContent({...props.activeContent, route:'first-eac-history', id:row.id, actionType:action})\r\n    }\r\n    else if(row.path==='eac2'){\r\n        props.setActiveContent({...props.activeContent, route:'second-eac-history', id:row.id, actionType:action})\r\n    }\r\n    else if(row.path==='eac3'){\r\n        props.setActiveContent({...props.activeContent, route:'completed-eac-history', id:row.id, actionType:action})\r\n    }else if(row.path==='hiv-enrollment'){\r\n        history.push({\r\n            pathname: '/update-patient',\r\n            state: { id: row.id, patientObj:props.patientObj, actionType:action }\r\n        });\r\n        //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n    }else if(row.path==='pharmacy'){\r\n        //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n        props.setActiveContent({...props.activeContent, route:'pharmacy-update', id:row.id, activeTab:\"history\", actionType:action, obj:row})\r\n\r\n    }else if(row.path==='Laboratory'){\r\n        props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id, actionType:action})\r\n\r\n    }else if(row.path==='clinic-visit'){\r\n      props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, activeTab:\"history\",actionType:action, })\r\n\r\n  }else{\r\n\r\n    }\r\n    \r\n}\r\nconst LoadDeletePage =(row)=>{\r\n    \r\n    if(row.path==='Mental-health'){        \r\n        //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n        axios\r\n        .delete(`${baseUrl}observation/${row.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            toast.success(\"Record Deleted Successfully\");\r\n            RecentActivities()\r\n        })\r\n        .catch((error) => {\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n        });  \r\n    }else if(row.path==='Art-commence'){\r\n        //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n        axios\r\n        .delete(`${baseUrl}hiv/art/commencement/${row.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            toast.success(\"Record Deleted Successfully\");\r\n            RecentActivities()\r\n        })\r\n        .catch((error) => {\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n        });\r\n\r\n    }else if(row.path==='Clinical-evaluation'){\r\n        //props.setActiveContent({...props.activeContent, route:'adult-clinic-eveluation-view', id:row.id})\r\n        axios\r\n        .delete(`${baseUrl}observation/${row.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            toast.success(\"Record Deleted Successfully\");\r\n            RecentActivities()\r\n        })\r\n        .catch((error) => {\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n        });\r\n\r\n    }else if(row.path==='eac1'){\r\n        //props.setActiveContent({...props.activeContent, route:'first-eac-history', id:row.id})\r\n        axios\r\n        .delete(`${baseUrl}observation/eac/${row.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            toast.success(\"Record Deleted Successfully\");\r\n            RecentActivities()\r\n        })\r\n        .catch((error) => {\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n        });  \r\n    }\r\n    else if(row.path==='eac2'){\r\n        //props.setActiveContent({...props.activeContent, route:'second-eac-history', id:row.id})\r\n        axios\r\n        .delete(`${baseUrl}observation/eac/${row.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            toast.success(\"Record Deleted Successfully\");\r\n            RecentActivities()\r\n        })\r\n        .catch((error) => {\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n        });  \r\n    }\r\n    else if(row.path==='eac3'){\r\n        //props.setActiveContent({...props.activeContent, route:'completed-eac-history', id:row.id})\r\n        axios\r\n        .delete(`${baseUrl}observation/eac/${row.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            toast.success(\"Record Deleted Successfully\");\r\n            RecentActivities()\r\n        })\r\n        .catch((error) => {\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n        });  \r\n    }else if(row.path==='hiv-enrollment'){\r\n        axios\r\n        .delete(`${baseUrl}hiv/enrollment/${row.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            toast.success(\"Record Deleted Successfully\");\r\n            RecentActivities()\r\n        })\r\n        .catch((error) => {\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n        });  \r\n        //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n    }else if(row.path==='pharmacy'){\r\n        //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n        //props.setActiveContent({...props.activeContent, route:'pharmacy', id:row.id, activeTab:\"home\", actionType:\"update\", obj:row})\r\n        axios\r\n        .delete(`${baseUrl}art/pharmacy/${row.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            toast.success(\"Record Deleted Successfully\");\r\n            RecentActivities()\r\n        })\r\n        .catch((error) => {\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n        }); \r\n\r\n    }else if(row.path==='clinic-visit'){\r\n        //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n        axios\r\n        .delete(`${baseUrl}hiv/art/clinic-visit/${row.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            toast.success(\"Record Deleted Successfully\");\r\n            RecentActivities()\r\n        })\r\n        .catch((error) => {\r\n            if(error.response && error.response.data){\r\n                let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                toast.error(errorMessage);\r\n              }\r\n              else{\r\n                toast.error(\"Something went wrong. Please try again...\");\r\n              }\r\n        }); \r\n    }else{\r\n\r\n    }\r\n    \r\n}\r\nconst redirectLink=()=>{\r\n  props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n}\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* <Ext /> */}\r\n     \r\n      <div className=\"row\">\r\n      <div className=\"col-xl-4 col-xxl-4 col-lg-4\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header  border-0 pb-0\">\r\n              <h4 className=\"card-title\"> Recent Activities</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <PerfectScrollbar\r\n                style={{ height: \"370px\" }}\r\n                id=\"DZ_W_Todo1\"\r\n                className=\"widget-media dz-scroll ps ps--active-y\"\r\n              >\r\n                <Accordion\r\n                    className=\"accordion accordion-header-bg accordion-header-shadow accordion-rounded \"\r\n                    defaultActiveKey=\"0\"\r\n                  >\r\n                    <>\r\n                    {recentActivities.map((data, i)=>\r\n                    <div className=\"accordion-item\" key={i}>\r\n                      <Accordion.Toggle\r\n                          as={Card.Text}\r\n                          eventKey={`${i}`}\r\n                          className={`accordion-header ${\r\n                            activeAccordionHeaderShadow === 1 ? \"\" : \"collapsed\"\r\n                          } accordion-header-info`}\r\n                          onClick={() =>\r\n                            setActiveAccordionHeaderShadow(\r\n                              activeAccordionHeaderShadow === 1 ? -1 : i\r\n                            )\r\n                          }\r\n                      >\r\n                      <span className=\"accordion-header-icon\"></span>\r\n                      <span className=\"accordion-header-text\">Visit Date : <span className=\"\">{data.date}</span> </span>\r\n                      <span className=\"accordion-header-indicator\"></span>\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse\r\n                      eventKey={`${i}`}\r\n                      className=\"accordion__body\"\r\n                    >\r\n                      <div className=\"accordion-body-text\">\r\n                      <ul className=\"timeline\">\r\n                        {data.activities && data.activities.map((activity,index) => ( \r\n                         \r\n                          <>\r\n                            <li>\r\n                              <div className=\"timeline-panel\">\r\n                              <div className={index % 2 == 0 ? \"media me-2 media-info\" : \"media me-2 media-success\"}>{ActivityName(activity.name)}</div>\r\n                              <div className=\"media-body\">\r\n                                <h5 className=\"mb-1\">{activity.name}</h5>\r\n                                <small className=\"d-block\">\r\n                                {activity.date}\r\n                                </small>\r\n                              </div>\r\n                              <Dropdown className=\"dropdown\">\r\n                                <Dropdown.Toggle\r\n                                variant=\" light\"\r\n                                className=\"i-false p-0 btn-info sharp\"\r\n                                >\r\n                                <svg\r\n                                  width=\"18px\"\r\n                                  height=\"18px\"\r\n                                  viewBox=\"0 0 24 24\"\r\n                                  version=\"1.1\"\r\n                                >\r\n                                  <g\r\n                                  stroke=\"none\"\r\n                                  strokeWidth=\"1\"\r\n                                  fill=\"none\"\r\n                                  fillRule=\"evenodd\"\r\n                                  >\r\n                                  <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                  <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\r\n                                  <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                  <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\r\n                                  </g>\r\n                                </svg>\r\n                                </Dropdown.Toggle>\r\n                                <Dropdown.Menu className=\"dropdown-menu\">\r\n                                {activity.viewable && ( <Dropdown.Item\r\n                                  className=\"dropdown-item\"\r\n                                  onClick={()=>LoadViewPage(activity,'view')}\r\n                                  >\r\n                                  View\r\n                                  </Dropdown.Item>\r\n                                )}\r\n                                {activity.viewable && ( <Dropdown.Item\r\n                                  className=\"dropdown-item\"\r\n                                  onClick={()=>LoadViewPage(activity,'update')}\r\n                                  >\r\n                                  Update\r\n                                  </Dropdown.Item>\r\n                                )}\r\n                                  {activity.deletable && (<Dropdown.Item\r\n                                  className=\"dropdown-item\"\r\n                                  to=\"/widget-basic\"\r\n                                  onClick={()=>LoadDeletePage(activity)}\r\n                                  >\r\n                                  Delete\r\n                                  </Dropdown.Item>\r\n                                  )}\r\n                                </Dropdown.Menu>\r\n                              </Dropdown>\r\n                              </div>\r\n                            </li>\r\n                          </>\r\n                        ))}                          \r\n                      </ul>\r\n                      </div>\r\n                    </Accordion.Collapse>\r\n                  </div>\r\n                )}\r\n                </>\r\n                </Accordion>\r\n                \r\n              </PerfectScrollbar>\r\n            </div>\r\n          </div>\r\n      </div>\r\n      <div className=\"col-xl-8 col-xxl-8 col-lg-8\">\r\n        <div className=\"card\">\r\n          <div className=\"card-header border-0 pb-0\">\r\n            <h4 className=\"card-title\">Visit Chart</h4>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <PerfectScrollbar\r\n              style={{ height: \"370px\" }}\r\n              id=\"DZ_W_TimeLine\"\r\n              className=\"widget-timeline dz-scroll height370 ps ps--active-y\"\r\n            >\r\n              <ul className=\"timeline\">\r\n                {vitaLoad.length >0 ? (\r\n                  <>\r\n                    {vitaLoad.map((test,index) => ( \r\n                    <>\r\n                      <li key={index}>\r\n                      <div className={labStatus(test.labTestOrderStatus)}></div>\r\n                      <span\r\n                        className=\"timeline-panel text-muted\"\r\n                        onClick={()=>redirectLink()}\r\n                        //to=\"\"\r\n                      >\r\n                        <h6 className=\"mb-0\">\r\n                          Test Order Date{\" \"}<br/>\r\n                          <strong className=\"text-primary\">{test.orderDate}</strong>\r\n                        </h6>\r\n                        {test.labTestGroupName!=='others' &&(<h6 className=\"mb-0\">\r\n                          Test Order{\" \"}<br/>\r\n                          <strong className=\"text-primary\">{test.labTestGroupName + \" - \" + test.labTestName}</strong>.\r\n                        </h6>\r\n                          )}\r\n                          {test.labTestGroupName==='others' &&(<h6 className=\"mb-0\">\r\n                          Test Order{\" \"}<br/>\r\n                          <strong className=\"text-primary\">{test.labTestName + \" - \" + test.viralLoadIndicationName}</strong>.\r\n                        </h6>\r\n                          )}\r\n                        \r\n                        <h6 className=\"mb-0\">\r\n                          Status{\" \"}<br/>\r\n                          <strong className=\"text-primary\">{test.labTestOrderStatusName}</strong>.\r\n                        </h6>\r\n                        \r\n                      </span>\r\n                      </li>\r\n                    </>\r\n\r\n                    ))}\r\n                  \r\n                  </>\r\n                  ) \r\n                  :\r\n                  <Alert\r\n                    variant=\"info\"\r\n                    className=\"alert-dismissible solid fade show\"\r\n                  >\r\n                    <p>No visit yet</p>\r\n                  </Alert>\r\n                }\r\n              </ul>\r\n            </PerfectScrollbar>\r\n          </div>\r\n        </div>\r\n      </div>\r\n     \r\n </div>\r\n      \r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RecentHistory;\r\n","import React, {useState, useEffect } from \"react\";\r\n// import { Link } from 'react-router-dom';\r\nimport { Table  } from \"react-bootstrap\";\r\nimport { Input, Label, FormGroup, } from \"reactstrap\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {Icon, List, Label as LabelSui} from 'semantic-ui-react'\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { url as baseUrl,token } from \"./../../../../api\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\nconst ADR = (props) => {\r\n  const [errors, setErrors] = useState({});\r\n  const classes = useStyles()\r\n  let temp = { ...errors }\r\n  const [prepSideEffect, setPrepSideEffect] = useState([]);\r\n\r\n  useEffect(() => {\r\n    PrepSideEffect();\r\n  }, []);\r\n       //Get list of PrepSideEffect\r\n       const PrepSideEffect =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/PREP_SIDE_EFFECTS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               //console.log(response.data);\r\n               setPrepSideEffect(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });\r\n       \r\n        }\r\n  const handAdrleInputChange = e => {\r\n    props.setAdrObj ({...props.adrObj,  [e.target.name]: e.target.value});\r\n  }\r\n   //Validations of the forms\r\n   const validate = () => {        \r\n    temp.adr = props.adrObj.adr ? \"\" : \"This field is required\"\r\n    temp.adrOnsetDate = props.adrObj.adrOnsetDate ? \"\" : \"This field is required\"\r\n\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n  const addADR = e => { \r\n    if(validate()){\r\n        props.setAdrList([...props.adrList, props.adrObj])\r\n    }else{\r\n      toast.error(\" Field are required \");\r\n    }\r\n  }\r\n  /* Remove ADR  function **/\r\n  const removeRelativeLocation = index => {       \r\n      props.adrList.splice(index, 1);\r\n      props.setAdrList([...props.adrList]);     \r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"form-group mb-3 col-md-5\">\r\n            <FormGroup>\r\n            <Label >ADR </Label>\r\n            <Input\r\n                type=\"select\"\r\n                name=\"adr\"\r\n                id=\"adr\"\r\n                value={props.adrObj.adr}\r\n                onChange={handAdrleInputChange}\r\n                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                required\r\n                >\r\n                  <option value=\"\"> Select</option>\r\n                    {prepSideEffect.map((value) => (\r\n                        <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                        </option>\r\n                    ))}\r\n            </Input>\r\n            {errors.adr !==\"\" ? (\r\n                <span className={classes.error}>{errors.adr}</span>\r\n            ) : \"\" }\r\n            </FormGroup>\r\n        </div>\r\n        <div className=\"form-group mb-3 col-md-5\">        \r\n        <FormGroup>\r\n            <Label > Onset Date</Label>\r\n            <Input\r\n                type=\"date\"\r\n                name=\"adrOnsetDate\"\r\n                id=\"adrOnsetDate\"\r\n                value={props.adrObj.adrOnsetDate}\r\n                onChange={handAdrleInputChange}\r\n                min={props.artStartDate}\r\n                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                required\r\n                > \r\n            </Input>\r\n            {errors.adrOnsetDate !==\"\" ? (\r\n                <span className={classes.error}>{errors.adrOnsetDate}</span>\r\n            ) : \"\" }\r\n            </FormGroup>\r\n        </div>\r\n        \r\n        <div className=\"form-group mb-3 col-md-2\">\r\n        <LabelSui as='a' color='black'  onClick={addADR}  size='tiny' style={{ marginTop:35}}>\r\n            <Icon name='plus' /> Add\r\n        </LabelSui>\r\n        </div>\r\n\r\n        {props.adrList.length >0 \r\n          ?\r\n            <List>\r\n            <Table  striped responsive>\r\n                  <thead >\r\n                      <tr>\r\n                          <th>ADR</th>\r\n                          <th>OnSetDate</th>\r\n                          <th ></th>\r\n                      </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                {props.adrList.map((relative, index) => (\r\n\r\n                  <RelativeList\r\n                      key={index}\r\n                      index={index}\r\n                      relative={relative}\r\n                      removeRelativeLocation={removeRelativeLocation}\r\n                  />\r\n                  ))}\r\n                  </tbody>\r\n                  </Table>\r\n            </List>\r\n            :\r\n            \"\"\r\n        }       \r\n      </div>\r\n    </div>\r\n     \r\n  );\r\n};\r\n\r\nfunction RelativeList({\r\n  relative,\r\n  index,\r\n  removeRelativeLocation,\r\n}) {\r\n\r\n\r\n  return (\r\n          <tr>\r\n              <th>{relative.adr}</th>\r\n              <th>{relative.adrOnsetDate}</th>\r\n              <th></th>\r\n              <th >\r\n                  <IconButton aria-label=\"delete\" size=\"small\" color=\"error\" onClick={() =>removeRelativeLocation(index)}>\r\n                      <DeleteIcon fontSize=\"inherit\" />\r\n                  </IconButton>\r\n                  \r\n              </th>\r\n          </tr> \r\n  );\r\n}\r\n\r\n\r\nexport default ADR;\r\n","import React, { useState } from \"react\";\r\nimport {  Table  } from \"react-bootstrap\";\r\nimport { Input, Label, FormGroup, } from \"reactstrap\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport moment from \"moment\";\r\nimport {Icon, List, Label as LabelSui} from 'semantic-ui-react'\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\nconst ADR = (props) => {\r\n  const [errors, setErrors] = useState({});\r\n  const classes = useStyles()\r\n  let temp = { ...errors }\r\n  const handleInfectionInputChange = e => {\r\n  props.setInfection ({...props.infection,  [e.target.name]: e.target.value});\r\n  }\r\n  //Validations of the forms\r\n  const validate = () => {        \r\n    temp.ondateInfection = props.infection.ondateInfection ? \"\" : \"This field is required\"\r\n    temp.illnessInfection = props.infection.illnessInfection ? \"\" : \"This field is required\"\r\n\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n    const addInfection = e => { \r\n      if(validate()){\r\n        props.setInfectionList([...props.infectionList, props.infection])\r\n      }else{\r\n        toast.error(\" Field are required \");\r\n      }\r\n    \r\n    }\r\n    /* Remove ADR  function **/\r\n    const removeInfection = index => {       \r\n    props.infectionList.splice(index, 1);\r\n    props.setInfectionList([...props.infectionList]);\r\n        \r\n    };\r\n                                            \r\n\r\n  return (\r\n    <div>\r\n       <div className=\"row\">\r\n        <div className=\"form-group mb-3 col-md-5\">\r\n            <FormGroup>\r\n            <Label >Onset Date </Label>\r\n            <Input\r\n                type=\"date\"\r\n                name=\"ondateInfection\"\r\n                id=\"ondateInfection\"\r\n                value={props.infection.ondateInfection}\r\n                onChange={handleInfectionInputChange}\r\n                min={props.artStartDate}\r\n                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                required\r\n                > \r\n            </Input>\r\n            {errors.ondateInfection !==\"\" ? (\r\n                <span className={classes.error}>{errors.ondateInfection}</span>\r\n            ) : \"\" }\r\n            </FormGroup>\r\n        </div>\r\n        <div className=\"form-group mb-3 col-md-5\">        \r\n        <FormGroup>\r\n            <Label > Illness</Label>\r\n            <Input\r\n                type=\"text\"\r\n                name=\"illnessInfection\"\r\n                id=\"illnessInfection\"\r\n                value={props.infection.illnessInfection}\r\n                onChange={handleInfectionInputChange}\r\n                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                required\r\n                > \r\n            </Input>\r\n            {errors.illnessInfection !==\"\" ? (\r\n                <span className={classes.error}>{errors.illnessInfection}</span>\r\n            ) : \"\" }\r\n            </FormGroup>\r\n        </div>\r\n        <div className=\"form-group mb-3 col-md-2\">\r\n        <LabelSui as='a' color='black'  onClick={addInfection}  size='tiny' style={{ marginTop:35}}>\r\n            <Icon name='plus' /> Add\r\n        </LabelSui>\r\n        </div>\r\n        {props.infectionList.length >0 \r\n          ?\r\n            <List>\r\n            <div style={{padding:'3px 0px'}} >\r\n            <Table  striped responsive size=\"sm\" >\r\n                  <thead  >\r\n                      <tr >\r\n                          <th>Illness</th>\r\n                          <th>OnSetDate</th>\r\n                          <th ></th>\r\n                      </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                {props.infectionList.map((relative, index) => (\r\n\r\n                  <InfectionList\r\n                      key={index}\r\n                      index={index}\r\n                      relative={relative}\r\n                      removeInfection={removeInfection}\r\n                  />\r\n                  ))}\r\n                  </tbody>\r\n                  </Table>\r\n                  </div>\r\n                </List>\r\n                :\r\n                \"\"\r\n            } \r\n    </div>\r\n    </div>\r\n     \r\n  );\r\n};\r\n\r\nfunction InfectionList({\r\n    relative,\r\n    index,\r\n    removeInfection,\r\n  }) {\r\n  \r\n   \r\n    return (\r\n            <tr>\r\n  \r\n                <th>{relative.illnessInfection}</th>\r\n                <th>{relative.ondateInfection}</th>\r\n                <th></th>\r\n                <th >\r\n                    <IconButton aria-label=\"delete\" size=\"small\" color=\"error\" onClick={() =>removeInfection(index)}>\r\n                        <DeleteIcon fontSize=\"inherit\" />\r\n                    </IconButton>\r\n                    \r\n                </th>\r\n            </tr> \r\n    );\r\n  }\r\n\r\nexport default ADR;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Input, Label, FormGroup} from \"reactstrap\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { token, url as baseUrl } from \"./../../../../api\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nconst TBScreeningForm = (props) => {\r\n  const [tbStatus, setTbStatus] = useState([]); \r\n  const [TBForms, setTBForms] = useState(false) \r\n  let actualTbSTatus=[]\r\n  useEffect(() => {\r\n    TBStatus();\r\n    if(props.tbObj.antiTBDrug ==='NO'){\r\n      setTBForms(true)\r\n    }else{\r\n      setTBForms(false)\r\n    }\r\n    // if(props.tbObj.currentOnIpt===\"NO\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"NO\"){\r\n    //   const newTbStatus = tbStatus.filter((x)=> x.display!=='TB suspected and referred for evaluation' && x.display!=='Currently on INH prophylaxis'  && x.display!=='Currently on TB treatment'); \r\n    //   console.log(newTbStatus)\r\n    //   setTbStatus(newTbStatus)\r\n    // }\r\n    const newTbStatus = tbStatus.filter((x)=> x.display!=='TB suspected and referred for evaluation' && x.display!=='Currently on INH prophylaxis'  && x.display!=='Currently on TB treatment'); \r\n      console.log(newTbStatus)\r\n      actualTbSTatus=newTbStatus\r\n    }, []);\r\n    ///GET LIST OF FUNCTIONAL%20_STATUS\r\n    // TB STATUS\r\n    const TBStatus =()=>{\r\n    axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n            //actualTbSTatus=response.data\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    \r\n    }\r\n\r\n    const handleInputChange = e => {\r\n      props.setTbObj ({...props.tbObj,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"antiTBDrug\" ){\r\n          if(e.target.value===\"NO\"){\r\n              setTBForms(true)\r\n              actualTbSTatus=tbStatus\r\n          }else{\r\n              setTBForms(false)\r\n          }\r\n        }\r\n        if(e.target.name ===\"currentOnIpt\" && e.target.value===\"YES\"){\r\n          if((e.target.name ===\"coughing\" && e.target.value===\"NO\") && (e.target.name ===\"nightSweat\" && e.target.value===\"NO\") && (e.target.name ===\"fever\" && e.target.value===\"NO\") && (e.target.name ===\"contactWithTBCase\" && e.target.value===\"NO\") && (e.target.name ===\"contactWithTBCase\" && e.target.value===\"NO\")){\r\n            const newTbStatus = tbStatus.filter((x)=> x.display!=='TB suspected and referred for evaluation'  && x.display!=='Currently on TB treatment'); \r\n            setTbStatus(newTbStatus)\r\n          }\r\n            \r\n        }else if(e.target.name ===\"currentOnIpt\" && e.target.value===\"NO\"){\r\n           \r\n        }\r\n        if(props.tbObj.currentOnIpt===\"NO\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"NO\"){\r\n          const newTbStatus = tbStatus.filter((x)=> x.display!=='TB suspected and referred for evaluation' && x.display!=='Currently on INH prophylaxis'  && x.display!=='Currently on TB treatment'); \r\n          console.log(newTbStatus)\r\n          setTbStatus(newTbStatus)\r\n        }\r\n      }\r\n\r\n  return (\r\n    <div>\r\n       <div className=\"row\">\r\n          \r\n          <div className=\"form-group mb-3 col-md-6\">\r\n          <FormGroup>\r\n              <Label >Patient on Anti TB Drugs?</Label>\r\n              <Input\r\n                  type=\"select\"\r\n                  name=\"antiTBDrug\"\r\n                  id=\"antiTBDrug\"\r\n                  value={props.tbObj.antiTBDrug}\r\n                  onChange={handleInputChange}\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"YES\"> YES</option>\r\n                    <option value=\"NO\">NO </option>\r\n\r\n              </Input>\r\n              \r\n            </FormGroup>\r\n          </div>\r\n          {TBForms===true ? (\r\n            <>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label >Patient Currently on IPT?</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"currentOnIpt\"\r\n                    id=\"currentOnIpt\"\r\n                    value={props.tbObj.currentOnIpt}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                    >\r\n                      <option value=\"\"> Select</option>\r\n                      <option value=\"YES\"> YES</option>\r\n                        <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >coughing?</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"coughing\"\r\n                    id=\"coughing\"\r\n                    value={props.tbObj.coughing}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                    >\r\n                      <option value=\"\"> Select</option>\r\n                      <option value=\"YES\"> YES</option>\r\n                      <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >Night Sweat?</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"nightSweat\"\r\n                    id=\"nightSweat\"\r\n                    value={props.tbObj.nightSweat}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                    >\r\n                      <option value=\"\"> Select</option>\r\n                      <option value=\"YES\"> YES</option>\r\n                      <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >Fever</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"fever\"\r\n                    id=\"fever\"\r\n                    value={props.tbObj.fever}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n                      <option value=\"YES\"> YES</option>\r\n                      <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >Contact with TB Case?</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"contactWithTBCase\"\r\n                    id=\"contactWithTBCase\"\r\n                    value={props.tbObj.contactWithTBCase}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                    >\r\n                      <option value=\"\"> Select</option>\r\n                      <option value=\"YES\"> YES</option>\r\n                      <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >Lethergy</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"lethergy\"\r\n                    id=\"lethergy\"\r\n                    value={props.tbObj.lethergy}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n                      <option value=\"YES\"> YES</option>\r\n                    <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              {(props.tbObj.currentOnIpt===\"NO\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='TB suspected and referred for evaluation' && x.display!=='Currently on INH prophylaxis'  && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='TB suspected and referred for evaluation' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"YES\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='No sign or symptoms of TB' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"YES\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='No sign or symptoms of TB' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"YES\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='No sign or symptoms of TB' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"YES\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='No sign or symptoms of TB' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"YES\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='No sign or symptoms of TB' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n          </>\r\n          )\r\n          :\r\n          \"\"\r\n          }\r\n        </div>\r\n    </div>\r\n     \r\n  );\r\n};\r\n\r\n\r\n\r\nexport default TBScreeningForm;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Card,CardBody, FormGroup, Label, Input, InputGroup,InputGroupText} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"./../../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\n\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\nconst AddAllergy = (props) => {\r\n\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    //const [values, setValues] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [allergy, setAllergy]= useState({allergy: \"\"})\r\n    \r\n        const handleInputChange = e => {            \r\n            setAllergy ({...allergy,  [e.target.name]: e.target.value});\r\n        }\r\n\r\n        //FORM VALIDATION\r\n        const validate = () => {\r\n            let temp = { ...errors }\r\n            //temp.name = details.name ? \"\" : \"This field is required\"\r\n            //temp.description = details.description ? \"\" : \"This field is required\"\r\n            setErrors({\r\n                ...temp\r\n                })    \r\n            return Object.values(temp).every(x => x == \"\")\r\n        }\r\n          \r\n        /**** Submit Button Processing  */\r\n        const handleSubmit = (e) => {        \r\n            e.preventDefault();        \r\n            \r\n            setSaving(true);\r\n            axios.post(`${baseUrl}patient/vital-sign/`, allergy,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  //props.patientObj.commenced=true\r\n                  toast.success(\"Vital signs save successful\");\r\n                  props.toggle()\r\n                  props.patientsVitalsSigns()\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n                 \r\n              });\r\n          \r\n        }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"md\">\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Add Allergy\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>                   \r\n                        <Card >\r\n                            <CardBody>\r\n                            <form >\r\n                                <div className=\"row\">\r\n                                \r\n                                    <div className=\"form-group mb-3 col-md-12\">\r\n                                        <FormGroup>\r\n                                        <Label >Allergies</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"allergy\"\r\n                                            id=\"allergy\"\r\n                                            //value={allergy.functionalStatusId}\r\n                                            //onChange={handleInputChange}\r\n                                            required\r\n                                            >\r\n                                            <option value=\"\">Select </option>\r\n                                           \r\n                                        </Input>\r\n                                       \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                                \r\n                                {saving ? <Spinner /> : \"\"}\r\n                                <br />\r\n                            \r\n                                <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n                          \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                \r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                            </MatButton>\r\n                          \r\n                            </form>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddAllergy;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Card,CardBody, FormGroup, Label, Input, InputGroup,InputGroupText} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"./../../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\n\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\nconst AddCondition = (props) => {\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    //const [values, setValues] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [allergy, setAllergy]= useState({allergy: \"\"})\r\n    \r\n        const handleInputChange = e => {            \r\n            setAllergy ({...allergy,  [e.target.name]: e.target.value});\r\n        }\r\n\r\n        //FORM VALIDATION\r\n        const validate = () => {\r\n            let temp = { ...errors }\r\n            //temp.name = details.name ? \"\" : \"This field is required\"\r\n            //temp.description = details.description ? \"\" : \"This field is required\"\r\n            setErrors({\r\n                ...temp\r\n                })    \r\n            return Object.values(temp).every(x => x == \"\")\r\n        }\r\n          \r\n        /**** Submit Button Processing  */\r\n        const handleSubmit = (e) => {        \r\n            e.preventDefault();        \r\n            \r\n            setSaving(true);\r\n            axios.post(`${baseUrl}patient/vital-sign/`, allergy,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  props.patientObj.commenced=true\r\n                  toast.success(\"Vital signs save successful\");\r\n                  props.toggle()\r\n                  props.patientsVitalsSigns()\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n                 \r\n              });\r\n          \r\n        }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"md\">\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Add Conditions\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n            </Modal.Header>\r\n                <Modal.Body>                   \r\n                        <Card >\r\n                            <CardBody>\r\n                            <form >\r\n                                <div className=\"row\">\r\n                                \r\n                                    <div className=\"form-group mb-3 col-md-12\">\r\n                                        <FormGroup>\r\n                                        <Label >Conditions</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"allergy\"\r\n                                            id=\"allergy\"\r\n                                            //value={allergy.functionalStatusId}\r\n                                            //onChange={handleInputChange}\r\n                                            required\r\n                                            >\r\n                                            <option value=\"\">Select </option>\r\n                                           \r\n                                        </Input>\r\n                                       \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                                \r\n                                {saving ? <Spinner /> : \"\"}\r\n                                <br />\r\n                            \r\n                                <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n                          \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                \r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                            </MatButton>\r\n                          \r\n                            </form>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddCondition;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {  Card,CardBody} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"./../../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport {format} from 'date-fns';\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\nimport Select from \"react-select\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\nlet newDate = new Date()\r\n\r\nconst PostPatient = (props) => {\r\n    const patientObj = props.patientObj;\r\n    const [selectedOption, setSelectedOption] = useState();\r\n    const classes = useStyles()\r\n    const [services, setServices]= useState([]);\r\n    //const [values, setValues] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect(() => {\r\n        ServicesPost()\r\n      }, []);\r\n        ///GET LIST OF Post Services\r\n        async function ServicesPost() {\r\n            axios\r\n                .get(`${baseUrl}patient/vital-sign/post-service`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    const filterService = response.data.filter((x) => x.moduleServiceCode!=='consultation-code' && x.moduleServiceCode!=='hiv-code')\r\n                    setServices(\r\n                        Object.entries(filterService).map(([key, value]) => ({\r\n                          label: value.moduleServiceName,\r\n                          value: value.moduleServiceCode,\r\n                        })))\r\n                 \r\n                })\r\n                .catch((error) => {    \r\n                });        \r\n        }\r\n\r\n    const [postServices, setPostServices]= useState({                                                  \r\n                                                        encounterDate:format(new Date(newDate), 'yyyy-MM-dd'),\r\n                                                        facilityId: 1,\r\n                                                        personId:\"\",\r\n                                                        serviceCode:\"\",\r\n                                                        visitId: \"\"\r\n                                                    })\r\n    \r\n\r\n        /**** Submit Button Processing  */\r\n        const handleSubmit = (e) => {        \r\n            e.preventDefault();        \r\n            \r\n            setSaving(true);\r\n            let serviceArr = []\r\n            selectedOption.forEach(function (value, index, array) {\r\n                serviceArr.push(value['value'])\r\n            })\r\n            postServices.personId=patientObj.id\r\n            postServices.visitId=patientObj.visitId\r\n            postServices.serviceCode=serviceArr\r\n            axios.post(`${baseUrl}patient/post`, postServices,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  props.patientObj.commenced=true\r\n                  toast.success(\"Vital signs save successful\");\r\n                  props.toggle()\r\n                  //props.patientsVitalsSigns()\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n                 \r\n              });\r\n          \r\n        }\r\n\r\n  return (      \r\n      <div >\r\n         \r\n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\r\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\r\n                Post Patient\r\n                 <Button\r\n                    variant=\"\"\r\n                    className=\"btn-close\"\r\n                    onClick={props.toggle}\r\n                ></Button>\r\n                </Modal.Header>\r\n                <Modal.Body>                   \r\n                        <Card >\r\n                            <CardBody>\r\n                            <form >\r\n                                <div className=\"row\">\r\n                              \r\n                                   <Select\r\n                                        onChange={setSelectedOption}\r\n                                        value={selectedOption}\r\n                                        options={services}\r\n                                        isMulti=\"true\"\r\n                                        noOptionsMessage=\"true\"\r\n                                    />\r\n\r\n                                </div>\r\n                                \r\n                                {saving ? <Spinner /> : \"\"}\r\n                                <br />\r\n                            \r\n                                <MatButton\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.button}\r\n                                    startIcon={<SaveIcon />}\r\n                                    onClick={handleSubmit}\r\n                                    >\r\n                                    {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                    ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                    )}\r\n                                </MatButton>\r\n                          \r\n                            </form>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </Modal.Body>\r\n        \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostPatient;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Segment, Label, Icon, List, Button, Card,Feed } from 'semantic-ui-react'\r\n// Page titie\r\nimport { FormGroup, Label as FormLabelName, InputGroup,\r\n          InputGroupText,\r\n          Input,\r\n        } from \"reactstrap\";\r\nimport ADR from './ADR/Index'\r\nimport OpportunisticInfection from './OpportunisticInfection/Index'\r\nimport TBScreening from './TBScreening/Index'\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport axios from \"axios\";\r\n//import AddVitals from './Vitals/AddVitals'\r\nimport AddAllergy from './Allergies/AddAllergy'\r\nimport AddCondition from './Conditions/AddCondition'\r\nimport PostPatient from './PostPatient/Index'\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Accordion, Alert } from \"react-bootstrap\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\nlet adherenceLevelObj = []\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1)\r\n    }\r\n  },\r\n  input: {\r\n    display: 'none'\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\nconst ClinicVisit = (props) => {\r\n  let patientObj = props.patientObj ? props.patientObj : {}\r\n  const [dropdownOpen, setDropdownOpen] = React.useState(false);\r\n  const [splitButtonOpen, setSplitButtonOpen] = React.useState(false);\r\n  const toggleDropDown = () => setDropdownOpen(!dropdownOpen);\r\n  const toggleSplit = () => setSplitButtonOpen(!splitButtonOpen);\r\n  const [heightValue, setHeightValue]= useState(\"cm\")\r\n  const [errors, setErrors] = useState({});\r\n  const [clinicVisitList, setClinicVisitList] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [\r\n    activeAccordionHeaderShadow,\r\n    setActiveAccordionHeaderShadow,\r\n  ] = useState(0);\r\n  let temp = { ...errors }\r\n  const classes = useStyles()\r\n  const [getPatientObj, setGetPatientObj] = useState({});\r\n  const [saving, setSaving] = useState(false);\r\n  const [clinicalStage, setClinicalStage] = useState([]);\r\n  const [functionalStatus, setFunctionalStatus] = useState([]);\r\n  const [adherenceLevel, setAdherenceLevel] = useState([]);\r\n  const [tbStatus, setTbStatus] = useState([]);\r\n  const [TBForms, setTBForms] = useState(false)\r\n  // const [addVitalModal, setAddVitalModal] = useState(false);\r\n  // const AddVitalToggle = () => setAddVitalModal(!addVitalModal)\r\n  const [addConditionModal, setAddConditionModal] = useState(false);\r\n  const AddConditionToggle = () => setAddConditionModal(!addConditionModal)\r\n  const [addAllergyModal, setAddAllergyModal] = useState(false);\r\n  const AddAllergyToggle = () => setAddAllergyModal(!addAllergyModal)\r\n  const [postPatientModal, setPostPatientModal] = useState(false);\r\n  const PostPatientToggle = () => setPostPatientModal(!postPatientModal)\r\n  const [currentVitalSigns, setcurrentVitalSigns] = useState({})\r\n  const [showCurrentVitalSigns, setShowCurrentVitalSigns] = useState(false)\r\n  //opportunistic infection Object\r\n  const [infection, setInfection] = useState({ illnessInfection: \"\", ondateInfection: \"\" });\r\n  const [infectionList, setInfectionList] = useState([]);\r\n  //ADR array Object \r\n  const [adrObj, setAdrObj] = useState({ adr: \"\", adrOnsetDate: \"\" });\r\n  const [adrList, setAdrList] = useState([]);\r\n  //Vital signs clinical decision support \r\n  const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n                                                                    bodyWeight: \"\",\r\n                                                                    diastolic: \"\",\r\n                                                                    height: \"\",\r\n                                                                    systolic: \"\",\r\n                                                                    pulse:\"\",\r\n                                                                    temperature:\"\",\r\n                                                                    respiratoryRate:\"\" \r\n                                                                  })\r\n  const [objValues, setObjValues] = useState({\r\n    adherenceLevel: \"\",\r\n    adheres: {},\r\n    adrScreened: \"\",\r\n    adverseDrugReactions: {},\r\n    artStatusId: \"\" ,\r\n    cd4: \"\",\r\n    cd4Percentage: \"\",\r\n    clinicalNote: \"\",\r\n    clinicalStageId: \"\",\r\n    facilityId: 0,\r\n    functionalStatusId: \"\",\r\n    hivEnrollmentId: \"\",\r\n    nextAppointment: \"\",\r\n    lmpDate: \"\",\r\n    oiScreened: \"\",\r\n    opportunisticInfections: {},\r\n    personId: patientObj.id,\r\n    tbScreen: {},\r\n    stiIds: \"\",\r\n    stiTreated: \"\",\r\n    uuid: \"\",\r\n    visitDate: \"\",\r\n    whoStagingId: \"\"\r\n  });\r\n  const [vital, setVitalSignDto] = useState({\r\n    bodyWeight: \"\",\r\n    diastolic: \"\",\r\n    encounterDate: \"\",\r\n    facilityId: 1,\r\n    height: \"\",\r\n    personId: props.patientObj.id,\r\n    serviceTypeId: 1,\r\n    systolic: \"\",\r\n    pulse:\"\",\r\n    temperature:\"\",\r\n    respiratoryRate:\"\" \r\n  })\r\n  const [tbObj, setTbObj] = useState({\r\n    currentOnIpt: \"\",\r\n    coughing: \"\",\r\n    antiTBDrug: \"\",\r\n    nightSweat: \"\",\r\n    fever: \"\",\r\n    contactWithTBCase: \"\",\r\n    lethergy: \"\",\r\n    tbStatusId: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    FunctionalStatus();\r\n    WhoStaging();\r\n    AdherenceLevel();\r\n    TBStatus();\r\n    VitalSigns();\r\n    GetPatientObj();\r\n    ClinicVisitList();\r\n    PatientDetaild();\r\n    //hiv/patient/3\r\n  }, []);\r\n     //GET LIST Drug Refill\r\n     async function ClinicVisitList() {\r\n      setLoading(true)\r\n      axios\r\n          .get(`${baseUrl}hiv/art/clinic-visit/person?pageNo=0&pageSize=10&personId=${props.patientObj.id}`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n          )\r\n          .then((response) => {\r\n              setLoading(false)\r\n              setClinicVisitList(response.data);                \r\n          })\r\n          .catch((error) => {  \r\n              setLoading(false)  \r\n          });        \r\n    }\r\n    //Check for the last Vital Signs\r\n    const VitalSigns = () => {\r\n    axios\r\n      .get(`${baseUrl}patient/vital-sign/person/${props.patientObj.id}`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n\r\n        const lastVitalSigns = response.data[response.data.length - 1]\r\n        if (lastVitalSigns.encounterDate === moment(new Date()).format(\"YYYY-MM-DD\") === true) {\r\n          setcurrentVitalSigns(lastVitalSigns)\r\n          setShowCurrentVitalSigns(true)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n    }\r\n    //Check for the Patient Object\r\n    const PatientDetaild = () => {\r\n      axios\r\n        .get(`${baseUrl}hiv/patient/${props.patientObj.id}`,\r\n          { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            patientObj=response.data\r\n        })\r\n        .catch((error) => {\r\n          //console.log(error);\r\n        });\r\n      }\r\n    //Get The updated patient objeect\r\n    const GetPatientObj = () => {\r\n      axios\r\n        .get(`${baseUrl}hiv/patients`,\r\n          { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n          const patObJ= response.data.filter((x)=> x.id===props.patientObj.id)\r\n\r\n          setGetPatientObj(patObJ[0])\r\n        })\r\n        .catch((error) => {\r\n          //console.log(error);\r\n        });\r\n    }\r\n\r\n  //Get list of WhoStaging\r\n  const WhoStaging = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/CLINICAL_STAGE`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setClinicalStage(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n  ///GET LIST OF FUNCTIONAL%20_STATUS\r\n  // TB STATUS\r\n  const TBStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setTbStatus(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n\r\n  async function FunctionalStatus() {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/FUNCTIONAL%20_STATUS`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n\r\n        setFunctionalStatus(response.data);\r\n        //setValues(response.data)\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  ///Level of Adherence\r\n  async function AdherenceLevel() {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_LEVEL_OF_ADHERENCE`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setAdherenceLevel(response.data);\r\n\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  const handleInputChange = e => {\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    if (e.target.name === \"whoStagingId\") {\r\n      if (e.target.value === \"NO\") {\r\n        setTBForms(true)\r\n      } else {\r\n        setTBForms(false)\r\n      }\r\n    }\r\n  }\r\n  const handleInputChangeVitalSignDto = e => {\r\n    setVitalSignDto({ ...vital, [e.target.name]: e.target.value });\r\n  }\r\n\r\n  const addConditionsModal = () => {\r\n    //setpatientObj({...patientObj, ...row});\r\n    setAddConditionModal(!addConditionModal)\r\n  }\r\n  const addAllergiesModal = () => {\r\n    //setpatientObj({...patientObj, ...row});\r\n    setAddAllergyModal(!addAllergyModal)\r\n  }\r\n  const PostPatientService = (row) => {\r\n    //setpatientObj({...patientObj, ...row});\r\n    setPostPatientModal(!postPatientModal)\r\n  }\r\n  //Handle CheckBox \r\n  const handleCheckBox = e => {\r\n    if (e.target.checked) {\r\n      //currentVitalSigns.personId === null ? props.patientObj.id : currentVitalSigns.personId\r\n      setVitalSignDto({ ...currentVitalSigns })\r\n    } else {\r\n      setVitalSignDto({\r\n        bodyWeight: \"\",\r\n        diastolic: \"\",\r\n        encounterDate: \"\",\r\n        facilityId: \"\",\r\n        height: \"\",\r\n        personId: props.patientObj.id,\r\n        serviceTypeId: \"\",\r\n        systolic: \"\",\r\n        pulse:\"\",\r\n        temperature:\"\",\r\n        respiratoryRate:\"\" \r\n      })\r\n    }\r\n  }\r\n  //to check the input value for clinical decision \r\n  const handleInputValueCheckHeight =(e)=>{\r\n    if(e.target.name===\"height\" && (e.target.value < 48.26 || e.target.value>216.408)){\r\n      const message =\"Height cannot be greater than 216.408 and less than 48.26\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, height:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, height:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckBodyWeight =(e)=>{\r\n    if(e.target.name===\"bodyWeight\" && (e.target.value < 3 || e.target.value>150)){      \r\n      const message =\"Body weight must not be greater than 150 and less than 3\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckSystolic =(e)=>{\r\n    if(e.target.name===\"systolic\" && (e.target.value < 90 || e.target.value>240)){      \r\n      const message =\"Blood Pressure systolic must not be greater than 240 and less than 90\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckDiastolic =(e)=>{\r\n    if(e.target.name===\"diastolic\" && (e.target.value < 60 || e.target.value>140)){      \r\n      const message =\"Blood Pressure diastolic must not be greater than 140 and less than 60\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckPulse =(e)=>{\r\n    if(e.target.name===\"pulse\" && (e.target.value < 40 || e.target.value>120)){      \r\n    const message =\"Pulse must not be greater than 120 and less than 40\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:\"\"})\r\n    }\r\n}\r\nconst handleInputValueCheckRespiratoryRate =(e)=>{\r\n    if(e.target.name===\"respiratoryRate\" && (e.target.value < 10 || e.target.value>70)){      \r\n    const message =\"Respiratory Rate must not be greater than 70 and less than 10\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:\"\"})\r\n    }\r\n}\r\nconst handleInputValueCheckTemperature =(e)=>{\r\n    if(e.target.name===\"temperature\" && (e.target.value < 35 || e.target.value>47)){      \r\n    const message =\"Temperature must not be greater than 47 and less than 35\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, temperature:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, temperature:\"\"})\r\n    }\r\n}\r\n  //Validations of the forms\r\n  const validate = () => {        \r\n    temp.encounterDate = vital.encounterDate ? \"\" : \"This field is required\"\r\n    temp.nextAppointment = objValues.nextAppointment ? \"\" : \"This field is required\"\r\n    temp.whoStagingId = objValues.whoStagingId ? \"\" : \"This field is required\"\r\n    temp.clinicalNote = objValues.clinicalNote ? \"\" : \"This field is required\"\r\n    temp.functionalStatusId = objValues.functionalStatusId ? \"\" : \"This field is required\"\r\n    temp.adherenceLevel = objValues.adherenceLevel ? \"\" : \"This field is required\"\r\n    temp.labTestGroupId = vital.diastolic ? \"\" : \"This field is required\"\r\n    temp.systolic = vital.systolic ? \"\" : \"This field is required\"\r\n    temp.height = vital.height ? \"\" : \"This field is required\"\r\n    temp.bodyWeight = vital.bodyWeight ? \"\" : \"This field is required\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n\r\n\r\n  /**** Submit Button Processing  */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(validate()){\r\n    setSaving(true)\r\n    objValues.visitDate = vital.encounterDate\r\n    objValues.adverseDrugReactions = adrList\r\n    objValues.artStatusId = getPatientObj.artCommence.id\r\n    objValues.hivEnrollmentId = getPatientObj.enrollment.id\r\n    objValues.opportunisticInfections = infectionList\r\n    objValues.tbScreen = tbObj\r\n    objValues['vitalSignDto'] = vital\r\n    axios.post(`${baseUrl}hiv/art/clinic-visit/`, objValues,\r\n      { headers: { \"Authorization\": `Bearer ${token}` } },\r\n\r\n    )\r\n      .then(response => {\r\n        PatientDetaild();\r\n        setSaving(false);\r\n        toast.success(\"Clinic Visit save successful\");\r\n        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n      })\r\n      .catch(error => {\r\n        setSaving(false);\r\n        if(error.response && error.response.data){\r\n          let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        }\r\n        else{\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n       \r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n    <div className=\"row\">\r\n\r\n      <div className=\"col-md-6\">\r\n        <h2>Clinic Follow-up Visit</h2>\r\n        </div>\r\n        \r\n      </div>\r\n      <Grid columns='equal'>\r\n       <Grid.Column width={5}>\r\n          \r\n            <Segment>\r\n              <Label as='a' color='blue' style={{width:'110%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}>Vital Signs</h4>\r\n              </Label>\r\n              <br />\r\n\r\n               <PerfectScrollbar\r\n                style={{ height: \"370px\" }}\r\n                id=\"DZ_W_Todo1\"\r\n                className=\"widget-media dz-scroll ps ps--active-y\"\r\n              >\r\n                <br/>\r\n                    <ul className=\"timeline\">\r\n                    { clinicVisitList.length > 0 ?(\r\n                      \r\n                    <Accordion\r\n                        className=\"accordion accordion-header-bg accordion-header-shadow accordion-rounded \"\r\n                        defaultActiveKey=\"0\"\r\n                        \r\n                      >\r\n                        <>\r\n                        {clinicVisitList.map((visit, i)=>\r\n                        <div className=\"accordion-item\" key={i} >\r\n                          <Accordion.Toggle\r\n                              as={Card.Text}\r\n                              eventKey={`${i}`}\r\n                              className={`accordion-header ${\r\n                                activeAccordionHeaderShadow === 1 ? \"\" : \"collapsed\"\r\n                              } accordion-header-info`}\r\n                              onClick={() =>\r\n                                setActiveAccordionHeaderShadow(\r\n                                  activeAccordionHeaderShadow === 1 ? -1 : i\r\n                                )\r\n                              }\r\n                              style={{width:'100%'}}\r\n                          >\r\n                          <span className=\"accordion-header-icon\"></span>\r\n                          <span className=\"accordion-header-text float-start\">Visit Date : <span className=\"\">{visit.visitDate}</span> </span>\r\n                          <span className=\"accordion-header-indicator\"></span>\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse\r\n                          eventKey={`${i}`}\r\n                          className=\"accordion__body\"\r\n                        >\r\n                          <div className=\"accordion-body-text\">\r\n                        \r\n                              <List celled style={{width:'100%'}}>\r\n                                  {visit.vitalSignDto && visit.vitalSignDto.pulse!==null && (<List.Item style={{paddingBottom:'10px', paddingTop:'10px',borderTop:'1px solid #fff', marginTop:'-5px' }}>Pulse <span style={{color:'rgb(153, 46, 98)'}} className=\"float-end\"><b>{visit.vitalSignDto.pulse} bpm</b></span></List.Item>)}\r\n                                  {visit.vitalSignDto && visit.vitalSignDto.respiratoryRate!==null && (<List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Respiratory Rate <span className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{visit.vitalSignDto.respiratoryRate} bpm</b></span></List.Item>)}\r\n                                  {visit.vitalSignDto && visit.vitalSignDto.temperature!==null && (<List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Temperature <span className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{visit.vitalSignDto.temperature} <sup>0</sup>C</b></span></List.Item>)}\r\n                                  {visit.vitalSignDto && visit.vitalSignDto.systolic!==null && visit.vitalSignDto.diastolic!==null && (<List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Blood Pressure <span  className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{visit.vitalSignDto.systolic}/{visit.vitalSignDto.diastolic}</b></span></List.Item>)}\r\n                                  {visit.vitalSignDto && visit.vitalSignDto.height!==null && (<List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Height <span  className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{visit.vitalSignDto.height} cm</b></span></List.Item>)}\r\n                                  {visit.vitalSignDto && visit.vitalSignDto.bodyWeight!==null && (<List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Weight <span  className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{visit.vitalSignDto.bodyWeight} kg</b></span></List.Item>)}\r\n                                  {visit.vitalSignDto && visit.vitalSignDto.bodyWeight!==null && visit.vitalSignDto.height!==null && (<List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>BMI <span  className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{Math.round(visit.vitalSignDto.bodyWeight/(visit.vitalSignDto.height/100))} kg</b></span></List.Item>)}\r\n                              </List>\r\n                            \r\n                          </div>\r\n                        </Accordion.Collapse>\r\n                      </div>\r\n                    )}\r\n                    </>\r\n                    </Accordion>             \r\n\r\n                ):\r\n                (\r\n                  <>\r\n                  <br/>\r\n                  <Alert\r\n                      variant=\"info\"\r\n                      className=\"alert-dismissible solid fade show\"\r\n                    >\r\n                      <p>No Vital Signs</p>\r\n                    </Alert>\r\n                  </>\r\n                )}\r\n                    </ul>\r\n               \r\n                </PerfectScrollbar>\r\n            </Segment>\r\n            <Segment>\r\n              <Label as='a' color='teal' style={{width:'110%', height:'35px'}} ribbon>\r\n                <h4 style={{color:'#fff'}}>Previous Clinical Notes</h4>\r\n              </Label>\r\n               \r\n             <PerfectScrollbar\r\n               style={{ height: \"370px\" }}\r\n               id=\"DZ_W_Todo1\"\r\n               className=\"widget-media dz-scroll ps ps--active-y\"\r\n             >\r\n              <br/>\r\n               <ul className=\"timeline\">\r\n               { clinicVisitList.length > 0 ?(\r\n                 \r\n               <Accordion\r\n                   className=\"accordion accordion-header-bg accordion-header-shadow accordion-rounded \"\r\n                   defaultActiveKey=\"0\"\r\n                 >\r\n                   <>\r\n                   {clinicVisitList.map((visit, i)=>\r\n                 <div className=\"accordion-item\" key={i}>\r\n                   <Accordion.Toggle\r\n                     as={Card.Text}\r\n                     eventKey={`${i}`}\r\n                     className={`accordion-header ${\r\n                       activeAccordionHeaderShadow === 1 ? \"\" : \"collapsed\"\r\n                     } accordion-header-info`}\r\n                     onClick={() =>\r\n                       setActiveAccordionHeaderShadow(\r\n                         activeAccordionHeaderShadow === 1 ? -1 : i\r\n                       )\r\n                     }\r\n                     style={{width:'100%'}}\r\n                   >\r\n                     <span className=\"accordion-header-icon\"></span>\r\n                     <span className=\"accordion-header-text float-start\" style={{width:'100%'}}>Visit Date : <span className=\"\">{visit.visitDate}</span> </span>\r\n                     <span className=\"accordion-header-indicator \"></span>\r\n                   </Accordion.Toggle>\r\n                   <Accordion.Collapse\r\n                     eventKey={`${i}`}\r\n                     className=\"accordion__body\"\r\n                   >\r\n                     <div className=\"accordion-body-text\">\r\n                         <p>{visit.clinicalNote}</p>\r\n                     </div>\r\n                   </Accordion.Collapse>\r\n                 </div>\r\n               )}\r\n               </>\r\n             </Accordion>             \r\n\r\n                   ):\r\n                   (\r\n                     <>\r\n                     <br/>\r\n                     <Alert\r\n                         variant=\"info\"\r\n                         className=\"alert-dismissible solid fade show\"\r\n                       >\r\n                         <p>No Clinical Notes</p>\r\n                       </Alert>\r\n                     </>\r\n                   )}\r\n               </ul>\r\n               </PerfectScrollbar>\r\n               \r\n         </Segment>\r\n         \r\n        </Grid.Column>\r\n        <Grid.Column width={11}>\r\n          <Segment>\r\n            <Label as='a' color='blue'  style={{width:'106%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}>VITAL  SIGNS</h4>\r\n            </Label>\r\n            <br /><br />\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Date of Visit *</FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"encounterDate\"\r\n                    id=\"encounterDate\"\r\n                    value={vital.encounterDate}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    onChange={handleInputChangeVitalSignDto}\r\n                    min={props.patientObj && props.patientObj.artCommence ? props.patientObj.artCommence.visitDate : null}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    required\r\n                  />\r\n                 {errors.encounterDate !==\"\" ? (\r\n                      <span className={classes.error}>{errors.encounterDate}</span>\r\n                  ) : \"\" }\r\n\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                {showCurrentVitalSigns && (\r\n                  <div className=\"form-check custom-checkbox ml-1 \">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className=\"form-check-input\"\r\n                      name=\"currentVitalSigns\"\r\n                      id=\"currentVitalSigns\"\r\n                      onChange={handleCheckBox} \r\n                                          \r\n                    />\r\n                    <label\r\n                      className=\"form-check-label\"\r\n                      htmlFor=\"basic_checkbox_1\"\r\n                    >\r\n                      use current Vital Signs\r\n                    </label>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"row\">\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Pulse</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"pulse\"\r\n                                id=\"pulse\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"40\"\r\n                                max=\"120\"\r\n                                value={vital.pulse}\r\n                                onKeyUp={handleInputValueCheckPulse} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.pulse !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.pulse}</span>\r\n                        ) : \"\"}\r\n                        {errors.pulse !==\"\" ? (\r\n                            <span className={classes.error}>{errors.pulse}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Respiratory Rate </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"respiratoryRate\"\r\n                                id=\"respiratoryRate\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"10\"\r\n                                max=\"70\"\r\n                                value={vital.respiratoryRate}\r\n                                onKeyUp={handleInputValueCheckRespiratoryRate} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.respiratoryRate !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.respiratoryRate}</span>\r\n                        ) : \"\"}\r\n                        {errors.respiratoryRate !==\"\" ? (\r\n                            <span className={classes.error}>{errors.respiratoryRate}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Temperature </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"temperature\"\r\n                                id=\"temperature\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"35\"\r\n                                max=\"47\"\r\n                                value={vital.temperature}\r\n                                onKeyUp={handleInputValueCheckTemperature} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                <sup>o</sup>c\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.temperature !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.temperature}</span>\r\n                        ) : \"\"}\r\n                        {errors.temperature !==\"\" ? (\r\n                            <span className={classes.error}>{errors.temperature}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Body Weight</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"bodyWeight\"\r\n                                id=\"bodyWeight\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"3\"\r\n                                max=\"150\"\r\n                                value={vital.bodyWeight}\r\n                                onKeyUp={handleInputValueCheckBodyWeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                kg\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.bodyWeight !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.bodyWeight}</span>\r\n                        ) : \"\"}\r\n                        {errors.bodyWeight !==\"\" ? (\r\n                            <span className={classes.error}>{errors.bodyWeight}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>                                   \r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Height</FormLabelName>\r\n                        <InputGroup> \r\n                        <InputGroupText\r\n                                addonType=\"append\"\r\n                                isOpen={dropdownOpen}\r\n                                toggle={toggleDropDown}\r\n                                style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                cm\r\n                        </InputGroupText>\r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"height\"\r\n                                id=\"height\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                value={vital.height}\r\n                                min=\"48.26\"\r\n                                max=\"216.408\"\r\n                                onKeyUp={handleInputValueCheckHeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                                <InputGroupText\r\n                                addonType=\"append\"\r\n                                isOpen={dropdownOpen}\r\n                                toggle={toggleDropDown}\r\n                                style={{ backgroundColor:\"#992E62\", color:\"#fff\", border: \"1px solid #992E62\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                {vital.height!=='' ? (vital.height/100).toFixed(2) + \"m\" : \"m\"}\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.height !==\"\" ? (\r\n                            <span className={classes.error}>{vitalClinicalSupport.height}</span>\r\n                        ) : \"\"}\r\n                        {errors.height !==\"\" ? (\r\n                            <span className={classes.error}>{errors.height}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 mt-2 col-md-4\">\r\n                        {vital.bodyWeight!==\"\" && vital.height!=='' && (\r\n                            <FormGroup>\r\n                            <Label > {\" \"}</Label>\r\n                            <InputGroup> \r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                BMI : {Math.round(vital.bodyWeight/((vital.height * vital.height)/100))}\r\n                            </InputGroupText>                   \r\n                           \r\n                            </InputGroup>                \r\n                            </FormGroup>\r\n                        )}\r\n                    </div>\r\n              </div>\r\n              <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-8\">\r\n                  <FormGroup>\r\n                  <FormLabelName >Blood Pressure</FormLabelName>\r\n                  <InputGroup>\r\n                  <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                          systolic(mmHg)\r\n                  </InputGroupText> \r\n                      <Input \r\n                          type=\"number\"\r\n                          name=\"systolic\"\r\n                          id=\"systolic\"\r\n                          min=\"90\"\r\n                          max=\"240\"\r\n                          onChange={handleInputChangeVitalSignDto}\r\n                          value={vital.systolic}\r\n                          onKeyUp={handleInputValueCheckSystolic}\r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}} \r\n                      />\r\n                      <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                      diastolic(mmHg)\r\n                      </InputGroupText>\r\n                          <Input \r\n                          type=\"number\"\r\n                          name=\"diastolic\"\r\n                          id=\"diastolic\"\r\n                          min={0}\r\n                          max={140}\r\n                          onChange={handleInputChangeVitalSignDto}\r\n                          value={vital.diastolic}\r\n                          onKeyUp={handleInputValueCheckDiastolic} \r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                          />\r\n                      \r\n                      \r\n                  </InputGroup>\r\n                  {vitalClinicalSupport.systolic !==\"\" ? (\r\n                  <span className={classes.error}>{vitalClinicalSupport.systolic}</span>\r\n                  ) : \"\"}\r\n                  {errors.systolic !==\"\" ? (\r\n                      <span className={classes.error}>{errors.systolic}</span>\r\n                  ) : \"\" }  \r\n                  {vitalClinicalSupport.diastolic !==\"\" ? (\r\n                  <span className={classes.error}>{vitalClinicalSupport.diastolic}</span>\r\n                  ) : \"\"}\r\n                  {errors.diastolic !==\"\" ? (\r\n                      <span className={classes.error}>{errors.diastolic}</span>\r\n                  ) : \"\" }          \r\n                  </FormGroup>\r\n              </div>\r\n\r\n              </div>\r\n            </div>\r\n            <Label as='a' color='black'  style={{width:'106%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}>CONSULTATION</h4>\r\n            </Label>\r\n            <br /><br />\r\n\r\n            <div className=\" mb-3\">\r\n              <FormLabelName >Clinical Notes</FormLabelName>\r\n              <textarea\r\n                name=\"clinicalNote\"\r\n                className=\"form-control\"\r\n                value={objValues.clinicalNote}\r\n                onChange={handleInputChange}\r\n                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n              ></textarea>\r\n              {errors.clinicalNote !==\"\" ? (\r\n                      <span className={classes.error}>{errors.clinicalNote}</span>\r\n                  ) : \"\" }\r\n            </div>\r\n            <div className=\"row\">\r\n\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >WHO Staging *</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"whoStagingId\"\r\n                    id=\"whoStagingId\"\r\n                    value={objValues.whoStagingId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"select\">Select </option>\r\n\r\n                    {clinicalStage.map((value) => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.whoStagingId !==\"\" ? (\r\n                      <span className={classes.error}>{errors.whoStagingId}</span>\r\n                  ) : \"\" }\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Functional Status *</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"functionalStatusId\"\r\n                    id=\"functionalStatusId\"\r\n                    value={objValues.functionalStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"select\">Select </option>\r\n\r\n                    {functionalStatus.map((value) => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.functionalStatusId !==\"\" ? (\r\n                      <span className={classes.error}>{errors.functionalStatusId}</span>\r\n                  ) : \"\" }\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Level of Adherence *</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"adherenceLevel\"\r\n                    id=\"adherenceLevel\"\r\n                    value={objValues.adherenceLevel}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"select\">Select </option>\r\n\r\n                    {adherenceLevel.map((value) => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.adherenceLevel !==\"\" ? (\r\n                      <span className={classes.error}>{errors.adherenceLevel}</span>\r\n                  ) : \"\" }\r\n                </FormGroup>\r\n              </div>\r\n\r\n            </div>\r\n            <br />\r\n            <Label as='a' color='red' style={{width:'106%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}>OPPORTUNISTIC INFECTION</h4>\r\n            </Label>\r\n            <br /><br />\r\n            <OpportunisticInfection setInfection={setInfection} infection={infection} setInfectionList={setInfectionList} infectionList={infectionList} artStartDate={props.patientObj.enrollment.dateOfRegistration}/>\r\n            <br />\r\n            <Label as='a' color='pink' style={{width:'106%', height:'35px'}}  ribbon>\r\n            <h4 style={{color:'#fff'}}>ADR </h4>\r\n            </Label>\r\n            <br /><br />\r\n            <ADR setAdrObj={setAdrObj} adrObj={adrObj} setAdrList={setAdrList} adrList={adrList} artStartDate={props.patientObj.enrollment.dateOfRegistration} />\r\n            <br />\r\n            <Label as='a' color='teal' style={{width:'106%', height:'35px'}} ribbon>\r\n            <h4 style={{color:'#fff'}}>TB SCREENING</h4>\r\n            </Label>\r\n            <br /><br />\r\n            {/* TB Screening Form */}\r\n            <TBScreening tbObj={tbObj} setTbObj={setTbObj} />\r\n            <br />\r\n            <Label as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n            <h4 style={{color:'#fff'}}>NEXT CLINICAL APPOINTMENT DATE </h4>\r\n            </Label>\r\n            <br /><br />\r\n            {/* TB Screening Form */}\r\n            <Input\r\n                    type=\"date\"\r\n                    name=\"nextAppointment\"\r\n                    id=\"nextAppointment\"\r\n                    className=\"col-md-6\"\r\n                    value={vital.nextAppointment}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    min={vital.encounterDate}\r\n                    \r\n                  />\r\n              {errors.nextAppointment !==\"\" ? (\r\n                      <span className={classes.error}>{errors.nextAppointment}</span>\r\n                  ) : \"\" }\r\n            <br />\r\n            <MatButton\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              disabled={saving}\r\n              startIcon={<SaveIcon />}\r\n              style={{backgroundColor:\"#014d88\"}}\r\n              onClick={handleSubmit}\r\n            >\r\n              {!saving ? (\r\n                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n              ) : (\r\n                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n              )}\r\n            </MatButton>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n      {/* <AddVitals toggle={AddVitalToggle} showModal={addVitalModal} /> */}\r\n      <AddAllergy toggle={AddAllergyToggle} showModal={addAllergyModal} />\r\n      <AddCondition toggle={AddConditionToggle} showModal={addConditionModal} />\r\n      <PostPatient toggle={PostPatientToggle} showModal={postPatientModal} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClinicVisit;\r\n","import React, {useState, useEffect } from \"react\";\r\n// import { Link } from 'react-router-dom';\r\nimport { Table  } from \"react-bootstrap\";\r\nimport { Input, Label, FormGroup, } from \"reactstrap\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {Icon, List, Label as LabelSui} from 'semantic-ui-react'\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { url as baseUrl,token } from \"./../../../../../api\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\nconst ADR = (props) => {\r\n  const [errors, setErrors] = useState({});\r\n  const classes = useStyles()\r\n  let temp = { ...errors }\r\n  const [prepSideEffect, setPrepSideEffect] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    PrepSideEffect();\r\n  }, []);\r\n       //Get list of PrepSideEffect\r\n       const PrepSideEffect =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/PREP_SIDE_EFFECTS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               //console.log(response.data);\r\n               setPrepSideEffect(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });\r\n       \r\n        }\r\n  const handAdrleInputChange = e => {\r\n    props.setAdrObj ({...props.adrObj,  [e.target.name]: e.target.value});\r\n  }\r\n   //Validations of the forms\r\n   const validate = () => {        \r\n    temp.adr = props.adrObj.adr ? \"\" : \"This field is required\"\r\n    temp.adrOnsetDate = props.adrObj.adrOnsetDate ? \"\" : \"This field is required\"\r\n\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n  const addADR = e => { \r\n    if(validate()){\r\n        props.setAdrList([...props.adrList, props.adrObj])\r\n    }else{\r\n      toast.error(\" Field are required \");\r\n    }\r\n  }\r\n  /* Remove ADR  function **/\r\n  const removeRelativeLocation = index => {       \r\n      props.adrList.splice(index, 1);\r\n      props.setAdrList([...props.adrList]);\r\n     \r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n        <div className=\"row\">\r\n        {props.enableUpdate && (\r\n        <>\r\n        <div className=\"form-group mb-3 col-md-5\">\r\n\r\n            <FormGroup>\r\n            <Label >ADR </Label>\r\n            \r\n              <Input\r\n                  type=\"select\"\r\n                  name=\"adr\"\r\n                  id=\"adr\"\r\n                  value={props.adrObj.adr}\r\n                  onChange={handAdrleInputChange}\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  required\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n                      {prepSideEffect.map((value) => (\r\n                          <option key={value.id} value={value.display}>\r\n                              {value.display}\r\n                          </option>\r\n                      ))}\r\n              </Input>\r\n                {errors.adr !==\"\" ? (\r\n                    <span className={classes.error}>{errors.adr}</span>\r\n                ) : \"\" }\r\n            </FormGroup>\r\n        </div>\r\n        <div className=\"form-group mb-3 col-md-5\">        \r\n        <FormGroup>\r\n            <Label > Onset Date</Label>\r\n            <Input\r\n                type=\"date\"\r\n                name=\"adrOnsetDate\"\r\n                id=\"adrOnsetDate\"\r\n                value={props.adrObj.adrOnsetDate}\r\n                min={props.artStartDate}\r\n                onChange={handAdrleInputChange}\r\n                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                required\r\n                > \r\n            </Input>\r\n            {errors.adrOnsetDate !==\"\" ? (\r\n                <span className={classes.error}>{errors.adrOnsetDate}</span>\r\n            ) : \"\" }\r\n            </FormGroup>\r\n        </div>\r\n        \r\n        <div className=\"form-group mb-3 col-md-2\">\r\n          <LabelSui as='a' color='black'  onClick={addADR}  size='tiny' style={{ marginTop:35}}>\r\n              <Icon name='plus' /> Add\r\n          </LabelSui>\r\n        </div>\r\n        </>)}\r\n        {props.adrList.length >0 \r\n          ?\r\n            <List>\r\n            <Table  striped responsive>\r\n                  <thead >\r\n                      <tr>\r\n                          <th>ADR</th>\r\n                          <th>OnSetDate</th>\r\n                          <th ></th>\r\n                      </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                {props.adrList.map((relative, index) => (\r\n\r\n                  <RelativeList\r\n                      key={index}\r\n                      index={index}\r\n                      relative={relative}\r\n                      removeRelativeLocation={removeRelativeLocation}\r\n                  />\r\n                  ))}\r\n                  </tbody>\r\n                  </Table>\r\n            </List>\r\n            :\r\n            \"\"\r\n        }       \r\n    </div>\r\n    </div>\r\n     \r\n  );\r\n};\r\n\r\nfunction RelativeList({\r\n  relative,\r\n  index,\r\n  removeRelativeLocation,\r\n}) {\r\n\r\n\r\n  return (\r\n          <tr>\r\n              <th>{relative.adr}</th>\r\n              <th>{relative.adrOnsetDate}</th>\r\n              <th></th>\r\n              <th >\r\n                  <IconButton aria-label=\"delete\" size=\"small\" color=\"error\" onClick={() =>removeRelativeLocation(index)}>\r\n                      <DeleteIcon fontSize=\"inherit\" />\r\n                  </IconButton>\r\n                  \r\n              </th>\r\n          </tr> \r\n  );\r\n}\r\n\r\n\r\nexport default ADR;\r\n","import React, { useState } from \"react\";\r\nimport {  Table  } from \"react-bootstrap\";\r\nimport { Input, Label, FormGroup, } from \"reactstrap\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport moment from \"moment\";\r\nimport {Icon, List, Label as LabelSui} from 'semantic-ui-react'\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\nconst ADR = (props) => {\r\n  const [errors, setErrors] = useState({});\r\n  const classes = useStyles()\r\n  let temp = { ...errors }\r\n  const handleInfectionInputChange = e => {\r\n  props.setInfection ({...props.infection,  [e.target.name]: e.target.value});\r\n  }\r\n  //Validations of the forms\r\n  const validate = () => {        \r\n    temp.ondateInfection = props.infection.ondateInfection ? \"\" : \"This field is required\"\r\n    temp.illnessInfection = props.infection.illnessInfection ? \"\" : \"This field is required\"\r\n\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n    const addInfection = e => { \r\n      if(validate()){\r\n        props.setInfectionList([...props.infectionList, props.infection])\r\n      }else{\r\n        toast.error(\" Field are required \");\r\n      }\r\n    \r\n    }\r\n    /* Remove ADR  function **/\r\n    const removeInfection = index => {       \r\n    props.infectionList.splice(index, 1);\r\n    props.setInfectionList([...props.infectionList]);\r\n        \r\n    };\r\n                                            \r\n\r\n  return (\r\n    <div>\r\n       <div className=\"row\">\r\n       {props.enableUpdate && (\r\n        <>\r\n          <div className=\"form-group mb-3 col-md-5\">\r\n              <FormGroup>\r\n              <Label >Onset Date </Label>\r\n              <Input\r\n                  type=\"date\"\r\n                  name=\"ondateInfection\"\r\n                  id=\"ondateInfection\"\r\n                  value={props.infection.ondateInfection}\r\n                  onChange={handleInfectionInputChange}\r\n                  max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  required\r\n                  > \r\n              </Input>\r\n              {errors.ondateInfection !==\"\" ? (\r\n                  <span className={classes.error}>{errors.ondateInfection}</span>\r\n              ) : \"\" }\r\n              </FormGroup>\r\n          </div>\r\n          <div className=\"form-group mb-3 col-md-5\">        \r\n          <FormGroup>\r\n              <Label > Illness</Label>\r\n              <Input\r\n                  type=\"text\"\r\n                  name=\"illnessInfection\"\r\n                  id=\"illnessInfection\"\r\n                  value={props.infection.illnessInfection}\r\n                  onChange={handleInfectionInputChange}\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  required\r\n                  > \r\n              </Input>\r\n              {errors.illnessInfection !==\"\" ? (\r\n                  <span className={classes.error}>{errors.illnessInfection}</span>\r\n              ) : \"\" }\r\n              </FormGroup>\r\n          </div>\r\n          <div className=\"form-group mb-3 col-md-2\">\r\n          <LabelSui as='a' color='black'  onClick={addInfection}  size='tiny' style={{ marginTop:35}}>\r\n              <Icon name='plus' /> Add\r\n          </LabelSui>\r\n          </div>\r\n        </>\r\n        )}\r\n        {props.infectionList.length >0 \r\n          ?\r\n            <List>\r\n            <div style={{padding:'3px 0px'}} >\r\n            <Table  striped responsive size=\"sm\" >\r\n                  <thead  >\r\n                      <tr >\r\n                          <th>Illness</th>\r\n                          <th>OnSetDate</th>\r\n                          <th ></th>\r\n                      </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                {props.infectionList.map((relative, index) => (\r\n\r\n                  <InfectionList\r\n                      key={index}\r\n                      index={index}\r\n                      relative={relative}\r\n                      removeInfection={removeInfection}\r\n                  />\r\n                  ))}\r\n                  </tbody>\r\n                  </Table>\r\n                  </div>\r\n                </List>\r\n                :\r\n                \"\"\r\n            } \r\n    </div>\r\n    </div>\r\n     \r\n  );\r\n};\r\n\r\nfunction InfectionList({\r\n    relative,\r\n    index,\r\n    removeInfection,\r\n  }) {\r\n  \r\n   \r\n    return (\r\n            <tr>\r\n  \r\n                <th>{relative.illnessInfection}</th>\r\n                <th>{relative.ondateInfection}</th>\r\n                <th></th>\r\n                <th >\r\n                    <IconButton aria-label=\"delete\" size=\"small\" color=\"error\" onClick={() =>removeInfection(index)}>\r\n                        <DeleteIcon fontSize=\"inherit\" />\r\n                    </IconButton>\r\n                    \r\n                </th>\r\n            </tr> \r\n    );\r\n  }\r\n\r\nexport default ADR;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Input, Label, FormGroup} from \"reactstrap\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { token, url as baseUrl } from \"./../../../../../api\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nconst TBScreeningForm = (props) => {\r\n  const [tbStatus, setTbStatus] = useState([]); \r\n  const [TBForms, setTBForms] = useState(false) \r\n\r\n  useEffect(() => {\r\n    TBStatus();\r\n    if(props.tbObj.antiTBDrug ==='NO'){\r\n      setTBForms(true)\r\n    }else{\r\n      setTBForms(false)\r\n    }\r\n    }, [props.tbObj]);\r\n\r\n    ///GET LIST OF FUNCTIONAL%20_STATUS\r\n    // TB STATUS\r\n    const TBStatus =()=>{\r\n    axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    \r\n    }\r\n\r\n    const handleInputChange = e => {\r\n      props.setTbObj ({...props.tbObj,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"antiTBDrug\" ){\r\n          if(e.target.value===\"NO\"){\r\n              setTBForms(true)\r\n          }else{\r\n              setTBForms(false)\r\n          }\r\n        }\r\n      }\r\n\r\n  return (\r\n    <div>\r\n       <div className=\"row\">\r\n          \r\n          <div className=\"form-group mb-3 col-md-6\">\r\n          <FormGroup>\r\n              <Label >Patient on Anti TB Drugs?</Label>\r\n              <Input\r\n                  type=\"select\"\r\n                  name=\"antiTBDrug\"\r\n                  id=\"antiTBDrug\"\r\n                  value={props.tbObj.antiTBDrug}\r\n                  onChange={handleInputChange}\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  disabled={!props.enableUpdate}\r\n                  required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"YES\"> YES</option>\r\n                    <option value=\"NO\">NO </option>\r\n\r\n              </Input>\r\n              \r\n            </FormGroup>\r\n          </div>\r\n          {TBForms===true ? (\r\n            <>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label >Patient Currently on IPT?</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"currentOnIpt\"\r\n                    id=\"currentOnIpt\"\r\n                    value={props.tbObj.currentOnIpt}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\"> Select</option>\r\n                      <option value=\"YES\"> YES</option>\r\n                        <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >coughing?</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"coughing\"\r\n                    id=\"coughing\"\r\n                    value={props.tbObj.coughing}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\"> Select</option>\r\n                      <option value=\"YES\"> YES</option>\r\n                      <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >Night Sweat?</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"nightSweat\"\r\n                    id=\"nightSweat\"\r\n                    value={props.tbObj.nightSweat}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\"> Select</option>\r\n                      <option value=\"YES\"> YES</option>\r\n                      <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >Fever</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"fever\"\r\n                    id=\"fever\"\r\n                    value={props.tbObj.fever}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n                      <option value=\"YES\"> YES</option>\r\n                      <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >Contact with TB Case?</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"contactWithTBCase\"\r\n                    id=\"contactWithTBCase\"\r\n                    value={props.tbObj.contactWithTBCase}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\"> Select</option>\r\n                      <option value=\"YES\"> YES</option>\r\n                      <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >Lethergy</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"lethergy\"\r\n                    id=\"lethergy\"\r\n                    value={props.tbObj.lethergy}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n                      <option value=\"YES\"> YES</option>\r\n                    <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              {/* <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {tbStatus.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div> */}\r\n              {(props.tbObj.currentOnIpt===\"NO\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='TB suspected and referred for evaluation' && x.display!=='Currently on INH prophylaxis'  && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='TB suspected and referred for evaluation' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"YES\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='No sign or symptoms of TB' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"YES\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='No sign or symptoms of TB' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"YES\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='No sign or symptoms of TB' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"YES\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='No sign or symptoms of TB' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"YES\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='No sign or symptoms of TB' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n          </>\r\n          )\r\n          :\r\n          \"\"\r\n          }\r\n        </div>\r\n    </div>\r\n     \r\n  );\r\n};\r\n\r\n\r\n\r\nexport default TBScreeningForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Segment, Label,} from 'semantic-ui-react'\r\n// Page titie\r\nimport { FormGroup, Label as FormLabelName, InputGroup,\r\n          InputGroupText,\r\n          InputGroupButtonDropdown,\r\n          Input,\r\n          DropdownToggle,\r\n          DropdownMenu,\r\n          DropdownItem\r\n        } from \"reactstrap\";\r\nimport ADR from './../ADR/Index'\r\nimport OpportunisticInfection from './../OpportunisticInfection/Index'\r\nimport TBScreening from './../TBScreening/Index'\r\nimport { url as baseUrl, token } from \"../../../../../api\";\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Row, Col,   } from \"react-bootstrap\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { Button as ButtonSMUI, Icon} from 'semantic-ui-react'\r\nimport {Link} from 'react-router-dom';\r\n//import { objectValues } from \"react-toastify/dist/utils\";\r\n\r\n\r\nlet adherenceLevelObj = []\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1)\r\n    }\r\n  },\r\n  input: {\r\n    display: 'none'\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\n\r\n\r\nconst ClinicVisit = (props) => {\r\n  const patientObj = props.patientObj ? props.patientObj : {}\r\n  const [dropdownOpen, setDropdownOpen] = React.useState(false);\r\n  const [splitButtonOpen, setSplitButtonOpen] = React.useState(false);\r\n  const toggleDropDown = () => setDropdownOpen(!dropdownOpen);\r\n  const toggleSplit = () => setSplitButtonOpen(!splitButtonOpen);\r\n  const [visitId, setVisitId]= useState()\r\n  const [enableUpdateButton, setEnableUpdateButton]=useState(false)\r\n  const [heightValue, setHeightValue]= useState(\"cm\")\r\n  const [enableUpdate, setEnableUpdate]= useState(false) //Enable update for all input field if the user have permission\r\n  const [errors, setErrors] = useState({});\r\n  const [clinicVisitList, setClinicVisitList] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  let temp = { ...errors }\r\n  const classes = useStyles()\r\n  // the visit date history \r\n  //end of the visit date history\r\n  const [getPatientObj, setGetPatientObj] = useState({});\r\n  const [saving, setSaving] = useState(false);\r\n  const [clinicalStage, setClinicalStage] = useState([]);\r\n  const [functionalStatus, setFunctionalStatus] = useState([]);\r\n  const [adherenceLevel, setAdherenceLevel] = useState([]);\r\n  const [tbStatus, setTbStatus] = useState([]);\r\n  const [TBForms, setTBForms] = useState(false)\r\n  const [currentVitalSigns, setcurrentVitalSigns] = useState({})\r\n  const [showCurrentVitalSigns, setShowCurrentVitalSigns] = useState(false)\r\n  //opportunistic infection Object\r\n  const [infection, setInfection] = useState({ illnessInfection: \"\", ondateInfection: \"\" });\r\n  const [infectionList, setInfectionList] = useState([]);\r\n  //ADR array Object \r\n  const [adrObj, setAdrObj] = useState({ adr: \"\", adrOnsetDate: \"\" });\r\n  const [adrList, setAdrList] = useState([]);\r\n  //Vital signs clinical decision support \r\n  const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n                                                                    bodyWeight: \"\",\r\n                                                                    diastolic: \"\",\r\n                                                                    height: \"\",\r\n                                                                    systolic: \"\",\r\n                                                                    pulse:\"\",\r\n                                                                    temperature:\"\",\r\n                                                                    respiratoryRate:\"\" \r\n                                                                  })\r\n  const [objValues, setObjValues] = useState({\r\n    adherenceLevel: \"\",\r\n    adheres: {},\r\n    adrScreened: \"\",\r\n    adverseDrugReactions: {},\r\n    artStatusId: \"\" ,\r\n    cd4: \"\",\r\n    cd4Percentage: \"\",\r\n    clinicalNote: \"\",\r\n    clinicalStageId: \"\",\r\n    facilityId: 0,\r\n    functionalStatusId: \"\",\r\n    hivEnrollmentId: \"\",\r\n    nextAppointment: \"\",\r\n    lmpDate: \"\",\r\n    oiScreened: \"\",\r\n    opportunisticInfections: {},\r\n    personId: patientObj.id,\r\n    tbScreen: {},\r\n    stiIds: \"\",\r\n    stiTreated: \"\",\r\n    uuid: \"\",\r\n    visitDate: \"\",\r\n    whoStagingId: \"\"\r\n  });\r\n  const [vital, setVitalSignDto] = useState({\r\n    bodyWeight: \"\",\r\n    diastolic: \"\",\r\n    encounterDate: \"\",\r\n    facilityId: 1,\r\n    height: \"\",\r\n    personId: props.patientObj.id,\r\n    serviceTypeId: 1,\r\n    systolic: \"\",\r\n    pulse:\"\",\r\n    temperature:\"\",\r\n    respiratoryRate:\"\" \r\n  })\r\n  const [tbObj, setTbObj] = useState({\r\n    currentOnIpt: \"\",\r\n    coughing: \"\",\r\n    antiTBDrug: \"\",\r\n    nightSweat: \"\",\r\n    fever: \"\",\r\n    contactWithTBCase: \"\",\r\n    lethergy: \"\",\r\n    tbStatusId: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    FunctionalStatus();\r\n    WhoStaging();\r\n    AdherenceLevel();\r\n    TBStatus();\r\n    VitalSigns()\r\n    GetPatientObj();\r\n    ClinicVisitListHistory();\r\n    if(props.activeContent.id!==null){\r\n     \r\n      GetVisitById(props.activeContent.id)\r\n      setVisitId(props.activeContent.id)\r\n    }\r\n  }, []);\r\n     //GET LIST Drug Refill\r\n     async function ClinicVisitListHistory() {\r\n      setLoading(true)\r\n      axios\r\n          .get(`${baseUrl}hiv/art/clinic-visit/person?pageNo=0&pageSize=10&personId=${props.patientObj.id}`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n          )\r\n          .then((response) => {\r\n              setLoading(false)\r\n              setClinicVisitList(response.data.filter((x)=> x.isCommencement!==true));              \r\n          })\r\n          .catch((error) => {  \r\n              setLoading(false)  \r\n          });        \r\n    }\r\n  //Check for the last Vital Signs\r\n  const VitalSigns = () => {\r\n    axios\r\n      .get(`${baseUrl}patient/vital-sign/person/${props.patientObj.id}`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n\r\n        const lastVitalSigns = response.data[response.data.length - 1]\r\n        if (lastVitalSigns.encounterDate === moment(new Date()).format(\"YYYY-MM-DD\") === true) {\r\n          setcurrentVitalSigns(lastVitalSigns)\r\n          setShowCurrentVitalSigns(true)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n    //Get The updated patient objeect\r\n    const GetPatientObj = () => {\r\n      axios\r\n        .get(`${baseUrl}hiv/patients`,\r\n          { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n          const patObJ= response.data.filter((x)=> x.id===props.patientObj.id)\r\n\r\n          setGetPatientObj(patObJ[0])\r\n        })\r\n        .catch((error) => {\r\n          //console.log(error);\r\n        });\r\n    }\r\n\r\n  //Get list of WhoStaging\r\n  const WhoStaging = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/CLINICAL_STAGE`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setClinicalStage(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n  ///GET LIST OF FUNCTIONAL%20_STATUS\r\n  // TB STATUS\r\n  const TBStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setTbStatus(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n\r\n  async function FunctionalStatus() {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/FUNCTIONAL%20_STATUS`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n\r\n        setFunctionalStatus(response.data);\r\n        //setValues(response.data)\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  ///Level of Adherence\r\n  async function AdherenceLevel() {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_LEVEL_OF_ADHERENCE`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setAdherenceLevel(response.data);\r\n\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  const handleInputChange = e => {\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    if (e.target.name === \"whoStagingId\") {\r\n      if (e.target.value === \"NO\") {\r\n        setTBForms(true)\r\n      } else {\r\n        setTBForms(false)\r\n      }\r\n    }\r\n  }\r\n  const handleInputChangeVitalSignDto = e => {\r\n    setVitalSignDto({ ...vital, [e.target.name]: e.target.value });\r\n  }\r\n\r\n  //Handle CheckBox \r\n  const handleCheckBox = e => {\r\n    if (e.target.checked) {\r\n      //currentVitalSigns.personId === null ? props.patientObj.id : currentVitalSigns.personId\r\n      setVitalSignDto({ ...currentVitalSigns })\r\n    } else {\r\n      setVitalSignDto({\r\n        bodyWeight: \"\",\r\n        diastolic: \"\",\r\n        encounterDate: \"\",\r\n        facilityId: \"\",\r\n        height: \"\",\r\n        personId: props.patientObj.id,\r\n        serviceTypeId: \"\",\r\n        systolic: \"\",\r\n        pulse:\"\",\r\n        temperature:\"\",\r\n        respiratoryRate:\"\" \r\n      })\r\n    }\r\n  }\r\n  //to check the input value for clinical decision \r\n  const handleInputValueCheckHeight =(e)=>{\r\n    if(e.target.name===\"height\" && (e.target.value < 48.26 || e.target.value>216.408)){\r\n      const message =\"Height cannot be greater than 216.408 and less than 48.26\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, height:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, height:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckBodyWeight =(e)=>{\r\n    if(e.target.name===\"bodyWeight\" && (e.target.value < 3 || e.target.value>150)){      \r\n      const message =\"Body weight must not be greater than 150 and less than 3\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckSystolic =(e)=>{\r\n    if(e.target.name===\"systolic\" && (e.target.value < 90 || e.target.value>240)){      \r\n      const message =\"Blood Pressure systolic must not be greater than 240 and less than 90\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckDiastolic =(e)=>{\r\n    if(e.target.name===\"diastolic\" && (e.target.value < 60 || e.target.value>140)){      \r\n      const message =\"Blood Pressure diastolic must not be greater than 140 and less than 60\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckPulse =(e)=>{\r\n    if(e.target.name===\"pulse\" && (e.target.value < 40 || e.target.value>120)){      \r\n    const message =\"Pulse must not be greater than 120 and less than 40\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:\"\"})\r\n    }\r\n}\r\nconst handleInputValueCheckRespiratoryRate =(e)=>{\r\n    if(e.target.name===\"respiratoryRate\" && (e.target.value < 10 || e.target.value>70)){      \r\n    const message =\"Respiratory Rate must not be greater than 70 and less than 10\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:\"\"})\r\n    }\r\n}\r\nconst handleInputValueCheckTemperature =(e)=>{\r\n    if(e.target.name===\"temperature\" && (e.target.value < 35 || e.target.value>47)){      \r\n    const message =\"Temperature must not be greater than 47 and less than 35\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, temperature:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, temperature:\"\"})\r\n    }\r\n}\r\n  //Validations of the forms\r\n  const validate = () => {        \r\n    temp.encounterDate = vital.encounterDate ? \"\" : \"This field is required\"\r\n    temp.nextAppointment = objValues.nextAppointment ? \"\" : \"This field is required\"\r\n    temp.whoStagingId = objValues.whoStagingId ? \"\" : \"This field is required\"\r\n    temp.clinicalNote = objValues.clinicalNote ? \"\" : \"This field is required\"\r\n    temp.functionalStatusId = objValues.functionalStatusId ? \"\" : \"This field is required\"\r\n    temp.adherenceLevel = objValues.adherenceLevel ? \"\" : \"This field is required\"\r\n    temp.labTestGroupId = vital.diastolic ? \"\" : \"This field is required\"\r\n    temp.systolic = vital.systolic ? \"\" : \"This field is required\"\r\n    temp.height = vital.height ? \"\" : \"This field is required\"\r\n    temp.bodyWeight = vital.bodyWeight ? \"\" : \"This field is required\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n\r\n  const  heightFunction =(e)=>{\r\n    if(e==='cm'){\r\n        setHeightValue('cm')\r\n        if(vital.height!==\"\"){\r\n            const newHeightValue= (vital.height * 100)\r\n            setVitalSignDto ({...vital,  height: newHeightValue});\r\n        }\r\n    }else if(e==='m'){\r\n        setHeightValue('m')\r\n        if(vital.height!==\"\"){\r\n            const newHeightValue= (vital.height/100)\r\n            setVitalSignDto ({...vital,  height: newHeightValue});\r\n        }\r\n        \r\n    }\r\n\r\n  }\r\n  /**** Submit Button Processing  */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(validate()){\r\n    setSaving(true)\r\n    objValues.visitDate = vital.encounterDate\r\n    objValues.adverseDrugReactions = adrList\r\n    objValues.artStatusId = getPatientObj.artCommence.id\r\n    objValues.hivEnrollmentId = getPatientObj.enrollment.id\r\n    objValues.opportunisticInfections = infectionList\r\n    objValues.tbScreen = tbObj\r\n    objValues['vitalSignDto'] = vital\r\n    axios.put(`${baseUrl}hiv/art/clinic-visit/${visitId}`, objValues,\r\n      { headers: { \"Authorization\": `Bearer ${token}` } },\r\n\r\n    )\r\n      .then(response => {\r\n        setSaving(false);\r\n        toast.success(\"Clinic Visit updated successful\");\r\n        //GetVisitById(visitId)\r\n        //props.setActiveContent({...props.activeContent, route:'consultation', id:\"\", activeTab:\"history\", actionType:\"view\", obj:{}})\r\n      })\r\n      .catch(error => {\r\n        setSaving(false);\r\n        if(error.response && error.response.data){\r\n          let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        }\r\n        else{\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n       \r\n      });\r\n    }\r\n  }\r\n  //Get visit by ID\r\n  async function GetVisitById(visitID) {\r\n    axios\r\n      .get(`${baseUrl}hiv/art/clinic-visit/${visitID}`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n          const e = response.data\r\n          setVitalSignDto({ ...e.vitalSignDto })\r\n          objValues.clinicalNote = e.clinicalNote\r\n          objValues.functionalStatusId= e.functionalStatusId\r\n          objValues.whoStagingId= e.whoStagingId \r\n          objValues.nextAppointment= e.nextAppointment\r\n          objValues.adherenceLevel = e.adherenceLevel\r\n          setTbObj({...e.tbScreen})\r\n          setAdrList([...e.adverseDrugReactions])\r\n          setInfectionList([...e.opportunisticInfections])\r\n\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  const getVisitDetail=(e)=>{\r\n      setEnableUpdateButton(true)\r\n      setVisitId(e.id)\r\n      GetVisitById(e.id)      \r\n  }\r\n  const EnableUpdateAction =()=>{\r\n\r\n      setEnableUpdate(true)\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n        <div className=\"row\">\r\n            <div className=\"col-xl-3 col-xxl-3 col-lg-3\" >\r\n                <div className=\"card\" style={{ height: \"500px\" }}>\r\n                    <div className=\"card-header  border-0 pb-2\" style={{backgroundColor:\"#014D88\"}}>\r\n                    <h4 className=\"card-title\" style={{color:\"#fff\"}}> Clinic Visits</h4>\r\n                    </div>\r\n                    <div className=\"card-body\" >\r\n                    <PerfectScrollbar\r\n                        style={{ height: \"370px\" }}\r\n                        id=\"DZ_W_Todo1\"\r\n                        className=\"widget-media dz-scroll ps ps--active-y\"\r\n                    >\r\n                    {clinicVisitList.map((visit,index)=>(\t\r\n                    <div className=\"media pb-3 border-bottom mb-0 align-items-center\" key={index}>\t\t\t\t\t\t\t\t\r\n                      <div className=\"media-body\">\r\n                            <ButtonSMUI\r\n                                color='black'\r\n                                content='Visit Date'\r\n                                icon='calendar alternate'\r\n                                onClick={()=>getVisitDetail(visit)}\r\n                                label={{ basic: true, color: 'grey', pointing: 'left', content: `${visit.visitDate}` }}\r\n                            />\r\n                      </div>\r\n                    </div>\r\n\t\t\t\t\t\t))}\r\n                    </PerfectScrollbar>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"col-xl-9 col-xxl-9 col-lg-9\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header  border-0 pb-2\" style={{backgroundColor:\"#014D88\"}}>\r\n                    <h4 className=\"card-title\" style={{color:\"#fff\"}}> </h4>\r\n                    {enableUpdateButton && (\r\n                    <ButtonSMUI color='facebook' onClick={()=>EnableUpdateAction()} >\r\n                      <Icon name='edit' /> Edit Visit \r\n                    </ButtonSMUI>\r\n                    )}\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                    <Grid columns='equal'>\r\n                    <Grid.Column >\r\n                    <Segment>\r\n                    <Label as='a' color='black' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}> Visit Date - {vital.encounterDate}</h4>\r\n                        </Label>\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <FormLabelName >Date of Visit *</FormLabelName>\r\n                            <Input\r\n                                type=\"date\"\r\n                                name=\"encounterDate\"\r\n                                id=\"encounterDate\"\r\n                                value={vital.encounterDate}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            />\r\n                            {errors.encounterDate !==\"\" ? (\r\n                                <span className={classes.error}>{errors.encounterDate}</span>\r\n                            ) : \"\" }\r\n\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n\r\n                        </div>\r\n                        <div className=\"row\">\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Pulse</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"pulse\"\r\n                                id=\"pulse\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"40\"\r\n                                max=\"120\"\r\n                                value={vital.pulse}\r\n                                onKeyUp={handleInputValueCheckPulse} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.pulse !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.pulse}</span>\r\n                        ) : \"\"}\r\n                        {errors.pulse !==\"\" ? (\r\n                            <span className={classes.error}>{errors.pulse}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Respiratory Rate </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"respiratoryRate\"\r\n                                id=\"respiratoryRate\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"10\"\r\n                                max=\"70\"\r\n                                value={vital.respiratoryRate}\r\n                                onKeyUp={handleInputValueCheckRespiratoryRate} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.respiratoryRate !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.respiratoryRate}</span>\r\n                        ) : \"\"}\r\n                        {errors.respiratoryRate !==\"\" ? (\r\n                            <span className={classes.error}>{errors.respiratoryRate}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Temperature </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"temperature\"\r\n                                id=\"temperature\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"35\"\r\n                                max=\"47\"\r\n                                value={vital.temperature}\r\n                                onKeyUp={handleInputValueCheckTemperature} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                <sup>o</sup>c\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.temperature !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.temperature}</span>\r\n                        ) : \"\"}\r\n                        {errors.temperature !==\"\" ? (\r\n                            <span className={classes.error}>{errors.temperature}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Body Weight</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"bodyWeight\"\r\n                                id=\"bodyWeight\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"3\"\r\n                                max=\"150\"\r\n                                value={vital.bodyWeight}\r\n                                onKeyUp={handleInputValueCheckBodyWeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                kg\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.bodyWeight !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.bodyWeight}</span>\r\n                        ) : \"\"}\r\n                        {errors.bodyWeight !==\"\" ? (\r\n                            <span className={classes.error}>{errors.bodyWeight}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>                                   \r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Height</FormLabelName>\r\n                        <InputGroup> \r\n                        <InputGroupText\r\n                                addonType=\"append\"\r\n                                isOpen={dropdownOpen}\r\n                                toggle={toggleDropDown}\r\n                                style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                cm\r\n                        </InputGroupText>\r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"height\"\r\n                                id=\"height\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                value={vital.height}\r\n                                min=\"48.26\"\r\n                                max=\"216.408\"\r\n                                onKeyUp={handleInputValueCheckHeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                                <InputGroupText\r\n                                addonType=\"append\"\r\n                                isOpen={dropdownOpen}\r\n                                toggle={toggleDropDown}\r\n                                style={{ backgroundColor:\"#992E62\", color:\"#fff\", border: \"1px solid #992E62\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                {vital.height!=='' ? (vital.height/100).toFixed(2) + \"m\" : \"m\"}\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.height !==\"\" ? (\r\n                            <span className={classes.error}>{vitalClinicalSupport.height}</span>\r\n                        ) : \"\"}\r\n                        {errors.height !==\"\" ? (\r\n                            <span className={classes.error}>{errors.height}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 mt-2 col-md-4\">\r\n                        {vital.bodyWeight!==\"\" && vital.height!=='' && (\r\n                            <FormGroup>\r\n                            <Label > {\" \"}</Label>\r\n                            <InputGroup> \r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                BMI : {Math.round(vital.bodyWeight/((vital.height * vital.height)/100))}\r\n                            </InputGroupText>                   \r\n                           \r\n                            </InputGroup>                \r\n                            </FormGroup>\r\n                        )}\r\n                    </div>\r\n              </div>\r\n              <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-8\">\r\n                  <FormGroup>\r\n                  <FormLabelName >Blood Pressure</FormLabelName>\r\n                  <InputGroup>\r\n                  <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                          systolic(mmHg)\r\n                  </InputGroupText> \r\n                      <Input \r\n                          type=\"number\"\r\n                          name=\"systolic\"\r\n                          id=\"systolic\"\r\n                          min=\"90\"\r\n                          max=\"240\"\r\n                          onChange={handleInputChangeVitalSignDto}\r\n                          value={vital.systolic}\r\n                          onKeyUp={handleInputValueCheckSystolic}\r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}} \r\n                      />\r\n                      <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                      diastolic(mmHg)\r\n                      </InputGroupText>\r\n                          <Input \r\n                          type=\"number\"\r\n                          name=\"diastolic\"\r\n                          id=\"diastolic\"\r\n                          min={0}\r\n                          max={140}\r\n                          onChange={handleInputChangeVitalSignDto}\r\n                          value={vital.diastolic}\r\n                          onKeyUp={handleInputValueCheckDiastolic} \r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                          />\r\n                      \r\n                      \r\n                  </InputGroup>\r\n                  {vitalClinicalSupport.systolic !==\"\" ? (\r\n                  <span className={classes.error}>{vitalClinicalSupport.systolic}</span>\r\n                  ) : \"\"}\r\n                  {errors.systolic !==\"\" ? (\r\n                      <span className={classes.error}>{errors.systolic}</span>\r\n                  ) : \"\" }  \r\n                  {vitalClinicalSupport.diastolic !==\"\" ? (\r\n                  <span className={classes.error}>{vitalClinicalSupport.diastolic}</span>\r\n                  ) : \"\"}\r\n                  {errors.diastolic !==\"\" ? (\r\n                      <span className={classes.error}>{errors.diastolic}</span>\r\n                  ) : \"\" }          \r\n                  </FormGroup>\r\n              </div>\r\n\r\n              </div>\r\n                        </div>\r\n                        <Label as='a' color='grey' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>CONSULTATION</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n\r\n                        <div className=\" mb-3\">\r\n                        <FormLabelName >Clinical Notes</FormLabelName>\r\n                        <textarea\r\n                            name=\"clinicalNote\"\r\n                            className=\"form-control\"\r\n                            value={objValues.clinicalNote}\r\n                            onChange={handleInputChange}\r\n                            style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                            disabled={!enableUpdate}\r\n                        ></textarea>\r\n                        {errors.clinicalNote !==\"\" ? (\r\n                                <span className={classes.error}>{errors.clinicalNote}</span>\r\n                            ) : \"\" }\r\n                        </div>\r\n                        <div className=\"row\">\r\n\r\n                        <div className=\" mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <FormLabelName >WHO Staging *</FormLabelName>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"whoStagingId\"\r\n                                id=\"whoStagingId\"\r\n                                value={objValues.whoStagingId}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            >\r\n                                <option value=\"select\">Select </option>\r\n\r\n                                {clinicalStage.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                                ))}\r\n                            </Input>\r\n                            {errors.whoStagingId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.whoStagingId}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\" mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <FormLabelName >Functional Status *</FormLabelName>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"functionalStatusId\"\r\n                                id=\"functionalStatusId\"\r\n                                value={objValues.functionalStatusId}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            >\r\n                                <option value=\"select\">Select </option>\r\n\r\n                                {functionalStatus.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                                ))}\r\n                            </Input>\r\n                            {errors.functionalStatusId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.functionalStatusId}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\" mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <FormLabelName >Level of Adherence *</FormLabelName>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"adherenceLevel\"\r\n                                id=\"adherenceLevel\"\r\n                                value={objValues.adherenceLevel}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            >\r\n                                <option value=\"\">Select </option>\r\n\r\n                                {adherenceLevel.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                                ))}\r\n                            </Input>\r\n                            {errors.adherenceLevel !==\"\" ? (\r\n                                <span className={classes.error}>{errors.adherenceLevel}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n\r\n                        </div>\r\n                        <br />\r\n                        <Label as='a' color='red' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>OPPORTUNISTIC INFECTION</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n                        <OpportunisticInfection setInfection={setInfection} infection={infection} setInfectionList={setInfectionList} infectionList={infectionList} enableUpdate={enableUpdate}/>\r\n                        <br />\r\n                        <Label as='a' color='pink' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>ADR</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n                        <ADR setAdrObj={setAdrObj} adrObj={adrObj} setAdrList={setAdrList} adrList={adrList}  enableUpdate={enableUpdate}/>\r\n                        <br />\r\n                        <Label as='a' color='teal' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>TB SCREENING</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n                        {/* TB Screening Form */}\r\n                        <TBScreening tbObj={tbObj} setTbObj={setTbObj} enableUpdate={enableUpdate}/>\r\n                        <br />\r\n                        <Label as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>NEXT CLINICAL APPOINTMENT DATE</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n                        {/* TB Screening Form */}\r\n                        <Input\r\n                                type=\"date\"\r\n                                name=\"nextAppointment\"\r\n                                id=\"nextAppointment\"\r\n                                className=\"col-md-6\"\r\n                                value={objValues.nextAppointment}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                min={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            />\r\n                        {errors.nextAppointment !==\"\" ? (\r\n                                <span className={classes.error}>{errors.nextAppointment}</span>\r\n                            ) : \"\" }\r\n                        <br />\r\n                        <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        disabled={saving}\r\n                        startIcon={<SaveIcon />}\r\n                        style={{backgroundColor:\"#014d88\"}}\r\n                        onClick={handleSubmit}\r\n                        hidden={!enableUpdate}\r\n                        >\r\n                        {!saving ? (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                        ) : (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                        )}\r\n                        </MatButton>\r\n                    </Segment>\r\n                    </Grid.Column>\r\n\r\n                </Grid>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    </div>    \r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClinicVisit;\r\n","import React, { useEffect, useState } from 'react'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"@reach/menu-button/styles.css\";\r\nimport ConsultationPage from './History/ConsultationPage'\r\n\r\n\r\nconst ClinicVisitHistory = (props) => {    \r\n  const patientObj = props.patientObj ? props.patientObj : {}\r\n\r\n  return (\r\n    <div>\r\n         <div className=\"row\">\r\n            \r\n                <ConsultationPage patientObj={patientObj} activeContent={props.activeContent} />  \r\n\r\n        </div>   \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ClinicVisitHistory;\r\n\r\n\r\n","import React, {useState, Fragment, useEffect } from \"react\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport ConsultationPage from './Home';\r\nimport ClinicHistoryPage from \"./ViewUpdate/ClinicHistory\";\r\n\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst ClinicVisitPage = (props) => {\r\n    const [key, setKey] = useState('home');\r\n    const patientObj = props.patientObj\r\n    \r\n    useEffect ( () => {\r\n      setKey(props.activeContent.activeTab)\r\n    }, [props.activeContent.id]);\r\n\r\n\r\n  return (\r\n    <Fragment>  \r\n      <Row>       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n\r\n                  <Tab eventKey=\"home\" title=\"CLINIC VISIT \">                   \r\n                    <ConsultationPage patientObj={patientObj} setActiveContent={props.setActiveContent}/>\r\n                  </Tab>  \r\n                  <Tab eventKey=\"history\" title=\" HISTORY\">                   \r\n                    <ClinicHistoryPage patientObj={patientObj} activeContent={props.activeContent} setActiveContent={props.setActiveContent} />\r\n                  </Tab>                   \r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ClinicVisitPage;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Card,CardBody, FormGroup, Label, Input, InputGroup,InputGroupText} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\nconst AncPnc = (props) => {\r\n    const patientObj = props.patientObj;\r\n    console.log(patientObj)\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    //const [values, setValues] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const [vital, setVitalSignDto]= useState({\r\n\r\n                                                bodyWeight: \"\",\r\n                                                diastolic: \"\",\r\n                                                encounterDate: \"\",\r\n                                                facilityId: 1,\r\n                                                height: \"\",\r\n                                                personId: \"\",\r\n                                                pulse: \"\",\r\n                                                respiratoryRate: \"\",\r\n                                                systolic:\"\",\r\n                                                temperature: \"\",\r\n                                                visitId:\"\"\r\n                                            })\r\n    \r\n        const handleInputChangeVitalSignDto = e => {            \r\n            setVitalSignDto ({...vital,  [e.target.name]: e.target.value});\r\n        }\r\n\r\n        //FORM VALIDATION\r\n        const validate = () => {\r\n            let temp = { ...errors }\r\n            //temp.name = details.name ? \"\" : \"This field is required\"\r\n            //temp.description = details.description ? \"\" : \"This field is required\"\r\n            setErrors({\r\n                ...temp\r\n                })    \r\n            return Object.values(temp).every(x => x == \"\")\r\n        }\r\n          \r\n        /**** Submit Button Processing  */\r\n        const handleSubmit = (e) => {        \r\n            e.preventDefault();        \r\n            \r\n            setSaving(true);\r\n            axios.post(`${baseUrl}patient/vital-sign/`, vital,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  props.patientObj.commenced=true\r\n                  toast.success(\"Vital signs save successful\");\r\n                  props.toggle()\r\n                  props.patientsVitalsSigns()\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n                 \r\n              });\r\n          \r\n        }\r\n\r\n  return (      \r\n      <div >\r\n                   \r\n        <Card >\r\n            <CardBody>\r\n            <form >\r\n                <div className=\"row\">\r\n                <h2>PMTCT Enrollment</h2>\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >ANC ID *</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date of Visit *</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label >Blood Presure</Label>\r\n                        <InputGroup>\r\n                        <InputGroupText>\r\n                            systolic(mmHg)\r\n                            </InputGroupText> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"systolic\"\r\n                                id=\"systolic\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                value={vital.systolic} \r\n                            />\r\n                            \r\n                        </InputGroup>\r\n                        {vital.systolic > 200 ? (\r\n                                <span className={classes.error}>{\"Blood Pressure cannot be greater than 200.\"}</span>\r\n                            ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label >Blood Presure</Label>\r\n                        \r\n                        <InputGroup> \r\n                        <InputGroupText>\r\n                            diastolic (mmHg)\r\n                            </InputGroupText>\r\n                            <Input \r\n                                type=\"text\"\r\n                                name=\"diastolic\"\r\n                                id=\"diastolic\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                value={vital.diastolic} \r\n                            />\r\n                            \r\n                        </InputGroup>\r\n                        {vital.diastolic > 200 ? (\r\n                            <span className={classes.error}>{\"Blood Pressure cannot be greater than 200.\"}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label >Body Weight</Label>\r\n                        <InputGroup>\r\n                        <InputGroupText>\r\n                                kg\r\n                            </InputGroupText> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"bodyWeight\"\r\n                                id=\"bodyWeight\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                value={vital.bodyWeight} \r\n                            />\r\n                            \r\n                            \r\n                        </InputGroup>\r\n                        {vital.bodyWeight > 200 ? (\r\n                                <span className={classes.error}>{\"Body Weight cannot be greater than 200.\"}</span>\r\n                            ) : \"\" \r\n                        }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label >Fundal Height</Label>\r\n                        <InputGroup> \r\n                        <InputGroupText>\r\n                                cm\r\n                            </InputGroupText>\r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"height\"\r\n                                id=\"height\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                value={vital.height} \r\n                            />\r\n                            \r\n                        </InputGroup>\r\n                        {vital.height > 3 ? (\r\n                            <span className={classes.error}>{\"Height cannot be greater than 3.\"}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Fetal Presentation</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Gestational Age(weeks) *</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Type of Visit</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Visit Status</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Viral Load Sample Collected?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date Sample Collected*</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >TB Status</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date of next appointment*</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <hr/>\r\n                    <h3>Counseling/Other Services Provided</h3>\r\n                    <hr/>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Nutritional Support</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Infant Feeding</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Family Planing Method Used</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Referred to</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <hr/>\r\n                    <h3>Partner Information</h3>\r\n                    <hr/>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Agreed to partner notification</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                </div>\r\n                \r\n                {saving ? <Spinner /> : \"\"}\r\n            <br />\r\n            \r\n            <MatButton\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            startIcon={<SaveIcon />}\r\n            onClick={handleSubmit}\r\n            >\r\n                {!saving ? (\r\n                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                ) : (\r\n                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                )}\r\n            </MatButton>\r\n            \r\n            <MatButton\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                startIcon={<CancelIcon />}\r\n                \r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n            </MatButton>\r\n            \r\n                </form>\r\n            </CardBody>\r\n        </Card> \r\n                  \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AncPnc;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Card,CardBody, FormGroup, Label, Input, InputGroup} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\nconst AncEnrollement = (props) => {\r\n    const patientObj = props.patientObj;\r\n    console.log(patientObj)\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    //const [values, setValues] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const [vital, setVitalSignDto]= useState({\r\n\r\n                                                bodyWeight: \"\",\r\n                                                diastolic: \"\",\r\n                                                encounterDate: \"\",\r\n                                                facilityId: 1,\r\n                                                height: \"\",\r\n                                                personId: \"\",\r\n                                                pulse: \"\",\r\n                                                respiratoryRate: \"\",\r\n                                                systolic:\"\",\r\n                                                temperature: \"\",\r\n                                                visitId:\"\"\r\n                                            })\r\n    \r\n        const handleInputChangeVitalSignDto = e => {            \r\n            setVitalSignDto ({...vital,  [e.target.name]: e.target.value});\r\n        }\r\n\r\n        //FORM VALIDATION\r\n        const validate = () => {\r\n            let temp = { ...errors }\r\n            //temp.name = details.name ? \"\" : \"This field is required\"\r\n            //temp.description = details.description ? \"\" : \"This field is required\"\r\n            setErrors({\r\n                ...temp\r\n                })    \r\n            return Object.values(temp).every(x => x == \"\")\r\n        }\r\n          \r\n        /**** Submit Button Processing  */\r\n        const handleSubmit = (e) => {        \r\n            e.preventDefault();        \r\n            \r\n            setSaving(true);\r\n            axios.post(`${baseUrl}patient/vital-sign/`, vital,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  props.patientObj.commenced=true\r\n                  toast.success(\"Vital signs save successful\");\r\n                  props.toggle()\r\n                  props.patientsVitalsSigns()\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n                 \r\n              });\r\n          \r\n        }\r\n\r\n  return (      \r\n      <div >\r\n                   \r\n        <Card >\r\n            <CardBody>\r\n            <form >\r\n                <div className=\"row\">\r\n                <h2>ANC Enrollment</h2>\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >ANC No *</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date of 1st ANC *</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Gravida</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Parity</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date Of Last Menstrual Period* </Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Expected Date Of Delivery </Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"Date\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Gestational Age (Weeks)</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Time of HIV Diagnosis</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Source of Referral</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    \r\n                    <h3>Syphilis Information</h3>\r\n                    <hr/>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Tested for syphilis?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Test Result</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Treated for Syphilis</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Referred for syphilis treatment</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <h3>PMTCT HTS</h3>\r\n                    <hr/>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Previously known HIV positive?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date tested HIV positive</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Accepted HIV Testing?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >HIV test result</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >HIV Restesting?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Received HIV test result?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    \r\n                    <h3>Hepatitis Information</h3>\r\n                    <hr/>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Tested for Hepatitis B</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Hepatitis B test result</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Tested for Hepatitis C</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Hepatitis C test result</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <h3>Partner Notification</h3>\r\n                    <hr/>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Agreed to partner notification?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                >\r\n                                    <option value=\"\">Select</option>\r\n                                </Input>\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Partner's HIV status</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                >\r\n                                    <option value=\"\">Select</option>\r\n                                </Input>\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Partner referred to?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                >\r\n                                    <option value=\"\">Select</option>\r\n                                </Input>\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                </div>\r\n                \r\n                {saving ? <Spinner /> : \"\"}\r\n            <br />\r\n            \r\n            <MatButton\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            startIcon={<SaveIcon />}\r\n            onClick={handleSubmit}\r\n            >\r\n                {!saving ? (\r\n                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                ) : (\r\n                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                )}\r\n            </MatButton>\r\n            \r\n            <MatButton\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                startIcon={<CancelIcon />}\r\n                \r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n            </MatButton>\r\n            \r\n                </form>\r\n            </CardBody>\r\n        </Card> \r\n                  \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AncEnrollement;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Card,CardBody, FormGroup, Label, Input, InputGroup} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\nconst LabourDelivery = (props) => {\r\n    const patientObj = props.patientObj;\r\n    console.log(patientObj)\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    //const [values, setValues] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const [vital, setVitalSignDto]= useState({\r\n\r\n                                                bodyWeight: \"\",\r\n                                                diastolic: \"\",\r\n                                                encounterDate: \"\",\r\n                                                facilityId: 1,\r\n                                                height: \"\",\r\n                                                personId: \"\",\r\n                                                pulse: \"\",\r\n                                                respiratoryRate: \"\",\r\n                                                systolic:\"\",\r\n                                                temperature: \"\",\r\n                                                visitId:\"\"\r\n                                            })\r\n    \r\n        const handleInputChangeVitalSignDto = e => {            \r\n            setVitalSignDto ({...vital,  [e.target.name]: e.target.value});\r\n        }\r\n\r\n        //FORM VALIDATION\r\n        const validate = () => {\r\n            let temp = { ...errors }\r\n            //temp.name = details.name ? \"\" : \"This field is required\"\r\n            //temp.description = details.description ? \"\" : \"This field is required\"\r\n            setErrors({\r\n                ...temp\r\n                })    \r\n            return Object.values(temp).every(x => x == \"\")\r\n        }\r\n          \r\n        /**** Submit Button Processing  */\r\n        const handleSubmit = (e) => {        \r\n            e.preventDefault();        \r\n            \r\n            setSaving(true);\r\n            axios.post(`${baseUrl}patient/vital-sign/`, vital,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  props.patientObj.commenced=true\r\n                  toast.success(\"Vital signs save successful\");\r\n                  props.toggle()\r\n                  props.patientsVitalsSigns()\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n                 \r\n              });\r\n          \r\n        }\r\n\r\n  return (      \r\n      <div >\r\n                   \r\n        <Card >\r\n            <CardBody>\r\n            <form >\r\n                <div className=\"row\">\r\n                    <h2>labour and Delivery</h2>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >ANC ID  *</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Booking Status</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date of Delivery</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Gestational Age (weeks)</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >ROM to Delivery Interval </Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Mode of Delivery</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"Date\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Episiotomy</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Vaginal Tear</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Feeding decision</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Maternal Outcome</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Child given ARV within 72 hrs</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Child status</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >HIV exposed infant given Hep B within 24 hrs of birth</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    \r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Time of Diagnosis</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >On ART?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >ART started in L&D ward</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Source of Referral</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Hepatitis B Status</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Hepatitis C Status</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n  \r\n            </div>\r\n                \r\n                {saving ? <Spinner /> : \"\"}\r\n            <br />\r\n            \r\n            <MatButton\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            startIcon={<SaveIcon />}\r\n            onClick={handleSubmit}\r\n            >\r\n                {!saving ? (\r\n                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                ) : (\r\n                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                )}\r\n            </MatButton>\r\n            \r\n            <MatButton\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                startIcon={<CancelIcon />}\r\n                \r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n            </MatButton>\r\n            \r\n                </form>\r\n            </CardBody>\r\n        </Card> \r\n                  \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LabourDelivery;\r\n","export default __webpack_public_path__ + \"static/media/fingerprintimage.73ff98ea.png\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport {Dropdown,Badge} from 'react-bootstrap';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport fingerprintimage  from './../../images/fingerprintimage.png';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\r\n            fontFamily:'FontAwesome',\r\n            border:'0',\r\n            verticalAlign:'middle',\r\n            marginLeft:'.25em',\r\n            lineHeight:'1'\r\n        },\r\n        \"& .dropdown-menu .dropdown-item\":{\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            padding: '0.3rem 1.5rem',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .mt-4\":{\r\n            marginTop:'28px !important'\r\n        },\r\n        \"& .form-control\":{\r\n            color:'#992E62'\r\n        },\r\n        \"& .form-control:focus\":{\r\n            color:'#014d88'\r\n        },\r\n        \"& .sharp \":{\r\n            \"min-width\": \"35px\",\r\n            padding:\"5px\",\r\n            height: '35px',\r\n            \"min-height\": \"35px\"\r\n}\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n/*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nfunction Biometrics(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [biometricDevices,setbiometricDevices] = useState([]);\r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageLoading, setPageLoading] = useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n    // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([]);\r\n    const [selectedFingers, setSelectedFingers] = useState([]);\r\n\r\n    const buttonSx = {\r\n        ...(success && {\r\n            bgcolor: green[500],\r\n            '&:hover': {\r\n                bgcolor: green[700],\r\n            },\r\n        }),\r\n    };\r\n\r\n    const getPersonBiometrics = async() =>{\r\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n\r\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\r\n            if(response.data.length > 0){\r\n                setStoredBiometrics(response.data);\r\n                setPageLoading(true);\r\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\r\n                setSelectedFingers(personCapturedFingers);\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\r\n\r\n                });\r\n                setFingerType(biometricItems);\r\n            }else{\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: false});\r\n                    //return item.captured = personCapturedFingers.includes(item.display)\r\n                });\r\n                setFingerType(biometricItems);\r\n\r\n            }\r\n\r\n        }).catch(async (error)=>{\r\n            console.log(\"getPersonBiometrics error\")\r\n            console.log(error)\r\n\r\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                return _.extend({}, item, {captured: false});\r\n            });\r\n            setFingerType(biometricItems);\r\n            setPageLoading(true);\r\n        })\r\n    }\r\n\r\n    const clear_storelist = () =>{\r\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            console.log('cleared store')\r\n        }).catch((error)=>{\r\n            console.log(\"cleared store error\")\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        clear_storelist();\r\n        getPersonBiometrics();\r\n        TemplateType();\r\n        //biometricFingers();\r\n    }, []);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n                            setbiometricDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    //Get list of Finger index\r\n    const biometricFingers =()=>{\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setFingerType(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    //check if device is plugged or not\r\n    const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data.errorType ===\"ERROR\"){\r\n                    toast.error(response.data.errorName + \" is not plug\");\r\n                    //setshowCapture(true)\r\n                }else{\r\n                    setshowCapture(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // handle the input changes\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //to capture  selected index finger\r\n    const captureFinger = (e) => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    setLoading(true);\r\n                    if(response.data.type ===\"ERROR\"){\r\n                        setLoading(false);\r\n                        setTryAgain(true);\r\n                        window.setTimeout(() => {\r\n                            setTryAgain(false);\r\n                        }, 5000);\r\n                        toast.error(response.data.message.ERROR);\r\n                    }else{\r\n                        const templateType= response.data.templateType\r\n                        setTryAgain(false);\r\n                        setSuccess(true)\r\n                        window.setTimeout(() => {\r\n                            setSuccess(false)\r\n                            setLoading(false);\r\n                        }, 5000);\r\n                        let biometricsEnrollments = response.data\r\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\r\n\r\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\r\n                        //fingerType.splice(templateType, 1);\r\n                        _.find(fingerType,{'display':templateType}).captured = true;\r\n                        setFingerType([...fingerType]);\r\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\r\n                        setObjValues({...objValues, templateType:\"\"});\r\n                    }\r\n                    //toast.success(\"Record save successful\");\r\n                })\r\n                .catch(error => {\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteBiometric =(id,finger)=>{\r\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            toast.success(`${finger} deleted successfully`);\r\n            _.find(fingerType,{'display':finger}).captured = false;\r\n            setFingerType([...fingerType]);\r\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\r\n            setStoredBiometrics(newStoredBiometrics);\r\n            clear_storelist();\r\n            if(newStoredBiometrics.length === 0){\r\n                props.updatePatientBiometricStatus(false);\r\n            }\r\n        }).catch((error)=>{\r\n            toast.error(\"Something went wrong\");\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {\r\n        e.preventDefault();\r\n        if(capturedFingered.length >= 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\r\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Biometric save successful\");\r\n                    setCapturedFingered([])\r\n                    getPersonBiometrics();\r\n                    props.patientObj.biometricStatus=true\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    //props.updatePatientBiometricStatus(true);\r\n                })\r\n                .catch(error => {\r\n                    toast.error(\"Something went wrong saving biometrics\");\r\n                    console.log(error);\r\n                });\r\n        }else{\r\n\r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n\r\n            <div style={{display:\"flex\",width:'100%'}}>\r\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\r\n                    {pageLoading && storedBiometrics.length > 0 ? (\r\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\r\n                                {storedBiometrics.map((biometric, index)=>(\r\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\r\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\r\n\r\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\r\n                                                <div>\r\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\r\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                                </div>\r\n\r\n                                                {/*Action button -- Dropdown menu*/}\r\n                                                <Dropdown className=\"dropdown ms-auto\"  >\r\n                                                    <Dropdown.Toggle\r\n                                                        as=\"button\"\r\n                                                        variant=\"\"\r\n                                                        drop=\"up\"\r\n                                                        className=\"btn sharp btn-primary \"\r\n                                                        id=\"tp-btn\"\r\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\r\n                                                    >\r\n                                                        <svg\r\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                                            width=\"18px\"\r\n                                                            height=\"18px\"\r\n                                                            viewBox=\"0 0 24 24\"\r\n                                                            version=\"1.1\"\r\n                                                        >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                    </Dropdown.Toggle>\r\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\r\n                                                            <DeleteIcon /> Delete\r\n                                                        </Dropdown.Item>\r\n\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n\r\n                                            </div>\r\n                                            <div className=\"card-body p-0 pb-2\">\r\n                                                <ul className=\"list-group list-group-flush\">\r\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\r\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\r\n                                                    </li>\r\n\r\n                                                    <li className=\"list-group-item\">\r\n\r\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\r\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\r\n                                                        <span className=\"text-black desc-text ms-2\">\r\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\r\n                                                    </span>\r\n                                                    </li>\r\n\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div className=\"flex-grow-8\">\r\n                                <div  className=\"flex-grow-8\"  >\r\n                                    <Alert severity=\"info\">\r\n                                        <AlertTitle style={{height:'400px'}}>\r\n                                            <strong>No biometrics captured</strong>\r\n                                        </AlertTitle>\r\n                                    </Alert>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <div className=\"col-12\">\r\n                            <ToastContainer />\r\n                            <Col md={12}>\r\n                                <FormGroup>\r\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Device </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"device\"\r\n                                        id=\"device\"\r\n                                        onChange={checkDevice}\r\n                                        value={objValues.device}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Select Device </option>\r\n                                        {biometricDevices.map(({ id, name }) => (\r\n                                            <option key={id} value={name}>\r\n                                                {name}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.device !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.device}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </Col>\r\n                            {showCapture ? (\r\n                                    <div className=\"row col-12\">\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">Select Finger </option>\r\n\r\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\r\n                                                        <option key={value.id} value={value.display}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Input>\r\n                                                {errors.templateType !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.templateType}</span>\r\n                                                ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md={6}>\r\n\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={captureFinger}\r\n                                                className={'mt-4'}\r\n                                                style={{backgroundColor:'#992E62'}}\r\n                                                startIcon={<FingerprintIcon />}\r\n                                            >\r\n                                                Capture Finger\r\n                                            </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\r\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\r\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n\r\n                   \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n            <Form >\r\n\r\n                    <Card>\r\n                         <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader>\r\n                        <CardBody>\r\n                            <Row form>\r\n                                <ToastContainer />\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for='device'>Select Device </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"device\"\r\n                                            id=\"device\"\r\n                                            onChange={checkDevice}\r\n                                            value={objValues.device}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Device </option>\r\n                                            {biometricDevices.map(({ id, name }) => (\r\n                                                <option key={id} value={name}>\r\n                                                    {name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                        {errors.device !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.device}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for='device'>Select Finger</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"templateType\"\r\n                                                        id=\"templateType\"\r\n                                                        onChange={handleInputChange}\r\n                                                        value={objValues.templateType}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\">Select Finger </option>\r\n\r\n                                                        {fingerType.map((value) => (\r\n                                                            <option key={value.id} value={value.display}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                    {errors.templateType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.templateType}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col md={4}>\r\n\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={captureFinger}\r\n                                                    className={'mt-4'}\r\n                                                    startIcon={<FingerprintIcon />}\r\n                                                >\r\n                                                    Capture Finger\r\n                                                </MatButton>\r\n\r\n                                            </Col>\r\n                                            <br/>\r\n\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                 <img width='500' height='200' src={responseImage}/>\r\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                                    {loading && (\r\n                                        <>\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                    </Fab>\r\n                                                    {loading && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: green[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                    {tryAgain && (\r\n                                        <>\r\n\r\n\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        <FingerprintIcon />\r\n                                                    </Fab>\r\n                                                    {tryAgain && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: red[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    Click to Recapture Again\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} >\r\n                                                <h3>Captured Fingerprints</h3>\r\n                                            </Col>\r\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\r\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n            </Form>\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Biometrics;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './PatientCard'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SubMenu from './SubMenu';\r\nimport RecentHistory from './../History/RecentHistory';\r\nimport ClinicVisit from '../Consultation/Index'\r\nimport PmtctEnrollment from './../PmtctServices/PmtctEnrollment';\r\nimport AncEnrollement from './../PmtctServices/AncEnrollement';\r\nimport LabourDelivery from './../PmtctServices/LabourDelivery';\r\nimport Biometrics from './Biometric'\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction PatientCard(props) {\r\n    let history = useHistory();\r\n    const [art, setArt] = useState(false);\r\n    const [activeContent, setActiveContent] = useState({route:\"recent-history\", id:\"\", activeTab:\"home\", actionType:\"create\", obj:{}});\r\n    const { classes } = props;\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    \r\n  return (\r\n    <div className={classes.root}>\r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PMTCT /</Link> Patient Dashboard</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Card >\r\n        <CardContent>\r\n            <PatientCardDetail patientObj={patientObj} setArt={setArt} setActiveContent={setActiveContent}/>            \r\n            <SubMenu patientObj={patientObj} art={art} setActiveContent={setActiveContent}/>\r\n            <br/>\r\n          {activeContent.route==='recent-history' &&(<RecentHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='biometrics' &&(<Biometrics patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='consultation' &&( <ClinicVisit patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='anc-pnc' &&( <PmtctEnrollment patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='anc-enrollment' &&( <AncEnrollement patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='labour-delivery' &&( <LabourDelivery patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {/* History Pages */}\r\n         \r\n         </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form, InputGroup} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport  './patient.css'\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },  \r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n                \r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState(\r\n        {   ancNo:\"\",\r\n            gaweeks: 0,\r\n            gravida: 0,\r\n            expectedDeliveryDate:\"\",\r\n            lmp: \"\",\r\n            parity: 0,\r\n            hivDiognosicTime:\"\",\r\n            referredSyphilisTreatment: \"\",\r\n            testResultSyphilis: \"\",\r\n            testedSyphilis: \"\",\r\n            treatedSyphilis: \"\",\r\n            personDto:{},\r\n            pmtctHtsInfo:{},\r\n            syphilisInfo:{},\r\n            partnerNotification:{}\r\n        });\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n     //status for hospital Number \r\n     const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n     const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    patientId = locationState ? locationState.patientId : null;\r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n    \r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n          \r\n    }, [basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            \r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n        console.log(getCountryId)\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }   \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n                if(m<18){\r\n                    alert(\"The child is less than 18months\")\r\n                    setDisabledAgeBaseOnAge(true)\r\n                }else{\r\n                    setDisabledAgeBaseOnAge(false)\r\n                }\r\n                if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n                basicInfo.age=age_now\r\n                //setBasicInfo({...basicInfo, age: age_now});        \r\n                } else {\r\n                    setBasicInfo({...basicInfo, age:  \"\"});\r\n                }\r\n                setBasicInfo({...basicInfo, dob: e.target.value});\r\n                if(basicInfo.age!=='' && basicInfo.age>=60){\r\n                    toggle()\r\n                }\r\n           \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            if(e.target.value!=='' && e.target.value>=60){\r\n                toggle()\r\n            }\r\n            if(e.target.value <=1){\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='377') {\r\n            setfemaleStatus(true)\r\n        } \r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n        async function getHosiptalNumber() {\r\n            const hosiptalNumber=e.target.value\r\n            const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                );\r\n            if(response.data!==true){\r\n                setHospitalNumStatus(false)\r\n                errors.hospitalNumber=\"\"\r\n                setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                setHospitalNumStatus2(true)\r\n            }else{\r\n                errors.hospitalNumber=\"\"\r\n                toast.error(\"Error! Hosiptal Number already exist\");\r\n                setHospitalNumStatus(true)\r\n                setHospitalNumStatus2(false)\r\n            }\r\n        }\r\n        getHosiptalNumber();\r\n        } \r\n                \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.phone = relatives.phone ? \"\" : \"Phone Number  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n            setRelatives({ \r\n                address:\"\",\r\n                phone:\"\",\r\n                firstName: \"\",\r\n                email: \"\",\r\n                relationshipId: \"\",\r\n                lastName: \"\",\r\n                middleName: \"\"\r\n            })\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Gender is required.\"\r\n            temp.dateOfRegistration = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            // temp.targetGroupId = objValues.targetGroupId ? \"\" : \"Target group is required.\"\r\n            // {objValues.statusAtRegistrationId!=='55' &&( temp.dateConfirmedHiv = objValues.dateConfirmedHiv ? \"\" : \"date confirm HIV is required.\")}\r\n            // temp.sourceOfReferrerId = objValues.sourceOfReferrerId ? \"\" : \"Source of referrer is required.\"\r\n            // temp.enrollmentSettingId = objValues.enrollmentSettingId ? \"\" : \"Enrollment Setting Number  is required.\"\r\n            // temp.tbStatusId = objValues.tbStatusId ? \"\" : \"TB status is required.\"    \r\n            // temp.statusAtRegistrationId = objValues.statusAtRegistrationId ? \"\" : \"Status at Registration is required.\"  \r\n            // temp.entryPointId = objValues.entryPointId ? \"\" : \"Care Entry Point is required.\" \r\n            // temp.dateOfRegistration = objValues.dateOfRegistration ? \"\" : \"Date of Registration is required.\"  \r\n            // temp.uniqueId = objValues.uniqueId ? \"\" : \"Unique ID is required.\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                objValues.personDto=patientForm;\r\n                //patientDTO.personDto=objValues;\r\n                const response = await axios.post(`${baseUrl}pmtct/anc`, objValues, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Register successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage); \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        \r\n                 \r\n    }    \r\n    \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n\r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <ToastContainer autoClose={3000} hideProgressBar />\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >Prep /</Link> Patient Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n          <Link\r\n                to={{\r\n                    pathname: \"/\",\r\n                    state: 'users'\r\n                }}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\" float-end mr-10 pr-10\"\r\n                    style={{backgroundColor:'#014d88',fontWeight:\"bolder\", margingRight:\"-40px\"}}\r\n                    startIcon={<TiArrowBack />}\r\n                >\r\n                    <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                </Button>\r\n            </Link>\r\n            <br /><br/>\r\n  \r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    \r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {/* {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"} */}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={1094328}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.id}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                \r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                \r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        id=\"dob\"\r\n                                                        max={basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        \r\n                                                        type=\"number\"\r\n                                                        name=\"age\"                                                       \r\n                                                        className=\"form-control\"                                                        \r\n                                                        id=\"age\"\r\n                                                        min=\"1\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        id=\"ninNumber\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                   onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                   //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                ) : \"\" } */}\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    \r\n                                                />\r\n                                                 {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                ) : \"\" } */}\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    required\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e,'phone')}}\r\n                                                                        />\r\n                                                                    {errors.phone !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.phone}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"email\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            required\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            \r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>ANC  Enrollment</h5>\r\n                                </div>\r\n\r\n                            <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                              \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >ANC No *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"text\"\r\n                                                    name=\"ancNo\"\r\n                                                    id=\"ancNo\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.ancNo} \r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                        \r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Gravida</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"text\"\r\n                                                    name=\"gravida\"\r\n                                                    id=\"gravida\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.gravida} \r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                        \r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Parity</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"text\"\r\n                                                    name=\"parity\"\r\n                                                    id=\"parity\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.parity} \r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                        \r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Date Of Last Menstrual Period* </Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"date\"\r\n                                                    name=\"lmp\"\r\n                                                    id=\"lmp\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.lmp} \r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                        \r\n                                            </FormGroup>\r\n                                    </div>\r\n                                   \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Gestational Age (Weeks)</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"text\"\r\n                                                    name=\"gaweeks\"\r\n                                                    id=\"gaweeks\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.gaweeks} \r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                        \r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Source of Referral</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"text\"\r\n                                                    name=\"encounterDate\"\r\n                                                    id=\"encounterDate\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.encounterDate} \r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                        \r\n                                            </FormGroup>\r\n                                    </div>                                \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Tested for syphilis</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"text\"\r\n                                                    name=\"testedSyphilis\"\r\n                                                    id=\"testedSyphilis\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.testedSyphilis} \r\n                                                >\r\n                                                     <option value=\"\" >Select</option>\r\n                                                    <option value=\"Positive\" >Positive</option>\r\n                                                    <option value=\"Negative\" >Negative</option>\r\n                                                </Input>\r\n                                            </InputGroup>                                        \r\n                                            </FormGroup>\r\n                                    </div>\r\n                                \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Syphilis test result</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"select\"\r\n                                                    name=\"testResultSyphilis\"\r\n                                                    id=\"testResultSyphilis\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.testResultSyphilis} \r\n                                                >\r\n                                                    <option value=\"\" >Select</option>\r\n                                                    <option value=\"Positive\" >Positive</option>\r\n                                                    <option value=\"Negative\" >Negative</option>\r\n                                                </Input>\r\n                                            </InputGroup>                                        \r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Treated for syphilis (penicillin)</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"select\"\r\n                                                    name=\"treatedSyphilis\"\r\n                                                    id=\"treatedSyphilis\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.encounterDate} \r\n                                                >\r\n                                                    <option value=\"\" >Select</option>\r\n                                                    <option value=\"Yes\" >Yes</option>\r\n                                                    <option value=\"No\" >No</option>\r\n                                                </Input>\r\n                                            </InputGroup>                                        \r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Referred Syphilis +ve client</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"select\"\r\n                                                    name=\"referredSyphilisTreatment\"\r\n                                                    id=\"referredSyphilisTreatment\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.referredSyphilisTreatment} \r\n                                                >\r\n                                                    <option value=\"\" >Select</option>\r\n                                                    <option value=\"Yes\" >Yes</option>\r\n                                                    <option value=\"No\" >No</option>\r\n                                                </Input>\r\n                                            </InputGroup>                                        \r\n                                            </FormGroup>\r\n                                    </div>\r\n                                   \r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                                onClick={handleCancel}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal> \r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\nimport {  Modal } from \"react-bootstrap\";\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({\r\n            id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",\r\n            dateConfirmedHiv:\"\",sourceOfReferrer:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",\r\n            dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\",\r\n            householdNumber:\"\", referredToOVCPartner:\"\", dateReferredToOVCPartner:\"\",\r\n            referredFromOVCPartner:\"\", dateReferredFromOVCPartner:\"\",\r\n            careEntryPointOther:\"\"\r\n        });\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [newSex, setNewSex] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        getSex();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n\r\n            const contacts =patientObj && patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(patientObj.contacts);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type === 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type === 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type === 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type === 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //const getSexId=  genders.length>0 && genders.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            //console.log(newSex)\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber && hospitalNumber ? hospitalNumber.value : ''\r\n            setObjValues ({...objValues,  uniqueId: hospitalNumber ? hospitalNumber.value : ''});\r\n            basicInfo.maritalStatusId=patientObj && patientObj.maritalStatus ? patientObj.maritalStatus.id : \"\"\r\n            basicInfo.employmentStatusId=patientObj && patientObj.employmentStatus ? patientObj.employmentStatus.id :\"\"\r\n            basicInfo.genderId=patientObj && patientObj.gender ? patientObj.gender.id : null\r\n            //basicInfo.sexId=patientObj.sex\r\n            basicInfo.educationId=patientObj && patientObj.education ? patientObj.education.id : \"\"\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value :\"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value :\"\"\r\n            basicInfo.email=email && email.value ? email.value :\"\"\r\n            basicInfo.address=country  && country.city ? country.city :\"\"\r\n            basicInfo.landmark=country.line && country.line.length>0 ? country.line[0]: \"\"\r\n            basicInfo.countryId=country && country.countryId  ? country.countryId  :\"\"\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country && country.stateId  ? country.stateId  :\"\")\r\n            basicInfo.stateId=country && country.stateId  ? country.stateId  :\"\"\r\n            basicInfo.district=country && country.district ? country.district :\"\"\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            if(patientObj.age<=14){\r\n                setOvcEnrolled(true)\r\n            }\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n    //Get list of Source of Referral\r\n    const getSex =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/SEX`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            const getSexId=  response.data.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            basicInfo.sexId=getSexId.display\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n}\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n    };\r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setErrors({...errors, [e.target.name]: \"\"})\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if(m<18){\r\n                alert(\"The child is less than 18months\")\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        if(basicInfo.age!=='' && basicInfo.age>=60){\r\n            toggle()\r\n        }\r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            if(e.target.value!=='' && e.target.value>=60){\r\n                toggle()\r\n            }\r\n            if(e.target.value <=1){\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.targetGroupId = objValues.targetGroupId ? \"\" : \"Target group is required.\"\r\n            temp.dateConfirmedHiv = objValues.dateConfirmedHiv ? \"\" : \"date confirm HIV is required.\"\r\n            temp.sourceOfReferrer = objValues.sourceOfReferrer ? \"\" : \"Source of referrer is required.\"\r\n            temp.enrollmentSettingId = objValues.enrollmentSettingId ? \"\" : \"Enrollment Setting Number  is required.\"\r\n            temp.tbStatusId = objValues.tbStatusId ? \"\" : \"TB status is required.\"    \r\n            temp.statusAtRegistrationId = objValues.statusAtRegistrationId ? \"\" : \"Status at Registration is required.\"  \r\n            temp.entryPointId = objValues.entryPointId ? \"\" : \"Care Entry Point is required.\" \r\n            temp.dateOfRegistration = objValues.dateOfRegistration ? \"\" : \"Date of Registration is required.\"  \r\n            temp.uniqueId = objValues.uniqueId ? \"\" : \"Unique ID is required.\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n                   \r\n    } \r\n    \r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    \r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})       \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }  \r\n        if(e.target.name ===\"pregnancyStatusId\" ){\r\n            if(e.target.value===\"72\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }                \r\n    }    \r\n    \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n        setErrors({...errors, [inputName]: \"\"})    \r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId && getSexId.id ? getSexId.id : \"\"\r\n        let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n         if(validate()){\r\n            try {\r\n                const patientForm = {\r\n                    id:\"\",\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.hivEnrollment=objValues;\r\n                const response = await axios.post(`${baseUrl}hiv/patient`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Register successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"An error occured while registering a patient !\";\r\n                    toast.error(errorMessage, {\r\n                        position: toast.POSITION.TOP_RIGHT\r\n                    });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >HIV /</Link> Patient Enrollment</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.cardBottom}>\r\n                <CardContent>\r\n                    <Link\r\n                        to={{\r\n                            pathname: \"/\",\r\n                            state: 'users'\r\n                        }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={1094328}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {(errors.sexId !==\"\" || errors.sexId !==null) ? (\r\n                                                        <span className={classes.error}>{errors.sexId}</span>\r\n                                                        ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        max={basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        id=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    \r\n                                                />\r\n                                                {(errors.phoneNumber !==\"\" || errors.phoneNumber !==null) ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>HIV Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"uniqueId\">Unique ID No  * </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"uniqueId\"\r\n                                        id=\"uniqueId\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.uniqueId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled\r\n                                    />\r\n                                    {errors.uniqueId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"dateOfRegistration\">Date of Enrollment * </Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateOfRegistration\"\r\n                                        id=\"dateOfRegistration\"\r\n                                        min={basicInfo.dateOfRegistration}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateOfRegistration}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        \r\n                                    />\r\n                                    {errors.dateOfRegistration !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">Care Entry Point * </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"entryPointId\"\r\n                                    id=\"entryPointId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.entryPointId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> </option>                  \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                {transferIn===true ? \r\n                                    (\r\n                                        <FormGroup>\r\n                                        <Label >Facility Name</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"facilityName\"\r\n                                            id=\"facilityName\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.facilityName}  \r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        />\r\n                                        </FormGroup>\r\n                                    ):\"\"}\r\n                                    {objValues.entryPointId===\"24\" ? \r\n                                    (\r\n                                 \r\n                                        <FormGroup>\r\n                                        <Label >Care Entry Point (Others)</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"careEntryPointOther\"\r\n                                            id=\"careEntryPointOther\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.careEntryPointOther}  \r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        />\r\n                                        </FormGroup>\r\n                                      \r\n                                    ):\"\"}\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Status at Registration *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"statusAtRegistrationId\"\r\n                                    id=\"statusAtRegistrationId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.statusAtRegistrationId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> Select</option>                  \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of Confirmed HIV Test *</Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateConfirmedHiv\"\r\n                                        id=\"dateConfirmedHiv\"\r\n                                        min={basicInfo.dob}\r\n                                        max={objValues.dateOfRegistration}\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateConfirmedHiv}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        \r\n                                    /> \r\n                                    {errors.dateConfirmedHiv !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                        ) : \"\" } \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Source of Referral *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"sourceOfReferrer\"\r\n                                        id=\"sourceOfReferrer\"\r\n                                        value={objValues.sourceOfReferrer}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Select </option>                 \r\n                                            {sourceReferral.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.sourceOfReferrer !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sourceOfReferrer}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Enrollment Setting *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"enrollmentSettingId\"\r\n                                        id=\"enrollmentSettingId\"\r\n                                        value={objValues.enrollmentSettingId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        onChange={handleInputChange}\r\n                                        required\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n\r\n                                            {enrollSetting.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.enrollmentSettingId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.enrollmentSettingId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {(femaleStatus && basicInfo.age > 9) && (\r\n                                    <>\r\n                                   \r\n                                    <div className = \"form-group mb-3 col-md-6\" >\r\n                                        <FormGroup>\r\n                                        <Label> Pregnancy </Label>\r\n                                        <Input\r\n                                            type = \"select\"\r\n                                            name = \"pregnancyStatusId\"\r\n                                            id = \"pregnancyStatusId\"\r\n                                            value = {objValues.pregnancyStatusId}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            onChange = {handleInputChange}                                        \r\n                                        >\r\n                                        < option value = \"\" >Select </option>\r\n                                        {pregnancyStatus.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>                                                                        \r\n                                    </FormGroup>  \r\n                                    </div>\r\n                                    {objValues.pregnancyStatusId!=='72' && (\r\n                                    <>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of LMP </Label>                                    \r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateOfLpm\"\r\n                                            id=\"dateOfLpm\"\r\n                                            max={today}\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateOfLpm}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            required\r\n                                        />  \r\n                                            \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    </>\r\n                                    )}\r\n                                    </>\r\n                                )}\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >TB Status * </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"tbStatusId\"\r\n                                        id=\"tbStatusId\"\r\n                                        value={objValues.tbStatusId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        required\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n                                            {tbStatus.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                    </Input>\r\n                                    {errors.tbStatusId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.tbStatusId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {hideTargetGroup===\"false\" ? (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Target Group *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"targetGroupId\"\r\n                                        id=\"targetGroupId\"\r\n                                        value={objValues.targetGroupId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>                    \r\n                                                {kP.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                    </Input>\r\n                                    {errors.targetGroupId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroupId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                ) : \"\"}\r\n                                {basicInfo.age <=14 && (\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                )}\r\n                                {/* <div className=\"form-group mb-3 col-md-3\">\r\n                                    {ovcEnrolled===true ? \r\n                                        (\r\n                                        <FormGroup>\r\n                                        <Label >OVC Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"ovcNumber\"\r\n                                            id=\"ovcNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.ovcNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div> */}\r\n                                \r\n                                {ovcEnrolled===true && \r\n                                (\r\n                                <>        \r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Household Unique Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"householdNumber\"\r\n                                            id=\"householdNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.householdNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\"></div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredToOVCPartner\"\r\n                                            id=\"referredToOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredToOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredToOVCPartner\"\r\n                                            id=\"dateReferredToOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredToOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredFromOVCPartner\"\r\n                                            id=\"referredFromOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredFromOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredFromOVCPartner\"\r\n                                            id=\"dateReferredFromOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredFromOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                </>\r\n                                )}\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                onClick={handleCancel}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\"  }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    console.log(props)\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrerId:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\",\r\n     householdNumber:\"\", referredToOVCPartner:\"\", dateReferredToOVCPartner:\"\",\r\n     referredFromOVCPartner:\"\", dateReferredFromOVCPartner:\"\",\r\n     careEntryPointOther:\"\"});\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n    \r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n    //status for hospital Number \r\n    const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n    const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n    \r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n            const contacts = patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(contacts.contact);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type == 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber ? hospitalNumber.value : ''\r\n            basicInfo.maritalStatusId=patientObj.maritalStatus.id\r\n            basicInfo.employmentStatusId=patientObj.employmentStatus.id\r\n            basicInfo.genderId=patientObj.gender ? patientObj.gender.id : null\r\n            basicInfo.sexId=patientObj.sex \r\n            basicInfo.educationId=patientObj.education.id\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value : \"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value : \"\"\r\n            basicInfo.email=email && email.value ? email.value : \"\"\r\n            basicInfo.address=country && country.city ? country.city : \"\"\r\n            basicInfo.landmark=country.line[0]\r\n            basicInfo.countryId=country.countryId\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country.stateId)\r\n            basicInfo.stateId=country.stateId\r\n            basicInfo.district=country.district\r\n            setObjValues(patientObj.enrollment)\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n      };\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: e.target.value});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n            async function getCharacters() {\r\n                const hosiptalNumber=e.target.value\r\n                const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                    );\r\n                if(response.data!==true){\r\n                    setHospitalNumStatus(false)\r\n                    setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                    setHospitalNumStatus2(true)\r\n                }else{\r\n                    setHospitalNumStatus(false)\r\n                    setHospitalNumStatus2(true)\r\n                }\r\n            }\r\n            getCharacters();\r\n            }  \r\n             \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };     \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.targetGroupId = objValues.targetGroupId ? \"\" : \"Target group is required.\"\r\n            temp.dateConfirmedHiv = objValues.dateConfirmedHiv ? \"\" : \"date confirm HIV is required.\"\r\n            temp.sourceOfReferrerId = objValues.sourceOfReferrerId ? \"\" : \"Source of referrer is required.\"\r\n            temp.enrollmentSettingId = objValues.enrollmentSettingId ? \"\" : \"Enrollment Setting Number  is required.\"\r\n            temp.tbStatusId = objValues.tbStatusId ? \"\" : \"TB status is required.\"    \r\n            temp.statusAtRegistrationId = objValues.statusAtRegistrationId ? \"\" : \"Status at Registration is required.\"  \r\n            temp.entryPointId = objValues.entryPointId ? \"\" : \"Care Entry Point is required.\" \r\n            temp.dateOfRegistration = objValues.dateOfRegistration ? \"\" : \"Date of Registration is required.\"  \r\n            temp.uniqueId = objValues.uniqueId ? \"\" : \"Unique ID is required.\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId.id\r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.genderId,\r\n                    sexId:basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber: basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.hivEnrollment=objValues;\r\n                const response = await axios.put(`${baseUrl}hiv/patient/${patientObj.id}`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Updated successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage); \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n        if(e.target.name ===\"pregnancyStatusId\" ){\r\n            console.log(e.target.value)\r\n            if(e.target.value===\"72\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }                  \r\n    }    \r\n    \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.cardBottom}>\r\n                <CardContent>\r\n                <Link\r\n                    to={{\r\n                        pathname: \"/patient-history\",\r\n                        state: { patientObj: patientObj  }\r\n                    }}\r\n                >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Edit User Information</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={Math.floor(Math.random() * 1094328)}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        max={today}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"nin\"\r\n                                                        id=\"nin\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>HIV Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"uniqueId\">Unique ID No  * </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"uniqueId\"\r\n                                        id=\"uniqueId\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.uniqueId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled\r\n                                        \r\n                                    />\r\n                                    {errors.uniqueId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"dateOfRegistration\">Date of Enrollment * </Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateOfRegistration\"\r\n                                        id=\"dateOfRegistration\"\r\n                                        min={basicInfo.dateOfRegistration}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateOfRegistration}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    />\r\n                                    {errors.dateOfRegistration !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">Care Entry Point * </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"entryPointId\"\r\n                                    id=\"entryPointId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.entryPointId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> </option>                  \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                {transferIn===true ? \r\n                                    (\r\n                                        <FormGroup>\r\n                                        <Label >Facility Name</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"facilityName\"\r\n                                            id=\"facilityName\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.facilityName}  \r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        </FormGroup>\r\n                                    ):\"\"}\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Status at Registration *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"statusAtRegistrationId\"\r\n                                    id=\"statusAtRegistrationId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.statusAtRegistrationId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> Select</option>                  \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of Confirmed HIV Test *</Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateConfirmedHiv\"\r\n                                        id=\"dateConfirmedHiv\"\r\n                                        min={basicInfo.dob}\r\n                                        max={objValues.dateOfRegistration}\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateConfirmedHiv}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    /> \r\n                                    {errors.dateConfirmedHiv !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                        ) : \"\" } \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Source of Referral *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"sourceOfReferrerId\"\r\n                                        id=\"sourceOfReferrerId\"\r\n                                        value={objValues.sourceOfReferrerId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    >\r\n                                        <option value=\"\">Select </option>                 \r\n                                            {sourceReferral.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.sourceOfReferrerId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sourceOfReferrerId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Enrollment Setting *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"enrollmentSettingId\"\r\n                                        id=\"enrollmentSettingId\"\r\n                                        value={objValues.enrollmentSettingId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        onChange={handleInputChange}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n\r\n                                            {enrollSetting.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.enrollmentSettingId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.enrollmentSettingId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {(femaleStatus && basicInfo.age > 9) && (\r\n                                    <>\r\n                                   \r\n                                    <div className = \"form-group mb-3 col-md-6\" >\r\n                                        <FormGroup>\r\n                                        <Label> Pregnancy </Label>\r\n                                        <Input\r\n                                            type = \"select\"\r\n                                            name = \"pregnancyStatusId\"\r\n                                            id = \"pregnancyStatusId\"\r\n                                            value = {objValues.pregnancyStatusId}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            onChange = {handleInputChange}  \r\n                                            //disabled={locationState.actionType==='update'? false : true}                                      \r\n                                        >\r\n                                        < option value = \"\" >Select </option>\r\n                                        {pregnancyStatus.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>                                                                        \r\n                                    </FormGroup>  \r\n                                    </div>\r\n                                    {objValues.pregnancyStatusId!=='72' && (\r\n                                    <>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of LMP </Label>                                    \r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateOfLpm\"\r\n                                            id=\"dateOfLpm\"\r\n                                            max={today}\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateOfLpm}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />  \r\n                                            \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    </>\r\n                                    )}\r\n                                    </>\r\n                                )}\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >TB Status * </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"tbStatusId\"\r\n                                        id=\"tbStatusId\"\r\n                                        value={objValues.tbStatusId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n                                            {tbStatus.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                    </Input>\r\n                                    {errors.tbStatusId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.tbStatusId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {hideTargetGroup===\"false\" ? (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Target Group *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"targetGroupId\"\r\n                                        id=\"targetGroupId\"\r\n                                        value={objValues.targetGroupId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>                    \r\n                                                {kP.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                    </Input>\r\n                                    {errors.targetGroupId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroupId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                ) : \"\"}\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                {basicInfo.age <=14 && (\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                )}\r\n                                {/* <div className=\"form-group mb-3 col-md-3\">\r\n                                    {ovcEnrolled===true ? \r\n                                        (\r\n                                        <FormGroup>\r\n                                        <Label >OVC Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"ovcNumber\"\r\n                                            id=\"ovcNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.ovcNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div> */}\r\n                                \r\n                                {ovcEnrolled===true && \r\n                                (\r\n                                <>        \r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Household Unique Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"householdNumber\"\r\n                                            id=\"householdNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.householdNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\"></div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredToOVCPartner\"\r\n                                            id=\"referredToOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredToOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredToOVCPartner\"\r\n                                            id=\"dateReferredToOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredToOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredFromOVCPartner\"\r\n                                            id=\"referredFromOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredFromOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredFromOVCPartner\"\r\n                                            id=\"dateReferredFromOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredFromOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                </>\r\n                                )}\r\n                            \r\n                            </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n                            {locationState.actionType ==='update' ?\r\n                            (\r\n                                <>\r\n                                    <MatButton\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<SaveIcon />}\r\n                                        onClick={handleSubmit}\r\n                                        style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                    >\r\n                                        {!saving ? (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                                        ) : (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                                        )}\r\n                                    </MatButton>\r\n            \r\n                                    <MatButton\r\n                                        variant=\"contained\"\r\n                                        className={classes.button}\r\n                                        startIcon={<CancelIcon />}\r\n                                        onClick={handleCancel}\r\n                                        style={{backgroundColor:'#992E62'}}\r\n                                    >\r\n                                        <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                                    </MatButton>\r\n                            </>\r\n                            ):\"\"}\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Home from './main/webapp/jsx/components/Home'\r\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail'\r\nimport RegisterPatientPage from './main/webapp/jsx/components/Patient/RegisterPatient';\r\nimport EnrollPatientPage from './main/webapp/jsx/components/Patient/EnrollPatient';\r\nimport UpdatePatientEnrollment from './main/webapp/jsx/components/Patient/UpdatePatientEnrollment';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/patient-history\">\r\n            <PatientDetail />\r\n          </Route> \r\n          <Route path=\"/register-patient\">\r\n            <RegisterPatientPage />\r\n          </Route>\r\n          <Route path=\"/enroll-patient\">\r\n            <EnrollPatientPage />\r\n          </Route>\r\n          <Route path=\"/update-patient\">\r\n            <UpdatePatientEnrollment />\r\n          </Route>\r\n\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>       \r\n          \r\n        </Switch>\r\n      </div>\r\n </Router>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}