{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/components/Patient/ActiveANCPatientList.js","main/webapp/jsx/components/Visualisation/DashboardAnalytics/SummaryView/Highcharts/ReceivingArtByAge.js","main/webapp/jsx/components/Visualisation/DashboardAnalytics/SummaryView/Highcharts/ReceivingArtBySex.js","main/webapp/jsx/components/Visualisation/DashboardAnalytics/SummaryView/Index.js","main/webapp/jsx/components/Visualisation/Index.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/CaptureBiometric.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/components/Consultation/Home.js","main/webapp/jsx/components/Consultation/ViewUpdate/ADR/Index.js","main/webapp/jsx/components/Consultation/ViewUpdate/OpportunisticInfection/Index.js","main/webapp/jsx/components/Consultation/Index.js","main/webapp/jsx/components/Consultation/ViewUpdate/History/ConsultationPage.js","main/webapp/jsx/components/PmtctServices/PmtctEnrollment.js","main/webapp/jsx/components/PmtctServices/AncEnrollement.js","main/webapp/jsx/components/PmtctServices/LabourDelivery.js","main/webapp/jsx/images/fingerprintimage.png","main/webapp/jsx/components/Patient/Biometric.js","main/webapp/jsx/components/PMTCTHTSEnrollment/BasicInfo.js","main/webapp/jsx/components/PMTCTHTSEnrollment/PreTest.js","main/webapp/jsx/components/PMTCTHTSEnrollment/HivTestResult.js","main/webapp/jsx/components/PMTCTHTSEnrollment/Elicitation/AddIndexContact.js","main/webapp/jsx/components/PMTCTHTSEnrollment/Elicitation/IndexContactList.js","main/webapp/jsx/components/PMTCTHTSEnrollment/Elicitation/Index.js","main/webapp/jsx/components/PMTCTHTSEnrollment/Others.js","main/webapp/jsx/components/PMTCTHTSEnrollment/PostTest.js","main/webapp/jsx/components/PMTCTHTSEnrollment/RecencyTesting.js","main/webapp/jsx/components/PMTCTHTSEnrollment/RiskStratification.js","main/webapp/jsx/components/PMTCTHTSEnrollment/Index.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/RegisterPatient.js","main/webapp/jsx/components/Patient/EnrollPatient.js","main/webapp/jsx/components/Patient/UpdatePatientEnrollment.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["token","URLSearchParams","window","location","search","get","url","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","Patients","makeStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","width","marginTop","submit","cardBottom","marginBottom","Select","height","button","root","input","error","color","fontSize","success","useState","setPatientList","setLoading","axios","baseUrl","headers","then","response","data","catch","useEffect","patients","calculate_age","dob","today","Date","dateParts","split","dateObject","birthDate","age_now","getFullYear","m","getMonth","getDate","getHospitalNumber","identifier","hospitalNumber","find","obj","type","value","icons","title","columns","field","filtering","query","Promise","resolve","reject","pageSize","page","result","records","map","row","name","to","pathname","state","patientId","id","patientObj","firstName","surname","hospital_number","gender","sex","age","dateOfBirth","undefined","moment","format","actions","ButtonGroup","variant","style","backgroundColor","size","Button","fontWeight","totalCount","totalRecords","options","headerStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","debounceInterval","Highcharts","setOptions","colors","getOptions","radialGradient","cx","cy","r","stops","brighten","ReceivingArtByAge","chart","plotBackgroundColor","plotBorderWidth","plotShadow","text","tooltip","pointFormat","accessibility","point","valueSuffix","plotOptions","pie","allowPointSelect","cursor","dataLabels","enabled","connectorColor","showInLegend","series","sliced","y","ReceivingArtBySex","align","verticalAlign","distance","startAngle","endAngle","center","innerSize","useStyles","SummaryView","activeItem","React","anchorEl","Boolean","padding","md","lg","sm","xs","className","CardBody","highcharts","subtitle","legend","layout","xAxis","categories","labels","x","yAxis","allowDecimals","responsive","rules","condition","maxWidth","chartOptions","credits","options2","Widget","class","divStyle","borderRadius","Home","key","setKey","startIcon","textTransform","Row","Col","xl","Card","Body","Tabs","activeKey","onSelect","k","Tab","eventKey","withStyles","heading","typography","pxToRem","secondaryHeading","palette","secondary","icon","details","column","flexBasis","helper","borderLeft","divider","unit","link","primary","main","textDecoration","classes","patientObjs","permissions","biometricStatus","setBiometricStatus","setDevices","setHivStatus","PatientCurrentStatus","CheckBiometric","console","log","ExpansionPanel","ExpansionPanelSummary","root2","fullname","address","city","getAddress","Typography","Label","Detail","navItemText","SubMenu","setGenderType","Observation","observation","mental","filter","evaluation","length","Menu","inverted","Item","onClick","setActiveContent","activeContent","route","hivStatus","pmtctRegStatus","ClinicVisit","errors","setErrors","setClinicVisitList","temp","setGetPatientObj","saving","setSaving","clinicalStage","setClinicalStage","functionalStatus","setFunctionalStatus","adherenceLevel","setAdherenceLevel","dsdModelType","currentVitalSigns","setcurrentVitalSigns","showCurrentVitalSigns","setShowCurrentVitalSigns","adr","adrOnsetDate","bodyWeight","diastolic","systolic","pulse","temperature","respiratoryRate","vitalClinicalSupport","setVitalClinicalSupport","ard","onSetDate","ancNo","clinicalNotes","dateOfVisit","levelOfAdherence","nextClinicalAppointmentDate","onAntiTbDrugs","opportunisticInfection","illness","whoStaging","objValues","setObjValues","encounterDate","facilityId","personId","serviceTypeId","vital","setVitalSignDto","FunctionalStatus","WhoStaging","AdherenceLevel","VitalSigns","GetPatientObj","ClinicVisitList","PatientDetaild","lastVitalSigns","patObJ","handleInputChange","e","target","handleInputChangeVitalSignDto","Grid","Column","Segment","as","ribbon","FormGroup","Input","border","onChange","min","artCommence","visitDate","max","required","checked","htmlFor","InputGroup","onKeyUp","InputGroupText","addonType","toFixed","Math","round","nextAppointment","dsdModel","code","disabled","preventDefault","Object","values","every","post","toast","errorMessage","apierror","message","ADR","ClinicVisitPage","activeTab","flexGrow","AncPnc","useHistory","agreed2PartnerNotification","fetalPresentation","fpl","fundalHeight","infantFeeding","nextAppointmentDate","nutritionalSupport","pmtctEnrollmentDate","referredTo","tbStatus","viralLoadSample","viralLoadSampleDate","visitStatus","visitType","enroll","setEnrollDto","handleInputChangeEnrollmentDto","bmi","Message","content","BmiCal","Spinner","position","POSITION","BOTTOM_CENTER","AncEnrollement","visitId","commenced","LabourDelivery","delieryMode","setDelieryMode","feedingDecision","setfeedingDecision","maternalOutCome","setmaternalOutCome","childStatus","setChildStatus","bookingStatus","setBookingStatus","artStartedLdWard","childGivenArvWithin72","dateOfDelivery","deliveryTime","episiotomy","gaweeks","hbstatus","hcstatus","hivExposedInfantGivenHbWithin24hrs","maternalOutcome","modeOfDelivery","onArt","referalSource","romDeliveryInterval","vaginalTear","delivery","setDelivery","MODE_DELIVERY","FEEDING_DECISION","MATERNAL_OUTCOME","CHILD_STATUS_DELIVERY","BOOKING_STATUS","handleInputChangeDeliveryDto","validate","fontFamily","marginLeft","lineHeight","checkUrl","Biometrics","history","biometricDevices","setbiometricDevices","biometricType","templateType","device","fingerType","setFingerType","pageLoading","setPageLoading","showCapture","setshowCapture","setTryAgain","setSuccess","storedBiometrics","setStoredBiometrics","capturedFingered","setCapturedFingered","setSelectedFingers","getPersonBiometrics","bgcolor","green","fingersCodeset","personCapturedFingers","_","uniq","biometricItems","item","extend","captured","includes","clear_storelist","TemplateType","flex","boxShadow","minHeight","flexWrap","biometric","index","lastModifiedDate","Dropdown","Toggle","drop","borderColor","marginRight","xmlns","xmlnsXlink","viewBox","version","stroke","strokeWidth","fill","fillRule","alignRight","finger","delete","newStoredBiometrics","updatePatientBiometricStatus","justifyContent","src","fingerprintimage","alt","Badge","iso","Alert","severity","AlertTitle","for","deviceName","selectedDevice","errorType","errorName","setTimeout","ERROR","biometricsEnrollments","capturedBiometricsList","uniqBy","paddingBottom","List","celled","horizontal","Header","paddingLeft","Icon","Content","capturedObj","demo","background","default","inline","BasicInfo","kP","setKP","enrollSetting","setEnrollSetting","sourceReferral","setSourceReferral","setGender","counselingType","setCounselingType","pregnancyStatus","setPregnancyStatus","indexTesting","setIndexTesting","setclientCodeetail","setclientCodeetail2","clientCodeCheck","setClientCodeCheck","active","clientCode","breastFeeding","dateVisit","firstTimeVisit","indexClient","numChildren","numWives","pregnant","previouslyTested","referredFrom","riskAssessment","riskStratificationCode","extra","targetGroup","testingSetting","typeCounseling","relationshipWithIndexClient","indexClientCode","KP","EnrollmentSetting","SourceReferral","Genders","CounselingType","PregnancyStatus","IndexTesting","getIndexClientCode","handleItemClick","completedMenu","completed","setCompleted","dateOfRegistration","sexId","onBlur","labelPosition","patientForm","setPatientObj","patientAge","patientID","personResponseDto","clientId","sexPartnerHivPositive","newDiagnosedHivlastThreeMonths","currentlyArvForPmtct","knowHivPositiveOnArv","knowHivPositiveAfterLostToFollowUp","uprotectedAnalSex","riskAssessmentPartner","setRiskAssessmentPartner","htsClientId","knowledgeAssessment","stiScreening","tbScreening","sexPartnerRiskAssessment","previousTestedHIVNegative","timeLastHIVNegativeTestResult","clientPregnant","clientInformHivTransRoutes","clientInformRiskkHivTrans","clientInformPreventingsHivTrans","clientInformPossibleTestResult","informConsentHivTest","setKnowledgeAssessment","everHadSexualIntercourse","bloodtransInlastThreeMonths","uprotectedSexWithCasualLastThreeMonths","uprotectedSexWithRegularPartnerLastThreeMonths","unprotectedVaginalSex","stiLastThreeMonths","sexUnderInfluence","moreThanOneSexPartnerLastThreeMonths","experiencePain","haveSexWithoutCondom","abuseDrug","bloodTransfusion","consistentWeightFeverNightCough","soldPaidVaginalSex","setRiskAssessment","vaginalDischarge","lowerAbdominalPains","urethralDischarge","complaintsOfScrotal","complaintsGenitalSore","setStiScreening","currentCough","weightLoss","lymphadenopathy","fever","nightSweats","setTbScreening","riskStratificationResponseDto","keys","handleInputChangeKnowledgeAssessment","handleInputChangeRiskAssessment","riskCount","handleInputChangeRiskAssessmentPartner","sexPartRiskCount","handleInputChangeStiScreening","stiCount","tbCount","settbCount","handleInputChangeTbScreening","newcount","warning","haveCondomBurst","put","HivTestResult","hivTestDate","setHivTestDate","showCD4Count","setShowCD4Count","confirmatoryTest","confirmatoryTest2","hivTestResult","hivTestResult2","test1","test2","tieBreakerTest","tieBreakerTest2","syphilisTesting","hepatitisTesting","others","cd4","date","initialTest1","setInitailTest","date2","result2","initialTest12","setInitailTest2","handleInputChangeCd4Count","setCd4Count","cd4Count","cd4SemiQuantitative","cd4FlowCyteometry","handleInputChangeInitial","setConfirmatoryTest","setTieBreakerTest","handleInputChangeInitial2","setConfirmatoryTest2","setTieBreakerTest2","handleInputChangeConfirmatory","handleInputChangeConfirmatory2","handleInputChangeTie","handleInputChangeTie2","syphilisTestResult","syphills","setSyphills","hepatitisCTestResult","hepatitisBTestResult","longitude","latitude","adhocCode","hepatitis","setHepatitis","handleInputChangeHepatitis","setOthers","handleInputChangeOthers","dateOfEac1","AddIndexContact","sexs","setSexs","notificationContact","setNotificationContact","ageDisabled","setAgeDisabled","consent","setConsent","indexNotificationServicesElicitation","middleName","lastName","phoneNumber","altPhoneNumber","physicalHurt","threatenToHurt","hangOutSpots","relativeToIndexClient","currentlyLiveWithPartner","partnerTestedPositive","sexuallyUncomfortable","notificationMethod","datePartnerCameForTesting","Sex","NotificationContact","Consent","handleItemClickPage","handleIClickPage","alphabetOnly","handleDateOfBirthChange","isDateOfBirthEstimated","checkPhoneNumberBasic","inputName","slice","replace","defaultChecked","currentDate","setDate","setMonth","dobNew","toISOString","add","containerStyle","inputStyle","country","placeholder","minLength","masks","ng","at","datePartnerComeForTesting","PatientnHistory","indexClientList","setIndexClientList","phone","Elicitation","activePage","setActivePage","IndexContactList","PostTest","postTestCounselingKnowledgeAssessment","hivTestBefore","hivRequestResult","hivRequestResultCt","clientReceivedHivTestResult","postTestCounseling","riskReduction","postTestDisclosure","bringPartnerHivtesting","childrenHivtesting","informationFp","partnerFpThanCondom","partnerFpUseCondom","correctCondomUse","condomProvidedToClient","unprotectedSexRegularPartnerLastThreeMonth","referredToServices","postTest","setPostTest","handleInputChangePostTest","handleSubmit","push","Recency","recency","optOutRTRI","optOutRTRITestName","optOutRTRITestDate","rencencyId","controlLine","verififcationLine","longTermLine","rencencyInterpretation","hasViralLoad","sampleCollectedDate","sampleReferanceNumber","dateSampleSentToPCRLab","sampleTestDate","sampleType","receivingPcrLab","viralLoadResultClassification","recencyResult","finalRecencyResult","setRecency","handleInputChangeRecency","recencyIdNumberValue","checkRecencyLimit","RiskStratification","riskCountQuestion","open","setOpen","toggle","setting","setSetting","setRiskCount","modality","entryPoint","lastHivTestForceToHaveSex","lastHivTestHadAnal","lastHivTestInjectedDrugs","whatWasTheResult","lastHivTestDone","diagnosedWithTb","lastHivTestPainfulUrination","lastHivTestBloodTransfusion","lastHivTestVaginalOral","lastHivTestBasedOnRequest","settingId","SettingModality","actualRiskCountTrue","setExtra","setHideOtherMenu","show","centered","Title","Footer","PmtctHts","locationState","useLocation","setactiveItem","hideOtherMenu","capturedBy","indexElicitation","archived","htsClient","person","contact","contactPoint","createdDate","deceased","deceasedDateTime","education","employmentStatus","emrId","maritalStatus","new","ninNumber","organization","otherName","uuid","personUuid","relationWithIndexClient","htsClientUuid","relationshipToIndexClient","line","stateId","district","countryId","postalCode","organisationUnitId","checkInDate","risk","pre","elicitation","patientObject","autoClose","hideProgressBar","vertical","PreTest","patientsHistory","RecencyTesting","Others","art","setArt","actionType","CardContent","Biometric","PmtctEnrollment","library","faCheckSquare","faCoffee","faEdit","faTrash","UserRegistration","genderId","maritalStatusId","educationId","employmentStatusId","altPhonenumber","basicInfo","setBasicInfo","email","relationshipId","relatives","setRelatives","substr","contacts","setContacts","disabledAgeBaseOnAge","setDisabledAgeBaseOnAge","showRelative","setShowRelative","genders","setGenders","maritalStatusOptions","setMaritalStatusOptions","educationOptions","setEducationOptions","occupationOptions","setOccupationOptions","relationshipOptions","setRelationshipOptions","countries","setCountries","states","setStates","provinces","setProvinces","settopLevelUnitCountryOptions","userDetail","user","setfemaleStatus","gravida","expectedDeliveryDate","lmp","parity","hivDiognosicTime","referredSyphilisTreatment","testResultSyphilis","testedSyphilis","treatedSyphilis","personDto","pmtctHtsInfo","syphilisInfo","partnerNotification","setCarePoints","setTbStatus","hospitalNumStatus","setHospitalNumStatus","setHospitalNumStatus2","loadGenders","loadMaritalStatus","loadEducation","loadOccupation","loadRelationships","loadTopLevelCountry","CareEntryPoint","HivStatus","TBStatus","GetCountry","alert","useCallback","handleInputChangeBasic","ninNumberValue","checkNINLimit","getHosiptalNumber","hosiptalNumber","uniqueId","getRelationship","relationship","handleInputChangeRelatives","sourceOfReferral","newConatctsInfo","contactInfo","fullName","landmark","subErrors","margingRight","Form","abs","maritalStatusOption","occupationOption","educationOption","maxLength","getCountryId","setStateByCountryId","relative","splice","handleEditRelative","handleDeleteRelative","checkPhoneNumber","validateRelatives","backdrop","person_uuid","getSex","patientSex","getSexId","outline","ageNumber","patientDTO","femaleStatus","entryPointId","facilityName","statusAtRegistrationId","dateConfirmedHiv","sourceOfReferrerId","enrollmentSettingId","pregnancyStatusId","dateOfLpm","tbStatusId","targetGroupId","ovc_enrolled","ovcNumber","householdNumber","referredToOVCPartner","dateReferredToOVCPartner","referredFromOVCPartner","dateReferredFromOVCPartner","careEntryPointOther","carePoints","transferIn","setTransferIn","ovcEnrolled","setOvcEnrolled","hideTargetGroup","hospitalNumStatus2","identifiers","altphone","getStateId","enrollment","getCharacters","dateOfRegistration1","hivEnrollment","handleCheckBox","floor","random","App","path","PatientDetail","RegisterPatient","EnrollPatient","UpdatePatientEnrollment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","label","sideBarStyle","setSideBarStyle","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","body","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","sidebarpositions","openMenuToggle","setDemoTheme","setAttr","themeSettings","children","ReactDOM","render","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.5b006f2b.chunk.js","sourcesContent":["export const  token = (new URLSearchParams(window.location.search)).get(\"jwt\")\r\nexport const url = '/api/v1/'\r\n// export const url =  'http://localhost:8282/api/v1/';\r\n// export const  token = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNjcwMDgxNTEwfQ.kCpf7TOVJesOdyyHQVJPux7ZBkgi5vwVrfax8jF8Qy70fXDokVBffqXYif8HAENfGLu_i2KKOnJGUCO0HoV4Rw';\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n//import { FaUserPlus } from \"react-icons/fa\";\r\nimport {TiArrowForward} from 'react-icons/ti'\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n    const [patientList, setPatientList] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            setLoading(true)\r\n            axios\r\n                .get(`${baseUrl}pmtct/pmtct-from-person`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    setLoading(false)\r\n                    setPatientList(response.data);\r\n                   \r\n                })\r\n                .catch((error) => {  \r\n                    setLoading(false)  \r\n                });        \r\n        }\r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now + \" year(s)\";\r\n        };\r\n    \r\n    const getHospitalNumber = (identifier) => {     \r\n        const identifiers = identifier;\r\n        const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');       \r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n    \r\n  return (\r\n    <div>\r\n\r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Find Patient \"\r\n              columns={[\r\n              // { title: \" ID\", field: \"Id\" },\r\n                {\r\n                  title: \"Patient Name\",\r\n                  field: \"name\",\r\n                },\r\n                { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n                { title: \"Sex\", field: \"gender\", filtering: false },\r\n                { title: \"Age\", field: \"age\", filtering: false },\r\n                //{ title: \"Enrollment Status\", field: \"v_status\", filtering: false },\r\n                //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n                // { title: \"ART Status\", field: \"status\", filtering: false },\r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              //isLoading={loading}\r\n                  data={query =>\r\n                    new Promise((resolve, reject) =>\r\n                        axios.get(`${baseUrl}pmtct/anc/pmtct-from-person?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                            .then(response => response)\r\n                            .then(result => {\r\n                                //console.log(result.data.records)\r\n                                resolve({\r\n                                    data: result.data.records.map((row) => ({\r\n                                        \r\n                                        name:<Link\r\n                                                to={{\r\n                                                    pathname: \"/enroll-patient\",\r\n                                                    state: { patientId : row.id, patientObj: row }\r\n                                                }}\r\n                 \r\n                                             title={\"Enroll Patient\"}\r\n                                             > {row.firstName + \" \" + row.surname}\r\n                                             </Link>\r\n                                           ,\r\n                                    hospital_number: getHospitalNumber(row.identifier),\r\n                                    gender:row && row.sex ? row.sex : \"\",\r\n                                    age: (row.dateOfBirth === 0 ||\r\n                                        row.dateOfBirth === undefined ||\r\n                                        row.dateOfBirth === null ||\r\n                                        row.dateOfBirth === \"\" )\r\n                                          ? 0\r\n                                          : calculate_age(moment(row.dateOfBirth).format(\"DD-MM-YYYY\")),\r\n                                    \r\n                                    //status: (<Label color=\"blue\" size=\"mini\">{row.currentStatus}</Label>),\r\n                                 //enroll-patient\r\n                                    actions:<div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/enroll-patient\",\r\n                                                    state: { patientId : row.id, patientObj: row }\r\n                                                }}\r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <TiArrowForward />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Enroll Patient</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link>\r\n\r\n                                            </div>\r\n                                        })),\r\n                                    page: query.page,\r\n                                    totalCount: result.data.totalRecords,\r\n                                    \r\n                                })\r\n                            })\r\n                            \r\n                    )}\r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n//import { FaUserPlus } from \"react-icons/fa\";\r\nimport {TiArrowForward} from 'react-icons/ti'\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n    const [patientList, setPatientList] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            setLoading(true)\r\n            axios\r\n                .get(`${baseUrl}pmtct/pmtct-from-person`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    setLoading(false)\r\n                    setPatientList(response.data);\r\n                   \r\n                })\r\n                .catch((error) => {  \r\n                    setLoading(false)  \r\n                });        \r\n        }\r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now + \" year(s)\";\r\n        };\r\n    \r\n    const getHospitalNumber = (identifier) => { \r\n        console.log(identifier)    \r\n        const identifiers = identifier;\r\n        const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');       \r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n    \r\n  return (\r\n    <div>\r\n\r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Find Patient \"\r\n              columns={[\r\n              // { title: \" ID\", field: \"Id\" },\r\n                {\r\n                  title: \"Patient Name\",\r\n                  field: \"name\",\r\n                },\r\n                { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n                { title: \"Sex\", field: \"gender\", filtering: false },\r\n                { title: \"Age\", field: \"age\", filtering: false },\r\n                //{ title: \"Enrollment Status\", field: \"v_status\", filtering: false },\r\n                //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n                // { title: \"ART Status\", field: \"status\", filtering: false },\r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              //isLoading={loading}\r\n                data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}pmtct/anc/all-active-anc?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            \r\n                            resolve({\r\n                                data: result.data.records.map((row) => ({\r\n                                    name:\r\n                                        <Link\r\n                                        to ={{\r\n                                            pathname: \"/patient-history\",\r\n                                            state: { patientObj: row  }\r\n                                        }}\r\n            \r\n                                        title={\"Click to view patient dashboard\"}\r\n                                        > {row.firstName + \" \" + row.surname}\r\n                                        </Link>,\r\n                                        \r\n                                hospital_number: row.hospitalNumber,\r\n                                gender:row && row.sex ? row.sex : \"Female\",\r\n                                age: row.age,\r\n                                actions:<div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: { patientObj: row  }\r\n                                                }}\r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Patient Dashboard</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link>\r\n                                                        \r\n                                        </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                                \r\n                            })\r\n                        })\r\n                        \r\n                )}\r\n                options={{\r\n                    headerStyle: {\r\n                        backgroundColor: \"#014d88\",\r\n                        color: \"#fff\",\r\n                    },\r\n                    searchFieldStyle: {\r\n                        width : '200%',\r\n                        margingLeft: '250px',\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    searchFieldAlignment: 'left',\r\n                    pageSizeOptions:[10,20,100],\r\n                    pageSize:10,\r\n                    debounceInterval: 400\r\n                }}\r\n            />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import Highcharts from 'highcharts';\r\n\r\n// Radialize the colors\r\nHighcharts.setOptions({\r\n    colors: Highcharts.map(Highcharts.getOptions().colors, function (color) {\r\n        return {\r\n            radialGradient: {\r\n                cx: 0.5,\r\n                cy: 0.3,\r\n                r: 0.7\r\n            },\r\n            stops: [\r\n                [0, color],\r\n                [1, Highcharts.color(color).brighten(-0.3).get('rgb')] // darken\r\n            ]\r\n        };\r\n    })\r\n});\r\n\r\nexport const ReceivingArtByAge = {\r\n    chart: {\r\n        \r\n        plotBackgroundColor: null,\r\n        plotBorderWidth: null,\r\n        plotShadow: false,\r\n        type: 'pie'\r\n    },\r\n    title: {\r\n        text: 'Number of Adults and Children currently receiving ART by Age'\r\n    },\r\n    tooltip: {\r\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n    },\r\n    accessibility: {\r\n        point: {\r\n            valueSuffix: '%'\r\n        }\r\n    },\r\n    plotOptions: {\r\n        pie: {\r\n            allowPointSelect: true,\r\n            cursor: 'pointer',\r\n            dataLabels: {\r\n                enabled: true,\r\n                format: '<b>{point.name}</b>: {point.percentage:.1f} %',\r\n                connectorColor: 'black'\r\n            },\r\n            showInLegend: true\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'Currently Receiving ART By Age',\r\n        data: [\r\n            { name: '25 + ',  sliced: true, y: 61.41 },\r\n            { name: '20-24 ', y: 11.84 },\r\n            { name: '10-19 ', y: 10.85 },\r\n            { name: '≤ 9 ', y: 4.67 },\r\n           \r\n        ]\r\n    }]\r\n};","export const ReceivingArtBySex = {\r\n    chart: {\r\n        plotBackgroundColor: null,\r\n        plotBorderWidth: 0,\r\n        plotShadow: false\r\n    },\r\n    title: {\r\n        text: 'Number of Adults and Children newly enrolled on ART by Sex',\r\n        align: 'center',\r\n        verticalAlign: 'middle',\r\n        y: -160\r\n    },\r\n    tooltip: {\r\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n    },\r\n    accessibility: {\r\n        point: {\r\n            valueSuffix: '%'\r\n        }\r\n    },\r\n    plotOptions: {\r\n        pie: {\r\n            \r\n            dataLabels: {\r\n                enabled: true,\r\n                distance: -50,\r\n                format: '<b>{point.name}</b>: {point.percentage:.1f} %',\r\n                style: {\r\n                    fontWeight: 'bold',\r\n                    color: 'white'\r\n                }\r\n            },\r\n            startAngle: -90,\r\n            endAngle: 90,\r\n            center: ['50%', '75%'],\r\n            size: '110%',\r\n            showInLegend: true\r\n        }\r\n    },\r\n    series: [{\r\n        type: 'pie',\r\n        name: 'Newly Enrolled on ART ',\r\n        innerSize: '50%',\r\n        data: [\r\n            ['Male', 58.9],\r\n            ['Female', 13.29],\r\n            \r\n        ]\r\n    }]\r\n};","import React, { useState } from 'react';\r\n\r\nimport { Col, Form,CardBody,  Row,CardTitle, CardText,\r\n   } from \"reactstrap\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Highcharts from 'highcharts';\r\n import HighchartsReact from 'highcharts-react-official';\r\nimport {NewlyEnrolledArtBySex} from './Highcharts/NewlyEnrolledArtBySex';\r\nimport {NewlyEnrolledArtByAge} from './Highcharts/NewlyEnrolledArtByAge';\r\nimport {ReceivingArtByAge}  from './Highcharts/ReceivingArtByAge';\r\nimport {ReceivingArtBySex} from './Highcharts/ReceivingArtBySex';\r\nimport { Progress } from 'reactstrap';\r\n\r\n\r\n// Load Highcharts modules\r\n//require(\"highcharts/modules/exporting\")(Highcharts);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n},\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst SummaryView = (props) => {\r\n  const classes = useStyles();\r\n  const [chartValue, setChartValue] = useState(\"\");\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const toggle = () => setDropdownOpen(!dropdownOpen);\r\n  const [state, setState] = useState({ activeItem: 'gamepad' })\r\n\r\n  const handleItemClick = (e, { name }) => setState({ activeItem: name })\r\n  const { activeItem } = state\r\n  const chartPage  = e => {\r\n\r\n    setChartValue(e)\r\n  }\r\n\r\n  //Menu Icon \r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div  spacing={5} style={{ padding: 20 }} >\r\n      <Row>\r\n        <Col md={12}>\r\n          {/* The second Column Card Layout  */}\r\n        <Row>\r\n                 \r\n                  <Col  lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\r\n                  <Card><CardBody>\r\n                    <HighchartsReact highcharts={Highcharts} options={ReceivingArtBySex} />\r\n                  </CardBody></Card>\r\n                  </Col>\r\n                  <Col  lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\r\n                  <Card><CardBody>\r\n                    <HighchartsReact highcharts={Highcharts} options={ReceivingArtByAge} />\r\n                  </CardBody></Card>\r\n                  </Col>\r\n              </Row>\r\n\r\n           \r\n        </Col>\r\n      </Row>\r\n\r\n      \r\n\r\n      \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SummaryView;\r\n","import React, { Fragment } from \"react\";\r\n// BS\r\nimport { Dropdown, Nav, Tab } from \"react-bootstrap\";\r\n/// Scroll\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { Link } from \"react-router-dom\";\r\n// images\r\nimport SummaryView from './DashboardAnalytics/SummaryView/Index';\r\nimport Highcharts from 'highcharts'\r\nimport HighchartsReact from 'highcharts-react-official'\r\nimport {NewlyEnrolledArtBySex} from './DashboardAnalytics/SummaryView/Highcharts/NewlyEnrolledArtBySex';\r\n\r\nconst options = {\r\n  chart: {\r\n    type: 'column'\r\n},\r\n\r\ntitle: {\r\n    text: 'Viral Load Cascade among new patients eligible after 6 months'\r\n},\r\n\r\nsubtitle: {\r\n    text: ''\r\n},\r\n\r\nlegend: {\r\n    align: 'right',\r\n    verticalAlign: 'middle',\r\n    layout: 'vertical'\r\n},\r\n\r\nxAxis: {\r\n    categories: ['Number Eligble', 'Number of Sample Collected', 'Number Tested', 'Number Suppressed'],\r\n    labels: {\r\n        x: -10\r\n    }\r\n},\r\n\r\nyAxis: {\r\n    allowDecimals: false,\r\n    title: {\r\n        text: 'Amount'\r\n    }\r\n},\r\n\r\nseries: [{\r\n    name: 'Number Eligble',\r\n    data: [20, 40, 30, 3]\r\n}, {\r\n    name: 'Number of Sample Collected',\r\n    data: [62, 41, 22, 22]\r\n}, {\r\n    name: 'Number Tested',\r\n    data: [200, 45, 30,20]\r\n}, {\r\n  name: 'Number Suppressed',\r\n  data: [40, 40, 10, 90]\r\n}],\r\n\r\nresponsive: {\r\n    rules: [{\r\n        condition: {\r\n            maxWidth: 500\r\n        },\r\n        chartOptions: {\r\n            legend: {\r\n                align: 'center',\r\n                verticalAlign: 'bottom',\r\n                layout: 'horizontal'\r\n            },\r\n            yAxis: {\r\n                labels: {\r\n                    align: 'left',\r\n                    x: 0,\r\n                    y: -5\r\n                },\r\n                title: {\r\n                    text: null\r\n                }\r\n            },\r\n            subtitle: {\r\n                text: null\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            }\r\n        }\r\n    }]\r\n}\r\n}\r\nconst options2 = {\r\n  chart: {\r\n    type: 'column'\r\n},\r\n\r\ntitle: {\r\n    text: 'Viral Load Cascade among patients currently on ART eligible after 12 months of last VL result'\r\n},\r\n\r\nsubtitle: {\r\n    text: ''\r\n},\r\n\r\nlegend: {\r\n    align: 'right',\r\n    verticalAlign: 'middle',\r\n    layout: 'vertical'\r\n},\r\n\r\nxAxis: {\r\n    categories: ['Number Eligble', 'Number of Sample Collected', 'Number Tested', 'Number Suppressed'],\r\n    labels: {\r\n        x: -10\r\n    }\r\n},\r\n\r\nyAxis: {\r\n    allowDecimals: false,\r\n    title: {\r\n        text: 'Amount'\r\n    }\r\n},\r\n\r\nseries: [{\r\n    name: 'Number Eligble',\r\n    data: [200, 40, 30, 3]\r\n}, {\r\n    name: 'Number of Sample Collected',\r\n    data: [62, 41, 22, 22]\r\n}, {\r\n    name: 'Number Tested',\r\n    data: [2000, 450, 300,200]\r\n}, {\r\n  name: 'Number Suppressed',\r\n  data: [40, 40, 100, 90]\r\n}],\r\n\r\nresponsive: {\r\n    rules: [{\r\n        condition: {\r\n            maxWidth: 500\r\n        },\r\n        chartOptions: {\r\n            legend: {\r\n                align: 'center',\r\n                verticalAlign: 'bottom',\r\n                layout: 'horizontal'\r\n            },\r\n            yAxis: {\r\n                labels: {\r\n                    align: 'left',\r\n                    x: 0,\r\n                    y: -5\r\n                },\r\n                title: {\r\n                    text: null\r\n                }\r\n            },\r\n            subtitle: {\r\n                text: null\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            }\r\n        }\r\n    }]\r\n}\r\n}\r\nconst Widget = () => {\r\n  return (\r\n    <Fragment>     \r\n      <div className=\"row\">\r\n       <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-primary text-danger\">\r\n                <i class=\"fa fa-user-plus\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">NEWLY DIAGNOSED HIV+</p>\r\n                  <h4 className=\"mb-0\">3280</h4>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-warning text-warning\">\r\n                <i class=\"fa fa-heartbeat\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">CURRENT ON ART</p>\r\n                  <h4 className=\"mb-0\">2570</h4>\r\n                  {/* <span className=\"badge badge-warning\">+3.5%</span> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body  p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-danger text-danger\">\r\n                <i class=\"fa fa-compress\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">VIRALLY SUPPRESSED</p>\r\n                  <h4 className=\"mb-0\">50</h4>\r\n                  {/* <span className=\"badge badge-danger\">-3.5%</span> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-success text-success\">\r\n                <i class=\"fa fa-users\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">CURRENTLY ACTIVE</p>\r\n                  <h4 className=\"mb-0\">2340</h4>\r\n                  {/* <span className=\"badge badge-success\">-3.5%</span> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <SummaryView />\r\n        <div className=\"col-xl-6 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <HighchartsReact\r\n            highcharts={Highcharts}\r\n            options={options}\r\n          />\r\n        </div>\r\n        <div className=\"col-xl-6 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <HighchartsReact\r\n            highcharts={Highcharts}\r\n            options={options2}\r\n          />\r\n        </div>\r\n        \r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Widget;\r\n","import React, {useState, Fragment } from \"react\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport NotEnrollPatients from './Patient/PatientList'\r\nimport ActiveANCPatients from './Patient/ActiveANCPatientList'\r\nimport VisualisationHome from './Visualisation/Index'\r\nimport { Link } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button';\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\n//import PageTitle from \"./../layouts/PageTitle\";\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n    const [key, setKey] = useState('home');\r\n\r\n\r\n  return (\r\n    <Fragment>  \r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4>PMTCT</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Link to={\"register-patient\"}>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end mb-10\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n                style={{backgroundColor:'#014d88'}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\r\n            </Button>\r\n        </Link>\r\n        <br/><br/>\r\n      <Row>       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n                  \r\n                  <Tab eventKey=\"home\" title=\"Find Patients\">                   \r\n                    <NotEnrollPatients />\r\n                  </Tab>\r\n                  <Tab eventKey=\"anc\" title=\"Active ANC Patients\">                   \r\n                    <ActiveANCPatients />\r\n                  </Tab>\r\n                  <Tab eventKey=\"visualization\" title=\"Data Visualisation\">                   \r\n                    <VisualisationHome />\r\n                  </Tab>                    \r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n        Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n        } from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nconst CaptureBiometric = (props) => {\r\n    const classes = useStyles()\r\n    const biometricDevices = props.biometricDevices\r\n    const patientID= props && props.patientId ? props.patientId : \"\"\r\n    \r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:patientID, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState(props.biometricDevices);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n   // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([])\r\n     console.log(biometricDevices)\r\n    const buttonSx = {\r\n      ...(success && {\r\n        bgcolor: green[500],\r\n        '&:hover': {\r\n          bgcolor: green[700],\r\n        },\r\n      }),\r\n    };\r\n\r\n\r\n    useEffect(() => {      \r\n        TemplateType();\r\n        if(objValues.device===\"\"){\r\n            setshowCapture(false)\r\n        }\r\n        \r\n      }, []);\r\n     //Get list of Finger index\r\n     const TemplateType =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setFingerType(response.data);\r\n           })\r\n           .catch((error) => {\r\n           });\r\n       \r\n     }\r\n\r\n     //check if device is plugged or not \r\n     const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        console.log(checkUrl)\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n           .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n            if(response.data.errorType ===\"ERROR\"){\r\n                toast.error(response.data.errorName + \" is not plug\");\r\n                //setshowCapture(true)\r\n            }else{\r\n                setshowCapture(true)\r\n            }\r\n           })\r\n           .catch((error) => {\r\n           });\r\n     }\r\n     // handle the input changes \r\n\r\n     const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //to capture  selected index finger \r\n    const captureFinger = (e) => {        \r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                  setLoading(true);\r\n                  if(response.data.type ===\"ERROR\"){                   \r\n                    setLoading(false);\r\n                    setTryAgain(true);\r\n                    window.setTimeout(() => {\r\n                        setTryAgain(false);\r\n                      }, 5000);\r\n                    toast.error(response.data.message.ERROR);\r\n                  }else{\r\n                    const templateType= response.data.templateType\r\n                    setTryAgain(false);\r\n                    setSuccess(true)\r\n                    window.setTimeout(() => {\r\n                        setSuccess(false)\r\n                        setLoading(false);                        \r\n                      }, 5000);\r\n                                        \r\n                    setCapturedFingered([...capturedFingered, response.data])\r\n                    fingerType.splice(templateType, 1);\r\n                    setFingerType([...fingerType]);\r\n                  }\r\n                  //toast.success(\"Record save successful\");\r\n              })\r\n              .catch(error => {                 \r\n              });\r\n        }\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {        \r\n        e.preventDefault();\r\n        if(capturedFingered.length > 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1]\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                toast.success(\"Biometric save successful\");\r\n                setCapturedFingered([])\r\n                props.setPatientBiometricStatus(true)\r\n                props.togglestatus()\r\n            })\r\n            .catch(error => {\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }else{\r\n            \r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n  }  \r\n    \r\n // console.log(capturedFingered)\r\n\r\n    return (\r\n        <div >\r\n            <Card >\r\n                <CardBody>\r\n                    <Modal isOpen={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"lg\">\r\n                        <Form >\r\n                            <ModalHeader toggle={props.togglestatus}>capture Biometric</ModalHeader>\r\n                            <ModalBody>\r\n                                <Card>\r\n                                {/* <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader> */}\r\n                                    <CardBody>\r\n                                    <Row form>\r\n                                    <ToastContainer />\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Device </Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"device\"\r\n                                                    id=\"device\"\r\n                                                    onChange={checkDevice}\r\n                                                    value={objValues.device}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Device </option>\r\n                                                {biometricDevices.map(({ id, name }) => (\r\n                                                    <option key={id} value={name}>\r\n                                                        {name}\r\n                                                    </option>\r\n                                                ))}\r\n                                              \r\n                                            </Input>\r\n                                            {errors.device !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.device}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Finger </option>\r\n\r\n                                                {fingerType.map((value) => (\r\n                                                    <option key={value.id} value={value.display}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                            {errors.templateType !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.templateType}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        \r\n\r\n                                        <Col md={4}>\r\n                                        \r\n                                        <MatButton\r\n                                            type='button'\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={captureFinger}\r\n                                            className={'mt-4'}\r\n                                            startIcon={<FingerprintIcon />}\r\n                                        >\r\n                                            Capture Finger\r\n                                        </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n                                        \r\n                                        </>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                        }\r\n                                        {/* <img width='500' height='200' src={responseImage}/> */}\r\n                                        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                                       \r\n                                     {loading && (\r\n                                        <>\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                </Fab>\r\n                                                {loading && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: green[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {tryAgain && (\r\n                                        <>\r\n                                        \r\n\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                 <FingerprintIcon />\r\n                                                </Fab>\r\n                                                {tryAgain && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: red[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            Click to Recapture Again\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {/*  */}\r\n                                        </Col>\r\n                                       \r\n                                            \r\n                                        </Row>\r\n\r\n                                    <Row>\r\n                                 {capturedFingered.length >=1 ? (  \r\n                                     <>                               \r\n                                    <Col md={12} >\r\n                                        <h3>Captured Fingerprints</h3>\r\n                                    </Col>\r\n                                    <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {capturedFingered.map((x) => (\r\n                                                <List.Item>\r\n                                                    {/* <List.Header><Icon name='cancel'  color='red' /> </List.Header> */}\r\n                                                    <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                    {/* <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col> */}\r\n                                    <br/><br/><br/><br/><br/><br/>\r\n                                        <Col md={12} >\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={saveBiometrics}\r\n                                                // className={classes.button}\r\n                                                startIcon={<SaveIcon/>}\r\n                                            >\r\n                                                Save Capture\r\n                                            </MatButton>\r\n                                        </Col>\r\n                                    </> \r\n                                    )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                    </Row>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </ModalBody>\r\n                        </Form>\r\n\r\n                    </Modal>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CaptureBiometric;\r\n","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Link } from 'react-router-dom'\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\n//import Chip from '@material-ui/core/Chip';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Button } from 'semantic-ui-react';\r\nimport {Label,} from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CaptureBiometric from './CaptureBiometric';\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  //const patientCurrentStatus=props.patientObj && props.patientObj.currentStatus===\"Died (Confirmed)\" ? true : false ;\r\n  const patientObjs = props.patientObj ? props.patientObj : {}\r\n  const permissions= props.permissions ? props.permissions : [];\r\n  const [patientObj, setpatientObj] = useState(patientObjs)\r\n  const [patientBiometricStatus, setPatientBiometricStatus]= useState(props.patientObj.biometricStatus);\r\n  const [biometricStatus, setBiometricStatus] = useState(false);\r\n  const [devices, setDevices] = useState([]);\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  const [biometricModal, setBiometricModal] = useState(false);\r\n  const BiometricModalToggle = () => setBiometricModal(!biometricModal);\r\n  const [hivStatus, setHivStatus] = useState();\r\n  const [artModal, setArtModal] = useState(false);\r\n  const Arttoggle = () => setArtModal(!artModal);\r\n  useEffect(() => {\r\n    PatientCurrentStatus();\r\n    CheckBiometric();\r\n  }, [props.patientObj]);\r\n\r\n  //Get list of KP\r\n  const CheckBiometric =()=>{\r\n      axios\r\n        .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setBiometricStatus(response.data);\r\n            if(response.data===true){\r\n              axios\r\n                  .get(`${baseUrl}biometrics/devices`,\r\n                      { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                  )\r\n                  .then((response) => {\r\n                      setDevices(response.data);\r\n                      \r\n                  })\r\n                  .catch((error) => {\r\n                      console.log(error)\r\n                  });\r\n            \r\n              }\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    \r\n  }\r\n    ///GET LIST OF Patients\r\n    async function PatientCurrentStatus() {\r\n        axios\r\n            .get(`${baseUrl}hiv/status/patient-current/${patientObj.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n\r\n              setHivStatus(response.data);\r\n            })\r\n            .catch((error) => {    \r\n            });        \r\n    }\r\n    const get_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now ;\r\n    }\r\n    const calculate_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now + \" year(s)\";\r\n    };\r\n\r\n    const loadChildEvaluation =(row)=> {\r\n      props.setActiveContent('child-evaluation')\r\n    }\r\n    const capturePatientBiometric =(row)=> {\r\n      //props.setActiveContent('biometrics')\r\n      props.setActiveContent({...props.activeContent, route:'biometrics', obj:row})\r\n    }\r\n    const loadArtCommencement =(row)=> {\r\n      props.setActiveContent('art-commencement')\r\n    }\r\n    \r\n    const loadArt =(row)=> {\r\n        setpatientObj({...patientObj, ...row});\r\n            setArtModal(!artModal)\r\n    }\r\n    \r\n    const CurrentStatus = ()=>{\r\n\r\n          return (  <Label color=\"blue\" size=\"mini\">{hivStatus}</Label>);\r\n  }\r\n    const getHospitalNumber = (identifier) => {     \r\n      const identifiers = identifier;\r\n      const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');       \r\n      return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n    const getPhoneNumber = (identifier) => {     \r\n      const identifiers = identifier;\r\n      const phoneNumber = identifiers.contactPoint.find(obj => obj.type == 'phone');       \r\n      return phoneNumber ? phoneNumber.value : '';\r\n    };\r\n    const getAddress = (identifier) => {     \r\n      const identifiers = identifier;\r\n      const address = identifiers.address.find(obj => obj.city);      \r\n      return address ? address.city : '';\r\n    };\r\n    const handleBiometricCapture = (id) => { \r\n      let patientObjID= id\r\n      setBiometricModal(!biometricModal);\r\n    }\r\n\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n       <ExpansionPanel >\r\n\r\n                <ExpansionPanelSummary >\r\n                \r\n                <Row>\r\n                \r\n                    <Col md={12}>\r\n                    <Row className={\"mt-1\"}>\r\n                    <Col md={12} className={classes.root2}>\r\n                        <b style={{fontSize: \"25px\"}}>\r\n                        {patientObj.fullname}\r\n                        </b>\r\n                        <Link to={\"/\"} >\r\n                        <ButtonMui\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-2 mr-2 mt-2\"\r\n                            //startIcon={<FaUserPlus size=\"10\"/>}\r\n                            startIcon={<TiArrowBack  />}\r\n                            style={{backgroundColor:\"rgb(153, 46, 98)\", color:'#fff', height:'35px'}}\r\n\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                        </ButtonMui>\r\n                      </Link>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Patient ID : <b>{patientObj.hospitalNumber }</b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {/* Date Of Birth : <b>{patientObj.dateOfBirth }</b> */}\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Age : <b>{patientObj.age}</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Gender :{\" \"}\r\n                        <b>{patientObj.sex && patientObj.sex!==null ?  patientObj.sex : 'Female' }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        {/* Phone Number : <b>{getPhoneNumber(patientObj.contactPoint)}</b> */}\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Address : <b>{getAddress(patientObj.address)} </b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    <Col md={12}>\r\n                    {biometricStatus===true ? (\r\n                          <>\r\n                              <div >\r\n                                  <Typography variant=\"caption\">\r\n                                      <Label color={props.patientObj.biometricStatus===true? \"green\" : \"red\"} size={\"mini\"}>\r\n                                          Biometric Status\r\n                                          <Label.Detail>{props.patientObj.biometricStatus===true? \"Captured\" : \"Not Capture\"}</Label.Detail>\r\n                                      </Label>\r\n                                     \r\n                                      \r\n                                  </Typography>\r\n                              </div>\r\n                          </>\r\n                          )\r\n                          :\r\n                          <>\r\n                              \r\n                          </>\r\n                      }\r\n                    </Col>\r\n                    </Row>\r\n                    </Col>\r\n                </Row>\r\n            \r\n                </ExpansionPanelSummary>\r\n               \r\n                \r\n                    {/* <Button\r\n                      color='red'\r\n                      content='BloodType'\r\n                      //icon='heart'\r\n                      label={{ basic: true, color: 'red', pointing: 'left', content: 'AB+' }}\r\n                    /> */}                                  \r\n                    {/* <Button\r\n                        basic\r\n                        color='blue'\r\n                        content='Height'\r\n                        icon='fork'\r\n                        label={{\r\n                            as: 'a',\r\n                            basic: true,\r\n                            color: 'blue',\r\n                            pointing: 'left',\r\n                            content: '74.5 in',\r\n                        }}\r\n                      />               */}\r\n                      {/* <Button\r\n                        basic\r\n                        color='blue'\r\n                        content='Weight'\r\n                        icon='fork'\r\n                        label={{\r\n                            as: 'a',\r\n                            basic: true,\r\n                            color: 'blue',\r\n                            pointing: 'left',\r\n                            content: '74.5 in',\r\n                        }}\r\n                      /> */}\r\n                               \r\n                {/* <div className={classes.column}>\r\n                  <Button primary  floated='left' onClick={() => get_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\")) > 5 ? loadAdultEvaluation(patientObj) :loadChildEvaluation(patientObj) }><span style={{fontSize:\"11px\"}}>Initial Clinic Evaluation</span></Button>\r\n                </div> */}\r\n                {/* {patientCurrentStatus !==true && props.patientObj.enrollment.targetGroupId !==\"456\" ?                   \r\n                  (\r\n                    <>\r\n                      <div className={classes.column}>\r\n                        <Button primary  floated='left' onClick={() => loadMentalHealthScreening(patientObj) }><span style={{fontSize:\"11px\"}}>Mental Health Screening</span></Button>\r\n                      </div>\r\n                    </>\r\n                  ) :\"\"           \r\n                } */}\r\n               {/* {patientObj.commenced!==true && (\r\n                <div className={classes.column} style={{paddingLeft:\"20px\"}}>\r\n                {\" \"}<Button primary onClick={() => loadArt(patientObj)} ><span style={{fontSize:\"11px\"}}>ART Commencement </span></Button>\r\n                </div>\r\n                )\r\n               }\r\n                     */}\r\n              \r\n            </ExpansionPanel>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {Dropdown, Menu } from \"semantic-ui-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navItemText: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction SubMenu(props) {\r\n    const classes = useStyles();\r\n    let gender=\"\"\r\n    const patientObjs = props.patientObj ? props.patientObj : {}\r\n    //const patientCurrentStatus=props.patientObj && props.patientObj.currentStatus===\"Died (Confirmed)\" ? true : false ;\r\n    const [patientObj, setpatientObj] = useState(patientObjs)\r\n    const [genderType, setGenderType] = useState()\r\n    let mentalStatus=false\r\n    let initialEvaluationStatus=false\r\n    useEffect(() => {\r\n        Observation();\r\n        gender =props.patientObj && props.patientObj.sex ? props.patientObj.sex : null\r\n        setGenderType(gender===\"Female\" ? true : false)\r\n    }, [props.patientObj]);\r\n     //Get list of RegimenLine\r\n     const Observation =()=>{\r\n        axios\r\n            .get(`${baseUrl}observation/person/${props.patientObj.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                const observation = response.data\r\n                const mental= observation.filter((x)=> x.type==='mental health')\r\n                const evaluation= observation.filter((x)=> x.type==='initial evaluation')\r\n                if(mental.length > 1){\r\n                    mentalStatus=true\r\n                }\r\n                if(evaluation.length > 1){\r\n                    initialEvaluationStatus=true\r\n                }\r\n\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });\r\n        \r\n        }\r\n    const loadAncPnc =(row)=> {\r\n        props.setActiveContent({...props.activeContent, route:'anc-pnc'})\r\n    }\r\n    const loadLabourDelivery =(row)=> {\r\n        props.setActiveContent({...props.activeContent, route:'labour-delivery'})\r\n    }\r\n    const onClickConsultation = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'consultation'})\r\n    }\r\n    const onClickHome = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n    }\r\n    const loadPmtctHts = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'pmtct-hts'})\r\n    }\r\n    //\r\n\r\n    return (\r\n         <div>\r\n            <Menu size=\"mini\" color={\"black\"} inverted >\r\n                <Menu.Item onClick={() => onClickHome()} > Home</Menu.Item> \r\n                {patientObj.hivStatus!==null && patientObj.hivStatus==='Positive' && (<>\r\n                    {patientObj.pmtctRegStatus!==true && (<Menu.Item onClick={() => loadAncPnc()} >PMTCT Enrollment</Menu.Item> )}               \r\n                    <Menu.Item onClick={() => onClickConsultation()} >Follow Up Visit</Menu.Item>                \r\n                    <Menu.Item onClick={() => loadLabourDelivery()} >Labour and Delivery</Menu.Item>\r\n                </>)}\r\n                {patientObj.hivStatus!==null && patientObj.hivStatus==='Negative' && (<>\r\n                    <Menu.Item onClick={() => loadPmtctHts()} >PMTCT-HTS</Menu.Item>\r\n                </>)}                  \r\n            </Menu>             \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default SubMenu;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Segment, Label, Icon, List, Button, Card,Feed } from 'semantic-ui-react'\r\n// Page titie\r\nimport { FormGroup, Label as FormLabelName, InputGroup,\r\n          InputGroupText,\r\n          Input,\r\n        } from \"reactstrap\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1)\r\n    }\r\n  },\r\n  input: {\r\n    display: 'none'\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\nconst ClinicVisit = (props) => {\r\n  let patientObj = props.patientObj ? props.patientObj : {}\r\n  const [errors, setErrors] = useState({});\r\n  const [clinicVisitList, setClinicVisitList] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  let temp = { ...errors }\r\n  const classes = useStyles()\r\n  const [getPatientObj, setGetPatientObj] = useState({});\r\n  const [saving, setSaving] = useState(false);\r\n  const [clinicalStage, setClinicalStage] = useState([]);\r\n  const [functionalStatus, setFunctionalStatus] = useState([]);\r\n  const [adherenceLevel, setAdherenceLevel] = useState([]);\r\n  const [dsdModelType, setDsdModelType] = useState([]);\r\n\r\n  const [currentVitalSigns, setcurrentVitalSigns] = useState({})\r\n  const [showCurrentVitalSigns, setShowCurrentVitalSigns] = useState(false)\r\n\r\n  //ADR array Object \r\n  const [adrObj, setAdrObj] = useState({ adr: \"\", adrOnsetDate: \"\" });\r\n  const [adrList, setAdrList] = useState([]);\r\n  //Vital signs clinical decision support \r\n  const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n                                                                    bodyWeight: \"\",\r\n                                                                    diastolic: \"\",\r\n                                                                    height: \"\",\r\n                                                                    systolic: \"\",\r\n                                                                    pulse:\"\",\r\n                                                                    temperature:\"\",\r\n                                                                    respiratoryRate:\"\" \r\n                                                                  })\r\n  const [objValues, setObjValues] = useState({\r\n\r\n      adr: [\r\n        {\r\n          ard: \"\",\r\n          onSetDate: \"\"\r\n        }\r\n      ],\r\n      ancNo: \"\",\r\n      bodyWeight: \"\",\r\n      clinicalNotes: \"\",\r\n      dateOfVisit: \"\",\r\n      diastolic: \"\",\r\n      functionalStatus: \"\",\r\n      height: \"\",\r\n      levelOfAdherence: \"\",\r\n      nextClinicalAppointmentDate: \"\",\r\n      onAntiTbDrugs: \"\",\r\n      opportunisticInfection: [\r\n        {\r\n          illness: \"\",\r\n          onSetDate: \"\"\r\n        }\r\n      ],\r\n      pulse: \"\",\r\n      respiratoryRate: \"\",\r\n      systolic: \"\",\r\n      temperature: \"\",\r\n      whoStaging: \"\"\r\n    }\r\n  );\r\n  const [vital, setVitalSignDto] = useState({\r\n    bodyWeight: \"\",\r\n    diastolic: \"\",\r\n    encounterDate: \"\",\r\n    facilityId: 1,\r\n    height: \"\",\r\n    personId: props.patientObj.id,\r\n    serviceTypeId: 1,\r\n    systolic: \"\",\r\n    pulse:\"\",\r\n    temperature:\"\",\r\n    respiratoryRate:\"\" \r\n  })\r\n\r\n\r\n  useEffect(() => {\r\n    FunctionalStatus();\r\n    WhoStaging();\r\n    AdherenceLevel();\r\n    VitalSigns();\r\n    GetPatientObj();\r\n    ClinicVisitList();\r\n    PatientDetaild();\r\n    //hiv/patient/3\r\n  }, []);\r\n     //GET LIST Drug Refill\r\n     async function ClinicVisitList() {\r\n      setLoading(true)\r\n      axios\r\n          .get(`${baseUrl}hiv/art/clinic-visit/person?pageNo=0&pageSize=10&personId=${props.patientObj.id}`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n          )\r\n          .then((response) => {\r\n              setLoading(false)\r\n              setClinicVisitList(response.data);                \r\n          })\r\n          .catch((error) => {  \r\n              setLoading(false)  \r\n          });        \r\n    }\r\n    //Check for the last Vital Signs\r\n    const VitalSigns = () => {\r\n    axios\r\n      .get(`${baseUrl}patient/vital-sign/person/${props.patientObj.id}`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n\r\n        const lastVitalSigns = response.data[response.data.length - 1]\r\n        if (lastVitalSigns.encounterDate === moment(new Date()).format(\"YYYY-MM-DD\") === true) {\r\n          setcurrentVitalSigns(lastVitalSigns)\r\n          setShowCurrentVitalSigns(true)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n    }\r\n    //Check for the Patient Object\r\n    const PatientDetaild = () => {\r\n      axios\r\n        .get(`${baseUrl}hiv/patient/${props.patientObj.id}`,\r\n          { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            patientObj=response.data\r\n        })\r\n        .catch((error) => {\r\n          //console.log(error);\r\n        });\r\n      }\r\n    //Get The updated patient objeect\r\n    const GetPatientObj = () => {\r\n      axios\r\n        .get(`${baseUrl}hiv/patients`,\r\n          { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n          const patObJ= response.data.filter((x)=> x.id===props.patientObj.id)\r\n\r\n          setGetPatientObj(patObJ[0])\r\n        })\r\n        .catch((error) => {\r\n          //console.log(error);\r\n        });\r\n    }\r\n\r\n  //Get list of WhoStaging\r\n  const WhoStaging = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/CLINICAL_STAGE`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setClinicalStage(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n  ///GET LIST OF FUNCTIONAL%20_STATUS\r\n  async function FunctionalStatus() {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/FUNCTIONAL%20_STATUS`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n\r\n        setFunctionalStatus(response.data);\r\n        //setValues(response.data)\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  ///Level of Adherence\r\n  async function AdherenceLevel() {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_LEVEL_OF_ADHERENCE`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setAdherenceLevel(response.data);\r\n\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  const handleInputChange = e => {\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    \r\n  }\r\n  const handleInputChangeVitalSignDto = e => {\r\n    setVitalSignDto({ ...vital, [e.target.name]: e.target.value });\r\n  } \r\n  //Handle CheckBox \r\n  const handleCheckBox = e => {\r\n    if (e.target.checked) {\r\n      //currentVitalSigns.personId === null ? props.patientObj.id : currentVitalSigns.personId\r\n      setVitalSignDto({ ...currentVitalSigns })\r\n    } else {\r\n      setVitalSignDto({\r\n        bodyWeight: \"\",\r\n        diastolic: \"\",\r\n        encounterDate: \"\",\r\n        facilityId: \"\",\r\n        height: \"\",\r\n        personId: props.patientObj.id,\r\n        serviceTypeId: \"\",\r\n        systolic: \"\",\r\n        pulse:\"\",\r\n        temperature:\"\",\r\n        respiratoryRate:\"\" \r\n      })\r\n    }\r\n  }\r\n  //to check the input value for clinical decision \r\n  const handleInputValueCheckHeight =(e)=>{\r\n    if(e.target.name===\"height\" && (e.target.value < 48.26 || e.target.value>216.408)){\r\n      const message =\"Height cannot be greater than 216.408 and less than 48.26\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, height:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, height:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckBodyWeight =(e)=>{\r\n    if(e.target.name===\"bodyWeight\" && (e.target.value < 3 || e.target.value>150)){      \r\n      const message =\"Body weight must not be greater than 150 and less than 3\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckSystolic =(e)=>{\r\n    if(e.target.name===\"systolic\" && (e.target.value < 90 || e.target.value>240)){      \r\n      const message =\"Blood Pressure systolic must not be greater than 240 and less than 90\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckDiastolic =(e)=>{\r\n    if(e.target.name===\"diastolic\" && (e.target.value < 60 || e.target.value>140)){      \r\n      const message =\"Blood Pressure diastolic must not be greater than 140 and less than 60\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckPulse =(e)=>{\r\n    if(e.target.name===\"pulse\" && (e.target.value < 40 || e.target.value>120)){      \r\n    const message =\"Pulse must not be greater than 120 and less than 40\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:\"\"})\r\n    }\r\n}\r\nconst handleInputValueCheckRespiratoryRate =(e)=>{\r\n    if(e.target.name===\"respiratoryRate\" && (e.target.value < 10 || e.target.value>70)){      \r\n    const message =\"Respiratory Rate must not be greater than 70 and less than 10\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:\"\"})\r\n    }\r\n}\r\nconst handleInputValueCheckTemperature =(e)=>{\r\n    if(e.target.name===\"temperature\" && (e.target.value < 35 || e.target.value>47)){      \r\n    const message =\"Temperature must not be greater than 47 and less than 35\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, temperature:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, temperature:\"\"})\r\n    }\r\n}\r\n//Get list of DSD Model Type\r\nfunction DsdModelType (dsdmodel) {\r\n  const dsd = dsdmodel ==='Facility' ? 'DSD_MODEL_FACILITY' : 'DSD_MODEL_COMMUNITY'\r\n  axios\r\n     .get(`${baseUrl}application-codesets/v2/${dsd}`,\r\n         { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n     )\r\n     .then((response) => {\r\n         console.log(response.data);\r\n         setDsdModelType(response.data);\r\n     })\r\n     .catch((error) => {\r\n     //console.log(error);\r\n     });\r\n \r\n}\r\n  //Validations of the forms\r\n  const validate = () => {        \r\n    temp.encounterDate = vital.encounterDate ? \"\" : \"This field is required\"\r\n    temp.nextAppointment = objValues.nextAppointment ? \"\" : \"This field is required\"\r\n    temp.whoStaging = objValues.whoStaging ? \"\" : \"This field is required\"\r\n    temp.clinicalNotes = objValues.clinicalNotes ? \"\" : \"This field is required\"\r\n    temp.functionalStatus = objValues.functionalStatus ? \"\" : \"This field is required\"\r\n    temp.levelOfAdherence = objValues.levelOfAdherence ? \"\" : \"This field is required\"\r\n    //temp.labTestGroupId = vital.diastolic ? \"\" : \"This field is required\"\r\n    temp.systolic = vital.systolic ? \"\" : \"This field is required\"\r\n    temp.height = vital.height ? \"\" : \"This field is required\"\r\n    temp.bodyWeight = vital.bodyWeight ? \"\" : \"This field is required\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n\r\n\r\n  /**** Submit Button Processing  */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(validate()){\r\n    setSaving(true)\r\n    objValues.visitDate = vital.encounterDate\r\n    objValues['vitalSignDto'] = vital\r\n    axios.post(`${baseUrl}hiv/art/clinic-visit/`, objValues,\r\n      { headers: { \"Authorization\": `Bearer ${token}` } },\r\n\r\n    )\r\n      .then(response => {\r\n        PatientDetaild();\r\n        setSaving(false);\r\n        toast.success(\"Clinic Visit save successful\");\r\n        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n      })\r\n      .catch(error => {\r\n        setSaving(false);\r\n        if(error.response && error.response.data){\r\n          let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        }\r\n        else{\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n       \r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n    <div className=\"row\">\r\n\r\n      <div className=\"col-md-8 \">\r\n        <h2>Mother Follow-up Visit</h2>\r\n        </div>\r\n        \r\n      </div>\r\n      <Grid >\r\n\r\n        <Grid.Column >\r\n          <Segment>\r\n            <Label as='a' color='blue'  style={{width:'106%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}>VITAL  SIGNS</h4>\r\n            </Label>\r\n            <br /><br />\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Date of Visit *</FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"encounterDate\"\r\n                    id=\"encounterDate\"\r\n                    value={vital.encounterDate}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    onChange={handleInputChangeVitalSignDto}\r\n                    min={props.patientObj && props.patientObj.artCommence ? props.patientObj.artCommence.visitDate : null}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    required\r\n                  />\r\n                 {errors.encounterDate !==\"\" ? (\r\n                      <span className={classes.error}>{errors.encounterDate}</span>\r\n                  ) : \"\" }\r\n\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                {showCurrentVitalSigns && (\r\n                  <div className=\"form-check custom-checkbox ml-1 \">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className=\"form-check-input\"\r\n                      name=\"currentVitalSigns\"\r\n                      id=\"currentVitalSigns\"\r\n                      onChange={handleCheckBox} \r\n                                          \r\n                    />\r\n                    <label\r\n                      className=\"form-check-label\"\r\n                      htmlFor=\"basic_checkbox_1\"\r\n                    >\r\n                      use current Vital Signs\r\n                    </label>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"row\">\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Pulse</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"pulse\"\r\n                                id=\"pulse\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"40\"\r\n                                max=\"120\"\r\n                                value={vital.pulse}\r\n                                onKeyUp={handleInputValueCheckPulse} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.pulse !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.pulse}</span>\r\n                        ) : \"\"}\r\n                        {errors.pulse !==\"\" ? (\r\n                            <span className={classes.error}>{errors.pulse}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Respiratory Rate </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"respiratoryRate\"\r\n                                id=\"respiratoryRate\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"10\"\r\n                                max=\"70\"\r\n                                value={vital.respiratoryRate}\r\n                                onKeyUp={handleInputValueCheckRespiratoryRate} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.respiratoryRate !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.respiratoryRate}</span>\r\n                        ) : \"\"}\r\n                        {errors.respiratoryRate !==\"\" ? (\r\n                            <span className={classes.error}>{errors.respiratoryRate}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Temperature </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"temperature\"\r\n                                id=\"temperature\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"35\"\r\n                                max=\"47\"\r\n                                value={vital.temperature}\r\n                                onKeyUp={handleInputValueCheckTemperature} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                <sup>o</sup>c\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.temperature !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.temperature}</span>\r\n                        ) : \"\"}\r\n                        {errors.temperature !==\"\" ? (\r\n                            <span className={classes.error}>{errors.temperature}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Body Weight</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"bodyWeight\"\r\n                                id=\"bodyWeight\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"3\"\r\n                                max=\"150\"\r\n                                value={vital.bodyWeight}\r\n                                onKeyUp={handleInputValueCheckBodyWeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                kg\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.bodyWeight !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.bodyWeight}</span>\r\n                        ) : \"\"}\r\n                        {errors.bodyWeight !==\"\" ? (\r\n                            <span className={classes.error}>{errors.bodyWeight}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>                                   \r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Height</FormLabelName>\r\n                        <InputGroup> \r\n                        <InputGroupText\r\n                                addonType=\"append\"\r\n                                style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                cm\r\n                        </InputGroupText>\r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"height\"\r\n                                id=\"height\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                value={vital.height}\r\n                                min=\"48.26\"\r\n                                max=\"216.408\"\r\n                                onKeyUp={handleInputValueCheckHeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                                <InputGroupText\r\n                                addonType=\"append\"\r\n                              \r\n                                style={{ backgroundColor:\"#992E62\", color:\"#fff\", border: \"1px solid #992E62\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                {vital.height!=='' ? (vital.height/100).toFixed(2) + \"m\" : \"m\"}\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.height !==\"\" ? (\r\n                            <span className={classes.error}>{vitalClinicalSupport.height}</span>\r\n                        ) : \"\"}\r\n                        {errors.height !==\"\" ? (\r\n                            <span className={classes.error}>{errors.height}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 mt-2 col-md-4\">\r\n                        {vital.bodyWeight!==\"\" && vital.height!=='' && (\r\n                            <FormGroup>\r\n                            <Label > {\" \"}</Label>\r\n                            <InputGroup> \r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                BMI : {Math.round(vital.bodyWeight/((vital.height * vital.height)/100))}\r\n                            </InputGroupText>                   \r\n                           \r\n                            </InputGroup>                \r\n                            </FormGroup>\r\n                        )}\r\n                    </div>\r\n              </div>\r\n              <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-12\">\r\n                  <FormGroup>\r\n                  <FormLabelName >Blood Pressure</FormLabelName>\r\n                  <InputGroup>\r\n                  <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                          systolic(mmHg)\r\n                  </InputGroupText> \r\n                      <Input \r\n                          type=\"number\"\r\n                          name=\"systolic\"\r\n                          id=\"systolic\"\r\n                          min=\"90\"\r\n                          max=\"240\"\r\n                          onChange={handleInputChangeVitalSignDto}\r\n                          value={vital.systolic}\r\n                          onKeyUp={handleInputValueCheckSystolic}\r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}} \r\n                      />\r\n                      <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                      diastolic(mmHg)\r\n                      </InputGroupText>\r\n                          <Input \r\n                          type=\"number\"\r\n                          name=\"diastolic\"\r\n                          id=\"diastolic\"\r\n                          min={0}\r\n                          max={140}\r\n                          onChange={handleInputChangeVitalSignDto}\r\n                          value={vital.diastolic}\r\n                          onKeyUp={handleInputValueCheckDiastolic} \r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                          />\r\n                      \r\n                      \r\n                  </InputGroup>\r\n                  {vitalClinicalSupport.systolic !==\"\" ? (\r\n                  <span className={classes.error}>{vitalClinicalSupport.systolic}</span>\r\n                  ) : \"\"}\r\n                  {errors.systolic !==\"\" ? (\r\n                      <span className={classes.error}>{errors.systolic}</span>\r\n                  ) : \"\" }  \r\n                  {vitalClinicalSupport.diastolic !==\"\" ? (\r\n                  <span className={classes.error}>{vitalClinicalSupport.diastolic}</span>\r\n                  ) : \"\"}\r\n                  {errors.diastolic !==\"\" ? (\r\n                      <span className={classes.error}>{errors.diastolic}</span>\r\n                  ) : \"\" }          \r\n                  </FormGroup>\r\n              </div>\r\n\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              \r\n              <div className=\" mb-3 col-md-3\">\r\n                <FormGroup>\r\n                  <FormLabelName >Point of Entry*</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"whoStaging\"\r\n                    id=\"whoStaging\"\r\n                    value={objValues.whoStaging}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"select\">Select </option>\r\n\r\n                    {clinicalStage.map((value) => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.whoStaging !==\"\" ? (\r\n                      <span className={classes.error}>{errors.whoStaging}</span>\r\n                  ) : \"\" }\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-3\">\r\n                <FormGroup>\r\n                  <FormLabelName >Date of Delivery *</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"functionalStatus\"\r\n                    id=\"functionalStatus\"\r\n                    value={objValues.functionalStatus}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"select\">Select </option>\r\n\r\n                    {functionalStatus.map((value) => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.functionalStatus !==\"\" ? (\r\n                      <span className={classes.error}>{errors.functionalStatus}</span>\r\n                  ) : \"\" }\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-3\">\r\n                <FormGroup>\r\n                  <FormLabelName >FP Counselling *</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"levelOfAdherence\"\r\n                    id=\"levelOfAdherence\"\r\n                    value={objValues.levelOfAdherence}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"select\">Select </option>\r\n\r\n                    {adherenceLevel.map((value) => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.levelOfAdherence !==\"\" ? (\r\n                      <span className={classes.error}>{errors.levelOfAdherence}</span>\r\n                  ) : \"\" }\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-3\">\r\n                <FormGroup>\r\n                  <FormLabelName >FP Method *</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"levelOfAdherence\"\r\n                    id=\"levelOfAdherence\"\r\n                    value={objValues.levelOfAdherence}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"select\">Select </option>\r\n\r\n                    {adherenceLevel.map((value) => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.levelOfAdherence !==\"\" ? (\r\n                      <span className={classes.error}>{errors.levelOfAdherence}</span>\r\n                  ) : \"\" }\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n            <br />\r\n            <Label as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n            <h4 style={{color:'#fff'}}>VIRAL LOAD AT 32-36 WEEKS GA </h4>\r\n            </Label>\r\n            <br /><br />\r\n            {/* TB Screening Form */}\r\n            <div className=\"row\">\r\n\r\n              <div className=\" mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <FormLabelName >Viral Load Collection Date*</FormLabelName>\r\n              <Input\r\n                type=\"date\"\r\n                name=\"nextAppointment\"\r\n                id=\"nextAppointment\"\r\n                value={vital.nextAppointment}\r\n                onChange={handleInputChange}\r\n                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                min={vital.encounterDate}   \r\n              />\r\n              {errors.nextAppointment !==\"\" ? (\r\n                      <span className={classes.error}>{errors.nextAppointment}</span>\r\n                  ) : \"\" }\r\n            </FormGroup>   \r\n              </div>\r\n              <div className=\" mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <FormLabelName >GA at VL Collection*</FormLabelName>\r\n                <Input\r\n                  type=\"number\"\r\n                  name=\"nextAppointment\"\r\n                  id=\"nextAppointment\"\r\n                  value={vital.nextAppointment}\r\n                  onChange={handleInputChange}\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  min={vital.encounterDate}   \r\n                />\r\n              {errors.nextAppointment !==\"\" ? (\r\n                  <span className={classes.error}>{errors.nextAppointment}</span>\r\n              ) : \"\" }\r\n            </FormGroup>   \r\n              </div>\r\n              <div className=\" mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <FormLabelName >Result *</FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"nextAppointment\"\r\n                    id=\"nextAppointment\"\r\n                    value={vital.nextAppointment}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    min={vital.encounterDate}   \r\n                  />\r\n                {errors.nextAppointment !==\"\" ? (\r\n                    <span className={classes.error}>{errors.nextAppointment}</span>\r\n                ) : \"\" }\r\n              </FormGroup>   \r\n              </div>\r\n           </div>\r\n            <br />\r\n            <br />\r\n            <Label as='a' color='teal' style={{width:'106%', height:'35px'}} ribbon>\r\n            <h4 style={{color:'#fff'}}>VIRAL LOAD - Other AT ANY TIME POINT DURING PMTCT</h4>\r\n            </Label>\r\n            <br /><br />\r\n            {/* TB Screening Form */}\r\n            <div className=\"row\">\r\n\r\n              <div className=\" mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <FormLabelName >Viral Load Collection Date*</FormLabelName>\r\n              <Input\r\n                type=\"date\"\r\n                name=\"nextAppointment\"\r\n                id=\"nextAppointment\"\r\n                value={vital.nextAppointment}\r\n                onChange={handleInputChange}\r\n                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                min={vital.encounterDate}   \r\n              />\r\n              {errors.nextAppointment !==\"\" ? (\r\n                      <span className={classes.error}>{errors.nextAppointment}</span>\r\n                  ) : \"\" }\r\n            </FormGroup>   \r\n              </div>\r\n              <div className=\" mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <FormLabelName >GA at VL Collection*</FormLabelName>\r\n                <Input\r\n                  type=\"number\"\r\n                  name=\"nextAppointment\"\r\n                  id=\"nextAppointment\"\r\n                  value={vital.nextAppointment}\r\n                  onChange={handleInputChange}\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  min={vital.encounterDate}   \r\n                />\r\n              {errors.nextAppointment !==\"\" ? (\r\n                  <span className={classes.error}>{errors.nextAppointment}</span>\r\n              ) : \"\" }\r\n            </FormGroup>   \r\n              </div>\r\n              <div className=\" mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <FormLabelName >Result *</FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"nextAppointment\"\r\n                    id=\"nextAppointment\"\r\n                    value={vital.nextAppointment}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    min={vital.encounterDate}   \r\n                  />\r\n                {errors.nextAppointment !==\"\" ? (\r\n                    <span className={classes.error}>{errors.nextAppointment}</span>\r\n                ) : \"\" }\r\n              </FormGroup>   \r\n              </div>\r\n           </div>\r\n            <br />\r\n            <Label as='a' color='black' style={{width:'106%', height:'35px'}} ribbon>\r\n            <h4 style={{color:'#fff'}}> DSD MODEL & OUTCOME</h4>\r\n            </Label>\r\n            <br /><br />\r\n            {/*  */}\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                      <FormLabelName >DSD Model</FormLabelName>\r\n                      <Input\r\n                          type=\"select\"\r\n                          name=\"dsdModel\"\r\n                          id=\"dsdModel\"\r\n                          value={objValues.dsdModel}\r\n                          onChange={handleInputChange} \r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}                   \r\n                          >\r\n                          <option value=\"\">Select </option>\r\n                          <option value=\"Facility\">Facility </option>\r\n                          <option value=\"Community\">Community </option>\r\n                          \r\n                      </Input>\r\n                      \r\n                  </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                      <FormLabelName >DSD Model Type</FormLabelName>\r\n                      <Input\r\n                          type=\"select\"\r\n                          name=\"dsdModelType\"\r\n                          id=\"dsdModelType\"\r\n                          value={objValues.dsdModelType}\r\n                          onChange={handleInputChange} \r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}                   \r\n                          >\r\n                          <option value=\"\">Select </option>\r\n                          {dsdModelType.map((value) => (\r\n                              <option key={value.code} value={value.code}>\r\n                                  {value.display}\r\n                              </option>\r\n                          ))}\r\n                          \r\n                      </Input>\r\n                      \r\n                  </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-3\">\r\n                  <FormGroup>\r\n                      <FormLabelName >Maternal Outcome </FormLabelName>\r\n                      <Input\r\n                          type=\"select\"\r\n                          name=\"dsdModelType\"\r\n                          id=\"dsdModelType\"\r\n                          value={objValues.dsdModelType}\r\n                          onChange={handleInputChange} \r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}                   \r\n                          >\r\n                          <option value=\"\">Select </option>\r\n                          {dsdModelType.map((value) => (\r\n                              <option key={value.code} value={value.code}>\r\n                                  {value.display}\r\n                              </option>\r\n                          ))}\r\n                          \r\n                      </Input>\r\n                      \r\n                  </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-3\">\r\n              <FormGroup>\r\n                <FormLabelName >Date of Outcome*</FormLabelName>\r\n                <Input\r\n                  type=\"date\"\r\n                  name=\"nextAppointment\"\r\n                  id=\"nextAppointment\"\r\n                  value={vital.nextAppointment}\r\n                  onChange={handleInputChange}\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  min={vital.encounterDate}   \r\n                />\r\n                {errors.nextAppointment !==\"\" ? (\r\n                    <span className={classes.error}>{errors.nextAppointment}</span>\r\n                ) : \"\" }\r\n              </FormGroup>   \r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-3\">\r\n                  <FormGroup>\r\n                      <FormLabelName >Name of ART Facility</FormLabelName>\r\n                      <Input\r\n                      type=\"text\"\r\n                      name=\"nextAppointment\"\r\n                      id=\"nextAppointment\"\r\n                      value={vital.nextAppointment}\r\n                      onChange={handleInputChange}\r\n                      style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                      min={vital.encounterDate}\r\n                      \r\n                    />\r\n                  {errors.nextAppointment !==\"\" ? (\r\n                          <span className={classes.error}>{errors.nextAppointment}</span>\r\n                      ) : \"\" }\r\n                      \r\n                  </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-3\">\r\n                  <FormGroup>\r\n                      <FormLabelName >Client Visit Status</FormLabelName>\r\n                      <Input\r\n                          type=\"select\"\r\n                          name=\"dsdModelType\"\r\n                          id=\"dsdModelType\"\r\n                          value={objValues.dsdModelType}\r\n                          onChange={handleInputChange} \r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}                   \r\n                          >\r\n                          <option value=\"\">Select </option>\r\n                          {dsdModelType.map((value) => (\r\n                              <option key={value.code} value={value.code}>\r\n                                  {value.display}\r\n                              </option>\r\n                          ))}\r\n                          \r\n                      </Input>\r\n                      \r\n                  </FormGroup>\r\n              </div>\r\n              \r\n            </div>  \r\n            <br />\r\n            <MatButton\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              disabled={saving}\r\n              startIcon={<SaveIcon />}\r\n              style={{backgroundColor:\"#014d88\"}}\r\n              onClick={handleSubmit}\r\n            >\r\n              {!saving ? (\r\n                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n              ) : (\r\n                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n              )}\r\n            </MatButton>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClinicVisit;\r\n","import React, {useState, useEffect } from \"react\";\r\n// import { Link } from 'react-router-dom';\r\nimport { Table  } from \"react-bootstrap\";\r\nimport { Input, Label, FormGroup, } from \"reactstrap\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {Icon, List, Label as LabelSui} from 'semantic-ui-react'\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { url as baseUrl,token } from \"./../../../../../api\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\nconst ADR = (props) => {\r\n  const [errors, setErrors] = useState({});\r\n  const classes = useStyles()\r\n  let temp = { ...errors }\r\n  const [prepSideEffect, setPrepSideEffect] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    PrepSideEffect();\r\n  }, []);\r\n       //Get list of PrepSideEffect\r\n       const PrepSideEffect =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/PREP_SIDE_EFFECTS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               //console.log(response.data);\r\n               setPrepSideEffect(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });\r\n       \r\n        }\r\n  const handAdrleInputChange = e => {\r\n    props.setAdrObj ({...props.adrObj,  [e.target.name]: e.target.value});\r\n  }\r\n   //Validations of the forms\r\n   const validate = () => {        \r\n    temp.adr = props.adrObj.adr ? \"\" : \"This field is required\"\r\n    temp.adrOnsetDate = props.adrObj.adrOnsetDate ? \"\" : \"This field is required\"\r\n\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n  const addADR = e => { \r\n    if(validate()){\r\n        props.setAdrList([...props.adrList, props.adrObj])\r\n    }else{\r\n      toast.error(\" Field are required \");\r\n    }\r\n  }\r\n  /* Remove ADR  function **/\r\n  const removeRelativeLocation = index => {       \r\n      props.adrList.splice(index, 1);\r\n      props.setAdrList([...props.adrList]);\r\n     \r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n        <div className=\"row\">\r\n        {props.enableUpdate && (\r\n        <>\r\n        <div className=\"form-group mb-3 col-md-5\">\r\n\r\n            <FormGroup>\r\n            <Label >ADR </Label>\r\n            \r\n              <Input\r\n                  type=\"select\"\r\n                  name=\"adr\"\r\n                  id=\"adr\"\r\n                  value={props.adrObj.adr}\r\n                  onChange={handAdrleInputChange}\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  required\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n                      {prepSideEffect.map((value) => (\r\n                          <option key={value.id} value={value.display}>\r\n                              {value.display}\r\n                          </option>\r\n                      ))}\r\n              </Input>\r\n                {errors.adr !==\"\" ? (\r\n                    <span className={classes.error}>{errors.adr}</span>\r\n                ) : \"\" }\r\n            </FormGroup>\r\n        </div>\r\n        <div className=\"form-group mb-3 col-md-5\">        \r\n        <FormGroup>\r\n            <Label > Onset Date</Label>\r\n            <Input\r\n                type=\"date\"\r\n                name=\"adrOnsetDate\"\r\n                id=\"adrOnsetDate\"\r\n                value={props.adrObj.adrOnsetDate}\r\n                min={props.artStartDate}\r\n                onChange={handAdrleInputChange}\r\n                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                required\r\n                > \r\n            </Input>\r\n            {errors.adrOnsetDate !==\"\" ? (\r\n                <span className={classes.error}>{errors.adrOnsetDate}</span>\r\n            ) : \"\" }\r\n            </FormGroup>\r\n        </div>\r\n        \r\n        <div className=\"form-group mb-3 col-md-2\">\r\n          <LabelSui as='a' color='black'  onClick={addADR}  size='tiny' style={{ marginTop:35}}>\r\n              <Icon name='plus' /> Add\r\n          </LabelSui>\r\n        </div>\r\n        </>)}\r\n        {props.adrList.length >0 \r\n          ?\r\n            <List>\r\n            <Table  striped responsive>\r\n                  <thead >\r\n                      <tr>\r\n                          <th>ADR</th>\r\n                          <th>OnSetDate</th>\r\n                          <th ></th>\r\n                      </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                {props.adrList.map((relative, index) => (\r\n\r\n                  <RelativeList\r\n                      key={index}\r\n                      index={index}\r\n                      relative={relative}\r\n                      removeRelativeLocation={removeRelativeLocation}\r\n                  />\r\n                  ))}\r\n                  </tbody>\r\n                  </Table>\r\n            </List>\r\n            :\r\n            \"\"\r\n        }       \r\n    </div>\r\n    </div>\r\n     \r\n  );\r\n};\r\n\r\nfunction RelativeList({\r\n  relative,\r\n  index,\r\n  removeRelativeLocation,\r\n}) {\r\n\r\n\r\n  return (\r\n          <tr>\r\n              <th>{relative.adr}</th>\r\n              <th>{relative.adrOnsetDate}</th>\r\n              <th></th>\r\n              <th >\r\n                  <IconButton aria-label=\"delete\" size=\"small\" color=\"error\" onClick={() =>removeRelativeLocation(index)}>\r\n                      <DeleteIcon fontSize=\"inherit\" />\r\n                  </IconButton>\r\n                  \r\n              </th>\r\n          </tr> \r\n  );\r\n}\r\n\r\n\r\nexport default ADR;\r\n","import React, { useState } from \"react\";\r\nimport {  Table  } from \"react-bootstrap\";\r\nimport { Input, Label, FormGroup, } from \"reactstrap\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport moment from \"moment\";\r\nimport {Icon, List, Label as LabelSui} from 'semantic-ui-react'\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\nconst ADR = (props) => {\r\n  const [errors, setErrors] = useState({});\r\n  const classes = useStyles()\r\n  let temp = { ...errors }\r\n  const handleInfectionInputChange = e => {\r\n  props.setInfection ({...props.infection,  [e.target.name]: e.target.value});\r\n  }\r\n  //Validations of the forms\r\n  const validate = () => {        \r\n    temp.ondateInfection = props.infection.ondateInfection ? \"\" : \"This field is required\"\r\n    temp.illnessInfection = props.infection.illnessInfection ? \"\" : \"This field is required\"\r\n\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n    const addInfection = e => { \r\n      if(validate()){\r\n        props.setInfectionList([...props.infectionList, props.infection])\r\n      }else{\r\n        toast.error(\" Field are required \");\r\n      }\r\n    \r\n    }\r\n    /* Remove ADR  function **/\r\n    const removeInfection = index => {       \r\n    props.infectionList.splice(index, 1);\r\n    props.setInfectionList([...props.infectionList]);\r\n        \r\n    };\r\n                                            \r\n\r\n  return (\r\n    <div>\r\n       <div className=\"row\">\r\n       {props.enableUpdate && (\r\n        <>\r\n          <div className=\"form-group mb-3 col-md-5\">\r\n              <FormGroup>\r\n              <Label >Onset Date </Label>\r\n              <Input\r\n                  type=\"date\"\r\n                  name=\"ondateInfection\"\r\n                  id=\"ondateInfection\"\r\n                  value={props.infection.ondateInfection}\r\n                  onChange={handleInfectionInputChange}\r\n                  max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  required\r\n                  > \r\n              </Input>\r\n              {errors.ondateInfection !==\"\" ? (\r\n                  <span className={classes.error}>{errors.ondateInfection}</span>\r\n              ) : \"\" }\r\n              </FormGroup>\r\n          </div>\r\n          <div className=\"form-group mb-3 col-md-5\">        \r\n          <FormGroup>\r\n              <Label > Illness</Label>\r\n              <Input\r\n                  type=\"text\"\r\n                  name=\"illnessInfection\"\r\n                  id=\"illnessInfection\"\r\n                  value={props.infection.illnessInfection}\r\n                  onChange={handleInfectionInputChange}\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  required\r\n                  > \r\n              </Input>\r\n              {errors.illnessInfection !==\"\" ? (\r\n                  <span className={classes.error}>{errors.illnessInfection}</span>\r\n              ) : \"\" }\r\n              </FormGroup>\r\n          </div>\r\n          <div className=\"form-group mb-3 col-md-2\">\r\n          <LabelSui as='a' color='black'  onClick={addInfection}  size='tiny' style={{ marginTop:35}}>\r\n              <Icon name='plus' /> Add\r\n          </LabelSui>\r\n          </div>\r\n        </>\r\n        )}\r\n        {props.infectionList.length >0 \r\n          ?\r\n            <List>\r\n            <div style={{padding:'3px 0px'}} >\r\n            <Table  striped responsive size=\"sm\" >\r\n                  <thead  >\r\n                      <tr >\r\n                          <th>Illness</th>\r\n                          <th>OnSetDate</th>\r\n                          <th ></th>\r\n                      </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                {props.infectionList.map((relative, index) => (\r\n\r\n                  <InfectionList\r\n                      key={index}\r\n                      index={index}\r\n                      relative={relative}\r\n                      removeInfection={removeInfection}\r\n                  />\r\n                  ))}\r\n                  </tbody>\r\n                  </Table>\r\n                  </div>\r\n                </List>\r\n                :\r\n                \"\"\r\n            } \r\n    </div>\r\n    </div>\r\n     \r\n  );\r\n};\r\n\r\nfunction InfectionList({\r\n    relative,\r\n    index,\r\n    removeInfection,\r\n  }) {\r\n  \r\n   \r\n    return (\r\n            <tr>\r\n  \r\n                <th>{relative.illnessInfection}</th>\r\n                <th>{relative.ondateInfection}</th>\r\n                <th></th>\r\n                <th >\r\n                    <IconButton aria-label=\"delete\" size=\"small\" color=\"error\" onClick={() =>removeInfection(index)}>\r\n                        <DeleteIcon fontSize=\"inherit\" />\r\n                    </IconButton>\r\n                    \r\n                </th>\r\n            </tr> \r\n    );\r\n  }\r\n\r\nexport default ADR;\r\n","import React, {useState, Fragment, useEffect } from \"react\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport ConsultationPage from './Home';\r\nimport ClinicHistoryPage from \"./ViewUpdate/ClinicHistory\";\r\n\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst ClinicVisitPage = (props) => {\r\n    const [key, setKey] = useState('home');\r\n    const patientObj = props.patientObj\r\n    \r\n    useEffect ( () => {\r\n      setKey(props.activeContent.activeTab)\r\n    }, [props.activeContent.id]);\r\n\r\n\r\n  return (\r\n    <Fragment>  \r\n      <Row>       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n\r\n                  <Tab eventKey=\"home\" title=\"MOTHER FOLLOW UP VISIT \">                   \r\n                    <ConsultationPage patientObj={patientObj} setActiveContent={props.setActiveContent}/>\r\n                  </Tab>  \r\n                  <Tab eventKey=\"history\" title=\" CHILD FOLLOW UP VISIT\">                   \r\n                   <ConsultationPage patientObj={patientObj} setActiveContent={props.setActiveContent}/>\r\n                  </Tab>                   \r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ClinicVisitPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Segment, Label,} from 'semantic-ui-react'\r\n// Page titie\r\nimport { FormGroup, Label as FormLabelName, InputGroup,\r\n          InputGroupText,\r\n          InputGroupButtonDropdown,\r\n          Input,\r\n          DropdownToggle,\r\n          DropdownMenu,\r\n          DropdownItem\r\n        } from \"reactstrap\";\r\nimport ADR from './../ADR/Index'\r\nimport OpportunisticInfection from './../OpportunisticInfection/Index'\r\nimport TBScreening from './../TBScreening/Index'\r\nimport { url as baseUrl, token } from \"../../../../../api\";\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Row, Col,   } from \"react-bootstrap\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { Button as ButtonSMUI, Icon} from 'semantic-ui-react'\r\nimport {Link} from 'react-router-dom';\r\n//import { objectValues } from \"react-toastify/dist/utils\";\r\n\r\n\r\nlet adherenceLevelObj = []\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1)\r\n    }\r\n  },\r\n  input: {\r\n    display: 'none'\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\n\r\n\r\nconst ClinicVisit = (props) => {\r\n  const patientObj = props.patientObj ? props.patientObj : {}\r\n  const [dropdownOpen, setDropdownOpen] = React.useState(false);\r\n  const [splitButtonOpen, setSplitButtonOpen] = React.useState(false);\r\n  const toggleDropDown = () => setDropdownOpen(!dropdownOpen);\r\n  const toggleSplit = () => setSplitButtonOpen(!splitButtonOpen);\r\n  const [visitId, setVisitId]= useState()\r\n  const [enableUpdateButton, setEnableUpdateButton]=useState(false)\r\n  const [heightValue, setHeightValue]= useState(\"cm\")\r\n  const [enableUpdate, setEnableUpdate]= useState(false) //Enable update for all input field if the user have permission\r\n  const [errors, setErrors] = useState({});\r\n  const [clinicVisitList, setClinicVisitList] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  let temp = { ...errors }\r\n  const classes = useStyles()\r\n  // the visit date history \r\n  //end of the visit date history\r\n  const [getPatientObj, setGetPatientObj] = useState({});\r\n  const [saving, setSaving] = useState(false);\r\n  const [clinicalStage, setClinicalStage] = useState([]);\r\n  const [functionalStatus, setFunctionalStatus] = useState([]);\r\n  const [adherenceLevel, setAdherenceLevel] = useState([]);\r\n  const [tbStatus, setTbStatus] = useState([]);\r\n  const [TBForms, setTBForms] = useState(false)\r\n  const [currentVitalSigns, setcurrentVitalSigns] = useState({})\r\n  const [showCurrentVitalSigns, setShowCurrentVitalSigns] = useState(false)\r\n  //opportunistic infection Object\r\n  const [infection, setInfection] = useState({ illnessInfection: \"\", ondateInfection: \"\" });\r\n  const [infectionList, setInfectionList] = useState([]);\r\n  //ADR array Object \r\n  const [adrObj, setAdrObj] = useState({ adr: \"\", adrOnsetDate: \"\" });\r\n  const [adrList, setAdrList] = useState([]);\r\n  //Vital signs clinical decision support \r\n  const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n                                                                    bodyWeight: \"\",\r\n                                                                    diastolic: \"\",\r\n                                                                    height: \"\",\r\n                                                                    systolic: \"\",\r\n                                                                    pulse:\"\",\r\n                                                                    temperature:\"\",\r\n                                                                    respiratoryRate:\"\" \r\n                                                                  })\r\n  const [objValues, setObjValues] = useState({\r\n    adherenceLevel: \"\",\r\n    adheres: {},\r\n    adrScreened: \"\",\r\n    adverseDrugReactions: {},\r\n    artStatusId: \"\" ,\r\n    cd4: \"\",\r\n    cd4Percentage: \"\",\r\n    clinicalNote: \"\",\r\n    clinicalStageId: \"\",\r\n    facilityId: 0,\r\n    functionalStatusId: \"\",\r\n    hivEnrollmentId: \"\",\r\n    nextAppointment: \"\",\r\n    lmpDate: \"\",\r\n    oiScreened: \"\",\r\n    opportunisticInfections: {},\r\n    personId: patientObj.id,\r\n    tbScreen: {},\r\n    stiIds: \"\",\r\n    stiTreated: \"\",\r\n    uuid: \"\",\r\n    visitDate: \"\",\r\n    whoStagingId: \"\"\r\n  });\r\n  const [vital, setVitalSignDto] = useState({\r\n    bodyWeight: \"\",\r\n    diastolic: \"\",\r\n    encounterDate: \"\",\r\n    facilityId: 1,\r\n    height: \"\",\r\n    personId: props.patientObj.id,\r\n    serviceTypeId: 1,\r\n    systolic: \"\",\r\n    pulse:\"\",\r\n    temperature:\"\",\r\n    respiratoryRate:\"\" \r\n  })\r\n  const [tbObj, setTbObj] = useState({\r\n    currentOnIpt: \"\",\r\n    coughing: \"\",\r\n    antiTBDrug: \"\",\r\n    nightSweat: \"\",\r\n    fever: \"\",\r\n    contactWithTBCase: \"\",\r\n    lethergy: \"\",\r\n    tbStatusId: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    FunctionalStatus();\r\n    WhoStaging();\r\n    AdherenceLevel();\r\n    TBStatus();\r\n    VitalSigns()\r\n    GetPatientObj();\r\n    ClinicVisitListHistory();\r\n    if(props.activeContent.id!==null){\r\n     \r\n      GetVisitById(props.activeContent.id)\r\n      setVisitId(props.activeContent.id)\r\n    }\r\n  }, []);\r\n     //GET LIST Drug Refill\r\n     async function ClinicVisitListHistory() {\r\n      setLoading(true)\r\n      axios\r\n          .get(`${baseUrl}hiv/art/clinic-visit/person?pageNo=0&pageSize=10&personId=${props.patientObj.id}`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n          )\r\n          .then((response) => {\r\n              setLoading(false)\r\n              setClinicVisitList(response.data.filter((x)=> x.isCommencement!==true));              \r\n          })\r\n          .catch((error) => {  \r\n              setLoading(false)  \r\n          });        \r\n    }\r\n  //Check for the last Vital Signs\r\n  const VitalSigns = () => {\r\n    axios\r\n      .get(`${baseUrl}patient/vital-sign/person/${props.patientObj.id}`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n\r\n        const lastVitalSigns = response.data[response.data.length - 1]\r\n        if (lastVitalSigns.encounterDate === moment(new Date()).format(\"YYYY-MM-DD\") === true) {\r\n          setcurrentVitalSigns(lastVitalSigns)\r\n          setShowCurrentVitalSigns(true)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n    //Get The updated patient objeect\r\n    const GetPatientObj = () => {\r\n      axios\r\n        .get(`${baseUrl}hiv/patients`,\r\n          { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n          const patObJ= response.data.filter((x)=> x.id===props.patientObj.id)\r\n\r\n          setGetPatientObj(patObJ[0])\r\n        })\r\n        .catch((error) => {\r\n          //console.log(error);\r\n        });\r\n    }\r\n\r\n  //Get list of WhoStaging\r\n  const WhoStaging = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/CLINICAL_STAGE`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setClinicalStage(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n  ///GET LIST OF FUNCTIONAL%20_STATUS\r\n  // TB STATUS\r\n  const TBStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setTbStatus(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n\r\n  async function FunctionalStatus() {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/FUNCTIONAL%20_STATUS`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n\r\n        setFunctionalStatus(response.data);\r\n        //setValues(response.data)\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  ///Level of Adherence\r\n  async function AdherenceLevel() {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_LEVEL_OF_ADHERENCE`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setAdherenceLevel(response.data);\r\n\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  const handleInputChange = e => {\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    if (e.target.name === \"whoStagingId\") {\r\n      if (e.target.value === \"NO\") {\r\n        setTBForms(true)\r\n      } else {\r\n        setTBForms(false)\r\n      }\r\n    }\r\n  }\r\n  const handleInputChangeVitalSignDto = e => {\r\n    setVitalSignDto({ ...vital, [e.target.name]: e.target.value });\r\n  }\r\n\r\n  //Handle CheckBox \r\n  const handleCheckBox = e => {\r\n    if (e.target.checked) {\r\n      //currentVitalSigns.personId === null ? props.patientObj.id : currentVitalSigns.personId\r\n      setVitalSignDto({ ...currentVitalSigns })\r\n    } else {\r\n      setVitalSignDto({\r\n        bodyWeight: \"\",\r\n        diastolic: \"\",\r\n        encounterDate: \"\",\r\n        facilityId: \"\",\r\n        height: \"\",\r\n        personId: props.patientObj.id,\r\n        serviceTypeId: \"\",\r\n        systolic: \"\",\r\n        pulse:\"\",\r\n        temperature:\"\",\r\n        respiratoryRate:\"\" \r\n      })\r\n    }\r\n  }\r\n  //to check the input value for clinical decision \r\n  const handleInputValueCheckHeight =(e)=>{\r\n    if(e.target.name===\"height\" && (e.target.value < 48.26 || e.target.value>216.408)){\r\n      const message =\"Height cannot be greater than 216.408 and less than 48.26\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, height:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, height:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckBodyWeight =(e)=>{\r\n    if(e.target.name===\"bodyWeight\" && (e.target.value < 3 || e.target.value>150)){      \r\n      const message =\"Body weight must not be greater than 150 and less than 3\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckSystolic =(e)=>{\r\n    if(e.target.name===\"systolic\" && (e.target.value < 90 || e.target.value>240)){      \r\n      const message =\"Blood Pressure systolic must not be greater than 240 and less than 90\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckDiastolic =(e)=>{\r\n    if(e.target.name===\"diastolic\" && (e.target.value < 60 || e.target.value>140)){      \r\n      const message =\"Blood Pressure diastolic must not be greater than 140 and less than 60\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckPulse =(e)=>{\r\n    if(e.target.name===\"pulse\" && (e.target.value < 40 || e.target.value>120)){      \r\n    const message =\"Pulse must not be greater than 120 and less than 40\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:\"\"})\r\n    }\r\n}\r\nconst handleInputValueCheckRespiratoryRate =(e)=>{\r\n    if(e.target.name===\"respiratoryRate\" && (e.target.value < 10 || e.target.value>70)){      \r\n    const message =\"Respiratory Rate must not be greater than 70 and less than 10\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:\"\"})\r\n    }\r\n}\r\nconst handleInputValueCheckTemperature =(e)=>{\r\n    if(e.target.name===\"temperature\" && (e.target.value < 35 || e.target.value>47)){      \r\n    const message =\"Temperature must not be greater than 47 and less than 35\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, temperature:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, temperature:\"\"})\r\n    }\r\n}\r\n  //Validations of the forms\r\n  const validate = () => {        \r\n    temp.encounterDate = vital.encounterDate ? \"\" : \"This field is required\"\r\n    temp.nextAppointment = objValues.nextAppointment ? \"\" : \"This field is required\"\r\n    temp.whoStagingId = objValues.whoStagingId ? \"\" : \"This field is required\"\r\n    temp.clinicalNote = objValues.clinicalNote ? \"\" : \"This field is required\"\r\n    temp.functionalStatusId = objValues.functionalStatusId ? \"\" : \"This field is required\"\r\n    temp.adherenceLevel = objValues.adherenceLevel ? \"\" : \"This field is required\"\r\n    temp.labTestGroupId = vital.diastolic ? \"\" : \"This field is required\"\r\n    temp.systolic = vital.systolic ? \"\" : \"This field is required\"\r\n    temp.height = vital.height ? \"\" : \"This field is required\"\r\n    temp.bodyWeight = vital.bodyWeight ? \"\" : \"This field is required\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n\r\n  const  heightFunction =(e)=>{\r\n    if(e==='cm'){\r\n        setHeightValue('cm')\r\n        if(vital.height!==\"\"){\r\n            const newHeightValue= (vital.height * 100)\r\n            setVitalSignDto ({...vital,  height: newHeightValue});\r\n        }\r\n    }else if(e==='m'){\r\n        setHeightValue('m')\r\n        if(vital.height!==\"\"){\r\n            const newHeightValue= (vital.height/100)\r\n            setVitalSignDto ({...vital,  height: newHeightValue});\r\n        }\r\n        \r\n    }\r\n\r\n  }\r\n  /**** Submit Button Processing  */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(validate()){\r\n    setSaving(true)\r\n    objValues.visitDate = vital.encounterDate\r\n    objValues.adverseDrugReactions = adrList\r\n    objValues.artStatusId = getPatientObj.artCommence.id\r\n    objValues.hivEnrollmentId = getPatientObj.enrollment.id\r\n    objValues.opportunisticInfections = infectionList\r\n    objValues.tbScreen = tbObj\r\n    objValues['vitalSignDto'] = vital\r\n    axios.put(`${baseUrl}hiv/art/clinic-visit/${visitId}`, objValues,\r\n      { headers: { \"Authorization\": `Bearer ${token}` } },\r\n\r\n    )\r\n      .then(response => {\r\n        setSaving(false);\r\n        toast.success(\"Clinic Visit updated successful\");\r\n        //GetVisitById(visitId)\r\n        //props.setActiveContent({...props.activeContent, route:'consultation', id:\"\", activeTab:\"history\", actionType:\"view\", obj:{}})\r\n      })\r\n      .catch(error => {\r\n        setSaving(false);\r\n        if(error.response && error.response.data){\r\n          let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        }\r\n        else{\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n       \r\n      });\r\n    }\r\n  }\r\n  //Get visit by ID\r\n  async function GetVisitById(visitID) {\r\n    axios\r\n      .get(`${baseUrl}hiv/art/clinic-visit/${visitID}`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n          const e = response.data\r\n          setVitalSignDto({ ...e.vitalSignDto })\r\n          objValues.clinicalNote = e.clinicalNote\r\n          objValues.functionalStatusId= e.functionalStatusId\r\n          objValues.whoStagingId= e.whoStagingId \r\n          objValues.nextAppointment= e.nextAppointment\r\n          objValues.adherenceLevel = e.adherenceLevel\r\n          setTbObj({...e.tbScreen})\r\n          setAdrList([...e.adverseDrugReactions])\r\n          setInfectionList([...e.opportunisticInfections])\r\n\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  const getVisitDetail=(e)=>{\r\n      setEnableUpdateButton(true)\r\n      setVisitId(e.id)\r\n      GetVisitById(e.id)      \r\n  }\r\n  const EnableUpdateAction =()=>{\r\n\r\n      setEnableUpdate(true)\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n        <div className=\"row\">\r\n            <div className=\"col-xl-3 col-xxl-3 col-lg-3\" >\r\n                <div className=\"card\" style={{ height: \"500px\" }}>\r\n                    <div className=\"card-header  border-0 pb-2\" style={{backgroundColor:\"#014D88\"}}>\r\n                    <h4 className=\"card-title\" style={{color:\"#fff\"}}> Clinic Visits</h4>\r\n                    </div>\r\n                    <div className=\"card-body\" >\r\n                    <PerfectScrollbar\r\n                        style={{ height: \"370px\" }}\r\n                        id=\"DZ_W_Todo1\"\r\n                        className=\"widget-media dz-scroll ps ps--active-y\"\r\n                    >\r\n                    {clinicVisitList.map((visit,index)=>(\t\r\n                    <div className=\"media pb-3 border-bottom mb-0 align-items-center\" key={index}>\t\t\t\t\t\t\t\t\r\n                      <div className=\"media-body\">\r\n                            <ButtonSMUI\r\n                                color='black'\r\n                                content='Visit Date'\r\n                                icon='calendar alternate'\r\n                                onClick={()=>getVisitDetail(visit)}\r\n                                label={{ basic: true, color: 'grey', pointing: 'left', content: `${visit.visitDate}` }}\r\n                            />\r\n                      </div>\r\n                    </div>\r\n\t\t\t\t\t\t))}\r\n                    </PerfectScrollbar>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"col-xl-9 col-xxl-9 col-lg-9\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header  border-0 pb-2\" style={{backgroundColor:\"#014D88\"}}>\r\n                    <h4 className=\"card-title\" style={{color:\"#fff\"}}> </h4>\r\n                    {enableUpdateButton && (\r\n                    <ButtonSMUI color='facebook' onClick={()=>EnableUpdateAction()} >\r\n                      <Icon name='edit' /> Edit Visit \r\n                    </ButtonSMUI>\r\n                    )}\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                    <Grid columns='equal'>\r\n                    <Grid.Column >\r\n                    <Segment>\r\n                    <Label as='a' color='black' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}> Visit Date - {vital.encounterDate}</h4>\r\n                        </Label>\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <FormLabelName >Date of Visit *</FormLabelName>\r\n                            <Input\r\n                                type=\"date\"\r\n                                name=\"encounterDate\"\r\n                                id=\"encounterDate\"\r\n                                value={vital.encounterDate}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            />\r\n                            {errors.encounterDate !==\"\" ? (\r\n                                <span className={classes.error}>{errors.encounterDate}</span>\r\n                            ) : \"\" }\r\n\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n\r\n                        </div>\r\n                        <div className=\"row\">\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Pulse</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"pulse\"\r\n                                id=\"pulse\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"40\"\r\n                                max=\"120\"\r\n                                value={vital.pulse}\r\n                                onKeyUp={handleInputValueCheckPulse} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.pulse !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.pulse}</span>\r\n                        ) : \"\"}\r\n                        {errors.pulse !==\"\" ? (\r\n                            <span className={classes.error}>{errors.pulse}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Respiratory Rate </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"respiratoryRate\"\r\n                                id=\"respiratoryRate\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"10\"\r\n                                max=\"70\"\r\n                                value={vital.respiratoryRate}\r\n                                onKeyUp={handleInputValueCheckRespiratoryRate} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.respiratoryRate !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.respiratoryRate}</span>\r\n                        ) : \"\"}\r\n                        {errors.respiratoryRate !==\"\" ? (\r\n                            <span className={classes.error}>{errors.respiratoryRate}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Temperature </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"temperature\"\r\n                                id=\"temperature\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"35\"\r\n                                max=\"47\"\r\n                                value={vital.temperature}\r\n                                onKeyUp={handleInputValueCheckTemperature} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                <sup>o</sup>c\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.temperature !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.temperature}</span>\r\n                        ) : \"\"}\r\n                        {errors.temperature !==\"\" ? (\r\n                            <span className={classes.error}>{errors.temperature}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Body Weight</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"bodyWeight\"\r\n                                id=\"bodyWeight\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"3\"\r\n                                max=\"150\"\r\n                                value={vital.bodyWeight}\r\n                                onKeyUp={handleInputValueCheckBodyWeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                kg\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.bodyWeight !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.bodyWeight}</span>\r\n                        ) : \"\"}\r\n                        {errors.bodyWeight !==\"\" ? (\r\n                            <span className={classes.error}>{errors.bodyWeight}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>                                   \r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Height</FormLabelName>\r\n                        <InputGroup> \r\n                        <InputGroupText\r\n                                addonType=\"append\"\r\n                                isOpen={dropdownOpen}\r\n                                toggle={toggleDropDown}\r\n                                style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                cm\r\n                        </InputGroupText>\r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"height\"\r\n                                id=\"height\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                value={vital.height}\r\n                                min=\"48.26\"\r\n                                max=\"216.408\"\r\n                                onKeyUp={handleInputValueCheckHeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                                <InputGroupText\r\n                                addonType=\"append\"\r\n                                isOpen={dropdownOpen}\r\n                                toggle={toggleDropDown}\r\n                                style={{ backgroundColor:\"#992E62\", color:\"#fff\", border: \"1px solid #992E62\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                {vital.height!=='' ? (vital.height/100).toFixed(2) + \"m\" : \"m\"}\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.height !==\"\" ? (\r\n                            <span className={classes.error}>{vitalClinicalSupport.height}</span>\r\n                        ) : \"\"}\r\n                        {errors.height !==\"\" ? (\r\n                            <span className={classes.error}>{errors.height}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 mt-2 col-md-4\">\r\n                        {vital.bodyWeight!==\"\" && vital.height!=='' && (\r\n                            <FormGroup>\r\n                            <Label > {\" \"}</Label>\r\n                            <InputGroup> \r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                BMI : {Math.round(vital.bodyWeight/((vital.height * vital.height)/100))}\r\n                            </InputGroupText>                   \r\n                           \r\n                            </InputGroup>                \r\n                            </FormGroup>\r\n                        )}\r\n                    </div>\r\n              </div>\r\n              <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-8\">\r\n                  <FormGroup>\r\n                  <FormLabelName >Blood Pressure</FormLabelName>\r\n                  <InputGroup>\r\n                  <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                          systolic(mmHg)\r\n                  </InputGroupText> \r\n                      <Input \r\n                          type=\"number\"\r\n                          name=\"systolic\"\r\n                          id=\"systolic\"\r\n                          min=\"90\"\r\n                          max=\"240\"\r\n                          onChange={handleInputChangeVitalSignDto}\r\n                          value={vital.systolic}\r\n                          onKeyUp={handleInputValueCheckSystolic}\r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}} \r\n                      />\r\n                      <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                      diastolic(mmHg)\r\n                      </InputGroupText>\r\n                          <Input \r\n                          type=\"number\"\r\n                          name=\"diastolic\"\r\n                          id=\"diastolic\"\r\n                          min={0}\r\n                          max={140}\r\n                          onChange={handleInputChangeVitalSignDto}\r\n                          value={vital.diastolic}\r\n                          onKeyUp={handleInputValueCheckDiastolic} \r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                          />\r\n                      \r\n                      \r\n                  </InputGroup>\r\n                  {vitalClinicalSupport.systolic !==\"\" ? (\r\n                  <span className={classes.error}>{vitalClinicalSupport.systolic}</span>\r\n                  ) : \"\"}\r\n                  {errors.systolic !==\"\" ? (\r\n                      <span className={classes.error}>{errors.systolic}</span>\r\n                  ) : \"\" }  \r\n                  {vitalClinicalSupport.diastolic !==\"\" ? (\r\n                  <span className={classes.error}>{vitalClinicalSupport.diastolic}</span>\r\n                  ) : \"\"}\r\n                  {errors.diastolic !==\"\" ? (\r\n                      <span className={classes.error}>{errors.diastolic}</span>\r\n                  ) : \"\" }          \r\n                  </FormGroup>\r\n              </div>\r\n\r\n              </div>\r\n                        </div>\r\n                        <Label as='a' color='grey' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>CONSULTATION</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n\r\n                        <div className=\" mb-3\">\r\n                        <FormLabelName >Clinical Notes</FormLabelName>\r\n                        <textarea\r\n                            name=\"clinicalNote\"\r\n                            className=\"form-control\"\r\n                            value={objValues.clinicalNote}\r\n                            onChange={handleInputChange}\r\n                            style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                            disabled={!enableUpdate}\r\n                        ></textarea>\r\n                        {errors.clinicalNote !==\"\" ? (\r\n                                <span className={classes.error}>{errors.clinicalNote}</span>\r\n                            ) : \"\" }\r\n                        </div>\r\n                        <div className=\"row\">\r\n\r\n                        <div className=\" mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <FormLabelName >WHO Staging *</FormLabelName>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"whoStagingId\"\r\n                                id=\"whoStagingId\"\r\n                                value={objValues.whoStagingId}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            >\r\n                                <option value=\"select\">Select </option>\r\n\r\n                                {clinicalStage.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                                ))}\r\n                            </Input>\r\n                            {errors.whoStagingId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.whoStagingId}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\" mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <FormLabelName >Functional Status *</FormLabelName>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"functionalStatusId\"\r\n                                id=\"functionalStatusId\"\r\n                                value={objValues.functionalStatusId}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            >\r\n                                <option value=\"select\">Select </option>\r\n\r\n                                {functionalStatus.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                                ))}\r\n                            </Input>\r\n                            {errors.functionalStatusId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.functionalStatusId}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\" mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <FormLabelName >Level of Adherence *</FormLabelName>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"adherenceLevel\"\r\n                                id=\"adherenceLevel\"\r\n                                value={objValues.adherenceLevel}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            >\r\n                                <option value=\"\">Select </option>\r\n\r\n                                {adherenceLevel.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                                ))}\r\n                            </Input>\r\n                            {errors.adherenceLevel !==\"\" ? (\r\n                                <span className={classes.error}>{errors.adherenceLevel}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n\r\n                        </div>\r\n                        <br />\r\n                        <Label as='a' color='red' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>OPPORTUNISTIC INFECTION</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n                        <OpportunisticInfection setInfection={setInfection} infection={infection} setInfectionList={setInfectionList} infectionList={infectionList} enableUpdate={enableUpdate}/>\r\n                        <br />\r\n                        <Label as='a' color='pink' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>ADR</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n                        <ADR setAdrObj={setAdrObj} adrObj={adrObj} setAdrList={setAdrList} adrList={adrList}  enableUpdate={enableUpdate}/>\r\n                        <br />\r\n                        <Label as='a' color='teal' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>TB SCREENING</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n                        {/* TB Screening Form */}\r\n                        <TBScreening tbObj={tbObj} setTbObj={setTbObj} enableUpdate={enableUpdate}/>\r\n                        <br />\r\n                        <Label as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>NEXT CLINICAL APPOINTMENT DATE</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n                        {/* TB Screening Form */}\r\n                        <Input\r\n                                type=\"date\"\r\n                                name=\"nextAppointment\"\r\n                                id=\"nextAppointment\"\r\n                                className=\"col-md-6\"\r\n                                value={objValues.nextAppointment}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                min={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            />\r\n                        {errors.nextAppointment !==\"\" ? (\r\n                                <span className={classes.error}>{errors.nextAppointment}</span>\r\n                            ) : \"\" }\r\n                        <br />\r\n                        <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        disabled={saving}\r\n                        startIcon={<SaveIcon />}\r\n                        style={{backgroundColor:\"#014d88\"}}\r\n                        onClick={handleSubmit}\r\n                        hidden={!enableUpdate}\r\n                        >\r\n                        {!saving ? (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                        ) : (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                        )}\r\n                        </MatButton>\r\n                    </Segment>\r\n                    </Grid.Column>\r\n\r\n                </Grid>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    </div>    \r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClinicVisit;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Card,CardBody, FormGroup, Label, Input, InputGroup,InputGroupText} from 'reactstrap';\r\nimport {Label as FormLabelName, } from \"reactstrap\";\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\nimport {Message } from 'semantic-ui-react'\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\nconst AncPnc = (props) => {\r\n    const patientObj = props.patientObj;\r\n    console.log(patientObj)\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    //const [values, setValues] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const [enroll, setEnrollDto]= useState({\r\n\r\n                    agreed2PartnerNotification: \"\",\r\n                    ancNo: patientObj.ancNo,\r\n                    bodyWeight: \"\",\r\n                    diastolic: \"\",\r\n                    fetalPresentation: \"\",\r\n                    fpl: \"\",\r\n                    fundalHeight: \"\",\r\n                    id: \"\",\r\n                    infantFeeding: \"\",\r\n                    nextAppointmentDate: \"\",\r\n                    nutritionalSupport: \"\",\r\n                    pmtctEnrollmentDate: \"\",\r\n                    referredTo: \"\",\r\n                    systolic: \"\",\r\n                    tbStatus: \"\",\r\n                    viralLoadSample: \"\",\r\n                    viralLoadSampleDate: \"\",\r\n                    visitStatus: \"\",\r\n                    visitType: \"\"\r\n    })\r\n    \r\n    const handleInputChangeEnrollmentDto = e => {            \r\n        setEnrollDto ({...enroll,  [e.target.name]: e.target.value});\r\n    }\r\n\r\n    //FORM VALIDATION\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        //temp.name = details.name ? \"\" : \"This field is required\"\r\n        //temp.description = details.description ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Vital signs clinical decision support \r\n  const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n    bodyWeight: \"\",\r\n    diastolic: \"\",\r\n    fundalHeight: \"\",\r\n    systolic: \"\",\r\n  })\r\n     //to check the input value for clinical decision \r\n  const handleInputValueCheckHeight =(e)=>{\r\n    if(e.target.name===\"fundalHeight\" && (e.target.value < 48.26 || e.target.value>216.408)){\r\n      const message =\"Height cannot be greater than 216.408 and less than 48.26\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, fundalHeight:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, fundalHeight:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckBodyWeight =(e)=>{\r\n    if(e.target.name===\"bodyWeight\" && (e.target.value < 3 || e.target.value>150)){      \r\n      const message =\"Body weight must not be greater than 150 and less than 3\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckSystolic =(e)=>{\r\n    if(e.target.name===\"systolic\" && (e.target.value < 90 || e.target.value>240)){      \r\n      const message =\"Blood Pressure systolic must not be greater than 240 and less than 90\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckDiastolic =(e)=>{\r\n    if(e.target.name===\"diastolic\" && (e.target.value < 60 || e.target.value>140)){      \r\n      const message =\"Blood Pressure diastolic must not be greater than 140 and less than 60\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckPulse =(e)=>{\r\n    if(e.target.name===\"pulse\" && (e.target.value < 40 || e.target.value>120)){      \r\n    const message =\"Pulse must not be greater than 120 and less than 40\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:\"\"})\r\n    }\r\n  }      \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();        \r\n        \r\n        setSaving(true);\r\n        axios.post(`${baseUrl}pmtct/anc/pmtct-enrollment`, enroll,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n        \r\n        )\r\n            .then(response => {\r\n                setSaving(false);\r\n                //props.patientObj.commenced=true\r\n                toast.success(\"Enrollment save successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                toast.error(\"Something went wrong\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                \r\n            });\r\n        \r\n    }\r\n\r\n    function BmiCal (bmi){\r\n        if(bmi<18.5){\r\n          return (\r\n            <Message        \r\n             size='mini'\r\n             color='brown'\r\n              content='Underweight'\r\n            />\r\n          )      \r\n        }else if(bmi >=18.5 && bmi<=24.9){\r\n          <Message        \r\n             size='mini'\r\n             color='olive'\r\n              content='Well nourished'\r\n            />\r\n        }\r\n        else if( bmi>25){\r\n          <Message        \r\n             size='mini'\r\n             color='blue'\r\n              content='Overweight/Obese'\r\n            />\r\n        }\r\n        \r\n      }\r\n\r\n  return (      \r\n      <div >\r\n                   \r\n        <Card className={classes.root}>\r\n            <CardBody>\r\n            <form >\r\n                <div className=\"row\">\r\n                <h2>PMTCT Enrollment</h2>\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >ANC ID *</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"ancNo\"\r\n                                    id=\"ancNo\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={patientObj.ancNo} \r\n                                    disabled\r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date of Enrollment</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"pmtctEnrollmentDate\"\r\n                                    id=\"pmtctEnrollmentDate\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.pmtctEnrollmentDate} \r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-12\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Blood Pressure</FormLabelName>\r\n                        <InputGroup>\r\n                        <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                systolic(mmHg)\r\n                        </InputGroupText> \r\n                            <Input \r\n                                type=\"text\"\r\n                                name=\"systolic\"\r\n                                id=\"systolic\"\r\n                                min=\"90\"\r\n                                max=\"240\"\r\n                                onChange={handleInputChangeEnrollmentDto}\r\n                                value={enroll.systolic}\r\n                                onKeyUp={handleInputValueCheckSystolic}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}} \r\n                            />\r\n                            \r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                            diastolic(mmHg)\r\n                            </InputGroupText>\r\n                            \r\n                                <Input \r\n                                type=\"text\"\r\n                                name=\"diastolic\"\r\n                                id=\"diastolic\"\r\n                                min={0}\r\n                                max={140}\r\n                                onChange={handleInputChangeEnrollmentDto}\r\n                                value={enroll.diastolic}\r\n                                onKeyUp={handleInputValueCheckDiastolic} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                />\r\n                            \r\n                            \r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.systolic !==\"\" ? (\r\n                            <span className={classes.error}>{vitalClinicalSupport.systolic}</span>\r\n                            ) : \"\"}\r\n                            {errors.systolic !==\"\" ? (\r\n                                <span className={classes.error}>{errors.systolic}</span>\r\n                            ) : \"\" }  \r\n                            {vitalClinicalSupport.diastolic !==\"\" ? (\r\n                            <span className={classes.error} >{vitalClinicalSupport.diastolic}</span>\r\n                            ) : \"\"}\r\n                            {errors.diastolic !==\"\" ? (\r\n                                <span className={'float-end'}><span className={classes.error} >{errors.diastolic}</span></span>\r\n                            ) : \"\" }       \r\n                        </FormGroup>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"row\">                  \r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Body Weight</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"text\"\r\n                                name=\"bodyWeight\"\r\n                                id=\"bodyWeight\"\r\n                                onChange={handleInputChangeEnrollmentDto}\r\n                                min=\"3\"\r\n                                max=\"150\"\r\n                                value={enroll.bodyWeight}\r\n                                onKeyUp={handleInputValueCheckBodyWeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                kg\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.bodyWeight !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.bodyWeight}</span>\r\n                        ) : \"\"}\r\n                        {errors.bodyWeight !==\"\" ? (\r\n                            <span className={classes.error}>{errors.bodyWeight}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>                                   \r\n                    <div className=\"form-group mb-3 col-md-5\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Fundal Height</FormLabelName>\r\n                        <InputGroup> \r\n                        <InputGroupText\r\n                                addonType=\"append\"\r\n                                \r\n                                style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                cm\r\n                        </InputGroupText>\r\n                            <Input \r\n                                type=\"text\"\r\n                                name=\"fundalHeight\"\r\n                                id=\"fundalHeight\"\r\n                                onChange={handleInputChangeEnrollmentDto}\r\n                                value={enroll.fundalHeight}\r\n                                min=\"48.26\"\r\n                                max=\"216.408\"\r\n                                onKeyUp={handleInputValueCheckHeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                                <InputGroupText\r\n                                addonType=\"append\"\r\n                               \r\n                                style={{ backgroundColor:\"#992E62\", color:\"#fff\", border: \"1px solid #992E62\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                {enroll.fundalHeight!=='' && enroll.fundalHeight!=='NaN' ? (enroll.fundalHeight/100).toFixed(2) + \"m\" : \"m\"}\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.fundalHeight !==\"\" ? (\r\n                            <span className={classes.error}>{vitalClinicalSupport.fundalHeight}</span>\r\n                        ) : \"\"}\r\n                        {errors.fundalHeight !==\"\" ? (\r\n                            <span className={classes.error}>{errors.fundalHeight}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 mt-2 col-md-3\">\r\n                        {enroll.bodyWeight!==\"\" && enroll.fundalHeight!=='' && (\r\n                            <FormGroup>\r\n                            <Label > {\" \"}</Label>\r\n                            <InputGroup> \r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                BMI : {(enroll.bodyWeight/(((enroll.fundalHeight/100) * (enroll.fundalHeight/100)))).toFixed(2)}\r\n                            </InputGroupText>                   \r\n                           \r\n                            </InputGroup>                \r\n                            </FormGroup>\r\n                        )}\r\n                    </div>\r\n                    {enroll.bodyWeight!=='' && enroll.fundalHeight!=='' && (\r\n                      <div className=\"form-group mb-3 mt-2 col-md-12\">\r\n                            {\r\n                              BmiCal((enroll.bodyWeight/(((enroll.fundalHeight/100) * (enroll.fundalHeight/100)))).toFixed(2))\r\n                            }\r\n                      </div>\r\n                     )}\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Fetal Presentation</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"fetalPresentation\"\r\n                                    id=\"fetalPresentation\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.fetalPresentation} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Gestational Age(weeks) *</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"gAge\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Type of Visit</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"visitType\"\r\n                                    id=\"visitType\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.visitType} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Visit Status</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"visitStatus\"\r\n                                    id=\"visitStatus\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.visitStatus} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Viral Load Sample Collected?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"viralLoadSample\"\r\n                                    id=\"viralLoadSample\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.viralLoadSample} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date Sample Collected*</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"viralLoadSampleDate\"\r\n                                    id=\"viralLoadSampleDate\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.viralLoadSampleDate} \r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >TB Status</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"tbStatus\"\r\n                                    id=\"tbStatus\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.tbStatus} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date of next appointment*</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"nextAppointmentDate\"\r\n                                    id=\"nextAppointmentDate\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.nextAppointmentDate} \r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <hr/>\r\n                    <h3>Counseling/Other Services Provided</h3>\r\n                    <hr/>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Nutritional Support</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"nutritionalSupport\"\r\n                                    id=\"nutritionalSupport\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.nutritionalSupport} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Infant Feeding</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"infantFeeding\"\r\n                                    id=\"infantFeeding\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.infantFeeding} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Family Planing Method Used</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"fpl\"\r\n                                    id=\"fpl\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.fpl} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Referred to</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"referredTo\"\r\n                                    id=\"referredTo\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.referredTo} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <hr/>\r\n                    <h3>Partner Information</h3>\r\n                    <hr/>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Agreed to partner notification</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"agreed2PartnerNotification\"\r\n                                    id=\"agreed2PartnerNotification\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.agreed2PartnerNotification} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                </div>\r\n                \r\n                {saving ? <Spinner /> : \"\"}\r\n            <br />\r\n            \r\n            <MatButton\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            startIcon={<SaveIcon />}\r\n            onClick={handleSubmit}\r\n            >\r\n                {!saving ? (\r\n                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                ) : (\r\n                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                )}\r\n            </MatButton>\r\n            \r\n            <MatButton\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                startIcon={<CancelIcon />}\r\n                \r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n            </MatButton>\r\n            \r\n                </form>\r\n            </CardBody>\r\n        </Card> \r\n                  \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AncPnc;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Card,CardBody, FormGroup, Label, Input, InputGroup} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\nconst AncEnrollement = (props) => {\r\n    const patientObj = props.patientObj;\r\n    console.log(patientObj)\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    //const [values, setValues] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const [vital, setVitalSignDto]= useState({\r\n\r\n                                                bodyWeight: \"\",\r\n                                                diastolic: \"\",\r\n                                                encounterDate: \"\",\r\n                                                facilityId: 1,\r\n                                                height: \"\",\r\n                                                personId: \"\",\r\n                                                pulse: \"\",\r\n                                                respiratoryRate: \"\",\r\n                                                systolic:\"\",\r\n                                                temperature: \"\",\r\n                                                visitId:\"\"\r\n                                            })\r\n    \r\n        const handleInputChangeVitalSignDto = e => {            \r\n            setVitalSignDto ({...vital,  [e.target.name]: e.target.value});\r\n        }\r\n\r\n        //FORM VALIDATION\r\n        const validate = () => {\r\n            let temp = { ...errors }\r\n            //temp.name = details.name ? \"\" : \"This field is required\"\r\n            //temp.description = details.description ? \"\" : \"This field is required\"\r\n            setErrors({\r\n                ...temp\r\n                })    \r\n            return Object.values(temp).every(x => x == \"\")\r\n        }\r\n          \r\n        /**** Submit Button Processing  */\r\n        const handleSubmit = (e) => {        \r\n            e.preventDefault();        \r\n            \r\n            setSaving(true);\r\n            axios.post(`${baseUrl}patient/vital-sign/`, vital,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  props.patientObj.commenced=true\r\n                  toast.success(\"Vital signs save successful\");\r\n                  props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n                 \r\n              });\r\n          \r\n        }\r\n\r\n  return (      \r\n      <div >\r\n                   \r\n        <Card className={classes.root}>\r\n            <CardBody>\r\n            <form >\r\n                <div className=\"row\">\r\n                <h2>ANC Enrollment</h2>\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >ANC No *</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date of 1st ANC *</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Gravida</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"number\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Parity</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"number\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date Of Last Menstrual Period* </Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Expected Date Of Delivery </Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"Date\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Gestational Age (Weeks)</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Time of HIV Diagnosis</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Source of Referral</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    \r\n                    <h3>Syphilis Information</h3>\r\n                    <hr/>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Tested for syphilis?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Test Result</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Treated for Syphilis</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Referred for syphilis treatment</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <h3>PMTCT HTS</h3>\r\n                    <hr/>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Previously known HIV positive?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date tested HIV positive</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Accepted HIV Testing?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >HIV test result</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >HIV Restesting?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Received HIV test result?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    \r\n                    <h3>Hepatitis Information</h3>\r\n                    <hr/>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Tested for Hepatitis B</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Hepatitis B test result</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Tested for Hepatitis C</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Hepatitis C test result</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <h3>Partner Notification</h3>\r\n                    <hr/>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Agreed to partner notification?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                >\r\n                                    <option value=\"\">Select</option>\r\n                                </Input>\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Partner's HIV status</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                >\r\n                                    <option value=\"\">Select</option>\r\n                                </Input>\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Partner referred to?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                >\r\n                                    <option value=\"\">Select</option>\r\n                                </Input>\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                </div>\r\n                \r\n                {saving ? <Spinner /> : \"\"}\r\n            <br />\r\n            \r\n            <MatButton\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            startIcon={<SaveIcon />}\r\n            onClick={handleSubmit}\r\n            >\r\n                {!saving ? (\r\n                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                ) : (\r\n                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                )}\r\n            </MatButton>\r\n            \r\n            <MatButton\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                startIcon={<CancelIcon />}\r\n                \r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n            </MatButton>\r\n            \r\n                </form>\r\n            </CardBody>\r\n        </Card> \r\n                  \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AncEnrollement;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Card,CardBody, FormGroup, Label, Input, InputGroup} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\nconst LabourDelivery = (props) => {\r\n    const patientObj = props.patientObj;\r\n    //let history = useHistory();\r\n    const classes = useStyles()\r\n    const [delieryMode, setDelieryMode] = useState([]);\r\n    const [feedingDecision, setfeedingDecision] = useState([]);\r\n    const [maternalOutCome, setmaternalOutCome] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [childStatus, setChildStatus] = useState([]);\r\n    const [bookingStatus, setBookingStatus] = useState([]);\r\n    const [delivery, setDelivery]= useState({\r\n\r\n                ancNo: patientObj.ancNo,\r\n                artStartedLdWard: \"\",\r\n                bookingStatus: \"\",\r\n                childGivenArvWithin72: \"\",\r\n                childStatus: \"\",\r\n                dateOfDelivery: \"\",\r\n                deliveryTime: \"\",\r\n                episiotomy: \"\",\r\n                feedingDecision: \"\",\r\n                gaweeks: \"\",\r\n                hbstatus: \"\",\r\n                hcstatus: \"\",\r\n                hivExposedInfantGivenHbWithin24hrs: \"\",\r\n                maternalOutcome: \"\",\r\n                modeOfDelivery: \"\",\r\n                onArt: \"\",\r\n                referalSource: \"\",\r\n                romDeliveryInterval: \"\",\r\n                vaginalTear: \"\"\r\n    })\r\n    useEffect(() => {           \r\n        MODE_DELIVERY();\r\n        FEEDING_DECISION();\r\n        MATERNAL_OUTCOME();\r\n        CHILD_STATUS_DELIVERY();\r\n        BOOKING_STATUS();\r\n    }, [props.patientObj.id, ]);\r\n    //Get list \r\n    const BOOKING_STATUS =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/BOOKING STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setBookingStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const MODE_DELIVERY =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/MODE_DELIVERY`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setDelieryMode(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const CHILD_STATUS_DELIVERY =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/CHILD_STATUS_DELIVERY`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setChildStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const FEEDING_DECISION =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/FEEDING DECISION`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setfeedingDecision(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const MATERNAL_OUTCOME =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/MATERNAL_OUTCOME`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setmaternalOutCome(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChangeDeliveryDto = e => {  \r\n        setErrors({...errors, [e.target.name]: \"\"})            \r\n        setDelivery ({...delivery,  [e.target.name]: e.target.value});\r\n    }\r\n\r\n    //FORM VALIDATION\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.artStartedLdWard = delivery.artStartedLdWard ? \"\" : \"This field is required\"\r\n        temp.referalSource = delivery.referalSource ? \"\" : \"This field is required\"\r\n        temp.romDeliveryInterval = delivery.romDeliveryInterval ? \"\" : \"This field is required\"\r\n        temp.vaginalTear = delivery.vaginalTear ? \"\" : \"This field is required\"\r\n        temp.onArt = delivery.onArt ? \"\" : \"This field is required\"\r\n        temp.modeOfDelivery = delivery.modeOfDelivery ? \"\" : \"This field is required\"\r\n        temp.maternalOutcome = delivery.maternalOutcome ? \"\" : \"This field is required\"\r\n        temp.hivExposedInfantGivenHbWithin24hrs = delivery.hivExposedInfantGivenHbWithin24hrs ? \"\" : \"This field is required\"\r\n        temp.hcstatus = delivery.hcstatus ? \"\" : \"This field is required\"\r\n        temp.hbstatus = delivery.hbstatus ? \"\" : \"This field is required\"\r\n        temp.gaweeks = delivery.gaweeks ? \"\" : \"This field is required\"\r\n        temp.feedingDecision = delivery.feedingDecision ? \"\" : \"This field is required\"\r\n        temp.episiotomy = delivery.episiotomy ? \"\" : \"This field is required\"\r\n        temp.deliveryTime = delivery.deliveryTime ? \"\" : \"This field is required\"\r\n        temp.dateOfDelivery = delivery.dateOfDelivery ? \"\" : \"This field is required\"\r\n        temp.childStatus = delivery.childStatus ? \"\" : \"This field is required\"\r\n        temp.childGivenArvWithin72 = delivery.childGivenArvWithin72 ? \"\" : \"This field is required\"\r\n        temp.bookingStatus = delivery.bookingStatus ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();        \r\n        if(validate()){\r\n        setSaving(true);\r\n        axios.post(`${baseUrl}pmtct/anc/pmtct-delivery`, delivery,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n        \r\n        )\r\n            .then(response => {\r\n                setSaving(false);\r\n                //props.patientObj.commenced=true\r\n                toast.success(\"Record save successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                toast.error(\"Something went wrong\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                \r\n            });\r\n        }else{\r\n            toast.error(\"All field are required\", {position: toast.POSITION.BOTTOM_CENTER});\r\n        } \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n                   \r\n        <Card className={classes.root}>\r\n            <CardBody>\r\n            <form >\r\n                <div className=\"row\">\r\n                    <h2>labour and Delivery</h2>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >ANC ID  *</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"ancNo\"\r\n                                    id=\"ancNo\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.ancNo} \r\n                                    disabled\r\n                                />\r\n                            </InputGroup>\r\n                            {errors.ancNo !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.ancNo}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Booking Status</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"bookingStatus\"\r\n                                    id=\"bookingStatus\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.bookingStatus} \r\n                                >\r\n                                <option value=\"\">Select </option>\r\n                                    \r\n                                    {bookingStatus.map((value) => (\r\n                                        <option key={value.id} value={value.code}>\r\n                                            {value.display}\r\n                                        </option>\r\n                                    ))}\r\n\r\n                               </Input>\r\n                            </InputGroup>\r\n                            {errors.bookingStatus !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.bookingStatus}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date of Delivery</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"dateOfDelivery\"\r\n                                    id=\"dateOfDelivery\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.dateOfDelivery} \r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                />\r\n\r\n                            </InputGroup>\r\n                            {errors.dateOfDelivery !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfDelivery}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Gestational Age (weeks)</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"number\"\r\n                                    name=\"gaweeks\"\r\n                                    id=\"gaweeks\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.gaweeks} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                            {errors.gaweeks !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.gaweeks}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >ROM to Delivery Interval </Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"number\"\r\n                                    name=\"romDeliveryInterval\"\r\n                                    id=\"romDeliveryInterval\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.romDeliveryInterval} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                            {errors.romDeliveryInterval !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.romDeliveryInterval}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Mode of Delivery</Label>\r\n                            \r\n                            <Input\r\n                                    type=\"select\"\r\n                                    name=\"modeOfDelivery\"\r\n                                    id=\"modeOfDelivery\"\r\n                                    value={delivery.modeOfDelivery}\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    required\r\n                                >\r\n                                     <option value=\"\">Select </option>\r\n                                        \r\n                                        {delieryMode.map((value) => (\r\n                                            <option key={value.id} value={value.code}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                </Input>\r\n                                {errors.modeOfDelivery !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.modeOfDelivery}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Episiotomy</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"episiotomy\"\r\n                                    id=\"episiotomy\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.episiotomy} \r\n                                >\r\n                                    <option value=\"\" >Select</option>\r\n                                    <option value=\"Yes\" >Yes</option>\r\n                                    <option value=\"No\" >No</option>\r\n                                </Input>\r\n\r\n                            </InputGroup>\r\n                            {errors.episiotomy !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.episiotomy}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Vaginal Tear</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"vaginalTear\"\r\n                                    id=\"vaginalTear\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.vaginalTear} \r\n                                >\r\n                                    <option value=\"\" >Select</option>\r\n                                    <option value=\"Yes\" >Yes</option>\r\n                                    <option value=\"No\" >No</option>\r\n                                </Input>\r\n                            </InputGroup>\r\n                            {errors.vaginalTear !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.vaginalTear}</span>\r\n                                ) : \"\" }                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Feeding decision</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"feedingDecision\"\r\n                                    id=\"feedingDecision\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.feedingDecision} \r\n                                >\r\n                                    <option value=\"\">Select </option>\r\n                                        \r\n                                    {feedingDecision.map((value) => (\r\n                                        <option key={value.id} value={value.code}>\r\n                                            {value.display}\r\n                                        </option>\r\n                                    ))}\r\n                                </Input>\r\n\r\n                            </InputGroup>\r\n                            {errors.feedingDecision !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.feedingDecision}</span>\r\n                                ) : \"\" }  \r\n                            </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Maternal Outcome</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"maternalOutcome\"\r\n                                    id=\"maternalOutcome\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.maternalOutcome} \r\n                                >\r\n                                    <option value=\"\">Select </option>    \r\n                                    {maternalOutCome.map((value) => (\r\n                                        <option key={value.id} value={value.code}>\r\n                                            {value.display}\r\n                                        </option>\r\n                                    ))}\r\n                                </Input>\r\n                            </InputGroup> \r\n                            {errors.maternalOutcome !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.maternalOutcome}</span>\r\n                                ) : \"\" }                                       \r\n                            </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Child given ARV within 72 hrs</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"childGivenArvWithin72\"\r\n                                    id=\"childGivenArvWithin72\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.childGivenArvWithin72} \r\n                                >\r\n                                <option value=\"\" >Select</option>\r\n                                <option value=\"Yes\" >Yes</option>\r\n                                <option value=\"No\" >No</option>\r\n                            </Input>\r\n                            </InputGroup>\r\n                            {errors.childGivenArvWithin72 !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.childGivenArvWithin72}</span>\r\n                                ) : \"\" }                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Child status</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"childStatus\"\r\n                                    id=\"childStatus\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.childStatus} \r\n                                >\r\n                                <option value=\"\">Select </option>    \r\n                                {childStatus.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                            </InputGroup>\r\n                            {errors.childStatus !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.childStatus}</span>\r\n                                ) : \"\" }                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >On ART?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"onArt\"\r\n                                    id=\"onArt\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.onArt} \r\n                                >\r\n                                \r\n                                <option value=\"\" >Select</option>\r\n                                <option value=\"Yes\" >Yes</option>\r\n                                <option value=\"No\" >No</option>\r\n                                </Input>\r\n                            </InputGroup> \r\n                            {errors.onArt !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.onArt}</span>\r\n                                ) : \"\" }                                       \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >HIV exposed infant given Hep B within 24 hrs of birth</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"hivExposedInfantGivenHbWithin24hrs\"\r\n                                    id=\"hivExposedInfantGivenHbWithin24hrs\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.hivExposedInfantGivenHbWithin24hrs} \r\n                                    >\r\n                                    <option value=\"\" >Select</option>\r\n                                    <option value=\"Yes\" >Yes</option>\r\n                                    <option value=\"No\" >No</option>\r\n                                    </Input>\r\n                            </InputGroup>\r\n                            {errors.hivExposedInfantGivenHbWithin24hrs !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.hivExposedInfantGivenHbWithin24hrs}</span>\r\n                                ) : \"\" }                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    \r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Time of Diagnosis</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"time\"\r\n                                    name=\"deliveryTime\"\r\n                                    id=\"deliveryTime\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.deliveryTime} \r\n                                />\r\n                            </InputGroup>\r\n                            {errors.deliveryTime !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.deliveryTime}</span>\r\n                                ) : \"\" }                                          \r\n                            </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >ART started in L&D ward</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"artStartedLdWard\"\r\n                                    id=\"artStartedLdWard\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.artStartedLdWard} \r\n                                >\r\n                                <option value=\"\" >Select</option>\r\n                                <option value=\"Yes\" >Yes</option>\r\n                                <option value=\"No\" >No</option>\r\n                                </Input>\r\n                            </InputGroup>\r\n                            {errors.artStartedLdWard !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.artStartedLdWard}</span>\r\n                                ) : \"\" }                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Source of Referral</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"referalSource\"\r\n                                    id=\"referalSource\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.referalSource} \r\n                                />\r\n                            </InputGroup>\r\n                            {errors.referalSource !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.referalSource}</span>\r\n                                ) : \"\" }                                         \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Hepatitis B Status</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"hbstatus\"\r\n                                    id=\"hbstatus\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.hbstatus} \r\n                                    >\r\n                                    <option value=\"\" >Select</option>\r\n                                    <option value=\"Positive\" >Yes</option>\r\n                                    <option value=\"Negative\" >No</option>\r\n                                    </Input>\r\n                            </InputGroup>\r\n                            {errors.hbstatus !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.hbstatus}</span>\r\n                                ) : \"\" }                                         \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Hepatitis C Status</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"hcstatus\"\r\n                                    id=\"hcstatus\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.hcstatus} \r\n                                >\r\n                                <option value=\"\" >Select</option>\r\n                                <option value=\"Positive\" >Yes</option>\r\n                                <option value=\"Negative\" >No</option>\r\n                                </Input>\r\n                            </InputGroup> \r\n                            {errors.hcstatus !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.hcstatus}</span>\r\n                                ) : \"\" }                                        \r\n                            </FormGroup>\r\n                    </div>\r\n  \r\n            </div>\r\n                \r\n                {saving ? <Spinner /> : \"\"}\r\n            <br />\r\n            \r\n            <MatButton\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            startIcon={<SaveIcon />}\r\n            style={{backgroundColor:\"#014d88\"}}\r\n            onClick={handleSubmit}\r\n            >\r\n                {!saving ? (\r\n                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                ) : (\r\n                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                )}\r\n            </MatButton>\r\n            \r\n            <MatButton\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                startIcon={<CancelIcon />}\r\n                style={{backgroundColor:'#992E62'}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n            </MatButton>\r\n            \r\n                </form>\r\n            </CardBody>\r\n        </Card> \r\n                  \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LabourDelivery;\r\n","export default __webpack_public_path__ + \"static/media/fingerprintimage.73ff98ea.png\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport {Dropdown,Badge} from 'react-bootstrap';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport fingerprintimage  from './../../images/fingerprintimage.png';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\r\n            fontFamily:'FontAwesome',\r\n            border:'0',\r\n            verticalAlign:'middle',\r\n            marginLeft:'.25em',\r\n            lineHeight:'1'\r\n        },\r\n        \"& .dropdown-menu .dropdown-item\":{\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            padding: '0.3rem 1.5rem',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .mt-4\":{\r\n            marginTop:'28px !important'\r\n        },\r\n        \"& .form-control\":{\r\n            color:'#992E62'\r\n        },\r\n        \"& .form-control:focus\":{\r\n            color:'#014d88'\r\n        },\r\n        \"& .sharp \":{\r\n            \"min-width\": \"35px\",\r\n            padding:\"5px\",\r\n            height: '35px',\r\n            \"min-height\": \"35px\"\r\n}\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n/*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nfunction Biometrics(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [biometricDevices,setbiometricDevices] = useState([]);\r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageLoading, setPageLoading] = useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n    // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([]);\r\n    const [selectedFingers, setSelectedFingers] = useState([]);\r\n\r\n    const buttonSx = {\r\n        ...(success && {\r\n            bgcolor: green[500],\r\n            '&:hover': {\r\n                bgcolor: green[700],\r\n            },\r\n        }),\r\n    };\r\n\r\n    const getPersonBiometrics = async() =>{\r\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n\r\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\r\n            if(response.data.length > 0){\r\n                setStoredBiometrics(response.data);\r\n                setPageLoading(true);\r\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\r\n                setSelectedFingers(personCapturedFingers);\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\r\n\r\n                });\r\n                setFingerType(biometricItems);\r\n            }else{\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: false});\r\n                    //return item.captured = personCapturedFingers.includes(item.display)\r\n                });\r\n                setFingerType(biometricItems);\r\n\r\n            }\r\n\r\n        }).catch(async (error)=>{\r\n            console.log(\"getPersonBiometrics error\")\r\n            console.log(error)\r\n\r\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                return _.extend({}, item, {captured: false});\r\n            });\r\n            setFingerType(biometricItems);\r\n            setPageLoading(true);\r\n        })\r\n    }\r\n\r\n    const clear_storelist = () =>{\r\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            console.log('cleared store')\r\n        }).catch((error)=>{\r\n            console.log(\"cleared store error\")\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        clear_storelist();\r\n        getPersonBiometrics();\r\n        TemplateType();\r\n        //biometricFingers();\r\n    }, []);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n                            setbiometricDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    //Get list of Finger index\r\n    const biometricFingers =()=>{\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setFingerType(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    //check if device is plugged or not\r\n    const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data.errorType ===\"ERROR\"){\r\n                    toast.error(response.data.errorName + \" is not plug\");\r\n                    //setshowCapture(true)\r\n                }else{\r\n                    setshowCapture(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // handle the input changes\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //to capture  selected index finger\r\n    const captureFinger = (e) => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    setLoading(true);\r\n                    if(response.data.type ===\"ERROR\"){\r\n                        setLoading(false);\r\n                        setTryAgain(true);\r\n                        window.setTimeout(() => {\r\n                            setTryAgain(false);\r\n                        }, 5000);\r\n                        toast.error(response.data.message.ERROR);\r\n                    }else{\r\n                        const templateType= response.data.templateType\r\n                        setTryAgain(false);\r\n                        setSuccess(true)\r\n                        window.setTimeout(() => {\r\n                            setSuccess(false)\r\n                            setLoading(false);\r\n                        }, 5000);\r\n                        let biometricsEnrollments = response.data\r\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\r\n\r\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\r\n                        //fingerType.splice(templateType, 1);\r\n                        _.find(fingerType,{'display':templateType}).captured = true;\r\n                        setFingerType([...fingerType]);\r\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\r\n                        setObjValues({...objValues, templateType:\"\"});\r\n                    }\r\n                    //toast.success(\"Record save successful\");\r\n                })\r\n                .catch(error => {\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteBiometric =(id,finger)=>{\r\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            toast.success(`${finger} deleted successfully`);\r\n            _.find(fingerType,{'display':finger}).captured = false;\r\n            setFingerType([...fingerType]);\r\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\r\n            setStoredBiometrics(newStoredBiometrics);\r\n            clear_storelist();\r\n            if(newStoredBiometrics.length === 0){\r\n                props.updatePatientBiometricStatus(false);\r\n            }\r\n        }).catch((error)=>{\r\n            toast.error(\"Something went wrong\");\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {\r\n        e.preventDefault();\r\n        if(capturedFingered.length >= 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\r\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Biometric save successful\");\r\n                    setCapturedFingered([])\r\n                    getPersonBiometrics();\r\n                    props.patientObj.biometricStatus=true\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    //props.updatePatientBiometricStatus(true);\r\n                })\r\n                .catch(error => {\r\n                    toast.error(\"Something went wrong saving biometrics\");\r\n                    console.log(error);\r\n                });\r\n        }else{\r\n\r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n\r\n            <div style={{display:\"flex\",width:'100%'}}>\r\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\r\n                    {pageLoading && storedBiometrics.length > 0 ? (\r\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\r\n                                {storedBiometrics.map((biometric, index)=>(\r\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\r\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\r\n\r\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\r\n                                                <div>\r\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\r\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                                </div>\r\n\r\n                                                {/*Action button -- Dropdown menu*/}\r\n                                                <Dropdown className=\"dropdown ms-auto\"  >\r\n                                                    <Dropdown.Toggle\r\n                                                        as=\"button\"\r\n                                                        variant=\"\"\r\n                                                        drop=\"up\"\r\n                                                        className=\"btn sharp btn-primary \"\r\n                                                        id=\"tp-btn\"\r\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\r\n                                                    >\r\n                                                        <svg\r\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                                            width=\"18px\"\r\n                                                            height=\"18px\"\r\n                                                            viewBox=\"0 0 24 24\"\r\n                                                            version=\"1.1\"\r\n                                                        >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                    </Dropdown.Toggle>\r\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\r\n                                                            <DeleteIcon /> Delete\r\n                                                        </Dropdown.Item>\r\n\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n\r\n                                            </div>\r\n                                            <div className=\"card-body p-0 pb-2\">\r\n                                                <ul className=\"list-group list-group-flush\">\r\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\r\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\r\n                                                    </li>\r\n\r\n                                                    <li className=\"list-group-item\">\r\n\r\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\r\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\r\n                                                        <span className=\"text-black desc-text ms-2\">\r\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\r\n                                                    </span>\r\n                                                    </li>\r\n\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div className=\"flex-grow-8\">\r\n                                <div  className=\"flex-grow-8\"  >\r\n                                    <Alert severity=\"info\">\r\n                                        <AlertTitle style={{height:'400px'}}>\r\n                                            <strong>No biometrics captured</strong>\r\n                                        </AlertTitle>\r\n                                    </Alert>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <div className=\"col-12\">\r\n                            <ToastContainer />\r\n                            <Col md={12}>\r\n                                <FormGroup>\r\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Device </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"device\"\r\n                                        id=\"device\"\r\n                                        onChange={checkDevice}\r\n                                        value={objValues.device}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Select Device </option>\r\n                                        {biometricDevices.map(({ id, name }) => (\r\n                                            <option key={id} value={name}>\r\n                                                {name}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.device !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.device}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </Col>\r\n                            {showCapture ? (\r\n                                    <div className=\"row col-12\">\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">Select Finger </option>\r\n\r\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\r\n                                                        <option key={value.id} value={value.display}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Input>\r\n                                                {errors.templateType !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.templateType}</span>\r\n                                                ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md={6}>\r\n\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={captureFinger}\r\n                                                className={'mt-4'}\r\n                                                style={{backgroundColor:'#992E62'}}\r\n                                                startIcon={<FingerprintIcon />}\r\n                                            >\r\n                                                Capture Finger\r\n                                            </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\r\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\r\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n\r\n                   \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n            <Form >\r\n\r\n                    <Card>\r\n                         <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader>\r\n                        <CardBody>\r\n                            <Row form>\r\n                                <ToastContainer />\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for='device'>Select Device </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"device\"\r\n                                            id=\"device\"\r\n                                            onChange={checkDevice}\r\n                                            value={objValues.device}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Device </option>\r\n                                            {biometricDevices.map(({ id, name }) => (\r\n                                                <option key={id} value={name}>\r\n                                                    {name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                        {errors.device !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.device}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for='device'>Select Finger</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"templateType\"\r\n                                                        id=\"templateType\"\r\n                                                        onChange={handleInputChange}\r\n                                                        value={objValues.templateType}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\">Select Finger </option>\r\n\r\n                                                        {fingerType.map((value) => (\r\n                                                            <option key={value.id} value={value.display}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                    {errors.templateType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.templateType}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col md={4}>\r\n\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={captureFinger}\r\n                                                    className={'mt-4'}\r\n                                                    startIcon={<FingerprintIcon />}\r\n                                                >\r\n                                                    Capture Finger\r\n                                                </MatButton>\r\n\r\n                                            </Col>\r\n                                            <br/>\r\n\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                 <img width='500' height='200' src={responseImage}/>\r\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                                    {loading && (\r\n                                        <>\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                    </Fab>\r\n                                                    {loading && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: green[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                    {tryAgain && (\r\n                                        <>\r\n\r\n\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        <FingerprintIcon />\r\n                                                    </Fab>\r\n                                                    {tryAgain && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: red[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    Click to Recapture Again\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} >\r\n                                                <h3>Captured Fingerprints</h3>\r\n                                            </Col>\r\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\r\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n            </Form>\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Biometrics;","\r\nimport React, { useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {  Modal } from \"react-bootstrap\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },\r\n    success:{\r\n        color: 'green',\r\n        fontSize: '12.8px',\r\n        fontWeight:'bold'\r\n    }\r\n}));\r\n\r\n\r\nconst BasicInfo = (props) => {\r\n    //console.log(props)\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [errors, setErrors] = useState({});\r\n    const [saving, setSaving] = useState(false);\r\n    const [hideNumChild, setHideNumChild] = useState(false);\r\n    const [kP, setKP] = useState([]);\r\n    const [enrollSetting, setEnrollSetting] = useState([]);\r\n    const [sourceReferral, setSourceReferral] = useState([]);\r\n    const [gender, setGender] = useState([])\r\n    const [counselingType, setCounselingType] = useState([]);\r\n    const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n    const [indexTesting, setIndexTesting]= useState([]);\r\n    let temp = { ...errors }\r\n    const [clientCodeetail, setclientCodeetail]= useState(\"\");\r\n    const [clientCodeetail2, setclientCodeetail2]= useState(\"\");\r\n    const [clientCodeCheck, setClientCodeCheck]= useState(\"\");\r\n\r\n    const [objValues, setObjValues]= useState(\r\n        {\r\n            active: true,\r\n            personId: props.patientObj.personId,\r\n            clientCode: props.patientObj && props.patientObj.clientCode ? props.patientObj.clientCode :\"\",  \r\n            breastFeeding:props.patientObj && props.patientObj.breastFeeding ? props.patientObj.breastFeeding :\"\",\r\n            dateVisit: props.patientObj && props.patientObj.dateVisit ? props.patientObj.dateVisit :\"\",\r\n            firstTimeVisit: props.patientObj && props.patientObj.firstTimeVisit ? props.patientObj.firstTimeVisit :\"\",\r\n            indexClient: props.patientObj && props.patientObj.indexClient ? props.patientObj.indexClient :\"\",\r\n            numChildren: props.patientObj && props.patientObj.numChildren ? props.patientObj.numChildren :\"\",\r\n            numWives: props.patientObj && props.patientObj.numWives ? props.patientObj.numWives :\"\",\r\n            pregnant:props.patientObj && props.patientObj.pregnant ? props.patientObj.pregnant :\"\",           \r\n            previouslyTested: props.patientObj ? props.patientObj.previouslyTested :\"\",\r\n            referredFrom: props.patientObj ? props.patientObj.referredFrom :\"\",\r\n            riskAssessment:  props.patientObj && props.patientObj.riskAssessment? props.patientObj.riskAssessment : {},\r\n            riskStratificationCode:props.extra && props.extra.code!=='' ? props.extra.code : \"\",\r\n            targetGroup: props.patientObj && props.patientObj.targetGroup? props.patientObj.targetGroup :\"\",\r\n            testingSetting:props.patientObj ? props.patientObj.testingSetting :\"\",\r\n            typeCounseling: props.patientObj ? props.patientObj.typeCounseling :\"\",\r\n            relationshipWithIndexClient:props.patientObj ? props.patientObj.relationshipWithIndexClient :\"\",\r\n            indexClientCode:props.patientObj ? props.patientObj.indexClientCode :\"\",\r\n        }\r\n    )    \r\n    useEffect(() => { \r\n        KP(); \r\n        EnrollmentSetting(); \r\n        SourceReferral();\r\n        Genders();\r\n        CounselingType();\r\n        PregnancyStatus()\r\n        IndexTesting();\r\n    }, [ props.patientObj]);\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of IndexTesting\r\n    const IndexTesting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/INDEX_TESTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setIndexTesting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    \r\n    //Get list of KP\r\n    const CounselingType =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/COUNSELING_TYPE`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCounselingType(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TEST_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of Genders from \r\n    const Genders =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/GENDER`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setGender(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    const handleInputChange = e => { \r\n        setErrors({...temp, [e.target.name]:\"\"}) \r\n        if(e.target.name==='indexClientCode' && e.target.value!==''){\r\n            async function getIndexClientCode() {\r\n                const indexClientCode=e.target.value\r\n                const response = await axios.get(`${baseUrl}hts/client/${indexClientCode}`,\r\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                    );\r\n                if(response.data!=='Record Not Found'){\r\n                    setclientCodeetail2(\"\")\r\n                    setclientCodeetail(response.data)\r\n                    \r\n                }else{\r\n                    setclientCodeetail(\"\")\r\n                    setclientCodeetail2(response.data)\r\n                }\r\n            }\r\n            getIndexClientCode();\r\n        }         \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});            \r\n    }\r\n\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        //HTS FORM VALIDATION\r\n        \r\n           temp.clientCode = objValues.clientCode ? \"\" : \"This field is required.\"\r\n            temp.typeCounseling = objValues.typeCounseling ? \"\" : \"This field is required.\"\r\n            temp.testingSetting = objValues.testingSetting ? \"\" : \"This field is required.\"\r\n            temp.targetGroup = objValues.targetGroup ? \"\" : \"This field is required.\"\r\n            temp.referredFrom = objValues.referredFrom ? \"\" : \"This field is required.\"\r\n            temp.previouslyTested = objValues.previouslyTested ? \"\" : \"This field is required.\" \r\n            temp.indexClient = objValues.indexClient ? \"\" : \"This field is required.\"  \r\n            temp.firstTimeVisit = objValues.firstTimeVisit ? \"\" : \"This field is required.\" \r\n            temp.dateVisit = objValues.dateVisit ? \"\" : \"This field is required.\"               \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n    }\r\n    //checkClientCode\r\n    const checkClientCode = e => { \r\n\r\n        async function getIndexClientCode() {\r\n            const indexClientCode=objValues.clientCode\r\n            const response = await axios.get(`${baseUrl}hts/client/${indexClientCode}`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                );\r\n            if(response.data!=='Record Not Found'){\r\n                setClientCodeCheck(\"Client code already exist\")\r\n            }else{\r\n                setClientCodeCheck(\"\")\r\n            }\r\n        }\r\n        getIndexClientCode();\r\n                          \r\n}\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        const patientForm ={\r\n            clientCode: objValues.clientCode,\r\n            dateVisit: objValues.dateVisit,\r\n            extra: {},\r\n            firstTimeVisit: objValues.firstTimeVisit,\r\n            indexClient: objValues.indexClient,\r\n            numChildren: objValues.numChildren,\r\n            numWives: objValues.numWives,\r\n            personId: props.patientObj.personId,\r\n            hospitalNumber:objValues.clientCode,\r\n            previouslyTested: objValues.previouslyTested,\r\n            referredFrom: objValues.referredFrom,\r\n            targetGroup: objValues.targetGroup,\r\n            testingSetting: objValues.testingSetting,\r\n            typeCounseling:objValues.typeCounseling,\r\n            breastFeeding:objValues.breastFeeding,\r\n            pregnant:objValues.pregnant,\r\n            relationshipWithIndexClient:objValues.relationshipWithIndexClient,\r\n            riskStratificationCode:props.extra && props.extra.code!=='' ? props.extra.code : \"\",\r\n            }\r\n\r\n            if(validate()){\r\n            axios.post(`${baseUrl}hts`,patientForm,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n            .then(response => {\r\n                setSaving(false);\r\n                props.setPatientObj(response.data)\r\n                //toast.success(\"HTS Test successful\");\r\n                if(props.patientAge>15){\r\n                    handleItemClick('pre-test-counsel', 'basic' )\r\n                }else{\r\n                    handleItemClick('hiv-test', 'baisc')\r\n                }\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n            });\r\n            }else{\r\n                toast.error(\"All fields are required\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n            }\r\n    }\r\n\r\n\r\n    return (\r\n        <>  \r\n        \r\n            <Card className={classes.root}>\r\n                <CardBody>   \r\n                <h2 style={{color:'#000'}}>CLIENT INTAKE FORM </h2>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Target Group *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"targetGroup\"\r\n                                        id=\"targetGroup\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.targetGroup}\r\n                                        disabled\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {kP.map((value) => (\r\n                                            <option key={value.id} value={value.code}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    {errors.targetGroup !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroup}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Client Code *</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"clientCode\"\r\n                                    id=\"clientCode\"\r\n                                    value={objValues.clientCode}\r\n                                    onChange={handleInputChange}\r\n                                    disabled={props.clientCode!==\"\" && props.clientCode!==null? true : false}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                {errors.clientCode !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clientCode}</span>\r\n                                ) : \"\" }                                \r\n                                </FormGroup>\r\n                            </div>                           \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Referred From *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"referredFrom\"\r\n                                        id=\"referredFrom\"\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {sourceReferral.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    {errors.referredFrom !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.referredFrom}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Setting*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"testingSetting\"\r\n                                        id=\"testingSetting\"\r\n                                        value={objValues.testingSetting}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {enrollSetting.map((value) => (\r\n                                            <option key={value.id} value={value.code}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    {errors.testingSetting !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.testingSetting}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Visit Date  </Label>\r\n                                <Input\r\n                                    type=\"date\"\r\n                                    name=\"dateVisit\"\r\n                                    id=\"dateVisit\"\r\n                                    value={objValues.dateVisit}\r\n                                    onChange={handleInputChange}\r\n                                    min={objValues.dateOfRegistration}\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    \r\n                                />\r\n                                {errors.dateVisit !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateVisit}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            {/* {(objValues.targetGroup!=='457' && objValues.targetGroup!==\"\") && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Gender</Label>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name=\"genderId\"\r\n                                    id=\"genderId\"\r\n                                    value={objValues.genderId}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                >\r\n                                    <option value={\"\"}></option>\r\n                                    {gender.map((value) => (\r\n                                        <option key={value.id} value={value.id}>\r\n                                            {value.display}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                               \r\n                            </FormGroup>\r\n                            </div>\r\n                            )} */}\r\n\r\n                            {(objValues.age>9 ) && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Number of Children {'<5'} years</Label>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        name=\"numChildren\"\r\n                                        id=\"numChildren\"\r\n                                        min={0}\r\n                                        value={objValues.numChildren}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                    /> \r\n                                     \r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            {(objValues.age > 9 && objValues.sexId=='376') && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Number of wives/co-wives</Label>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        name=\"numWives\"\r\n                                        id=\"numWives\"\r\n                                        min={0}\r\n                                        value={objValues.numWives}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                    />\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Index Testing</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"indexClient\"\r\n                                        id=\"indexClient\"\r\n                                        value={objValues.indexClient}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">YES</option>\r\n                                        <option value=\"false\">NO</option>\r\n                                    </select>\r\n                                    {errors.indexClient !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.indexClient}</span>\r\n                                    ) : \"\" }   \r\n                                </FormGroup>\r\n                            </div>\r\n                            {objValues.indexClient==='true' && (\r\n                            <>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Relationship of the index client</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"relationshipWithIndexClient\"\r\n                                        id=\"relationshipWithIndexClient\"\r\n                                        value={objValues.relationshipWithIndexClient}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {indexTesting.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                             <div className=\"form-group  col-md-4\">\r\n                             <FormGroup>\r\n                                 <Label>Index Client Code/ID</Label>\r\n                                 <Input\r\n                                     type=\"text\"\r\n                                     name=\"indexClientCode\"\r\n                                     id=\"indexClientCode\"\r\n                                     value={objValues.indexClientCode}\r\n                                     onBlur ={checkClientCode}\r\n                                     onChange={handleInputChange}\r\n                                     style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                \r\n                                 />\r\n                                 {clientCodeCheck!==\"\" ? (\r\n                                <span className={classes.error}>{clientCodeCheck}</span>\r\n                            ) : \"\" }  \r\n                             </FormGroup>\r\n                            </div>\r\n                            </>\r\n                            )}\r\n                            {objValues.sex==='377' && (\r\n                            <>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Pregnant</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"pregnant\"\r\n                                        id=\"pregnant\"\r\n                                        value={objValues.pregnant}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {pregnancyStatus.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Breast Feeding</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"breastFeeding\"\r\n                                        id=\"breastFeeding\"\r\n                                        value={objValues.breastFeeding}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">YES</option>\r\n                                        <option value=\"false\">NO</option>\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            </>\r\n                            )}\r\n                           \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>First time visit</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"firstTimeVisit\"\r\n                                        id=\"firstTimeVisit\"\r\n                                        value={objValues.firstTimeVisit}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">YES</option>\r\n                                        <option value=\"false\">NO</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.firstTimeVisit !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.firstTimeVisit}</span>\r\n                                    ) : \"\" }    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Previously tested within the last 3 months</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"previouslyTested\"\r\n                                        id=\"previouslyTested\"\r\n                                        value={objValues.previouslyTested}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">YES</option>\r\n                                        <option value=\"false\">NO</option>\r\n                                    </select>\r\n                                    {errors.previouslyTested !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.previouslyTested}</span>\r\n                                    ) : \"\" }    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Type of Counseling</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"typeCounseling\"\r\n                                        id=\"typeCounseling\"\r\n                                        value={objValues.typeCounseling}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {counselingType.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                        \r\n                                    </select>\r\n                                    {errors.typeCounseling !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.typeCounseling}</span>\r\n                                    ) : \"\" }   \r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n\r\n                            <Button content='Save & Continue' type=\"submit\" icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>\r\n                                  \r\n        </>\r\n    );\r\n};\r\n\r\nexport default BasicInfo","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Label as LabelRibbon, Button, Message} from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst BasicInfo = (props) => {\r\n    const classes = useStyles();\r\n    const patientID= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.id : \"\";\r\n    const sex= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.sex : \"\";\r\n    const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    let temp = { ...errors }\r\n    const [riskAssessmentPartner, setRiskAssessmentPartner]= useState(\r\n        {\r\n            sexPartnerHivPositive:\"\",\r\n            newDiagnosedHivlastThreeMonths:\"\",\r\n            currentlyArvForPmtct :\"\",\r\n            knowHivPositiveOnArv :\"\",\r\n            knowHivPositiveAfterLostToFollowUp:\"\", \r\n            uprotectedAnalSex  :\"\",\r\n        }\r\n    )\r\n    const [objValues, setObjValues]= useState(\r\n        {\r\n            htsClientId: clientId,\r\n            knowledgeAssessment: {},\r\n            personId: patientID,\r\n            riskAssessment: {},\r\n            stiScreening: {},\r\n            tbScreening: {},\r\n            sexPartnerRiskAssessment:{}\r\n        }\r\n    )\r\n    const [knowledgeAssessment, setKnowledgeAssessment]= useState(\r\n        {\r\n            previousTestedHIVNegative:\"\",\r\n            timeLastHIVNegativeTestResult:\"\",\r\n            clientPregnant:\"\",\r\n            clientInformHivTransRoutes:\"\",\r\n            clientInformRiskkHivTrans:\"\",\r\n            clientInformPreventingsHivTrans:\"\", \r\n            clientInformPossibleTestResult:\"\",\r\n            informConsentHivTest:\"\",\r\n        }\r\n    )\r\n    const [riskAssessment, setRiskAssessment]= useState(\r\n        {\r\n            everHadSexualIntercourse:\"\",\r\n            bloodtransInlastThreeMonths:\"\",\r\n            uprotectedSexWithCasualLastThreeMonths:\"\",\r\n            uprotectedSexWithRegularPartnerLastThreeMonths:\"\", \r\n            unprotectedVaginalSex:\"\",  \r\n            uprotectedAnalSex:\"\",   \r\n            stiLastThreeMonths:\"\",\r\n            sexUnderInfluence :\"\",\r\n            moreThanOneSexPartnerLastThreeMonths:\"\",\r\n            experiencePain:\"\",\r\n            haveSexWithoutCondom:\"\",\r\n            abuseDrug:\"\",\r\n            bloodTransfusion:\"\",\r\n            consistentWeightFeverNightCough:\"\",\r\n            soldPaidVaginalSex:\"\",\r\n        }\r\n    )\r\n    const [stiScreening, setStiScreening]= useState(\r\n        {\r\n            vaginalDischarge:\"\",\r\n            lowerAbdominalPains :\"\",\r\n            urethralDischarge :\"\",\r\n            complaintsOfScrotal:\"\", \r\n            complaintsGenitalSore  :\"\",\r\n                \r\n        }\r\n    )\r\n    const [tbScreening, setTbScreening]= useState(\r\n        {\r\n            currentCough :\"\",\r\n            weightLoss  :\"\",\r\n            lymphadenopathy :\"\", \r\n            fever :\"\",  \r\n            nightSweats :\"\",\r\n        }\r\n    )\r\n    useEffect(() => { \r\n        //console.log(props.patientObj)\r\n        if(props.patientObj){\r\n            setKnowledgeAssessment(props.patientObj.knowledgeAssessment  && props.patientObj.knowledgeAssessment!==null ? props.patientObj.knowledgeAssessment : {})\r\n            setRiskAssessment(props.patientObj.riskAssessment  && props.patientObj.riskAssessment!==null ? props.patientObj.riskAssessment : {})\r\n            setRiskAssessmentPartner(props.patientObj.sexPartnerRiskAssessment && props.patientObj.sexPartnerRiskAssessment!==null ? props.patientObj.sexPartnerRiskAssessment : {})\r\n            setStiScreening(props.patientObj.stiScreening  && props.patientObj.stiScreening!==null? props.patientObj.stiScreening : {})\r\n            setTbScreening(props.patientObj.tbScreening  && props.patientObj.tbScreening!==null? props.patientObj.tbScreening : {})\r\n            //patientAge=calculate_age(moment(props.patientObj.personResponseDto.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            //console.log(props.patientObj.riskStratificationResponseDto.riskAssessment)\r\n            if(props.patientObj.riskStratificationResponseDto && Object.keys(props.patientObj.riskStratificationResponseDto.riskAssessment).length !== 0 && props.patientObj.riskAssessment===null){\r\n                setRiskAssessment({...riskAssessment, ...props.patientObj.riskStratificationResponseDto.riskAssessment})\r\n            }else{\r\n                setRiskAssessment({...riskAssessment, ...props.patientObj.riskAssessment})   \r\n            } \r\n        }\r\n    }, [props.patientObj]);\r\n    const handleItemClick =(page, completedMenu)=>{        \r\n        if(props.completed.includes(completedMenu)) {\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n        props.handleItemClick(page)\r\n    }\r\n\r\n    const handleInputChangeKnowledgeAssessment = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        \r\n        setKnowledgeAssessment ({...knowledgeAssessment,  [e.target.name]: e.target.value}); \r\n          \r\n    }\r\n    \r\n    const handleInputChangeRiskAssessment = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setRiskAssessment ({...riskAssessment,  [e.target.name]: e.target.value});                  \r\n    }\r\n    // Getting the number count of riskAssessment True\r\n    const actualRiskCountTrue=Object.values(riskAssessment)\r\n    const riskCount=actualRiskCountTrue.filter((x)=> x==='true')\r\n   \r\n    const handleInputChangeRiskAssessmentPartner = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setRiskAssessmentPartner ({...riskAssessmentPartner,  [e.target.name]: e.target.value});                       \r\n    }\r\n    // Getting the number count of sexPartRiskCount True\r\n    const actualSexPartRiskCountTrue=Object.values(riskAssessmentPartner)\r\n    const sexPartRiskCount=actualSexPartRiskCountTrue.filter((x)=> x==='true')\r\n\r\n    const handleInputChangeStiScreening = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setStiScreening ({...stiScreening,  [e.target.name]: e.target.value});            \r\n    }\r\n    // Getting the number count of STI True\r\n    const actualStiTrue=Object.values(stiScreening)\r\n    const stiCount=actualStiTrue.filter((x)=> x==='true')\r\n    \r\n    const [tbCount, settbCount] = useState(0);\r\n    const handleInputChangeTbScreening = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        \r\n        if(e.target.value==='true') {\r\n            const newcount = tbCount +1\r\n            if(newcount>=0 && newcount <=5){\r\n                settbCount(newcount)\r\n            }\r\n        }\r\n        if(e.target.value==='false') {\r\n            const newcount = tbCount -1\r\n            //settbCount(newcount)\r\n            //console.log(newcount)\r\n            if(newcount <=0 ){\r\n                \r\n                settbCount(0)\r\n            }else{\r\n                settbCount(newcount)\r\n            }\r\n        } \r\n        setTbScreening ({...tbScreening,  [e.target.name]: e.target.value});          \r\n    }\r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        //HTS FORM VALIDATION\r\n           temp.previousTestedHIVNegative = knowledgeAssessment.previousTestedHIVNegative ? \"\" : \"This field is required.\"\r\n           {knowledgeAssessment.previousTestedHIVNegative==='true' && ( temp.timeLastHIVNegativeTestResult = knowledgeAssessment.timeLastHIVNegativeTestResult ? \"\" : \"This field is required.\")}\r\n           temp.clientPregnant = knowledgeAssessment.clientPregnant ? \"\" : \"This field is required.\"\r\n           temp.clientInformHivTransRoutes = knowledgeAssessment.clientInformHivTransRoutes ? \"\" : \"This field is required.\"\r\n           temp.clientInformRiskkHivTrans = knowledgeAssessment.clientInformRiskkHivTrans ? \"\" : \"This field is required.\"\r\n           temp.clientInformPreventingsHivTrans = knowledgeAssessment.clientInformPreventingsHivTrans ? \"\" : \"This field is required.\"\r\n           temp.clientInformPossibleTestResult = knowledgeAssessment.clientInformPossibleTestResult ? \"\" : \"This field is required.\"\r\n           temp.informConsentHivTest = knowledgeAssessment.informConsentHivTest ? \"\" : \"This field is required.\"  \r\n\r\n            temp.currentCough = tbScreening.currentCough ? \"\" : \"This field is required.\"\r\n            temp.weightLoss = tbScreening.weightLoss ? \"\" : \"This field is required.\"\r\n            temp.lymphadenopathy = tbScreening.lymphadenopathy ? \"\" : \"This field is required.\"\r\n            temp.fever = tbScreening.fever ? \"\" : \"This field is required.\"\r\n            temp.nightSweats = tbScreening.nightSweats ? \"\" : \"This field is required.\"\r\n\r\n            {props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (temp.vaginalDischarge = stiScreening.vaginalDischarge ? \"\" : \"This field is required.\" )}\r\n            {props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (temp.lowerAbdominalPains = stiScreening.lowerAbdominalPains ? \"\" : \"This field is required.\")}\r\n            {props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.urethralDischarge = stiScreening.urethralDischarge ? \"\" : \"This field is required.\")}\r\n            {props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.complaintsOfScrotal = stiScreening.complaintsOfScrotal ? \"\" : \"This field is required.\")}\r\n            {props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.complaintsGenitalSore = stiScreening.complaintsGenitalSore ? \"\" : \"This field is required.\")}\r\n \r\n            {props.patientObj.targetGroup===\"473\" && (temp.everHadSexualIntercourse = riskAssessment.everHadSexualIntercourse ? \"\" : \"This field is required.\")}\r\n            {props.patientObj.targetGroup===\"473\" && (temp.bloodtransInlastThreeMonths = riskAssessment.bloodtransInlastThreeMonths ? \"\" : \"This field is required.\")}\r\n            {props.patientObj.targetGroup===\"473\" && (temp.uprotectedSexWithCasualLastThreeMonths = riskAssessment.uprotectedSexWithCasualLastThreeMonths ? \"\" : \"This field is required.\")}\r\n            {props.patientObj.targetGroup===\"473\" && (temp.uprotectedSexWithRegularPartnerLastThreeMonths = riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths ? \"\" : \"This field is required.\")}\r\n            {props.patientObj.targetGroup===\"473\" && (temp.unprotectedVaginalSex = riskAssessment.unprotectedVaginalSex ? \"\" : \"This field is required.\")}\r\n\r\n            {props.patientObj.targetGroup===\"473\" && (temp.uprotectedAnalSex = riskAssessment.uprotectedAnalSex ? \"\" : \"This field is required.\")}\r\n            {props.patientObj.targetGroup===\"473\" && (temp.sexUnderInfluence = riskAssessment.sexUnderInfluence ? \"\" : \"This field is required.\")}\r\n            {props.patientObj.targetGroup===\"473\" && (temp.uprotectedSexWithCasualLastThreeMonths = riskAssessment.uprotectedSexWithCasualLastThreeMonths ? \"\" : \"This field is required.\")}\r\n            {props.patientObj.targetGroup===\"473\" && (temp.moreThanOneSexPartnerLastThreeMonths = riskAssessment.moreThanOneSexPartnerLastThreeMonths ? \"\" : \"This field is required.\")}\r\n            \r\n            \r\n            {props.patientObj.targetGroup!==\"473\" && (temp.experiencePain = riskAssessment.experiencePain ? \"\" : \"This field is required.\")}\r\n\r\n            {props.patientObj.targetGroup!==\"473\" && (temp.haveSexWithoutCondom = riskAssessment.haveSexWithoutCondom ? \"\" : \"This field is required.\")}\r\n            {props.patientObj.targetGroup!==\"473\" && (temp.abuseDrug = riskAssessment.abuseDrug ? \"\" : \"This field is required.\")}\r\n            {props.patientObj.targetGroup!==\"473\" && (temp.bloodTransfusion = riskAssessment.bloodTransfusion ? \"\" : \"This field is required.\")}\r\n            {props.patientObj.targetGroup!==\"473\" && (temp.consistentWeightFeverNightCough = riskAssessment.consistentWeightFeverNightCough ? \"\" : \"This field is required.\")}\r\n            {props.patientObj.targetGroup!==\"473\" && (temp.soldPaidVaginalSex = riskAssessment.soldPaidVaginalSex ? \"\" : \"This field is required.\")}\r\n\r\n            temp.sexPartnerHivPositive = tbScreening.sexPartnerHivPositive ? \"\" : \"This field is required.\"\r\n            {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.newDiagnosedHivlastThreeMonths = tbScreening.newDiagnosedHivlastThreeMonths ? \"\" : \"This field is required.\")}\r\n            {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.currentlyArvForPmtct = tbScreening.currentlyArvForPmtct ? \"\" : \"This field is required.\")}\r\n            {riskAssessmentPartner.sexPartnerHivPositive==='true' && ( temp.knowHivPositiveOnArv = tbScreening.knowHivPositiveOnArv ? \"\" : \"This field is required.\")}\r\n            {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.knowHivPositiveAfterLostToFollowUp = tbScreening.knowHivPositiveAfterLostToFollowUp ? \"\" : \"This field is required.\")}\r\n            {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.uprotectedAnalSex = tbScreening.uprotectedAnalSex ? \"\" : \"This field is required.\")}\r\n            \r\n            setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n\r\n            objValues.htsClientId= clientId\r\n            objValues.knowledgeAssessment= knowledgeAssessment\r\n            objValues.personId= patientID\r\n            objValues.riskAssessment= riskAssessment\r\n            objValues.stiScreening=stiScreening\r\n            objValues.tbScreening=tbScreening\r\n            objValues.sexPartnerRiskAssessment=riskAssessmentPartner\r\n            axios.put(`${baseUrl}hts/${clientId}/pre-test-counseling`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n            .then(response => {\r\n                setSaving(false);\r\n                props.setPatientObj(response.data)\r\n                //toast.success(\"Risk Assesment successful\");\r\n                handleItemClick('hiv-test', 'pre-test-counsel' )\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n            });\r\n            \r\n    }\r\n    console.log(riskAssessmentPartner)\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n               \r\n                <h2>PRE TEST COUNSELING</h2>\r\n                    <form >\r\n                        <div className=\"row\">\r\n\r\n                        <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'rgb(0,181,173)', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Knowledge Assessment</div>\r\n                     \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Previously tested HIV negative *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"previousTestedHIVNegative\"\r\n                                        id=\"previousTestedHIVNegative\"\r\n                                        value={knowledgeAssessment.previousTestedHIVNegative}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.previousTestedHIVNegative !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.previousTestedHIVNegative}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            {knowledgeAssessment.previousTestedHIVNegative==='true' && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Time of last HIV Negative test Result*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"timeLastHIVNegativeTestResult\"\r\n                                        id=\"timeLastHIVNegativeTestResult\"\r\n                                        value={knowledgeAssessment.timeLastHIVNegativeTestResult}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"<1\"> {\"< 1\"} month</option>\r\n                                        <option value=\"1-3 Months\">1-3 Months</option>\r\n                                        <option value=\"4-6 Months\">4-6 Months</option>\r\n                                        <option value=\">6 Months\"> {\">6\"} Months</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.timeLastHIVNegativeTestResult !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.timeLastHIVNegativeTestResult}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            {sex ==='Female' && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client pregnant *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clientPregnant\"\r\n                                        id=\"clientPregnant\"\r\n                                        value={knowledgeAssessment.clientPregnant}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.clientPregnant !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clientPregnant}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                             )}\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client informed about HIV transmission routes *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clientInformHivTransRoutes\"\r\n                                        id=\"clientInformHivTransRoutes\"\r\n                                        value={knowledgeAssessment.clientInformHivTransRoutes}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.clientInformHivTransRoutes !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clientInformHivTransRoutes}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client informed about risk factors for HIV transmission *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clientInformRiskkHivTrans\"\r\n                                        id=\"clientInformRiskkHivTrans\"\r\n                                        value={knowledgeAssessment.clientInformRiskkHivTrans}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.clientInformRiskkHivTrans !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clientInformRiskkHivTrans}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client informed on preventing HIV transmission methods *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clientInformPreventingsHivTrans\"\r\n                                        id=\"clientInformPreventingsHivTrans\"\r\n                                        value={knowledgeAssessment.clientInformPreventingsHivTrans}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.clientInformPreventingsHivTrans !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clientInformPreventingsHivTrans}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client informed about possible test results *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clientInformPossibleTestResult\"\r\n                                        id=\"clientInformPossibleTestResult\"\r\n                                        value={knowledgeAssessment.clientInformPossibleTestResult}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.clientInformPossibleTestResult !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clientInformPossibleTestResult}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Informed consent for HIV testing given *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"informConsentHivTest\"\r\n                                        id=\"informConsentHivTest\"\r\n                                        value={knowledgeAssessment.informConsentHivTest}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.informConsentHivTest !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.informConsentHivTest}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <hr/>\r\n                            <br/>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#000', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Clinical TB screening</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Current cough *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"currentCough\"\r\n                                        id=\"currentCough\"\r\n                                        value={tbScreening.currentCough}\r\n                                        onChange={handleInputChangeTbScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.currentCough !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.currentCough}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Weight loss *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"weightLoss\"\r\n                                        id=\"weightLoss\"\r\n                                        value={tbScreening.weightLoss}\r\n                                        onChange={handleInputChangeTbScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.weightLoss !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.weightLoss}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Lymphadenopathy (swelling of the lymph nodes) *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lymphadenopathy\"\r\n                                        id=\"lymphadenopathy\"\r\n                                        value={tbScreening.lymphadenopathy}\r\n                                        onChange={handleInputChangeTbScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lymphadenopathy !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lymphadenopathy}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Fever *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"fever\"\r\n                                        id=\"fever\"\r\n                                        value={tbScreening.fever}\r\n                                        onChange={handleInputChangeTbScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.fever !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.fever}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Night sweats*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"nightSweats\"\r\n                                        id=\"nightSweats\"\r\n                                        value={tbScreening.nightSweats}\r\n                                        onChange={handleInputChangeTbScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.nightSweats !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.nightSweats}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <Message warning>\r\n                                <h4>TB Screening score (calculate the sum of the TB assessment) If score {\">= 1\"}, test for Xper MTB RIF or refer to TB service </h4>\r\n                                <b>Score : {tbCount}</b>\r\n                            </Message>\r\n                            <hr/>\r\n                            <br/>\r\n                           {props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && ( <>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Ever had sexual intercourse </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"everHadSexualIntercourse\"\r\n                                        id=\"everHadSexualIntercourse\"\r\n                                        value={riskAssessment.everHadSexualIntercourse}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.everHadSexualIntercourse !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.everHadSexualIntercourse}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Blood transfusion in last 3 months *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"bloodtransInlastThreeMonths\"\r\n                                        id=\"bloodtransInlastThreeMonths\"\r\n                                        value={riskAssessment.bloodtransInlastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.bloodtransInlastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.bloodtransInlastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected sex with casual partner in last 3 months *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedSexWithCasualLastThreeMonths\"\r\n                                        id=\"uprotectedSexWithCasualLastThreeMonths\"\r\n                                        value={riskAssessment.uprotectedSexWithCasualLastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.uprotectedSexWithCasualLastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedSexWithCasualLastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected sex with regular partner in the last 3months</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\r\n                                        id=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\r\n                                        value={riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.uprotectedSexWithRegularPartnerLastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedSexWithRegularPartnerLastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected vaginal sex</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedVaginalSex\"\r\n                                        id=\"unprotectedVaginalSex\"\r\n                                        value={riskAssessment.unprotectedVaginalSex}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.unprotectedVaginalSex !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.unprotectedVaginalSex}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Anal sex</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedAnalSex\"\r\n                                        id=\"uprotectedAnalSex\"\r\n                                        value={riskAssessment.uprotectedAnalSex}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.uprotectedAnalSex !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedAnalSex}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>         \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>STI in last 3 months *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"stiLastThreeMonths\"\r\n                                        id=\"stiLastThreeMonths\"\r\n                                        value={riskAssessment.stiLastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.stiLastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.stiLastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Sex under the influence of drugs or alcohol*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sexUnderInfluence\"\r\n                                        id=\"sexUnderInfluence\"\r\n                                        value={riskAssessment.sexUnderInfluence}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.sexUnderInfluence !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.sexUnderInfluence}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>More than 1 sex partner during last 3 months*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                                        id=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                                        value={riskAssessment.moreThanOneSexPartnerLastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.moreThanOneSexPartnerLastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.moreThanOneSexPartnerLastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <Message warning>\r\n                                <h4>Personal HIV Risk assessment score (sum of all 7 answers)</h4>\r\n                                <b>Score : {riskCount.length}</b>\r\n                            </Message>\r\n                            <hr/>\r\n                            <br/>\r\n                            </>)}\r\n                            {props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && ( <>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you/your partner experienced lower abdominal pain, smelly discharge, blisters and wounds around you/partner vagina, penis anus or mouth?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"experiencePain\"\r\n                                        id=\"experiencePain\"\r\n                                        value={riskAssessment.experiencePain}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.experiencePain !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.experiencePain}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you/partner had sex without a condom with someone of unknown HIV status, or you/partner raped by person with unknown HIV status? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveSexWithoutCondom\"\r\n                                        id=\"haveSexWithoutCondom\"\r\n                                        value={riskAssessment.haveSexWithoutCondom}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveSexWithoutCondom !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveSexWithoutCondom}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had a condom burst with your partner during sexual intercourse?  *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveCondomBurst\"\r\n                                        id=\"haveCondomBurst\"\r\n                                        value={riskAssessment.haveCondomBurst}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveCondomBurst !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveCondomBurst}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Do you/partner share needles/syringes, other sharp objects or used abuse drug substances of any kind?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"abuseDrug\"\r\n                                        id=\"abuseDrug\"\r\n                                        value={riskAssessment.abuseDrug}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.abuseDrug !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.abuseDrug}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you/partner had any blood or blood product transfusion?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"bloodTransfusion\"\r\n                                        id=\"bloodTransfusion\"\r\n                                        value={riskAssessment.bloodTransfusion}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.bloodTransfusion !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.bloodTransfusion}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you/partner experienced coughing, weight loss, fever, night sweats consistently?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"consistentWeightFeverNightCough\"\r\n                                        id=\"consistentWeightFeverNightCough\"\r\n                                        value={riskAssessment.consistentWeightFeverNightCough}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.consistentWeightFeverNightCough !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.consistentWeightFeverNightCough}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>            \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you/partner paid or sold vaginal, anal or oral sex? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"soldPaidVaginalSex\"\r\n                                        id=\"soldPaidVaginalSex\"\r\n                                        value={riskAssessment.soldPaidVaginalSex}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.soldPaidVaginalSex !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.soldPaidVaginalSex}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <Message warning>\r\n                                <h4>Personal HIV Risk assessment score (sum of all 7 answers)</h4>\r\n                                <b>Score :{riskCount.length}</b>\r\n                            </Message>\r\n                            <hr/>\r\n                            <br/>\r\n                            </>)}\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Sex Partner Risk Assessment (Last 3 months)</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had sex with a partner who is HIV positive? </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sexPartnerHivPositive\"\r\n                                        id=\"sexPartnerHivPositive\"\r\n                                        value={riskAssessmentPartner.sexPartnerHivPositive}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.sexPartnerHivPositive !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.sexPartnerHivPositive}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            {riskAssessmentPartner.sexPartnerHivPositive==='true' && (<>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Is sex partner newly diagnosed with HIV and started treatment less than 3-6 months ago?*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"newDiagnosedHivlastThreeMonths\"\r\n                                        id=\"newDiagnosedHivlastThreeMonths\"\r\n                                        value={riskAssessmentPartner.newDiagnosedHivlastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.newDiagnosedHivlastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.newDiagnosedHivlastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Is sex partner pregnant and currently receiving ARV for PMTCT?*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"currentlyArvForPmtct\"\r\n                                        id=\"currentlyArvForPmtct\"\r\n                                        value={riskAssessmentPartner.currentlyArvForPmtct}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.currentlyArvForPmtct !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.currentlyArvForPmtct}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Known HIV positive partner on ARV with an unsurpressed VL</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"knowHivPositiveOnArv\"\r\n                                        id=\"knowHivPositiveOnArv\"\r\n                                        value={riskAssessmentPartner.knowHivPositiveOnArv}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.knowHivPositiveOnArv !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.knowHivPositiveOnArv}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Known HIV positive recently returned to treatment after being lost to follow up</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"knowHivPositiveAfterLostToFollowUp\"\r\n                                        id=\"knowHivPositiveAfterLostToFollowUp\"\r\n                                        value={riskAssessmentPartner.knowHivPositiveAfterLostToFollowUp}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.knowHivPositiveAfterLostToFollowUp !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.knowHivPositiveAfterLostToFollowUp}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Anal sex</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedAnalSex\"\r\n                                        id=\"uprotectedAnalSex\"\r\n                                        value={riskAssessmentPartner.uprotectedAnalSex}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.uprotectedAnalSex !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedAnalSex}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            </>)}\r\n                            <Message warning>\r\n                                <h4>Sex Partner Risk Assessment score (sum of all 6 answers)</h4>\r\n                                <b>Score :{sexPartRiskCount.length}</b>\r\n                            </Message>        \r\n                            \r\n                            <hr/>\r\n                            <br/>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#014D88', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Syndromic STI Screening</div>\r\n                            {props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (\r\n                            <>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of vaginal discharge or burning when urinating?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"vaginalDischarge\"\r\n                                        id=\"vaginalDischarge\"\r\n                                        value={stiScreening.vaginalDischarge}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.vaginalDischarge !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.vaginalDischarge}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of lower abdominal pains with or without vaginal discharge?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lowerAbdominalPains\"\r\n                                        id=\"lowerAbdominalPains\"\r\n                                        value={stiScreening.lowerAbdominalPains}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lowerAbdominalPains !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lowerAbdominalPains}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            </>)}\r\n                            {props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (\r\n                            <>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of urethral discharge or burning when urinating?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"urethralDischarge\"\r\n                                        id=\"urethralDischarge\"\r\n                                        value={stiScreening.urethralDischarge}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.urethralDischarge !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.urethralDischarge}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of scrotal swelling and pain</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"complaintsOfScrotal\"\r\n                                        id=\"complaintsOfScrotal\"\r\n                                        value={stiScreening.complaintsOfScrotal}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.complaintsOfScrotal !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.complaintsOfScrotal}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of genital sore(s) or swollen inguinal lymph nodes with or without pains?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"complaintsGenitalSore\"\r\n                                        id=\"complaintsGenitalSore\"\r\n                                        value={stiScreening.complaintsGenitalSore}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.complaintsGenitalSore !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.complaintsGenitalSore}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            </>)} \r\n                            <Message warning>\r\n                                <h4>Calculate the sum of the STI screening. If {\">= \"}1, should be referred for STI test </h4>\r\n                                <b>Score :{stiCount.length}</b>\r\n                            </Message>\r\n                           \r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-12\">\r\n                            <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('basic','basic')}/>\r\n                            <Button content='Save & Continue' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default BasicInfo","import React, {useCallback, useEffect, useState} from \"react\";\r\n\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {toast} from \"react-toastify\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Label as LabelRibbon, Button} from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst HivTestResult = (props) => {\r\n    const classes = useStyles();\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    let temp = { ...errors }\r\n    console.log(props.patientObj)\r\n    const patientID= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.id : \"\";\r\n    const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n    const [hivTestDate, setHivTestDate] = useState(\"\");\r\n    const [showCD4Count, setShowCD4Count] = useState(true);\r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n    };\r\n    const patientAge=calculate_age(moment(props.patientObj.personResponseDto && props.patientObj.personResponseDto.dateOfBirth ? props.patientObj.personResponseDto.dateOfBirth : 0).format(\"DD-MM-YYYY\"))\r\n   \r\n    const [objValues, setObjValues]= useState(\r\n        {\r\n            confirmatoryTest: {},\r\n            confirmatoryTest2: {},\r\n            hivTestResult: \"\",\r\n            hivTestResult2: \"\",\r\n            htsClientId:\"\",\r\n            personId: props.patientObj  ? props.patientObj.id : \"\",\r\n            test1: {},\r\n            test2: {},\r\n            tieBreakerTest: {},\r\n            tieBreakerTest2: {},\r\n            syphilisTesting:{},\r\n            hepatitisTesting:{},\r\n            others:{},\r\n            cd4:{},\r\n        }\r\n    )\r\n    const handleInputChange = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});            \r\n    }\r\n    const [initialTest1, setInitailTest]= useState(\r\n        {\r\n            date:\"\",\r\n            result:\"\",            \r\n        }\r\n    )\r\n    const [initialTest12, setInitailTest2]= useState(\r\n        {\r\n            date2 :\"\",\r\n            result2  :\"\",            \r\n        }\r\n    )\r\n    const handleInputChangeCd4Count = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setCd4Count ({...cd4Count,  [e.target.name]: e.target.value});            \r\n    }\r\n    const [cd4Count, setCd4Count]= useState(\r\n        {\r\n            cd4Count:\"\",\r\n            cd4SemiQuantitative:\"\",\r\n            cd4FlowCyteometry:\"\"            \r\n        }\r\n    )\r\n    const handleInputChangeInitial = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        if(e.target.value==='No'){\r\n            setInitailTest ({...initialTest1,  [e.target.name]: e.target.value}); \r\n            setConfirmatoryTest({\r\n                date :\"\",\r\n                result  :\"\",            \r\n            })\r\n            setTieBreakerTest({\r\n                date :\"\",\r\n                result  :\"\",            \r\n            })\r\n            //This is to show cd4 count section\r\n            setShowCD4Count(false)\r\n                \r\n        }else{\r\n            setInitailTest ({...initialTest1,  [e.target.name]: e.target.value});\r\n            //This is to show cd4 count section \r\n            setShowCD4Count(true)\r\n        }            \r\n    }\r\n    const handleInputChangeInitial2 = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        if(e.target.value==='No'){\r\n            setInitailTest2 ({...initialTest12,  [e.target.name]: e.target.value});  \r\n            setConfirmatoryTest2({\r\n                date :\"\",\r\n                result  :\"\",            \r\n            })\r\n            setTieBreakerTest2({\r\n                date :\"\",\r\n                result  :\"\",            \r\n            })\r\n            //This is to show cd4 count section\r\n            setShowCD4Count(false)\r\n        }else{\r\n            setInitailTest2 ({...initialTest12,  [e.target.name]: e.target.value});\r\n            //This is to show cd4 count section \r\n            setShowCD4Count(true) \r\n        }           \r\n    }\r\n    const [confirmatoryTest, setConfirmatoryTest]= useState(\r\n        {\r\n            date :\"\",\r\n            result  :\"\",            \r\n        }\r\n    )\r\n    const [confirmatoryTest2, setConfirmatoryTest2]= useState(\r\n        {\r\n            date2 :\"\",\r\n            result2  :\"\",            \r\n        }\r\n    )\r\n    const handleInputChangeConfirmatory = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setConfirmatoryTest ({...confirmatoryTest,  [e.target.name]: e.target.value});\r\n        //This is to show cd4 count section \r\n        if(initialTest1.result==='Yes' && e.target.value==='Yes'){\r\n            setShowCD4Count(true)\r\n\r\n        }else{\r\n            setShowCD4Count(true)\r\n        }              \r\n    }\r\n    const handleInputChangeConfirmatory2 = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setConfirmatoryTest2 ({...confirmatoryTest2,  [e.target.name]: e.target.value}); \r\n        //This is to show cd4 count section \r\n        if(initialTest12.result2==='Yes' && e.target.value==='Yes'){\r\n            setShowCD4Count(true)\r\n\r\n        }else{\r\n            setShowCD4Count(true)\r\n        }                 \r\n    }\r\n    const [tieBreakerTest, setTieBreakerTest]= useState(\r\n        {\r\n            date :\"\",\r\n            result  :\"\",            \r\n        }\r\n    )\r\n    const [tieBreakerTest2, setTieBreakerTest2]= useState(\r\n        {\r\n            date2 :\"\",\r\n            result2  :\"\",            \r\n        }\r\n    )\r\n    const handleInputChangeTie = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setTieBreakerTest ({...tieBreakerTest,  [e.target.name]: e.target.value});  \r\n        //This is to show cd4 count section\r\n        if(confirmatoryTest.result==='No' && e.target.value==='Yes'){\r\n            setShowCD4Count(true)\r\n        }else if(confirmatoryTest.result==='No' && e.target.value==='No'){\r\n            setShowCD4Count(false)\r\n        }else{\r\n            setShowCD4Count(true)\r\n        }         \r\n    }\r\n    const handleInputChangeTie2 = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setTieBreakerTest2 ({...tieBreakerTest2,  [e.target.name]: e.target.value});\r\n        //This is to show cd4 count section\r\n        if(confirmatoryTest2.result2==='No' && e.target.value==='Yes'){\r\n            setShowCD4Count(true)\r\n        }else if(confirmatoryTest2.result2==='No' && e.target.value==='No'){\r\n            setShowCD4Count(false)\r\n        }else{\r\n            setShowCD4Count(true)\r\n        }                     \r\n    }\r\n    const [syphills, setSyphills]= useState(\r\n        {\r\n            syphilisTestResult :\"\",\r\n           // result  :\"\",            \r\n        }\r\n    )\r\n    const handleInputChangeSyphills = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setSyphills ({...syphills,  [e.target.name]: e.target.value});            \r\n    }\r\n    const [hepatitis, setHepatitis]= useState(\r\n        {\r\n            hepatitisCTestResult :\"\",\r\n            hepatitisBTestResult  :\"\", \r\n            longitude:\"\",\r\n            latitude:\"\",\r\n            adhocCode :\"\"                       \r\n        }\r\n    )\r\n    const handleInputChangeHepatitis = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setHepatitis ({...hepatitis,  [e.target.name]: e.target.value});            \r\n    }\r\n    const [others, setOthers]= useState(\r\n        {\r\n            longitude:\"\",\r\n            latitude:\"\",\r\n            adhocCode :\"\"                       \r\n        }\r\n    )\r\n    useEffect(() => { \r\n        //console.log(props.patientObj)\r\n        if(props.patientObj){\r\n            if(props.patientObj.dateVisit && props.patientObj.dateVisit!=='' ){\r\n                setHivTestDate(props.patientObj.dateVisit)\r\n            }else{\r\n                setHivTestDate(\"\")\r\n            }\r\n            setCd4Count(props.patientObj  && props.patientObj.cd4!==null? props.patientObj.cd4 : {})\r\n            setInitailTest(props.patientObj  && props.patientObj.test1!==null? props.patientObj.test1 : {})\r\n            setConfirmatoryTest(props.patientObj  && props.patientObj.confirmatoryTest!==null? props.patientObj.confirmatoryTest : {})\r\n            setTieBreakerTest(props.patientObj && props.patientObj.tieBreakerTest!==null ? props.patientObj.tieBreakerTest : {})\r\n            setSyphills(props.patientObj  && props.patientObj.syphilisTesting!==null ? props.patientObj.syphilisTesting : {})\r\n            setHepatitis(props.patientObj  && props.patientObj.hepatitisTesting!==null ? props.patientObj.hepatitisTesting : {})\r\n            setOthers(props.patientObj  && props.patientObj.others!==null ? props.patientObj.others : {})\r\n            \r\n            setInitailTest2(props.patientObj  && props.patientObj.test2!==null? props.patientObj.test2 : {})\r\n            setConfirmatoryTest2(props.patientObj  && props.patientObj.confirmatoryTest2!==null? props.patientObj.confirmatoryTest2 : {})\r\n            setTieBreakerTest2(props.patientObj && props.patientObj.tieBreakerTest2!==null ? props.patientObj.tieBreakerTest2 : {})\r\n        }\r\n    }, [props.patientObj]);//initialTest12, tieBreakerTest2, confirmatoryTest2, \r\n\r\n    const handleInputChangeOthers = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setOthers ({...others,  [e.target.name]: e.target.value});            \r\n    }\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n    }\r\n    const validate = () => {\r\n        //HTS FORM VALIDATION\r\n        initialTest1.date!==\"\" &&  (temp.date = initialTest1.result ? \"\" : \"This field is required.\")\r\n        // initialTest1.result!==\"\"  && (temp.date = confirmatoryTest.date ? \"\" : \"This field is required.\")\r\n        // initialTest1.result!==\"\"  && (temp.date = tieBreakerTest.date ? \"\" : \"This field is required.\")\r\n              \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        if(validate()){\r\n                    //logic to get Hiv result test\r\n        if(initialTest12.result2==='No' ){\r\n            objValues.hivTestResult2=\"Negative\"\r\n        }else if(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='Yes'){\r\n            objValues.hivTestResult2=\"Positive\" \r\n        }\r\n        // else if(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='No' && tieBreakerTest2.result2===''){\r\n        //     objValues.hivTestResult2=\"Negative\" \r\n        // }\r\n        else if(confirmatoryTest2.result2==='No' && tieBreakerTest2.result2==='Yes'){\r\n            objValues.hivTestResult2=\"Positive\" \r\n        }else if(confirmatoryTest2.result2==='No' && tieBreakerTest2.result2==='No'){\r\n            objValues.hivTestResult2=\"Negative\" \r\n        }else{\r\n            objValues.hivTestResult2=\"\"\r\n        }\r\n      \r\n        if(initialTest1.result==='No' ){\r\n            objValues.hivTestResult=\"Negative\"\r\n        }else if(initialTest1.result==='Yes' && confirmatoryTest.result==='Yes'){\r\n            objValues.hivTestResult=\"Positive\"\r\n        }\r\n        // else if(initialTest1.result==='Yes' && confirmatoryTest.result==='No' && tieBreakerTest.result===''){\r\n        //     objValues.hivTestResult=\"Negative\"\r\n        // }\r\n        else if(confirmatoryTest.result==='No' && tieBreakerTest.result==='Yes'){\r\n            objValues.hivTestResult=\"Positive\"\r\n        }else if(confirmatoryTest.result==='No' && tieBreakerTest.result==='No'){\r\n            objValues.hivTestResult=\"Negative\"\r\n        }else{\r\n            objValues.hivTestResult=\"\"\r\n        }\r\n            objValues.htsClientId= clientId\r\n            objValues.confirmatoryTest= confirmatoryTest\r\n            objValues.confirmatoryTest2= confirmatoryTest2\r\n            objValues.personId= patientID\r\n            objValues.test1= initialTest1\r\n            objValues.test2= initialTest12\r\n            objValues.tieBreakerTest=tieBreakerTest\r\n            objValues.tieBreakerTest2=tieBreakerTest2\r\n            objValues.syphilisTesting=syphills\r\n            objValues.hepatitisTesting=hepatitis\r\n           \r\n            objValues.cd4=cd4Count\r\n            objValues.others=others\r\n            axios.put(`${baseUrl}hts/${clientId}/request-result`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}}, )\r\n            .then(response => {\r\n                setSaving(false);\r\n                props.setPatientObj(response.data)\r\n                //console.log(response.data)\r\n                //props.setPatientObj(props && props.patientObj ? props.patientObj : \"\")\r\n                //toast.success(\"HIV test successful\");\r\n                handleItemClick('post-test', 'hiv-test')\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n            });\r\n        }   \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n               \r\n                <h2 style={{color:'#000'}}>REQUEST AND RESULT FORM</h2>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>HIV TEST RESULT</h4>\r\n                        </LabelRibbon>\r\n                           <br/>\r\n                           <div className=\"form-group  col-md-2\"></div>\r\n                            <h4>Initial HIV Test 1:</h4>\r\n                            <div className=\"form-group mb-3 col-md-5\">\r\n                                <FormGroup>\r\n                                <Label for=\"\"> Date  </Label>\r\n                                <Input\r\n                                    type=\"date\"\r\n                                    name=\"date\"\r\n                                    id=\"date\"\r\n                                    value={initialTest1.date}\r\n                                    onChange={handleInputChangeInitial}\r\n                                    min={hivTestDate!==\"\" && hivTestDate!==null ? hivTestDate  :\"\"}\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    required\r\n                                />\r\n                                {errors.date !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.date}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            {initialTest1.date && (\r\n                            <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                    <Label>Result </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"result\"\r\n                                        id=\"result\"\r\n                                        value={initialTest1.result}\r\n                                        onChange={handleInputChangeInitial}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={ initialTest1.date===\"\"? true : false}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Reactive</option>\r\n                                        <option value=\"No\">Non Reactive</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.result !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.result}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            <div className=\"form-group  col-md-2\"></div>\r\n                            {initialTest1.result ==='Yes' && (\r\n                            <>\r\n                            <h4>Confirmatory Test:</h4>\r\n                            <div className=\"form-group mb-3 col-md-5\">\r\n                                <FormGroup>\r\n                                <Label for=\"\"> Date  </Label>\r\n                                <Input\r\n                                    type=\"date\"\r\n                                    name=\"date\"\r\n                                    id=\"date\"\r\n                                    value={confirmatoryTest.date}\r\n                                    onChange={handleInputChangeConfirmatory}\r\n                                    min={initialTest1.date}\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    required\r\n                                />\r\n                                {errors.dateOfEac1 !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfEac1}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            {confirmatoryTest.date && (\r\n                            <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                    <Label>Result </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"result\"\r\n                                        id=\"result\"\r\n                                        value={confirmatoryTest.result}\r\n                                        onChange={handleInputChangeConfirmatory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={confirmatoryTest.date===''? true : false}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Reactive</option>\r\n                                        <option value=\"No\">Non Reactive</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            <div className=\"form-group  col-md-2\"></div>\r\n                            </>\r\n                            )}\r\n                            {confirmatoryTest.result ==='No' && (\r\n                            <>\r\n                            <h4>Tie Breaker Test:</h4>\r\n                            <div className=\"form-group mb-3 col-md-5\">\r\n                                <FormGroup>\r\n                                <Label for=\"\"> Date  </Label>\r\n                                <Input\r\n                                    type=\"date\"\r\n                                    name=\"date\"\r\n                                    id=\"date\"\r\n                                    value={tieBreakerTest.date}\r\n                                    onChange={handleInputChangeTie}\r\n                                    min={confirmatoryTest.date}\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    required\r\n                                />\r\n                               \r\n                                </FormGroup>\r\n                            </div>\r\n                            {tieBreakerTest.date && (\r\n                            <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                    <Label>Result </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"result\"\r\n                                        id=\"result\"\r\n                                        value={tieBreakerTest.result}\r\n                                        onChange={handleInputChangeTie}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={tieBreakerTest.date===''? true : false}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Reactive</option>\r\n                                        <option value=\"No\">Non Reactive</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            <div className=\"form-group  col-md-2\"></div>\r\n\r\n                            </>)}\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group  col-md-12\">  \r\n                                {initialTest1.result==='No' &&  (\r\n                                    <LabelRibbon color=\"green\" >\r\n                                        Negative\r\n                                    </LabelRibbon>\r\n                                )}                       \r\n                                {initialTest1.result==='No' && confirmatoryTest.result==='No' &&  (\r\n                                    <LabelRibbon color=\"green\" >\r\n                                    Negative\r\n                                </LabelRibbon>\r\n                                )}\r\n                                \r\n                                {(initialTest1.result==='Yes' && confirmatoryTest.result==='Yes' ) && (\r\n                                    <>\r\n                                    <LabelRibbon color=\"red\" >\r\n                                        Positive\r\n                                    </LabelRibbon>\r\n                                    <br/>\r\n                                    <hr/>\r\n                                    <div className=\"row\">\r\n                                        <h4>Initial HIV Test 2:</h4>\r\n                                        <div className=\"form-group mb-3 col-md-5\">\r\n                                            <FormGroup>\r\n                                            <Label for=\"\"> Date </Label>\r\n                                            <Input\r\n                                                type=\"date\"\r\n                                                name=\"date2\"\r\n                                                id=\"date2\"\r\n                                                value={initialTest12.date2}\r\n                                                onChange={handleInputChangeInitial2}\r\n                                                min={confirmatoryTest.date}\r\n                                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                                required\r\n                                            />\r\n                                            {errors.date2 !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.date2}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-5\">\r\n                                            <FormGroup>\r\n                                                <Label>Result  </Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    name=\"result2\"\r\n                                                    id=\"result2\"\r\n                                                    value={initialTest12.result2}\r\n                                                    onChange={handleInputChangeInitial2}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    disabled={initialTest12.date2===''? true : false}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    <option value=\"Yes\">Reactive</option>\r\n                                                    <option value=\"No\">Non Reactive</option>\r\n                                                    \r\n                                                </select>\r\n                                                {errors.result2 !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.result2}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                   \r\n                                        <div className=\"form-group  col-md-2\"></div>\r\n                                        {initialTest12.result2 ==='Yes' && (\r\n                                        <>\r\n                                        <h4>Confirmatory Test 2:</h4>\r\n                                        <div className=\"form-group mb-3 col-md-5\">\r\n                                            <FormGroup>\r\n                                            <Label for=\"\"> Date  </Label>\r\n                                            <Input\r\n                                                type=\"date\"\r\n                                                name=\"date2\"\r\n                                                id=\"date2\"\r\n                                                value={confirmatoryTest2.date2}\r\n                                                onChange={handleInputChangeConfirmatory2}\r\n                                                min={initialTest12.date2}\r\n                                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                                required\r\n                                            />\r\n                                           \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group  col-md-5\">\r\n                                            <FormGroup>\r\n                                                <Label>Result </Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    name=\"result2\"\r\n                                                    id=\"result2\"\r\n                                                    value={confirmatoryTest2.result2}\r\n                                                    onChange={handleInputChangeConfirmatory2}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    disabled={confirmatoryTest2.date2===''? true : false}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    <option value=\"Yes\">Reactive</option>\r\n                                                    <option value=\"No\">Non Reactive</option>\r\n                                                    \r\n                                                </select>\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group  col-md-2\"></div>\r\n                                        </>\r\n                                        )}\r\n                                        {confirmatoryTest2.result2 ==='No' && (\r\n                                        <>\r\n                                        <h4>Tie Breaker Test 2:</h4>\r\n                                        <div className=\"form-group mb-3 col-md-5\">\r\n                                            <FormGroup>\r\n                                            <Label for=\"\"> Date  </Label>\r\n                                            <Input\r\n                                                type=\"date\"\r\n                                                name=\"date2\"\r\n                                                id=\"date2\"\r\n                                                value={tieBreakerTest2.date2}\r\n                                                onChange={handleInputChangeTie2}\r\n                                                min={confirmatoryTest2.date2}\r\n                                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                                required\r\n                                            />\r\n                                        \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group  col-md-5\">\r\n                                            <FormGroup>\r\n                                                <Label>Result </Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    name=\"result2\"\r\n                                                    id=\"result2\"\r\n                                                    value={tieBreakerTest2.result2}\r\n                                                    onChange={handleInputChangeTie2}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    disabled={tieBreakerTest2.date2===''?true : false}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    <option value=\"Yes\">Reactive</option>\r\n                                                    <option value=\"No\">Non Reactive</option>\r\n                                                    \r\n                                                </select>\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group  col-md-2\"></div>\r\n            \r\n                                        </>)}\r\n                                    </div>\r\n                                    </>\r\n                                )}\r\n                                {/* This is result for Test 1 */}\r\n                                {/* {(initialTest1.result==='Yes' && confirmatoryTest.result==='No' && tieBreakerTest.result==='' ) && (\r\n                                    <LabelRibbon color=\"green\" >\r\n                                        Negative\r\n                                    </LabelRibbon>\r\n                                )} */}\r\n                                {(confirmatoryTest.result==='No' && tieBreakerTest.result==='Yes' ) && (<>\r\n                                    <LabelRibbon color=\"red\" >\r\n                                        Positive\r\n                                    </LabelRibbon>\r\n                                    <br/>\r\n                                    <hr/>\r\n                                   \r\n                                    <div className=\"row\">\r\n                                        <h4>Initial HIV Test 2:</h4>\r\n                                        <div className=\"form-group mb-3 col-md-5\">\r\n                                            <FormGroup>\r\n                                            <Label for=\"\"> Date  </Label>\r\n                                            <Input\r\n                                                type=\"date\"\r\n                                                name=\"date2\"\r\n                                                id=\"date2\"\r\n                                                value={initialTest12.date2}\r\n                                                onChange={handleInputChangeInitial2}\r\n                                                min={ tieBreakerTest.date}\r\n                                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                                required\r\n                                            />\r\n                                            {errors.date2 !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.date2}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group  col-md-5\">\r\n                                            <FormGroup>\r\n                                                <Label>Result  </Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    name=\"result2\"\r\n                                                    id=\"result2\"\r\n                                                    value={initialTest12.result2}\r\n                                                    onChange={handleInputChangeInitial2}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    disabled={initialTest12.date2===''?true : false}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    <option value=\"Yes\">Reactive</option>\r\n                                                    <option value=\"No\">Non Reactive</option>\r\n                                                    \r\n                                                </select>\r\n                                                {errors.result2 !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.result2}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group  col-md-2\"></div>\r\n                                        {initialTest12.result2 ==='Yes' && (\r\n                                        <>\r\n                                        <h4>Confirmatory Test 2:</h4>\r\n                                        <div className=\"form-group mb-3 col-md-5\">\r\n                                            <FormGroup>\r\n                                            <Label for=\"\"> Date  </Label>\r\n                                            <Input\r\n                                                type=\"date\"\r\n                                                name=\"date2\"\r\n                                                id=\"date2\"\r\n                                                value={confirmatoryTest2.date2}\r\n                                                onChange={handleInputChangeConfirmatory2}\r\n                                                min={initialTest12.date2}\r\n                                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                                required\r\n                                            />\r\n                                           \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group  col-md-5\">\r\n                                            <FormGroup>\r\n                                                <Label>Result </Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    name=\"result2\"\r\n                                                    id=\"result2\"\r\n                                                    value={confirmatoryTest2.result2}\r\n                                                    onChange={handleInputChangeConfirmatory2}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    disabled={confirmatoryTest2.date2===''?true : false}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    <option value=\"Yes\">Reactive</option>\r\n                                                    <option value=\"No\">Non Reactive</option>\r\n                                                    \r\n                                                </select>\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group  col-md-2\"></div>\r\n                                        </>\r\n                                        )}\r\n                                        {confirmatoryTest2.result2 ==='No' && (\r\n                                        <>\r\n                                        <h4>Tie Breaker Test 2:</h4>\r\n                                        <div className=\"form-group mb-3 col-md-5\">\r\n                                            <FormGroup>\r\n                                            <Label for=\"\"> Date  </Label>\r\n                                            <Input\r\n                                                type=\"date\"\r\n                                                name=\"date2\"\r\n                                                id=\"date2\"\r\n                                                value={tieBreakerTest2.date2}\r\n                                                onChange={handleInputChangeTie2}\r\n                                                min={confirmatoryTest2.date2}\r\n                                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                                required\r\n                                            />\r\n                                        \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group  col-md-5\">\r\n                                            <FormGroup>\r\n                                                <Label>Result </Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    name=\"result2\"\r\n                                                    id=\"result2\"\r\n                                                    value={tieBreakerTest2.result2}\r\n                                                    onChange={handleInputChangeTie2}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    disabled={tieBreakerTest2.date2===''?true : false}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    <option value=\"Yes\">Reactive</option>\r\n                                                    <option value=\"No\">Non Reactive</option>\r\n                                                    \r\n                                                </select>\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group  col-md-2\"></div>\r\n            \r\n                                        </>)}\r\n                                    </div>\r\n                                    </>\r\n                                )}\r\n                                {(confirmatoryTest.result==='No' && tieBreakerTest.result==='No' && (initialTest1.result==='Yes' || initialTest1.result==='Yes' || initialTest1.result==='')) && (\r\n                                    <LabelRibbon color=\"green\" >\r\n                                        Negative\r\n                                    </LabelRibbon>\r\n                                )}\r\n                                 {/* END of  result for Test 1 */}\r\n                                {/* This is result for Test 2 */}\r\n                                {initialTest12.result2==='No' &&  (\r\n                                    <LabelRibbon color=\"green\" >\r\n                                        Negative\r\n                                    </LabelRibbon>\r\n                                )} \r\n                                {initialTest12.result2==='No' && confirmatoryTest2.result2==='No'  && (\r\n                                    <LabelRibbon color=\"green\" >\r\n                                        Negative\r\n                                    </LabelRibbon>\r\n                                )}\r\n                                \r\n                                {(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='Yes' ) && (\r\n                                    <>\r\n                                    <LabelRibbon color=\"red\" >\r\n                                        Positive\r\n                                    </LabelRibbon>\r\n                                    <br/>\r\n                                    </>\r\n                                )}\r\n                                {/* {(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='No' && tieBreakerTest2.result2==='' ) && (\r\n                                    <LabelRibbon color=\"green\" >\r\n                                        Negative\r\n                                    </LabelRibbon>\r\n                                )} */}\r\n                                {(confirmatoryTest2.result2==='No' && tieBreakerTest2.result2==='Yes' ) && (\r\n                                    <LabelRibbon color=\"red\" >\r\n                                        Positive\r\n                                    </LabelRibbon>\r\n                                )}\r\n                                {(confirmatoryTest2.result2==='No' && tieBreakerTest2.result2==='No' && (initialTest12.result2==='Yes' || initialTest12.result2==='Yes' || initialTest12.result2==='')) && (\r\n                                    <LabelRibbon color=\"green\" >\r\n                                        Negative\r\n                                    </LabelRibbon>\r\n                                )}\r\n                                \r\n                                 {/* END of  result for Test 2*/}\r\n                            </div>\r\n                            </div>\r\n                            {showCD4Count && (<>\r\n                            <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                                <h5 style={{color:'#fff'}}>CD4 Count</h5>\r\n                            </LabelRibbon>\r\n                            <br/> <br/>\r\n                            <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                    <Label>CD4 Count </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"cd4Count\"\r\n                                        id=\"cd4Count\"\r\n                                        value={cd4Count.cd4Count}\r\n                                        onChange={handleInputChangeCd4Count}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Semi-Quantitative\">Semi-Quantitative</option>\r\n                                        <option value=\"Flow Cyteometry\">Flow Cyteometry</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            {cd4Count.cd4Count ==='Semi-Quantitative' && (\r\n                            <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                    <Label>CD4 Count Value</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"cd4SemiQuantitative\"\r\n                                        id=\"cd4SemiQuantitative\"\r\n                                        value={cd4Count.cd4SemiQuantitative}\r\n                                        onChange={handleInputChangeCd4Count}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Semi-Quantitative\">{\"<200\"}</option>\r\n                                        <option value=\"Flow Cyteometry\">{\">=200\"}</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            {cd4Count.cd4Count ==='Flow Cyteometry' && (\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">CD4 Count Value</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"cd4FlowCyteometry\"\r\n                                    id=\"cd4FlowCyteometry\"\r\n                                    value={cd4Count.cd4FlowCyteometry}\r\n                                    onChange={handleInputChangeCd4Count}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    \r\n                                />\r\n                                 \r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            <div className=\"form-group  col-md-7\"></div>\r\n                           \r\n                            </>)}\r\n                            <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                            <h5 style={{color:'#fff'}}>Syphilis Testing</h5>\r\n                        </LabelRibbon>\r\n                        <br/> <br/>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Syphilis test result *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"syphilisTestResult\"\r\n                                        id=\"syphilisTestResult\"\r\n                                        value={syphills.syphilisTestResult}\r\n                                        onChange={handleInputChangeSyphills}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Reactive</option>\r\n                                        <option value=\"No\">Non-Reactive</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n \r\n                            <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                            <h5 style={{color:'#fff'}}>Hepatitis Testing</h5>\r\n                            </LabelRibbon>\r\n                            <br/> <br/>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Hepatitis B virus test result *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hepatitisBTestResult\"\r\n                                        id=\"hepatitisBTestResult\"\r\n                                        value={hepatitis.hepatitisBTestResult}\r\n                                        onChange={handleInputChangeHepatitis}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Positive</option>\r\n                                        <option value=\"No\">Negative</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Hepatitis C virus test result *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hepatitisCTestResult\"\r\n                                        id=\"hepatitisCTestResult\"\r\n                                        value={hepatitis.hepatitisCTestResult}\r\n                                        onChange={handleInputChangeHepatitis}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                       <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Positive</option>\r\n                                        <option value=\"No\">Negative</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                            <h5 style={{color:'#fff'}}>Others</h5>\r\n                            </LabelRibbon>\r\n                            <br/> <br/>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Longitude</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"longitude\"\r\n                                    id=\"longitude\"\r\n                                    value={others.longitude}\r\n                                    onChange={handleInputChangeOthers}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Latitude</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"latitude\"\r\n                                    id=\"latitude\"\r\n                                    value={others.latitude}\r\n                                    onChange={handleInputChangeOthers}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Adhoc Code</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"adhocCode\"\r\n                                    id=\"adhocCode\"\r\n                                    value={others.adhocCode}\r\n                                    onChange={handleInputChangeOthers}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-12\">\r\n                            {patientAge<=15 ? \r\n                            (<>\r\n                                <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('basic', 'basic')}/>\r\n                            </>)\r\n                            :\r\n                            (<>\r\n                                <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('pre-test-counsel', 'pre-test-counsel')}/>\r\n                            </>)\r\n                            }\r\n                            \r\n                            <Button content='Save & Continue' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default HivTestResult","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl } from \"../../../../api\";\r\nimport { toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\n// import {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Button} from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst AddIndexContact = (props) => {\r\n    const classes = useStyles();\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [sexs, setSexs] = useState([])\r\n    const [notificationContact, setNotificationContact] = useState([])\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [indexTesting, setIndexTesting]= useState([]);\r\n    const [consent, setConsent]= useState([]);\r\n    const [hivTestDate, setHivTestDate] = useState(\"\");\r\n   \r\n    const [objValuesIndex, setObjValuesIndex]= useState( {\r\n        htsClientId: null,\r\n        indexNotificationServicesElicitation: {},\r\n        personId: null\r\n      })\r\n   \r\n    const [objValues, setObjValues]= useState(\r\n        {\r\n            firstName: \"\",\r\n            middleName: \"\",\r\n            lastName:\"\",\r\n            dob:\"\",\r\n            phoneNumber:\"\",\r\n            altPhoneNumber: \"\",\r\n            sex: \"\",\r\n            htsClientId:props  && props.patientObj ? props.patientObj.id : \"\",\r\n            physicalHurt: \"\",\r\n            threatenToHurt: \"\",\r\n            address: \"\", \r\n            hangOutSpots: \"\",\r\n            relativeToIndexClient: \"\",\r\n            currentlyLiveWithPartner: \"\", \r\n            partnerTestedPositive: \"\",\r\n            sexuallyUncomfortable: \"\", \r\n            notificationMethod : \"\",\r\n            datePartnerCameForTesting: \"\",\r\n        }\r\n    )\r\n           \r\n    useEffect(() => { \r\n        Sex();\r\n        NotificationContact();\r\n        IndexTesting();\r\n        Consent();\r\n        if(props.patientObj){\r\n\r\n            if(props.patientObj.dateVisit && props.patientObj.dateVisit!=='' ){\r\n                setHivTestDate(props.patientObj.dateVisit)\r\n            }else{\r\n                setHivTestDate(\"\")\r\n            }\r\n        }\r\n    }, [props.patientObj]);\r\n\r\n    //Get list of Genders from \r\n    const Sex =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/SEX`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setSexs(response.data);\r\n\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    //Get list of IndexTesting\r\n    const IndexTesting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/INDEX_TESTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setIndexTesting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    ///CONSENT\tYes\t\ten\tCONSENT\r\n    const Consent =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/CONSENT`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setConsent(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const NotificationContact =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/NOTIFICATION_CONTACT`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setNotificationContact(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n        \r\n    }\r\n    const handleItemClickPage =(page)=>{\r\n        props.handleIClickPage(page)\r\n    }\r\n    const handleInputChange = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setObjValues ({...objValues,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setObjValues ({...objValues,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setObjValues ({...objValues,  [e.target.name]: name});\r\n        } \r\n        // if((e.target.name !=='maritalStatusId' && e.target.value!=='5' )){//logic for marital status\r\n        //     setHideNumChild(true)\r\n        // }else{\r\n        //     setHideNumChild(false)\r\n        // }         \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});            \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            objValues.age=age_now\r\n            \r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setObjValues({...objValues, age:  \"\"});\r\n        }\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n   \r\n        setObjValues({...objValues, dob: e.target.value});\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            objValues.isDateOfBirthEstimated=false\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            objValues.isDateOfBirthEstimated=true\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            setObjValues({...objValues, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            objValues.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setObjValues({...objValues, age: e.target.value});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n        setObjValues({...objValues,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();     \r\n        objValues.isDateOfBirthEstimated=objValues.isDateOfBirthEstimated==true ? 1 : 0\r\n            axios.post(`${baseUrl}index-elicitation`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n            .then(response => {\r\n                setSaving(false);\r\n                toast.success(\"Record save successful\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n                handleItemClickPage('list')\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage,  {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n            });\r\n            \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n                \r\n                <h2 style={{color:'#000'}}>Index Notification Services - Elicitation \r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\" float-end  mr-2 mt-2\"\r\n                    onClick={()=>handleItemClickPage('list')}\r\n                    //startIcon={<FaUserPlus size=\"10\"/>}\r\n                >\r\n                    <span style={{ textTransform: \"capitalize\" }}> Back To Client Index List</span>\r\n                </Button>\r\n                </h2>\r\n                <br/><br/>    \r\n                    <form >\r\n                        <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">First Name</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"firstName\"\r\n                                    id=\"firstName\"\r\n                                    value={objValues.firstName}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Middle Name</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"middleName\"\r\n                                    id=\"middleName\"\r\n                                    value={objValues.middleName}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Last Name</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"lastName\"\r\n                                    id=\"lastName\"\r\n                                    value={objValues.lastName}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-2 col-md-2\">\r\n                                <FormGroup>\r\n                                    <Label>Date Of Birth</Label>\r\n                                    <div className=\"radio\">\r\n                                        <label>\r\n                                            <input\r\n                                                type=\"radio\"\r\n                                                value=\"Actual\"\r\n                                                name=\"dateOfBirth\"\r\n                                                defaultChecked\r\n                                                \r\n                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            /> Actual\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"radio\">\r\n                                        <label>\r\n                                            <input\r\n                                                type=\"radio\"\r\n                                                value=\"Estimated\"\r\n                                                name=\"dateOfBirth\"\r\n                                                \r\n                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            /> Estimated\r\n                                        </label>\r\n                                    </div>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Date</Label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dob\"\r\n                                        id=\"dob\"\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        value={objValues.dob}\r\n                                        onChange={handleDobChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Age</Label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"number\"\r\n                                        name=\"age\"\r\n                                        id=\"age\"\r\n                                        value={objValues.age}\r\n                                        disabled={ageDisabled}\r\n                                        onChange={handleAgeChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Phone Number</Label>\r\n                                \r\n                                    <PhoneInput\r\n                                        containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                        inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                        country={'ng'}\r\n                                        placeholder=\"(234)7099999999\"\r\n                                        minLength={10}\r\n                                        name=\"phoneNumber\"\r\n                                        id=\"phoneNumber\"\r\n                                        masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                        value={objValues.phoneNumber}\r\n                                        onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                    />\r\n                                    {errors.phoneNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                        ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Alternative Phone Number</Label>\r\n                                <PhoneInput\r\n                                        containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                        inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                        country={'ng'}\r\n                                        placeholder=\"(234)7099999999\"\r\n                                        minLength={10}\r\n                                        name=\"altPhoneNumber\"\r\n                                        id=\"altPhoneNumber\"\r\n                                        masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                        value={objValues.altPhoneNumber}\r\n                                        onChange={(e)=>{checkPhoneNumberBasic(e,'altPhoneNumber')}}\r\n                                        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                    />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Sex *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sex\"\r\n                                        id=\"sex\"\r\n                                        value={objValues.sex}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {sexs.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>                           \r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Address</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"address\"\r\n                                    id=\"address\"\r\n                                    value={objValues.address}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}                                   \r\n                                />                                \r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Hang-out spots</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"hangOutSpots\"\r\n                                    id=\"hangOutSpots\"\r\n                                    value={objValues.hangOutSpots}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}                                   \r\n                                />                                \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Relationship to Index Client *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"relativeToIndexClient\"\r\n                                        id=\"relativeToIndexClient\"\r\n                                        value={objValues.relativeToIndexClient}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {indexTesting.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                            ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Do you currently live with this partner? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"currentlyLiveWithPartner\"\r\n                                        id=\"currentlyLiveWithPartner\"\r\n                                        value={objValues.currentlyLiveWithPartner}\r\n                                        onChange={handleInputChange}        \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value={\"true\"}>Yes</option>\r\n                                        <option value={\"false\"}>No</option>\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>As far as you know, as this partner ever tested positive for HIV *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"partnerTestedPositive\"\r\n                                        id=\"partnerTestedPositive\"\r\n                                        value={objValues.partnerTestedPositive}\r\n                                        onChange={handleInputChange} \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {consent.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Has this partner ever hit, kick, slapped or otherwise physical hurt you? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"physicalHurt\"\r\n                                        id=\"physicalHurt\"\r\n                                        value={objValues.physicalHurt}\r\n                                        onChange={handleInputChange} \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                         <option value={\"\"}></option>\r\n                                        {consent.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Has this partner ever threaten to hurt you? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"threatenToHurt\"\r\n                                        id=\"threatenToHurt\"\r\n                                        value={objValues.threatenToHurt}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {consent.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                           \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Has this partner ever threaten force you to do something sexually that made you uncomfortable ?  *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sexuallyUncomfortable\"\r\n                                        id=\"sexuallyUncomfortable\"\r\n                                        value={objValues.sexuallyUncomfortable}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                         <option value={\"\"}></option>\r\n                                        {consent.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Notification Method selected*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"notificationMethod\"\r\n                                        id=\"notificationMethod\"\r\n                                        value={objValues.notificationMethod}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {notificationContact.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">If contract by which date will partner come for testing?</Label>\r\n                                <Input\r\n                                    type=\"date\"\r\n                                    name=\"datePartnerCameForTesting\"\r\n                                    id=\"datePartnerCameForTesting\"\r\n                                    value={objValues.datePartnerCameForTesting}\r\n                                    onChange={handleInputChange}\r\n                                    min={hivTestDate}\r\n                                    //max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    \r\n                                />\r\n                                {errors.datePartnerComeForTesting !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.datePartnerComeForTesting}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                           \r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                           \r\n                            <Button content='Save' icon='save' labelPosition='left' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddIndexContact","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../../api\";\r\n//import { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\nimport moment from \"moment\";\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n\r\n    const [indexClientList, setIndexClientList] = useState([])\r\n    //const [patientObj, setpatientObj] = useState([])\r\n    const patientId = props.patientObj && props.patientObj.id ? props.patientObj.id: null\r\n    //const [key, setKey] = useState('home');\r\n    //console.log(props)\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n    ///GET LIST OF Patients\r\n    async function patients() {\r\n        axios\r\n            .get(`${baseUrl}hts/${props.patientObj.id}/index-elicitation`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                console.log(response.data)\r\n                setIndexClientList(response.data);\r\n            })\r\n            .catch((error) => {    \r\n            });        \r\n    }\r\n    const handleItemClickPage =(page)=>{\r\n        props.handleIClickPage(page)\r\n    }\r\n    const handleIEditIndex =(page, activePage)=> {\r\n        console.log(page)\r\n        console.log(activePage)\r\n        //props.setActivePage({...props.activePage, activePage:\"activePage\", activeObject:row, actionType:actionType})\r\n        //props.handleIClickPage(page)\r\n    }\r\n\r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now + \" year(s)\";\r\n      };\r\n\r\n\r\n  return (\r\n    <div>     \r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\" float-end  mr-2 mt-2\"\r\n            onClick={()=>handleItemClickPage('add')}\r\n            //startIcon={<FaUserPlus size=\"10\"/>}\r\n        >\r\n            <span style={{ textTransform: \"capitalize\" }}>New Index Client </span>\r\n        </Button>\r\n        <br/><br/><br/><br/>\r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"List of index client \"\r\n              columns={[\r\n              { title: \"Name\", field: \"name\" },\r\n              { title: \"Age\", field: \"age\" },\r\n              { title: \"Phone Number\", field: \"phone\" },  \r\n              {title: \"Adress\",field: \"address\",},   \r\n              { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              data={ indexClientList.map((row) => ({\r\n                name: row.firstName + \" \" + row.lastName,\r\n                age:calculate_age(moment(row.dob).format(\"DD-MM-YYYY\")),\r\n                phone:row.phoneNumber, \r\n                address:row.address,  \r\n                actions:(\r\n                        <>\r\n                        {/* <Menu.Menu position='right'  >\r\n                            <Menu.Item >\r\n                                <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                                <Dropdown item text='Action'>\r\n\r\n                                <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                \r\n                                <Dropdown.Item  \r\n                                //onClick={()=>handleIEditIndex(row, 'update')}\r\n                                >\r\n                                    <Icon name='edit' />Edit</Dropdown.Item>\r\n                                <Dropdown.Item  \r\n                                //onClick={()=>LoadDeletePage(row, 'delete')}\r\n                                > <Icon name='trash' /> Delete</Dropdown.Item>\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                                </Button>\r\n                            </Menu.Item>\r\n                        </Menu.Menu> */}\r\n                        </>\r\n                        )\r\n                    }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              //backgroundColor: \"#9F9FA5\",\r\n                              color: \"#000\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientnHistory;\r\n\r\n\r\n","import React, {useState, Fragment } from \"react\";\r\n\r\nimport { Row, Col, Card, } from \"react-bootstrap\";\r\nimport AddIndexContact from './AddIndexContact';\r\nimport IndexContactList from './IndexContactList'\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { Link } from 'react-router-dom';\r\n//import Button from '@material-ui/core/Button';\r\nimport {Label as LabelRibbon, Button} from 'semantic-ui-react'\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\n\r\nconst Elicitation = (props) => {\r\n    //console.log(props.patientObj)\r\n    const [activePage, setActivePage]= useState('list')\r\n    const handleIClickPage =(activeItem)=>{\r\n        setActivePage(activeItem)\r\n    }\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n    }\r\n    const handleDone=()=>{\r\n      props.setActivePage({...props.activePage, activePage:\"home\",})\r\n    }\r\n\r\n  return (\r\n    <Fragment>  \r\n     \r\n      <Row>       \r\n        <Col md={12}>\r\n            {activePage==='list' &&\r\n                (\r\n                    <IndexContactList activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>\r\n                )\r\n            }\r\n            {activePage==='add' && (\r\n                  <AddIndexContact activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>        \r\n            )}\r\n            <br />\r\n                <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                <Button content='Done' icon='list' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleDone()}/>\r\n                \r\n                </div>\r\n                </div>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Elicitation;\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\n// import {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\n// import {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Label as LabelRibbon} from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst BasicInfo = (props) => {\r\n    const classes = useStyles();\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n               \r\n                <h3 >OTHERS - (Resquest {\"& \"} Result Form)</h3>\r\n               <hr/>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                            <h5 style={{color:'#fff'}}>Syphilis Testing</h5>\r\n                        </LabelRibbon>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Syphilis test result *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"syphilisTestResult\"\r\n                                        id=\"syphilisTestResult\"\r\n                                        \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Reactive</option>\r\n                                        <option value=\"No\">Non-Reactive</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <hr/>\r\n                            <br/>\r\n                            <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                            <h5 style={{color:'#fff'}}>Hepatitis B Testing</h5>\r\n                            </LabelRibbon>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Hepatitis B virus test result *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hepatitisBTestResult\"\r\n                                        id=\"hepatitisBTestResult\"\r\n                                        \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Positive</option>\r\n                                        <option value=\"No\">Negative</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Hepatitis C virus test result *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hepatitisCTestResult\"\r\n                                        id=\"hepatitisCTestResult\"\r\n                                        \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                       <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Positive</option>\r\n                                        <option value=\"No\">Negative</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>HIV Request and Result form filled with CT Intake Form *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivRequestResultCT\"\r\n                                        id=\"hivRequestResultCT\"\r\n                                        \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Yes</option>\r\n                                        <option value=\"No\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Completed By</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"completedBy\"\r\n                                    id=\"completedBy\"\r\n                                    // value={objValues.lastViralLoad}\r\n                                    // onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Longitude</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"longitude\"\r\n                                    id=\"longitude\"\r\n                                    // value={objValues.lastViralLoad}\r\n                                    // onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Latitude</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"latitude\"\r\n                                    id=\"latitude\"\r\n                                    // value={objValues.lastViralLoad}\r\n                                    // onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Adhoc Code</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"adhocCode\"\r\n                                    id=\"adhocCode\"\r\n                                    // value={objValues.lastViralLoad}\r\n                                    // onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                                                      \r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <MatButton\r\n                            type=\"button\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon />}\r\n                            onClick={()=>handleItemClick('basic','others')}\r\n                            style={{backgroundColor:\"#014d88\"}}\r\n                            //disabled={objValues.dateOfEac1===\"\" ? true : false}\r\n                            >\r\n                            {!saving ? (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                            ) : (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                            )}\r\n                            </MatButton>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default BasicInfo","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useHistory, } from \"react-router-dom\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Label as LabelRibbon, Button, Message} from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst PostTest = (props) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const patientID= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.id : \"\";\r\n    const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n    const [saving, setSaving] = useState(false);\r\n    console.log(props.patientObj)\r\n    ///const [errors, setErrors] = useState({});\r\n    const [objValues, setObjValues]= useState(\r\n        {\r\n            htsClientId: clientId,\r\n            postTestCounselingKnowledgeAssessment: {},\r\n            personId: patientID,\r\n        }\r\n    )\r\n\r\n    const [postTest, setPostTest]= useState(\r\n        {\r\n            hivTestResult:\"\", \r\n            hivTestBefore:\"\", \r\n            hivRequestResult:\"\", \r\n            hivRequestResultCt:\"\",                             \r\n            clientReceivedHivTestResult:\"\", \r\n            postTestCounseling:\"\", \r\n            riskReduction:\"\", \r\n            postTestDisclosure:\"\",\r\n            bringPartnerHivtesting:\"\", \r\n            childrenHivtesting:\"\", \r\n            informationFp:\"\", \r\n            partnerFpThanCondom:\"\", \r\n            partnerFpUseCondom:\"\",\r\n            correctCondomUse:\"\", \r\n            condomProvidedToClient:\"\", \r\n            unprotectedSexRegularPartnerLastThreeMonth:\"\", \r\n            referredToServices:\"\",\r\n        }\r\n    )\r\n    useEffect(() => { \r\n        //console.log(props.patientObj)\r\n        if(props.patientObj && props.patientObj.postTestCounselingKnowledgeAssessment){\r\n            setPostTest(props.patientObj.postTestCounselingKnowledgeAssessment) \r\n        }else{\r\n            ///setPostTest(props.patientObj && props.patientObj.postTestCounselingKnowledgeAssessment!==null ? props.patientObj.postTestCounselingKnowledgeAssessment : {}) \r\n            if(postTest.hivTestResult===\"\" && props.patientObj.hivTestResult!==\"\" && props.patientObj.hivTestResult!==null && (props.patientObj.hivTestResult==='Positive' || props.patientObj.hivTestResult2==='Positive')){\r\n                postTest.hivTestResult='True'\r\n                setPostTest({...postTest, hivTestResult:'True' })\r\n            }else if(postTest.hivTestResult===\"\"  && props.patientObj.hivTestResult!==\"\" && props.patientObj.hivTestResult!==null && (props.patientObj.hivTestResult==='Negative' || props.patientObj.hivTestResult2==='Negative')){\r\n                postTest.hivTestResult='False'\r\n                setPostTest({...postTest, hivTestResult:'False' })\r\n            }\r\n        }\r\n    }, [props.patientObj,postTest.hivTestResult]);\r\n    const handleInputChangePostTest = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"})        \r\n        setPostTest ({...postTest,  [e.target.name]: e.target.value});           \r\n    }\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        //handleItemClick('recency-testing', 'post-test')\r\n        if(!(Object.values(postTest).every(x => x === \"\"))){\r\n            objValues.htsClientId=  props.patientObj.id\r\n            objValues.postTestCounselingKnowledgeAssessment= postTest\r\n            objValues.personId= props.patientObj.personResponseDto.id\r\n            axios.put(`${baseUrl}hts/${ props.patientObj.id}/post-test-counseling`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n            .then(response => {\r\n                setSaving(false);\r\n                props.setPatientObj(response.data)\r\n                //toast.success(\"Risk Assesment successful\");\r\n                if(postTest.hivTestResult==='True'){\r\n                    handleItemClick('recency-testing', 'post-test')\r\n                }else if(postTest.hivTestResult==='False'){\r\n                    history.push('/');\r\n                }\r\n                \r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n            });\r\n        }else{\r\n            toast.error(\"All post test fields are required\")  \r\n        \r\n        }\r\n            \r\n    }\r\n\r\n    console.log(postTest.hivTestResult)\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n               \r\n                <h2 >POST TEST COUNSELING</h2>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                            {/* <h5 style={{color:'#fff'}}>Knowledge Assessment</h5> */}\r\n                        </LabelRibbon>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>HIV test result *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivTestResult\"\r\n                                        id=\"hivTestResult\"\r\n                                        value={postTest.hivTestResult}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"True\">Positive</option>\r\n                                        <option value=\"False\">Negative</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you been tested for HIV before within this year? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivTestBefore\"\r\n                                        id=\"hivTestBefore\"\r\n                                        value={postTest.hivTestBefore}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Not previously tested\">Not previously tested</option>\r\n                                        <option value=\"Previously tested negative\">Previously tested negative</option>\r\n                                        <option value=\"Previously tested positive in HIV care\">Previously tested positive in HIV care</option>\r\n                                        <option value=\"Previously tested positive not in HIV care\">Previously tested positive not in HIV care</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>HIV Request and Result form signed by tester *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivRequestResult\"\r\n                                        id=\"hivRequestResult\"\r\n                                        value={postTest.hivRequestResult}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>HIV Request and Result form filled with CT Intake Form *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivRequestResultCt\"\r\n                                        id=\"hivRequestResultCt\"\r\n                                        value={postTest.hivRequestResultCt}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client received HIV test result *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clientReceivedHivTestResult\"\r\n                                        id=\"clientReceivedHivTestResult\"\r\n                                        value={postTest.clientReceivedHivTestResult}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Post test counseling done *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"postTestCounseling\"\r\n                                        id=\"postTestCounseling\"\r\n                                        value={postTest.postTestCounseling}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Risk reduction plan developed *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"riskReduction\"\r\n                                        id=\"riskReduction\"\r\n                                        value={postTest.riskReduction}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Post test disclosure plan developed *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"postTestDisclosure\"\r\n                                        id=\"postTestDisclosure\"\r\n                                        value={postTest.postTestDisclosure}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>                            \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Will bring partner(s) for HIV testing *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"bringPartnerHivtesting\"\r\n                                        id=\"bringPartnerHivtesting\"\r\n                                        value={postTest.bringPartnerHivtesting}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Will bring own children {'<5'} years for HIV testing *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"childrenHivtesting\"\r\n                                        id=\"childrenHivtesting\"\r\n                                        value={postTest.childrenHivtesting}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Provided with information on FP and dual contraception *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"informationFp\"\r\n                                        id=\"informationFp\"\r\n                                        value={postTest.informationFp}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client/Partner use FP methods (other than condom)*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"partnerFpThanCondom\"\r\n                                        id=\"partnerFpThanCondom\"\r\n                                        value={postTest.partnerFpThanCondom}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client/Partner use condoms as (one) FP method </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"partnerFpUseCondom\"\r\n                                        id=\"partnerFpUseCondom\"\r\n                                        value={postTest.partnerFpUseCondom}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Correct condom use demonstrated *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"correctCondomUse\"\r\n                                        id=\"correctCondomUse\"\r\n                                        value={postTest.correctCondomUse}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Condoms provided to client *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"condomProvidedToClient\"\r\n                                        id=\"condomProvidedToClient\"\r\n                                        value={postTest.condomProvidedToClient}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            {/* <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected sex with regular partner in the last 3months</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedSexRegularPartnerLastThreeMonth\"\r\n                                        id=\"unprotectedSexRegularPartnerLastThreeMonth\"\r\n                                        value={postTest.unprotectedSexRegularPartnerLastThreeMonth}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div> */}\r\n                            {/* <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected sex with regular particular in the last 3 months</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sex\"\r\n                                        id=\"sex\"\r\n                                        \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Yes</option>\r\n                                        <option value=\"No\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div> */}\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client referred to other services *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"referredToServices\"\r\n                                        id=\"referredToServices\"\r\n                                        value={postTest.referredToServices}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <Message success>\r\n                                <h4>If client tests HIV negative, and HIV Risk Assessment Score {\">0\"} or\r\n                                    there is evidence for a STI syndrome, recommend re-testing after 3 months</h4>\r\n                                \r\n                            </Message>\r\n                                                \r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-12\">\r\n                                <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('hiv-test', 'hiv-test')}/>\r\n                                {postTest.hivTestResult==='True' && (\r\n                                    <Button content='Save & Continue' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\r\n                                )}\r\n                                {postTest.hivTestResult==='False' && (\r\n                                    <Button content='Save & Finish' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\r\n                                )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default PostTest","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport { toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Label as LabelRibbon, Button} from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst Recency = (props) => {\r\n    const classes = useStyles();\r\n    const patientID= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.id : \"\";\r\n    const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [hivTestDate, setHivTestDate] = useState(\"\");\r\n    let temp = { ...errors }\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n    }\r\n\r\n    const [objValues, setObjValues]= useState(\r\n        {\r\n            htsClientId: clientId,\r\n            recency: {},\r\n            personId: patientID,\r\n        }\r\n    )\r\n    const [recency, setRecency]= useState(\r\n        {\r\n            optOutRTRI:\"\", \r\n            optOutRTRITestName:\"\", \r\n            optOutRTRITestDate:\"\", \r\n            rencencyId:\"\",  \r\n            controlLine:\"\",  \r\n            verififcationLine:\"\", \r\n            longTermLine:\"\",  \r\n            rencencyInterpretation:\"\", \r\n            hasViralLoad:\"\", \r\n            sampleCollectedDate:\"\",\r\n            sampleReferanceNumber:\"\",\r\n            dateSampleSentToPCRLab:\"\",\r\n            sampleTestDate:\"\",\r\n            sampleType:\"\", \r\n            receivingPcrLab:\"\", \r\n            viralLoadResultClassification:\"\",\r\n            recencyResult:\"\", \r\n            finalRecencyResult:\"\",\r\n        }\r\n    )\r\n    \r\n    useEffect(() => { \r\n        if(props.patientObj){\r\n            setRecency(props.patientObj && props.patientObj.recency!==null ? props.patientObj.recency : {})\r\n            if(props.patientObj.confirmatoryTest && props.patientObj.confirmatoryTest.date!=='' ){\r\n                setHivTestDate(props.patientObj.confirmatoryTest.date)\r\n            }else if(props.patientObj.confirmatoryTest2 && props.patientObj.confirmatoryTest2.date2!=='' ){\r\n                setHivTestDate(props.patientObj.confirmatoryTest2.date2)\r\n            }else{\r\n                setHivTestDate(\"\")\r\n            }\r\n        }\r\n        if(recency.longTermLine==='true' && recency.verififcationLine==='true' && recency.controlLine==='true'){\r\n            recency.rencencyInterpretation=\"Long Term\"\r\n            setRecency ({...recency,  ['rencencyInterpretation']: 'Long Term'}); \r\n        \r\n        }else if(recency.longTermLine==='false' && recency.verififcationLine==='true' && recency.controlLine==='true'){\r\n            recency.rencencyInterpretation=\"Recent\"\r\n            setRecency ({...recency,  ['rencencyInterpretation']: 'Recent'});\r\n            //setRecency ({...recency,  ['hasViralLoad']: 'true'});\r\n            \r\n        }else if(recency.longTermLine==='false' && recency.verififcationLine==='false' && recency.controlLine==='true'){\r\n            recency.rencencyInterpretation=\"Negative\"\r\n            setRecency ({...recency,  ['rencencyInterpretation']: 'Negative'});\r\n            \r\n        }else if(recency.longTermLine==='true' && recency.verififcationLine==='true' && recency.controlLine==='false'){\r\n            recency.rencencyInterpretation=\"Invalid\"\r\n            setRecency ({...recency,  ['rencencyInterpretation']: 'Invalid'});\r\n           \r\n        }else if(recency.longTermLine==='true' && recency.verififcationLine==='false' && recency.controlLine==='true'){\r\n            recency.rencencyInterpretation=\"Invalid\"\r\n            setRecency ({...recency,  ['rencencyInterpretation']: 'Invalid'});\r\n            \r\n        }else{\r\n            \r\n            setRecency ({...recency,  ['rencencyInterpretation']: ''});\r\n        }\r\n    },[recency.longTermLine,recency.verififcationLine, recency.controlLine, props.patientObj]);\r\n    console.log(props.patientObj)\r\n    const handleInputChangeRecency = e => { \r\n        setErrors({...temp, [e.target.name]:\"\"})        \r\n        if(e.target.name ==='viralLoadResultClassification'){\r\n             \r\n            if(e.target.value ==='>=1000'){\r\n                recency.finalRecencyResult='RITA Recent'\r\n                setRecency ({...recency,  [e.target.name]: e.target.value}); \r\n            \r\n            }else if(e.target.value ==='<1000') {\r\n                recency.finalRecencyResult='RITA Long term'\r\n                setRecency ({...recency,  [e.target.name]: e.target.value}); \r\n            }else if(e.target.value ==='Failed run') {\r\n                recency.finalRecencyResult='RITA Inconclusive'\r\n                setRecency ({...recency,  [e.target.name]: e.target.value}); \r\n            }else if(e.target.value ==='Invalid viral load result') {\r\n                recency.finalRecencyResult='RITA Inconclusive'\r\n                setRecency ({...recency,  [e.target.name]: e.target.value}); \r\n            }else{\r\n                setRecency ({...recency,  [e.target.name]: e.target.value}); \r\n            }\r\n        }else if(e.target.name==='rencencyId' && e.target.value!==''){\r\n            const recencyIdNumberValue = checkRecencyLimit(e.target.value)\r\n            setRecency ({...recency,  [e.target.name]: recencyIdNumberValue});\r\n        }else {\r\n            setRecency ({...recency,  [e.target.name]: e.target.value}); \r\n        }\r\n         \r\n    }\r\n    const checkRecencyLimit=(e)=>{\r\n        const limit = 10;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        //HTS FORM VALIDATION\r\n            {recency.sampleCollectedDate!=='' && (temp.sampleReferanceNumber = recency.sampleReferanceNumber ? \"\" : \"This field is required.\")}\r\n            {  recency.sampleCollectedDate!=='' && (temp.dateSampleSentToPCRLab = recency.dateSampleSentToPCRLab ? \"\" : \"This field is required.\")}\r\n            { recency.sampleCollectedDate!=='' && (temp.sampleType = recency.sampleType ? \"\" : \"This field is required.\")}\r\n            setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n       \r\n\r\n            objValues.htsClientId= clientId\r\n            objValues.recency= recency\r\n            objValues.personId= patientID\r\n            console.log(recency)\r\n            axios.put(`${baseUrl}hts/${clientId}/recency`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n            .then(response => {\r\n                setSaving(false);\r\n                props.setPatientObj(response.data)\r\n                //toast.success(\"Risk Assesment successful\");\r\n                handleItemClick('indexing', 'recency-testing' )\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n            });\r\n        \r\n            \r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>               \r\n                <h2>RECENCY FORM</h2>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                            <h5 style={{color:'#fff'}}>RENCENCY</h5>\r\n                        </LabelRibbon>\r\n                        <br/><br/><br/>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Opt Out of RTRI?*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"optOutRTRI\"\r\n                                        id=\"optOutRTRI\"\r\n                                        value={recency.optOutRTRI}\r\n                                        onChange={handleInputChangeRecency}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-8\"></div>\r\n                            {recency.optOutRTRI==='false' && (\r\n                            <>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Test Name *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"optOutRTRITestName\"\r\n                                        id=\"optOutRTRITestName\"\r\n                                        value={recency.optOutRTRITestName}\r\n                                        onChange={handleInputChangeRecency}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Asante\">Asante</option>\r\n                                        <option value=\"Others\">Others</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Test Date *</Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"optOutRTRITestDate\"\r\n                                        id=\"optOutRTRITestDate\"\r\n                                        value={recency.optOutRTRITestDate}\r\n                                        onChange={handleInputChangeRecency}\r\n                                        min={hivTestDate!==\"\" && hivTestDate!==null ? hivTestDate :\"\"}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    \r\n                                    />\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Recency ID *</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        name=\"rencencyId\"\r\n                                        id=\"rencencyId\"\r\n                                        type=\"text\"\r\n                                        value={recency.rencencyId}\r\n                                        onChange={handleInputChangeRecency}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                 \r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Control Line *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"controlLine\"\r\n                                        id=\"controlLine\"\r\n                                        value={recency.controlLine}\r\n                                        onChange={handleInputChangeRecency}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Verification Line *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"verififcationLine\"\r\n                                        id=\"verififcationLine\"\r\n                                        value={recency.verififcationLine}\r\n                                        onChange={handleInputChangeRecency}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Long Term Line *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"longTermLine\"\r\n                                        id=\"longTermLine\"\r\n                                        value={recency.longTermLine}\r\n                                        onChange={handleInputChangeRecency}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Recency Interpretation *</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        name=\"rencencyInterpretation\"\r\n                                        id=\"rencencyInterpretation\"\r\n                                        type=\"text\"\r\n                                        value={recency.rencencyInterpretation}\r\n                                        disabled\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                       \r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            {recency.rencencyInterpretation==='Recent' && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Has viral load request been made? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hasViralLoad\"\r\n                                        id=\"hasViralLoad\"\r\n                                        value={recency.hasViralLoad}\r\n                                        onChange={handleInputChangeRecency}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            {recency.hasViralLoad==='true' && (\r\n                            <>\r\n                                <div className=\"row\">\r\n                                    <h4>Viral Load Classification :</h4>\r\n                                    <br/>\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Sample Collected Date</Label>\r\n                                        <Input\r\n                                            className=\"form-control\"\r\n                                            name=\"sampleCollectedDate\"\r\n                                            id=\"sampleCollectedDate\"\r\n                                            type=\"date\"\r\n                                            value={recency.sampleCollectedDate}\r\n                                            min={recency.optOutRTRITestDate}\r\n                                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        />\r\n                                    \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Sample Refernce Number</Label>\r\n                                        <Input\r\n                                            className=\"form-control\"\r\n                                            name=\"sampleReferanceNumber\"\r\n                                            id=\"sampleReferanceNumber\"\r\n                                            type=\"text\"\r\n                                            value={recency.sampleReferanceNumber}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        />\r\n                                        {errors.sampleReferanceNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sampleReferanceNumber}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Sample Type</Label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name=\"sampleType\"\r\n                                            id=\"sampleType\"\r\n                                            value={recency.sampleType}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        >\r\n                                            <option value={\"\"}></option>\r\n                                            <option value=\"DBS\">DBS</option>\r\n                                            <option value=\"Plasma\">Plasma</option>\r\n                                            \r\n                                        </select>\r\n                                        {errors.sampleType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sampleType}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Date Sample Sent to PCR Lab</Label>\r\n                                        <Input\r\n                                            className=\"form-control\"\r\n                                            name=\"dateSampleSentToPCRLab\"\r\n                                            id=\"dateSampleSentToPCRLab\"\r\n                                            type=\"date\"\r\n                                            min={recency.optOutRTRITestDate}\r\n                                            value={recency.dateSampleSentToPCRLab}\r\n                                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        />\r\n                                         {errors.dateSampleSentToPCRLab !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateSampleSentToPCRLab}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Sample Test Date</Label>\r\n                                        <Input\r\n                                            className=\"form-control\"\r\n                                            name=\"sampleTestDate\"\r\n                                            id=\"sampleTestDate\"\r\n                                            type=\"date\"\r\n                                            min={recency.optOutRTRITestDate}\r\n                                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                            value={recency.sampleTestDate}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        />\r\n                                        \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Receiving PCR Lab</Label>\r\n                                        <Input\r\n                                            className=\"form-control\"\r\n                                            name=\"receivingPcrLab\"\r\n                                            id=\"receivingPcrLab\"\r\n                                            type=\"text\"\r\n                                            value={recency.receivingPcrLab}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        />\r\n                                        \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Viral Load Result Classification and Result (copies/ml)</Label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name=\"viralLoadResultClassification\"\r\n                                            id=\"viralLoadResultClassification\"\r\n                                            value={recency.viralLoadResultClassification}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        >\r\n                                            <option value={\"\"}>Select</option>\r\n                                            <option value=\">=1000\">{\">= \"} 1000</option>\r\n                                            <option value=\"<1000\">{\"< \"} 1000</option>\r\n                                            <option value=\"Failed run\">Failed run</option>\r\n                                            <option value=\"Invalid viral load result\">Invalid viral load result</option>\r\n                                            \r\n                                        </select>\r\n                                        \r\n                                    </FormGroup>\r\n                                </div>\r\n                                {/* <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Result (copies/ml)</Label>\r\n                                        <Input\r\n                                            className=\"form-control\"\r\n                                            name=\"recencyResult\"\r\n                                            id=\"recencyResult\"\r\n                                            type=\"text\"\r\n                                            value={recency.recencyResult}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        />\r\n                                        \r\n                                    </FormGroup>\r\n                                </div> */}\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Final Recency Result</Label>\r\n                                        <Input\r\n                                            className=\"form-control\"\r\n                                            name=\"finalRecencyResult\"\r\n                                            id=\"finalRecencyResult\"\r\n                                            type=\"text\"\r\n                                            disabled\r\n                                            value={recency.finalRecencyResult}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        />\r\n\r\n                                    </FormGroup>\r\n                                </div>\r\n                                </div>\r\n                            </>\r\n                            )}\r\n                            </>)}\r\n                                                      \r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-12\">\r\n                            <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('post-test','post-test')}/>\r\n                            <Button content='Save & Continue' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default Recency","\r\nimport React, { useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card,} from \"@material-ui/core\";\r\nimport { toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useHistory, } from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport {Label as LabelRibbon, Message} from 'semantic-ui-react'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },\r\n    success:{\r\n        color: 'green',\r\n        fontSize: '12.8px',\r\n        fontWeight:'bold'\r\n    }\r\n}));\r\n\r\n\r\nconst RiskStratification = (props) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    //console.log(props)\r\n    const [enrollSetting, setEnrollSetting] = useState([]);\r\n    let riskCountQuestion=[]\r\n    const [kP, setKP] = useState([]);\r\n    const [errors, setErrors] = useState({});\r\n    const [saving, setSaving] = useState(false);\r\n    let temp = { ...errors }\r\n    const [open, setOpen] = React.useState(false)\r\n    const toggle = () => setOpen(!open);\r\n    const [setting, setSetting] = useState([]);\r\n    const [riskCount, setRiskCount] = useState(0);\r\n    const [objValues, setObjValues]= useState(\r\n        {\r\n            age:props.patientAge,\r\n            dob:\"\",//props.patientObj.dateOfBirth && props.patientObj.dateOfBirth!==null ? props.patientObj.dateOfBirth :\"\",\r\n            visitDate: \"\",         \r\n            dateOfBirth: \"\",//props.patientObj.dateOfBirth && props.patientObj.dateOfBirth!==null ? props.patientObj.dateOfBirth :\"\",\r\n            dateOfRegistration: \"\",//props.patientObj.dateOfRegistration,\r\n            isDateOfBirthEstimated: \"\",//props.patientObj.isDateOfBirthEstimated,//\r\n            targetGroup:\"\",\r\n            testingSetting:\"\",//\r\n            modality  :\"\", //\r\n            code:\"\",\r\n            personId: \"\",//props.patientObj.personId,\r\n            riskAssessment: {},\r\n            entryPoint:\"\"\r\n\r\n        }\r\n    )\r\n    const [riskAssessment, setRiskAssessment]= useState(\r\n        {\r\n            everHadSexualIntercourse:\"\",\r\n            bloodtransInlastThreeMonths:\"\",\r\n            uprotectedSexWithCasualLastThreeMonths:\"\",\r\n            uprotectedSexWithRegularPartnerLastThreeMonths:\"\", \r\n            unprotectedVaginalSex:\"\",  \r\n            uprotectedAnalSex:\"\",   \r\n            stiLastThreeMonths:\"\",\r\n            sexUnderInfluence :\"\",\r\n            moreThanOneSexPartnerLastThreeMonths:\"\",\r\n            experiencePain:\"\",\r\n            haveSexWithoutCondom:\"\",\r\n            abuseDrug:\"\",\r\n            bloodTransfusion:\"\",\r\n            consistentWeightFeverNightCough:\"\",\r\n            soldPaidVaginalSex:\"\",\r\n            //New Question\r\n            lastHivTestForceToHaveSex:\"\", \r\n            lastHivTestHadAnal:\"\",\r\n            lastHivTestInjectedDrugs:\"\",\r\n            whatWasTheResult:\"\",\r\n            lastHivTestDone:\"\",\r\n            diagnosedWithTb:\"\",\r\n            lastHivTestPainfulUrination:\"\",\r\n            lastHivTestBloodTransfusion:\"\",\r\n            lastHivTestVaginalOral:\"\",\r\n            lastHivTestBasedOnRequest:\"\"\r\n        }\r\n    )\r\n    useEffect(() => { \r\n        KP();\r\n        EnrollmentSetting();\r\n    }, [props.patientObj]);\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TEST_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => { \r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        if(e.target.name==='testingSetting' && e.target.value!==\"\"){\r\n            SettingModality(e.target.value)\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value}); \r\n        }\r\n        if(e.target.name==='modality' && e.target.value!==\"\"){\r\n            //SettingModality(e.target.value)\r\n            if(e.target.value===\"TEST_SETTING_STANDALONE_HTS_PMTCT_(ANC1_ONLY)\"){\r\n                setRiskCount(1)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value}); \r\n            }else if(e.target.value===\"TEST_SETTING_STANDALONE_HTS_EMERGENCY\"){\r\n                //setRiskCount(1)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n            }else if(e.target.value===\"TEST_SETTING_STANDALONE_HTS_INDEX\"){\r\n                setRiskCount(1)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n            }else if(e.target.value===\"TEST_SETTING_STANDALONE_HTS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\"){\r\n                setRiskCount(1)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n            }else if(e.target.value===\"TEST_SETTING_STANDALONE_HTS_STI\"){\r\n                setRiskCount(1)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n            }else if(e.target.value===\"TEST_SETTING_STANDALONE_HTS_TB\"){\r\n                setRiskCount(1)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n            }else if(e.target.value===\"TEST_SETTING_CT_STI\"){\r\n                setRiskCount(1)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n            }else if(e.target.value===\"TEST_SETTING_CT_PMTCT\"){\r\n                setRiskCount(1)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n            }else if(e.target.value===\"TEST_SETTING_CT_TB\"){\r\n                setRiskCount(1)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n            }else if(e.target.value===\"TEST_SETTING_TB_TB\"){\r\n                setRiskCount(1)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n            }else if(e.target.value===\"TEST_SETTING_STI_STI\"){\r\n                setRiskCount(1)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n            }else if(e.target.value===\"TEST_SETTING_OPD_STI\"){\r\n                //setRiskCount(1)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n            }else if(e.target.value===\"TEST_SETTING_OUTREACH_INDEX\"){\r\n                setRiskCount(1)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n            }else{\r\n                setRiskCount(0)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n            }\r\n            \r\n        }\r\n        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});            \r\n    }\r\n    //Date of Birth and Age handle \r\n    //Get list of DSD Model Type\r\n    function SettingModality (settingId) {\r\n        const setting = settingId\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/${setting}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setSetting(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });\r\n       \r\n    }\r\n    //End of Date of Birth and Age handling \r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        //HTS FORM VALIDATION\r\n            temp.dateVisit = objValues.visitDate ? \"\" : \"This field is required.\"  \r\n            temp.testingSetting = objValues.testingSetting ? \"\" : \"This field is required.\"\r\n            temp.modality = objValues.modality ? \"\" : \"This field is required.\"  \r\n            props.patientObj.age>15 && (temp.targetGroup = objValues.targetGroup ? \"\" : \"This field is required.\" )             \r\n            //targetGroup            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n    }\r\n         // Getting the number count of riskAssessment True\r\n    const actualRiskCountTrue=Object.values(riskAssessment)\r\n    riskCountQuestion=actualRiskCountTrue.filter((x)=> x==='true')\r\n    const handleInputChangeRiskAssessment = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setRiskAssessment ({...riskAssessment,  [e.target.name]: e.target.value}); \r\n                            \r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n            //console.log(riskAssessment)\r\n            props.patientObj.targetGroup = objValues.targetGroup\r\n            props.patientObj.testingSetting = objValues.testingSetting\r\n            props.patientObj.dateVisit= objValues.visitDate\r\n            props.patientObj.riskAssessment =riskAssessment \r\n            \r\n            objValues.riskAssessment=riskAssessment\r\n            if((riskCount>0 || riskCountQuestion.length>0) && props.patientAge>15){\r\n                if(validate()){\r\n                    axios.post(`${baseUrl}risk-stratification`,objValues,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n                    \r\n                    )\r\n                    .then(response => {\r\n                        setSaving(false);\r\n                        objValues.code=response.data.code\r\n                        props.setExtra(objValues)\r\n                        handleItemClick('basic', 'risk' )\r\n                        props.setHideOtherMenu(false)\r\n                        //toast.success(\"Risk stratification save succesfully!\");\r\n                    })\r\n                    .catch(error => {\r\n                        setSaving(false);\r\n                        if(error.response && error.response.data){\r\n                            let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                            toast.error(errorMessage,  {position: toast.POSITION.BOTTOM_CENTER});\r\n                        }\r\n                        else{\r\n                            toast.error(\"Something went wrong. Please try again...\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n                        }\r\n                    });\r\n                }else{\r\n                    toast.error(\"All fields are required\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n                }  \r\n            }\r\n            // else{\r\n            //     if(validate()){\r\n            //         axios.post(`${baseUrl}risk-stratification`,objValues,\r\n            //         { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n                    \r\n            //         )\r\n            //         .then(response => {\r\n            //             setSaving(false);\r\n            //             objValues.code=response.data.code\r\n            //             props.patientObj.riskStratificationResponseDto = response.data\r\n            //             props.setActivePage({...props.activePage, activePage:\"home\"})\r\n            //             //props.setExtra(objValues)\r\n            //             //handleItemClick('basic', 'risk' )\r\n            //             //props.setHideOtherMenu(false)\r\n            //             // history.push({\r\n            //             //     pathname: '/patient-history',\r\n            //             //     state: {patientObject: props.patientObj, patientObj: props.patientObj.personResponseDto, clientCode:props.patientObj.clientCode}\r\n            //             // });\r\n            //             toast.success(\"Risk stratification save succesfully!\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n            //         })\r\n            //         .catch(error => {\r\n            //             console.log(error)\r\n            //             setSaving(false);\r\n            //             if(error.response && error.response.data){\r\n            //                 let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n            //                 toast.error(errorMessage,  {position: toast.POSITION.BOTTOM_CENTER});\r\n            //             }\r\n            //             else{\r\n            //                 toast.error(\"Something went wrong. Please try again...\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n            //             }\r\n            //         });\r\n            //     }else{\r\n            //         toast.error(\"All fields are required\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n            //     } \r\n            // }\r\n            if(props.patientAge<15){\r\n                if(validate()){\r\n                    axios.post(`${baseUrl}risk-stratification`,objValues,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n                    \r\n                    )\r\n                    .then(response => {\r\n                        setSaving(false);\r\n                        props.patientObj.riskStratificationResponseDto=response.data\r\n                        objValues.code=response.data.code\r\n                        props.setExtra(objValues)\r\n                        props.setHideOtherMenu(false)\r\n                        handleItemClick('basic', 'risk' )\r\n                        //toast.success(\"Risk stratification save succesfully!\");\r\n                    })\r\n                    .catch(error => {\r\n                        setSaving(false);\r\n                        if(error.response && error.response.data){\r\n                            let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                            toast.error(errorMessage,  {position: toast.POSITION.BOTTOM_CENTER});\r\n                        }\r\n                        else{\r\n                            toast.error(\"Something went wrong. Please try again...\");\r\n                        }\r\n                    });\r\n                }else{\r\n                    toast.error(\"All fields are required\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n                \r\n            }else{\r\n                props.setExtra(objValues)\r\n                if(validate()){\r\n                    axios.post(`${baseUrl}risk-stratification`,objValues,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n                    \r\n                    )\r\n                    .then(response => {\r\n                        setSaving(false);\r\n                        props.patientObj.riskStratificationResponseDto=response.data\r\n                        objValues.code=response.data.code\r\n                        props.setExtra(objValues)\r\n                        //toast.success(\"Risk stratification save succesfully!\");\r\n                    })\r\n                    .catch(error => {\r\n                        setSaving(false);\r\n                        if(error.response && error.response.data){\r\n                            let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                            toast.error(errorMessage,  {position: toast.POSITION.BOTTOM_CENTER});\r\n                        }\r\n                        else{\r\n                            toast.error(\"Something went wrong. Please try again...\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n                        }\r\n                    });\r\n                }else{\r\n                    toast.error(\"All fields are required\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n            }\r\n            \r\n    }\r\n\r\n    return (\r\n        <>  \r\n        \r\n            <Card className={classes.root}>\r\n                <CardBody>   \r\n                <h2 style={{color:'#000'}}>RISK STRATIFICATION</h2>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Modality</div>\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Entry Point </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"entryPoint\"\r\n                                        id=\"entryPoint\"\r\n                                        value={objValues.entryPoint}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>                                      \r\n                                        <option value=\"Facility\">Facility</option>\r\n                                        <option value=\"Community\">Community</option>\r\n                                    </select>\r\n                                    {errors.entryPoint !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.entryPoint}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Visit Date * </Label>\r\n                                <Input\r\n                                    type=\"date\"\r\n                                    name=\"visitDate\"\r\n                                    id=\"visitDate\"\r\n                                    value={objValues.visitDate}\r\n                                    onChange={handleInputChange}\r\n                                    min=\"1983-12-31\"\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    \r\n                                />\r\n                                {errors.dateVisit !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateVisit}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Setting</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"testingSetting\"\r\n                                        id=\"testingSetting\"\r\n                                        value={objValues.testingSetting}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        {enrollSetting.map((value) => (\r\n                                            <option key={value.id} value={value.code}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                        {/* <option value=\"TEST_SETTING_CT\">CT</option>\r\n                                        <option value=\"TEST_SETTING_TB\">TB</option>\r\n                                        <option value=\"TEST_SETTING_STI\">STI</option>\r\n                                        <option value=\"TEST_SETTING_OPD\">OPD</option>\r\n                                        <option value=\"TEST_SETTING_WARD\">WARD</option>\r\n                                        <option value=\"TEST_SETTING_STANDALONE_HTS\">STANDALONE HTS</option>\r\n                                        \r\n                                        <option value=\"TEST_SETTING_FP\">FP</option>\r\n                                        <option value=\"TEST_SETTING_OUTREACH\">OUTREACH</option>\r\n                                        <option value=\"TEST_SETTING_OTHERS\">OTHERS</option> */}\r\n\r\n                                    </select>\r\n                                    {errors.testingSetting !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.testingSetting}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Modality</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"modality\"\r\n                                        id=\"modality\"\r\n                                        value={objValues.modality}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        {setting.map((value) => (\r\n                                            <option key={value.code} value={value.code}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                        \r\n                                    </select>\r\n                                    {errors.modality !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.modality}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            </div>\r\n                            <br/>\r\n                           \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Target Group *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"targetGroup\"\r\n                                        id=\"targetGroup\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.targetGroup}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {kP.map((value) => (\r\n                                            <option key={value.id} value={value.code}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    {errors.targetGroup !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroup}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                           \r\n\r\n                            <br />\r\n                             \r\n                            {props.patientAge>15 && ( <>\r\n                            {/* {(objValues.targetGroup!==\"\" && objValues.targetGroup===\"TARGET_GROUP_GEN_POP\" )&& ( <>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Ever had sexual intercourse </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"everHadSexualIntercourse\"\r\n                                        id=\"everHadSexualIntercourse\"\r\n                                        value={riskAssessment.everHadSexualIntercourse}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.everHadSexualIntercourse !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.everHadSexualIntercourse}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Blood transfusion in last 3 months *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"bloodtransInlastThreeMonths\"\r\n                                        id=\"bloodtransInlastThreeMonths\"\r\n                                        value={riskAssessment.bloodtransInlastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.bloodtransInlastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.bloodtransInlastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected sex with casual partner in last 3 months *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedSexWithCasualLastThreeMonths\"\r\n                                        id=\"uprotectedSexWithCasualLastThreeMonths\"\r\n                                        value={riskAssessment.uprotectedSexWithCasualLastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.uprotectedSexWithCasualLastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedSexWithCasualLastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected sex with regular partner in the last 3months</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\r\n                                        id=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\r\n                                        value={riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.uprotectedSexWithRegularPartnerLastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedSexWithRegularPartnerLastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected vaginal sex</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedVaginalSex\"\r\n                                        id=\"unprotectedVaginalSex\"\r\n                                        value={riskAssessment.unprotectedVaginalSex}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.unprotectedVaginalSex !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.unprotectedVaginalSex}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Anal sex</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedAnalSex\"\r\n                                        id=\"uprotectedAnalSex\"\r\n                                        value={riskAssessment.uprotectedAnalSex}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.uprotectedAnalSex !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedAnalSex}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>         \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>STI in last 3 months *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"stiLastThreeMonths\"\r\n                                        id=\"stiLastThreeMonths\"\r\n                                        value={riskAssessment.stiLastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.stiLastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.stiLastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Sex under the influence of drugs or alcohol*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sexUnderInfluence\"\r\n                                        id=\"sexUnderInfluence\"\r\n                                        value={riskAssessment.sexUnderInfluence}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.sexUnderInfluence !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.sexUnderInfluence}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>More than 1 sex partner during last 3 months*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                                        id=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                                        value={riskAssessment.moreThanOneSexPartnerLastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.moreThanOneSexPartnerLastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.moreThanOneSexPartnerLastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                          \r\n                            <br/>\r\n                            </>)} */}\r\n                            {(objValues.targetGroup!==\"\" && objValues.targetGroup===\"TARGET_GROUP_GEN_POP\" ) && ( <>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Is this HIV test based on a Clinician/Doctor/Health Care Provider’s  request? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lastHivTestBasedOnRequest\"\r\n                                        id=\"lastHivTestBasedOnRequest\"\r\n                                        value={riskAssessment.lastHivTestBasedOnRequest}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lastHivTestBasedOnRequest !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lastHivTestBasedOnRequest}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>When was your last HIV test done?  *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lastHivTestDone\"\r\n                                        id=\"lastHivTestDone\"\r\n                                        value={riskAssessment.lastHivTestDone}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lastHivTestDone !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lastHivTestDone}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>What was the result? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"whatWasTheResult\"\r\n                                        id=\"whatWasTheResult\"\r\n                                        value={riskAssessment.whatWasTheResult}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.whatWasTheResult !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.whatWasTheResult}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Since your last HIV test, have you had anal or vaginal or oral sex without a condom with someone who was HIV positive or unaware of their HIV status? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lastHivTestVaginalOral\"\r\n                                        id=\"lastHivTestVaginalOral\"\r\n                                        value={riskAssessment.lastHivTestVaginalOral}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lastHivTestVaginalOral !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lastHivTestVaginalOral}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Since your last HIV test, have you had a blood or blood product transfusion? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lastHivTestBloodTransfusion\"\r\n                                        id=\"lastHivTestBloodTransfusion\"\r\n                                        value={riskAssessment.lastHivTestBloodTransfusion}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lastHivTestBloodTransfusion !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lastHivTestBloodTransfusion}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>    \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Since your last HIV test, have you experienced painful urination, lower abdominal pain, vaginal or penile discharge, pain during sexual intercourse, thick, cloudy, or foul smelling discharge and/or small bumps or blisters near the mouth, penis, vagina, or anal areas? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lastHivTestPainfulUrination\"\r\n                                        id=\"lastHivTestPainfulUrination\"\r\n                                        value={riskAssessment.lastHivTestPainfulUrination}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lastHivTestPainfulUrination !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lastHivTestPainfulUrination}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>   \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you been diagnosed with TB or currently have any of the following symptoms : cough, fever, weight loss, night sweats? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"diagnosedWithTb\"\r\n                                        id=\"diagnosedWithTb\"\r\n                                        value={riskAssessment.diagnosedWithTb}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.diagnosedWithTb !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.diagnosedWithTb}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Since your last HIV test, have you ever injected drugs, shared needles or other sharp objects with someone known to be HIV positive or who you didn’t know their HIV status? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lastHivTestInjectedDrugs\"\r\n                                        id=\"sexUnderInfluence\"\r\n                                        value={riskAssessment.lastHivTestInjectedDrugs}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lastHivTestInjectedDrugs !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lastHivTestInjectedDrugs}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Since your last HIV test, have you had anal, oral or vaginal sex in exchange for money or other benefits? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lastHivTestHadAnal\"\r\n                                        id=\"lastHivTestHadAnal\"\r\n                                        value={riskAssessment.lastHivTestHadAnal}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lastHivTestHadAnal !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lastHivTestHadAnal}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Since your last HIV test, have you been forced to have sex? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lastHivTestForceToHaveSex\"\r\n                                        id=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                                        value={riskAssessment.lastHivTestForceToHaveSex}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lastHivTestForceToHaveSex !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lastHivTestForceToHaveSex}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <br/>\r\n                            </>)}\r\n                            {(objValues.targetGroup!==\"\" && objValues.targetGroup!==\"TARGET_GROUP_GEN_POP\" ) && ( <>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you/your partner experienced lower abdominal pain, smelly discharge, blisters and wounds around you/partner vagina, penis anus or mouth?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"experiencePain\"\r\n                                        id=\"experiencePain\"\r\n                                        value={riskAssessment.experiencePain}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.experiencePain !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.experiencePain}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you/partner had sex without a condom with someone of unknown HIV status, or you/partner raped by person with unknown HIV status? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveSexWithoutCondom\"\r\n                                        id=\"haveSexWithoutCondom\"\r\n                                        value={riskAssessment.haveSexWithoutCondom}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveSexWithoutCondom !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveSexWithoutCondom}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had a condom burst with your partner during sexual intercourse?  *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveCondomBurst\"\r\n                                        id=\"haveCondomBurst\"\r\n                                        value={riskAssessment.haveCondomBurst}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveCondomBurst !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveCondomBurst}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Do you/partner share needles/syringes, other sharp objects or used abuse drug substances of any kind?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"abuseDrug\"\r\n                                        id=\"abuseDrug\"\r\n                                        value={riskAssessment.abuseDrug}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.abuseDrug !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.abuseDrug}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you/partner had any blood or blood product transfusion?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"bloodTransfusion\"\r\n                                        id=\"bloodTransfusion\"\r\n                                        value={riskAssessment.bloodTransfusion}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.bloodTransfusion !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.bloodTransfusion}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you/partner experienced coughing, weight loss, fever, night sweats consistently?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"consistentWeightFeverNightCough\"\r\n                                        id=\"consistentWeightFeverNightCough\"\r\n                                        value={riskAssessment.consistentWeightFeverNightCough}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.consistentWeightFeverNightCough !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.consistentWeightFeverNightCough}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>            \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you/partner paid or sold vaginal, anal or oral sex? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"soldPaidVaginalSex\"\r\n                                        id=\"soldPaidVaginalSex\"\r\n                                        value={riskAssessment.soldPaidVaginalSex}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.soldPaidVaginalSex !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.soldPaidVaginalSex}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                           \r\n                            <br/>\r\n                            </>)}\r\n                            </>)}\r\n                            <br/>\r\n                            <Message warning>\r\n                                <h4>Personal HIV Risk assessment score </h4>\r\n                                <b>Score :{riskCount + (props.patientAge>15 ?riskCountQuestion.length : 0)}</b>\r\n                            </Message>\r\n                            <hr/>\r\n                            <br/>\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                           \r\n                            <Button content='Save' type=\"submit\" icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    \r\n                </CardBody>\r\n            </Card> \r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered>\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal>                             \r\n        </>\r\n    );\r\n};\r\n\r\nexport default RiskStratification","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport { Button} from 'semantic-ui-react'\r\nimport {Card, CardBody} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\n\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Icon, Menu, Sticky } from 'semantic-ui-react'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport BasicInfo from './BasicInfo'\r\nimport PreTest from './PreTest'\r\nimport HivTestResult from './HivTestResult'\r\nimport IndexingContactTracing from './Elicitation/Index'\r\nimport Others from './Others'\r\nimport PostTest from './PostTest'\r\nimport RecencyTesting from './RecencyTesting'\r\nimport RiskStratification from './RiskStratification'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },  \r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\n\r\nconst PmtctHts = (props) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const locationState = location.state;\r\n    console.log(props)\r\n    const [saving, setSaving] = useState(false);\r\n    const [activeItem, setactiveItem] = useState('risk');\r\n    const [completed, setCompleted] = useState([]);\r\n    const [hideOtherMenu, setHideOtherMenu] = useState(true);\r\n    const [patientObj, setPatientObj] = useState({\r\n        breastFeeding: \"\",\r\n        capturedBy: \"\",\r\n        cd4: {},\r\n        clientCode: \"\",\r\n        riskStratificationCode:\"\",\r\n        confirmatoryTest: {},\r\n        dateVisit: \"\",\r\n        extra: {},\r\n        firstTimeVisit: \"\",\r\n        hepatitisTesting: {},\r\n        hivTestResult: \"\",\r\n        id: \"\",\r\n        indexClient: \"\",\r\n        indexClientCode: \"\",\r\n        indexElicitation: [\r\n          {\r\n            address: \"\",\r\n            altPhoneNumber: \"\",\r\n            archived: 0,\r\n            currentlyLiveWithPartner: true,\r\n            datePartnerCameForTesting: \"\",\r\n            dob: \"\",\r\n            extra: {},\r\n            facilityId: 0,\r\n            firstName: \"\",\r\n            hangOutSpots: \"\",\r\n            htsClient: {\r\n              archived: 0,\r\n              breastFeeding: 0,\r\n              capturedBy: \"\",\r\n              cd4: {},\r\n              clientCode: \"\",\r\n              confirmatoryTest: {},\r\n              dateVisit: \"\",\r\n              extra: {},\r\n              facilityId: 0,\r\n              firstTimeVisit: true,\r\n              hepatitisTesting: {},\r\n              hivTestResult: \"\",\r\n              id: 0,\r\n              indexClient: true,\r\n              indexClientCode: \"\",\r\n              indexNotificationServicesElicitation: {},\r\n              knowledgeAssessment: {},\r\n              numChildren: 0,\r\n              numWives: 0,\r\n              others: {},\r\n              person: {\r\n                active: \"\",\r\n                address: {},\r\n                archived: 0,\r\n                contact: {},\r\n                contactPoint: {},\r\n                createdDate: \"\",\r\n                dateOfBirth: \"\",\r\n                dateOfRegistration: \"\",\r\n                deceased: true,\r\n                deceasedDateTime: \"\",\r\n                education: {},\r\n                employmentStatus: {},\r\n                emrId: \"\",\r\n                facilityId: 0,\r\n                firstName: \"string\",\r\n                gender: {},\r\n                hospitalNumber: \"\",\r\n                id: \"\",\r\n                identifier: {},\r\n                isDateOfBirthEstimated: true,\r\n                lastModifiedDate: \"\",\r\n                maritalStatus: {},\r\n                new: true,\r\n                ninNumber: \"\",\r\n                organization: {},\r\n                otherName: \"\",\r\n                sex: \"\",\r\n                surname: \"\",\r\n                uuid: \"\"\r\n              },\r\n              personUuid: \"\",\r\n              postTestCounselingKnowledgeAssessment: {},\r\n              pregnant: \"\",\r\n              previouslyTested: true,\r\n              recency: {},\r\n              referredFrom: \"\",\r\n              relationWithIndexClient: \"\",\r\n              riskAssessment: {},\r\n              sexPartnerRiskAssessment: {},\r\n              stiScreening: {},\r\n              syphilisTesting: {},\r\n              targetGroup: 0,\r\n              tbScreening: {},\r\n              test1: {},\r\n              testingSetting: \"\",\r\n              tieBreakerTest: {},\r\n              typeCounseling: \"\",\r\n              uuid: \"\"\r\n            },\r\n            htsClientUuid: \"\",\r\n            id: \"\",\r\n            isDateOfBirthEstimated: true,\r\n            lastName: \"\",\r\n            middleName: \"\",\r\n            notificationMethod: \"\",\r\n            partnerTestedPositive: \"\",\r\n            phoneNumber: \"\",\r\n            physicalHurt: \"\",\r\n            relationshipToIndexClient: \"\",\r\n            sex: \"\",\r\n            sexuallyUncomfortable: \"\",\r\n            threatenToHurt: \"\",\r\n            uuid: \"\"\r\n          }\r\n        ],\r\n        indexNotificationServicesElicitation: {},\r\n        knowledgeAssessment: {},\r\n        numChildren: \"\",\r\n        numWives: \"\",\r\n        others: {},\r\n        personId: \"\",\r\n        personResponseDto: {\r\n          active: true,\r\n          \r\n        address: {\r\n            address: [\r\n              {\r\n                city: \"\",\r\n                line: [\r\n                  \"\"\r\n                ],\r\n                stateId: \"\",\r\n                district: \"\",\r\n                countryId: 1,\r\n                postalCode: \"\",\r\n                organisationUnitId: 0\r\n              }\r\n            ]\r\n          },\r\n          biometricStatus: true,\r\n          checkInDate: \"\",\r\n          contact: {},\r\n          contactPoint:{contactPoint:[\r\n            {\r\n                type: \"phone\",\r\n                value: \"\"\r\n            }\r\n            ]},\r\n          dateOfBirth: \"\",\r\n          dateOfRegistration: \"\",\r\n          deceased: true,\r\n          deceasedDateTime: \"\",\r\n          education: {},\r\n          employmentStatus: {},\r\n          emrId: \"\",\r\n          encounterDate: \"\",\r\n          facilityId: \"\",\r\n          firstName: \"\",\r\n          gender: {},\r\n          id: \"\",\r\n          identifier: {},\r\n          isDateOfBirthEstimated: true,\r\n          maritalStatus: {},\r\n          ninNumber: \"\",\r\n          organization: {},\r\n          otherName: \"\",\r\n          sex: \"\",\r\n          surname: \"\",\r\n          visitId: \"\"\r\n        },\r\n        postTestCounselingKnowledgeAssessment: {},\r\n        pregnant: \"\",\r\n        previouslyTested: \"\",\r\n        recency: {},\r\n        referredFrom: \"\",\r\n        relationWithIndexClient: \"\",\r\n        riskAssessment: {},\r\n        sexPartnerRiskAssessment: {},\r\n        stiScreening: {},\r\n        syphilisTesting: {},\r\n        targetGroup: \"\",\r\n        tbScreening: {},\r\n        test1: {},\r\n        testingSetting: \"\",\r\n        tieBreakerTest: {},\r\n        typeCounseling: \"\",\r\n        riskStratificationResponseDto:null\r\n        \r\n    });\r\n    const [extra, setExtra] = useState({\r\n    risk:\"\",\r\n    index:\"\",\r\n    pre:\"\",\r\n    post:\"\",\r\n    recency:\"\",\r\n    elicitation:\"\"\r\n});\r\n    const handleItemClick =(activeItem)=>{\r\n        setactiveItem(activeItem)\r\n        //setCompleted({...completed, ...completedMenu})\r\n    }\r\n    useEffect(() => { \r\n        if(locationState && locationState.patientObj){\r\n            setPatientObj(locationState.patientObject)           \r\n        }\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n           \r\n            <Card >\r\n                <CardBody>\r\n                <form >\r\n                    <div className=\"row\">\r\n                    <h3>HIV COUNSELLING AND TESTING \r\n                    </h3>\r\n                        <br/>\r\n                        <br/>\r\n                        \r\n                        <div className=\"col-md-3 col-sm-3 col-lg-3\">                       \r\n                        <Menu  size='large'  vertical  style={{backgroundColor:\"#014D88\"}}>\r\n                        <Menu.Item\r\n                                name='inbox'\r\n                                active={activeItem === 'risk'}\r\n                                onClick={()=>handleItemClick('risk')}\r\n                                style={{backgroundColor:activeItem === 'risk' ? '#000': \"\"}}\r\n                            >               \r\n                                <span style={{color:'#fff'}}> Risk Stratification\r\n                                {completed.includes('risk') && (\r\n                                    <Icon name='check' color='green' />\r\n                                )}\r\n                                </span>\r\n                                \r\n                            </Menu.Item>\r\n                            {hideOtherMenu===false && (<>\r\n                                <Menu.Item\r\n                                    name='inbox'\r\n                                    active={activeItem === 'basic'}\r\n                                    onClick={()=>handleItemClick('basic')}\r\n                                    style={{backgroundColor:activeItem === 'basic' ? '#000': \"\"}}\r\n                                    disabled={activeItem !== 'basic' ? true : false}\r\n                                >               \r\n                                    <span style={{color:'#fff'}}> Basic Information\r\n                                    {completed.includes('basic') && (\r\n                                        <Icon name='check' color='green' />\r\n                                    )}\r\n                                    </span>\r\n                                \r\n                                </Menu.Item>\r\n                            {props.patientObj.age>=15 && (\r\n                                <Menu.Item\r\n                                    name='spam'\r\n                                    active={activeItem === 'pre-test-counsel'}\r\n                                    onClick={()=>handleItemClick('pre-test-counsel')}\r\n                                    style={{backgroundColor:activeItem === 'pre-test-counsel' ? '#000': \"\"}}\r\n                                    disabled={activeItem !== 'pre-test-counsel' ? true : false}\r\n                                >\r\n                                {/* <Label>2</Label> */}\r\n                                <span style={{color:'#fff'}}>Pre Test Counseling\r\n                                {completed.includes('pre-test-counsel') && (\r\n                                    <Icon name='check' color='green' />\r\n                                )}\r\n                                </span>\r\n                                </Menu.Item>\r\n                            )}\r\n                            <Menu.Item\r\n                                name='inbox'\r\n                                active={activeItem === 'hiv-test'}\r\n                                onClick={()=>handleItemClick('hiv-test')}\r\n                                style={{backgroundColor:activeItem === 'hiv-test' ? '#000': \"\"}}\r\n                                //disabled={activeItem !== 'hiv-test' ? true : false}\r\n                            >               \r\n                                <span style={{color:'#fff'}}>Request {\"&\"} Result Form\r\n                                {completed.includes('hiv-test') && (\r\n                                    <Icon name='check' color='green' />\r\n                                )}\r\n                                </span>\r\n                                \r\n                                {/* <Label color='teal'>3</Label> */}\r\n                            </Menu.Item>\r\n                            <Menu.Item\r\n                                name='spam'\r\n                                active={activeItem === 'post-test'}\r\n                                onClick={()=>handleItemClick('post-test')}\r\n                                style={{backgroundColor:activeItem === 'post-test' ? '#000': \"\"}}\r\n                                disabled={activeItem !== 'post-test' ? true : false}\r\n                            >\r\n                            {/* <Label>4</Label> */}\r\n                            <span style={{color:'#fff'}}>Post Test Counseling\r\n                            {completed.includes('post-test') && (\r\n                                <Icon name='check' color='green' />\r\n                            )}\r\n                            </span>\r\n                            \r\n                            </Menu.Item>\r\n                            \r\n                            <Menu.Item\r\n                                name='spam'\r\n                                active={activeItem === 'recency-testing'}\r\n                                onClick={()=>handleItemClick('recency-testing')}\r\n                                style={{backgroundColor:activeItem === 'recency-testing' ? '#000': \"\"}}\r\n                                disabled={activeItem !== 'recency-testing' ? true : false}\r\n                            >\r\n                            {/* <Label>4</Label> */}\r\n                            <span style={{color:'#fff'}}>HIV Recency Testing\r\n                                {completed.includes('recency-testing') && (\r\n                                    <Icon name='check' color='green' />\r\n                                )}\r\n                            </span>\r\n                           \r\n                            </Menu.Item>\r\n                           \r\n                            <Menu.Item\r\n                                name='spam'\r\n                                active={activeItem === 'indexing'}\r\n                                onClick={()=>handleItemClick('indexing')}\r\n                                style={{backgroundColor:activeItem === 'indexing' ? '#000': \"\"}}\r\n                                disabled={activeItem !== 'indexing' ? true : false}\r\n                            >\r\n                            {/* <Label>4</Label> */}\r\n                            <span style={{color:'#fff'}}>Index Notification Services - Elicitation\r\n                            {completed.includes('indexing') && (\r\n                                <Icon name='check' color='green' />\r\n                            )}\r\n                            </span>\r\n                            \r\n                            </Menu.Item>\r\n                           </>\r\n                            )}\r\n                        </Menu>\r\n                        </div>\r\n                        \r\n                        <div className=\"col-md-9 col-sm-9 col-lg-9 \" style={{ backgroundColor:\"#fff\", margingLeft:\"-50px\", paddingLeft:\"-20px\"}}>\r\n                            {activeItem==='risk' && (<RiskStratification handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj}  setHideOtherMenu={setHideOtherMenu} patientAge={props.patientObj.age} setExtra={setExtra} extra={extra} activePage={props.activePage} setActivePage={props.setActivePage}/>)}\r\n                            {activeItem==='basic' && (<BasicInfo handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} clientCode={props.clientCode} patientAge={props.patientObj.age} setExtra={setExtra} extra={extra}/>)}\r\n                            {activeItem==='pre-test-counsel' && (<PreTest handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} clientCode={props.clientCode} patientAge={props.patientObj.age}/>)}\r\n                            {activeItem==='hiv-test' && (<HivTestResult handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} clientCode={props.clientCode} patientAge={props.patientObj.age}/>)}\r\n                            {activeItem==='post-test' && (<PostTest handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} clientCode={props.clientCode} patientAge={props.patientObj.age} patientsHistory={props.patients}/>)}\r\n                            {activeItem==='indexing' && (<IndexingContactTracing handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} clientCode={props.clientCode} patientAge={props.patientObj.age}/>)}\r\n                            {activeItem==='recency-testing' && (<RecencyTesting  handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} clientCode={props.clientCode} patientAge={props.patientObj.age}/>)}\r\n                            {activeItem==='others' && (<Others handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} clientCode={props.clientCode} patientAge={props.patientObj.age}/>)}\r\n                            \r\n                        </div>                                   \r\n                    </div>\r\n\r\n                \r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default PmtctHts","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './PatientCard'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SubMenu from './SubMenu';\r\n//import RecentHistory from './../History/RecentHistory';\r\nimport ClinicVisit from '../Consultation/Index'\r\nimport PmtctEnrollment from './../PmtctServices/PmtctEnrollment';\r\nimport AncEnrollement from './../PmtctServices/AncEnrollement';\r\nimport LabourDelivery from './../PmtctServices/LabourDelivery';\r\nimport Biometrics from './Biometric'\r\nimport PmtctHts from './../PMTCTHTSEnrollment/Index'\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction PatientCard(props) {\r\n    let history = useHistory();\r\n    const [art, setArt] = useState(false);\r\n    const [activeContent, setActiveContent] = useState({route:\"recent-history\", id:\"\", activeTab:\"home\", actionType:\"create\", obj:{}});\r\n    const { classes } = props;\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    \r\n  return (\r\n    <div className={classes.root}>\r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PMTCT /</Link> Patient Dashboard</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Card >\r\n        <CardContent>\r\n            <PatientCardDetail patientObj={patientObj} setArt={setArt} setActiveContent={setActiveContent}/>            \r\n            <SubMenu patientObj={patientObj} art={art} setActiveContent={setActiveContent}/>\r\n            <br/>\r\n          {/* {activeContent.route==='recent-history' &&(<RecentHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)} */}\r\n          {activeContent.route==='biometrics' &&(<Biometrics patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='consultation' &&( <ClinicVisit patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='anc-pnc' &&( <PmtctEnrollment patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='anc-enrollment' &&( <AncEnrollement patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='labour-delivery' &&( <LabourDelivery patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='pmtct-hts' &&( <PmtctHts patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {/* History Pages */}\r\n         \r\n         </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form, InputGroup} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport  './patient.css'\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },  \r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n                \r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState(\r\n        {   ancNo:\"\",\r\n            gaweeks: \"\",\r\n            gravida: \"\",\r\n            expectedDeliveryDate:\"\",\r\n            lmp: \"\",\r\n            parity: \"\",\r\n            hivDiognosicTime:\"\",\r\n            referredSyphilisTreatment: \"\",\r\n            testResultSyphilis: \"\",\r\n            testedSyphilis: \"\",\r\n            treatedSyphilis: \"\",\r\n            personDto:{},\r\n            pmtctHtsInfo:{},\r\n            syphilisInfo:{},\r\n            partnerNotification:{}\r\n        });\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n     //status for hospital Number \r\n     const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n     const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    patientId = locationState ? locationState.patientId : null;\r\n    let temp = { ...errors }\r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n    \r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n          \r\n    }, [basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            \r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n        //console.log(getCountryId)\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }   \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n                if(m<18){\r\n                    alert(\"The child is less than 18months\")\r\n                    setDisabledAgeBaseOnAge(true)\r\n                }else{\r\n                    setDisabledAgeBaseOnAge(false)\r\n                }\r\n                if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n                basicInfo.age=age_now\r\n                //setBasicInfo({...basicInfo, age: age_now});        \r\n                } else {\r\n                    setBasicInfo({...basicInfo, age:  \"\"});\r\n                }\r\n                setBasicInfo({...basicInfo, dob: e.target.value});\r\n                if(basicInfo.age!=='' && basicInfo.age>=60){\r\n                    toggle()\r\n                }\r\n           \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            if(e.target.value!=='' && e.target.value>=60){\r\n                toggle()\r\n            }\r\n            if(e.target.value <=1){\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {  \r\n        setErrors({...temp, [e.target.name]:\"\"})      \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='377') {\r\n            setfemaleStatus(true)\r\n        } \r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n        async function getHosiptalNumber() {\r\n            const hosiptalNumber=e.target.value\r\n            const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                );\r\n            if(response.data!==true){\r\n                setHospitalNumStatus(false)\r\n                errors.hospitalNumber=\"\"\r\n                setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                setHospitalNumStatus2(true)\r\n            }else{\r\n                errors.hospitalNumber=\"\"\r\n                toast.error(\"Error! Hosiptal Number already exist\");\r\n                setHospitalNumStatus(true)\r\n                setHospitalNumStatus2(false)\r\n            }\r\n        }\r\n        getHosiptalNumber();\r\n        } \r\n                \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.phone = relatives.phone ? \"\" : \"Phone Number  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n            setRelatives({ \r\n                address:\"\",\r\n                phone:\"\",\r\n                firstName: \"\",\r\n                email: \"\",\r\n                relationshipId: \"\",\r\n                lastName: \"\",\r\n                middleName: \"\"\r\n            })\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        \r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Gender is required.\"\r\n            temp.dateOfRegistration = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //ANC FORM VALIDATION\r\n            temp.gaweeks = objValues.gaweeks ? \"\" : \"This field is required\"\r\n            temp.gravida = objValues.gravida ? \"\" : \"This field is required\"\r\n            temp.referredSyphilisTreatment = objValues.referredSyphilisTreatment ? \"\" : \"This field is required\"\r\n            temp.lmp = objValues.lmp ? \"\" : \"This field is required\"\r\n            temp.parity = objValues.parity ? \"\" : \"This field is required\"\r\n            temp.testedSyphilis = objValues.testedSyphilis ? \"\" : \"This field is required\"\r\n            temp.treatedSyphilis = objValues.treatedSyphilis ? \"\" : \"This field is required\"\r\n            temp.sourceOfReferral = objValues.sourceOfReferral ? \"\" : \"This field is required\"\r\n            temp.testResultSyphilis = objValues.testResultSyphilis ? \"\" : \"This field is required\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                objValues.personDto=patientForm;\r\n                //patientDTO.personDto=objValues;\r\n                console.log(objValues)\r\n                const response = await axios.post(`${baseUrl}pmtct/anc/anc-new-registration`, objValues, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Register successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    if(error.response.data.apierror && error.response.data.apierror.message!==\"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message!==\"\"){\r\n                        toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }else{\r\n                        toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {  \r\n        setErrors({...temp, [e.target.name]:\"\"})        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});          \r\n    }      \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <ToastContainer autoClose={3000} hideProgressBar />\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PMTCT /</Link> Patient Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n          <Link\r\n                to={{\r\n                    pathname: \"/\",\r\n                    state: 'users'\r\n                }}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\" float-end mr-10 pr-10\"\r\n                    style={{backgroundColor:'#014d88',fontWeight:\"bolder\", margingRight:\"-40px\"}}\r\n                    startIcon={<TiArrowBack />}\r\n                >\r\n                    <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                </Button>\r\n            </Link>\r\n            <br /><br/>\r\n  \r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    \r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {/* {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"} */}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={1094328}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.id}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                \r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                \r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        id=\"dob\"\r\n                                                        max={basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        \r\n                                                        type=\"number\"\r\n                                                        name=\"age\"                                                       \r\n                                                        className=\"form-control\"                                                        \r\n                                                        id=\"age\"\r\n                                                        min=\"1\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        id=\"ninNumber\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                   onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                   //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                ) : \"\" } */}\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    \r\n                                                />\r\n                                                 {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                ) : \"\" } */}\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    required\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e,'phone')}}\r\n                                                                        />\r\n                                                                    {errors.phone !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.phone}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"email\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            required\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            \r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>ANC  Enrollment</h5>\r\n                                </div>\r\n\r\n                            <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                              \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >ANC No *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"text\"\r\n                                                    name=\"ancNo\"\r\n                                                    id=\"ancNo\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.ancNo} \r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                            {errors.ancNo !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.ancNo}</span>\r\n                                            ) : \"\" }           \r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Gravida *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"number\"\r\n                                                    name=\"gravida\"\r\n                                                    id=\"gravida\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.gravida} \r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                            {errors.gravida !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.gravida}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Parity *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"number\"\r\n                                                    name=\"parity\"\r\n                                                    id=\"parity\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.parity} \r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                            {errors.parity !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.parity}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Date Of Last Menstrual Period* </Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"date\"\r\n                                                    name=\"lmp\"\r\n                                                    id=\"lmp\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.lmp} \r\n                                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                            {errors.lmp !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lmp}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                    </div>\r\n                                   \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Gestational Age (Weeks)*</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"number\"\r\n                                                    name=\"gaweeks\"\r\n                                                    id=\"gaweeks\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.gaweeks} \r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                            {errors.gaweeks !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.gaweeks}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Source of Referral*</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"text\"\r\n                                                    name=\"sourceOfReferral\"\r\n                                                    id=\"sourceOfReferral\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.sourceOfReferral} \r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                            {errors.sourceOfReferral !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sourceOfReferral}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                    </div>                                \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Tested for syphilis *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"select\"\r\n                                                    name=\"testedSyphilis\"\r\n                                                    id=\"testedSyphilis\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.testedSyphilis} \r\n                                                >\r\n                                                     <option value=\"\" >Select</option>\r\n                                                    <option value=\"Yes\" >Yes</option>\r\n                                                    <option value=\"No\" >No</option>\r\n                                                </Input>\r\n                                            </InputGroup> \r\n                                            {errors.testedSyphilis !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.testedSyphilis}</span>\r\n                                            ) : \"\" }                                       \r\n                                            </FormGroup>\r\n                                    </div>\r\n                                \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Syphilis test result *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"select\"\r\n                                                    name=\"testResultSyphilis\"\r\n                                                    id=\"testResultSyphilis\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.testResultSyphilis} \r\n                                                >\r\n                                                    <option value=\"\" >Select</option>\r\n                                                    <option value=\"Positive\" >Positive</option>\r\n                                                    <option value=\"Negative\" >Negative</option>\r\n                                                </Input>\r\n                                            </InputGroup> \r\n                                            {errors.testResultSyphilis !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.testResultSyphilis}</span>\r\n                                            ) : \"\" }                                        \r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Treated for syphilis (penicillin) *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"select\"\r\n                                                    name=\"treatedSyphilis\"\r\n                                                    id=\"treatedSyphilis\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.encounterDate} \r\n                                                >\r\n                                                    <option value=\"\" >Select</option>\r\n                                                    <option value=\"Yes\" >Yes</option>\r\n                                                    <option value=\"No\" >No</option>\r\n                                                </Input>\r\n                                            </InputGroup> \r\n                                            {errors.treatedSyphilis !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.treatedSyphilis}</span>\r\n                                            ) : \"\" }                                        \r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Referred Syphilis +ve client *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"select\"\r\n                                                    name=\"referredSyphilisTreatment\"\r\n                                                    id=\"referredSyphilisTreatment\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.referredSyphilisTreatment} \r\n                                                >\r\n                                                    <option value=\"\" >Select</option>\r\n                                                    <option value=\"Yes\" >Yes</option>\r\n                                                    <option value=\"No\" >No</option>\r\n                                                </Input>\r\n                                            </InputGroup>\r\n                                            {errors.referredSyphilisTreatment !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.referredSyphilisTreatment}</span>\r\n                                            ) : \"\" }                                         \r\n                                            </FormGroup>\r\n                                    </div>\r\n                                   \r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                                onClick={handleCancel}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal> \r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form, InputGroup} from \"reactstrap\";\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\nimport {  Modal } from \"react-bootstrap\";\r\n\r\n\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n\r\n    const [genders, setGenders]= useState([]);\r\n\r\n\r\n    const [errors, setErrors] = useState({})\r\n\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({   ancNo:\"\",\r\n            gaweeks: \"\",\r\n            gravida: \"\",\r\n            expectedDeliveryDate:\"\",\r\n            lmp: \"\",\r\n            parity: \"\",\r\n            person_uuid:\"\",\r\n            hivDiognosicTime:\"\",\r\n            referredSyphilisTreatment: \"\",\r\n            testResultSyphilis: \"\",\r\n            testedSyphilis: \"\",\r\n            treatedSyphilis: \"\",\r\n            personDto:{},\r\n            pmtctHtsInfo:{},\r\n            syphilisInfo:{},\r\n            partnerNotification:{},\r\n            sourceOfReferral:\"\"\r\n    });\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        getSex();\r\n        PregnancyStatus();\r\n        if(patientObj){\r\n            const identifiers = patientObj.identifier;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type === 'HospitalNumber');\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.hospitalNumber=hospitalNumber && hospitalNumber ? hospitalNumber.value : ''\r\n            setObjValues ({...objValues,  uniqueId: hospitalNumber ? hospitalNumber.value : ''});\r\n            basicInfo.genderId=patientObj && patientObj.gender ? patientObj.gender.id : null\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            objValues.personId=patientObj.id\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n    //Get list of Source of Referral\r\n    const getSex =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/SEX`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            let patientSex=\"\"\r\n            if(patientObj.sex==='female' || patientObj.sex==='Female' || patientObj.sex==='FEMALE'){\r\n                 patientSex= 'Female'\r\n            }\r\n            if(patientObj.sex==='Male' || patientObj.sex==='male' || patientObj.sex==='MALE' ){\r\n                 patientSex= 'Male'\r\n            }\r\n            const getSexId=  response.data.find((x)=> x.display===patientSex)//get patient sex ID by filtering the request\r\n            basicInfo.sexId=getSexId.display\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n}\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n    };\r\n\r\n    const handleAgeChange = (e) => {\r\n        const ageNumber = e.target.value.replace(/\\D/g, '')\r\n        if (!ageDisabled && ageNumber) {\r\n            if(ageNumber!=='' && ageNumber>=60){\r\n                toggle()\r\n            }\r\n            if(ageNumber <=1){\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((ageNumber * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: ageNumber});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.gaweeks = objValues.gaweeks ? \"\" : \"This field is required\"\r\n            temp.gravida = objValues.gravida ? \"\" : \"This field is required\"\r\n            temp.referredSyphilisTreatment = objValues.referredSyphilisTreatment ? \"\" : \"This field is required\"\r\n            temp.lmp = objValues.lmp ? \"\" : \"This field is required\"\r\n            temp.parity = objValues.parity ? \"\" : \"This field is required\"\r\n            temp.testedSyphilis = objValues.testedSyphilis ? \"\" : \"This field is required\"\r\n            temp.treatedSyphilis = objValues.treatedSyphilis ? \"\" : \"This field is required\"\r\n            temp.sourceOfReferral = objValues.sourceOfReferral ? \"\" : \"This field is required\"\r\n            temp.testResultSyphilis = objValues.testResultSyphilis ? \"\" : \"This field is required\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => { \r\n        \r\n        setErrors({...errors, [e.target.name]: \"\"})        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value});              \r\n    } \r\n\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})       \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});                \r\n    }    \r\n\r\n    //Handle CheckBox \r\n\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n\r\n         if(validate()){\r\n            try {\r\n\r\n                objValues.person_uuid = patientObj.uuid;\r\n                console.log(objValues)\r\n                const response = await axios.post(`${baseUrl}pmtct/anc/anc-enrollement`, objValues, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Register successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    if(error.response.data.apierror && error.response.data.apierror.message!==\"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message!==\"\"){\r\n                        toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }else{\r\n                        toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\nconsole.log(errors)\r\n    return (\r\n        <>\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >HIV /</Link> Patient Enrollment</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <Link\r\n                        to={{\r\n                            pathname: \"/\",\r\n                            state: 'users'\r\n                        }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName + \" \"+ basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: 'none', backgroundColor: 'transparent', outline:'none'}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: 'none', backgroundColor: 'transparent', outline:'none'}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>            \r\n\r\n                                            <div className=\"form-group  col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex </Label>\r\n                                                    <Input\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: 'none', backgroundColor: 'transparent', outline:'none'}}\r\n                                                            \r\n                                                        />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: 'none', backgroundColor: 'transparent', outline:'none'}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>                                     \r\n                                    </div>\r\n                                </div>\r\n                           \r\n                            </div>\r\n\r\n                            {/* Adding  ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                            <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                <h5 className=\"card-title\"  style={{color:'#fff'}}>ANC  Enrollment</h5>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                              \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >ANC No *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"text\"\r\n                                                    name=\"ancNo\"\r\n                                                    id=\"ancNo\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.ancNo} \r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                            {errors.ancNo !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.ancNo}</span>\r\n                                            ) : \"\" }           \r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Gravida *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"number\"\r\n                                                    name=\"gravida\"\r\n                                                    id=\"gravida\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.gravida} \r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                            {errors.gravida !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.gravida}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Parity *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"number\"\r\n                                                    name=\"parity\"\r\n                                                    id=\"parity\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.parity} \r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                            {errors.parity !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.parity}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Date Of Last Menstrual Period * </Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"date\"\r\n                                                    name=\"lmp\"\r\n                                                    id=\"lmp\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.lmp} \r\n                                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                            {errors.lmp !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lmp}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                    </div>\r\n                                   \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Gestational Age (Weeks) *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"number\"\r\n                                                    name=\"gaweeks\"\r\n                                                    id=\"gaweeks\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.gaweeks} \r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                            {errors.gaweeks !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.gaweeks}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Source of Referral *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"text\"\r\n                                                    name=\"sourceOfReferral\"\r\n                                                    id=\"sourceOfReferral\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.sourceOfReferral} \r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                            {errors.sourceOfReferral !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sourceOfReferral}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                    </div>                                \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Tested for syphilis *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"select\"\r\n                                                    name=\"testedSyphilis\"\r\n                                                    id=\"testedSyphilis\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.testedSyphilis} \r\n                                                >\r\n                                                     <option value=\"\" >Select</option>\r\n                                                    <option value=\"Yes\" >Yes</option>\r\n                                                    <option value=\"No\" >No</option>\r\n                                                </Input>\r\n                                            </InputGroup> \r\n                                            {errors.testedSyphilis !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.testedSyphilis}</span>\r\n                                            ) : \"\" }                                       \r\n                                            </FormGroup>\r\n                                    </div>\r\n                                \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Syphilis test result *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"select\"\r\n                                                    name=\"testResultSyphilis\"\r\n                                                    id=\"testResultSyphilis\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.testResultSyphilis} \r\n                                                >\r\n                                                    <option value=\"\" >Select</option>\r\n                                                    <option value=\"Positive\" >Positive</option>\r\n                                                    <option value=\"Negative\" >Negative</option>\r\n                                                </Input>\r\n                                            </InputGroup> \r\n                                            {errors.testResultSyphilis !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.testResultSyphilis}</span>\r\n                                            ) : \"\" }                                        \r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Treated for syphilis (penicillin) *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"select\"\r\n                                                    name=\"treatedSyphilis\"\r\n                                                    id=\"treatedSyphilis\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.encounterDate} \r\n                                                >\r\n                                                    <option value=\"\" >Select</option>\r\n                                                    <option value=\"Yes\" >Yes</option>\r\n                                                    <option value=\"No\" >No</option>\r\n                                                </Input>\r\n                                            </InputGroup> \r\n                                            {errors.treatedSyphilis !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.treatedSyphilis}</span>\r\n                                            ) : \"\" }                                        \r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Referred Syphilis +ve client *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"select\"\r\n                                                    name=\"referredSyphilisTreatment\"\r\n                                                    id=\"referredSyphilisTreatment\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.referredSyphilisTreatment} \r\n                                                >\r\n                                                    <option value=\"\" >Select</option>\r\n                                                    <option value=\"Yes\" >Yes</option>\r\n                                                    <option value=\"No\" >No</option>\r\n                                                </Input>\r\n                                            </InputGroup>\r\n                                            {errors.referredSyphilisTreatment !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.referredSyphilisTreatment}</span>\r\n                                            ) : \"\" }                                         \r\n                                            </FormGroup>\r\n                                    </div>\r\n                                   \r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                onClick={handleCancel}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\"  }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    console.log(props)\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrerId:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\",\r\n     householdNumber:\"\", referredToOVCPartner:\"\", dateReferredToOVCPartner:\"\",\r\n     referredFromOVCPartner:\"\", dateReferredFromOVCPartner:\"\",\r\n     careEntryPointOther:\"\"});\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n    \r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n    //status for hospital Number \r\n    const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n    const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n    \r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n            const contacts = patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(contacts.contact);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type == 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber ? hospitalNumber.value : ''\r\n            basicInfo.maritalStatusId=patientObj.maritalStatus.id\r\n            basicInfo.employmentStatusId=patientObj.employmentStatus.id\r\n            basicInfo.genderId=patientObj.gender ? patientObj.gender.id : null\r\n            basicInfo.sexId=patientObj.sex \r\n            basicInfo.educationId=patientObj.education.id\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value : \"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value : \"\"\r\n            basicInfo.email=email && email.value ? email.value : \"\"\r\n            basicInfo.address=country && country.city ? country.city : \"\"\r\n            basicInfo.landmark=country.line[0]\r\n            basicInfo.countryId=country.countryId\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country.stateId)\r\n            basicInfo.stateId=country.stateId\r\n            basicInfo.district=country.district\r\n            setObjValues(patientObj.enrollment)\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n      };\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: e.target.value});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n            async function getCharacters() {\r\n                const hosiptalNumber=e.target.value\r\n                const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                    );\r\n                if(response.data!==true){\r\n                    setHospitalNumStatus(false)\r\n                    setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                    setHospitalNumStatus2(true)\r\n                }else{\r\n                    setHospitalNumStatus(false)\r\n                    setHospitalNumStatus2(true)\r\n                }\r\n            }\r\n            getCharacters();\r\n            }  \r\n             \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };     \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.targetGroupId = objValues.targetGroupId ? \"\" : \"Target group is required.\"\r\n            temp.dateConfirmedHiv = objValues.dateConfirmedHiv ? \"\" : \"date confirm HIV is required.\"\r\n            temp.sourceOfReferrerId = objValues.sourceOfReferrerId ? \"\" : \"Source of referrer is required.\"\r\n            temp.enrollmentSettingId = objValues.enrollmentSettingId ? \"\" : \"Enrollment Setting Number  is required.\"\r\n            temp.tbStatusId = objValues.tbStatusId ? \"\" : \"TB status is required.\"    \r\n            temp.statusAtRegistrationId = objValues.statusAtRegistrationId ? \"\" : \"Status at Registration is required.\"  \r\n            temp.entryPointId = objValues.entryPointId ? \"\" : \"Care Entry Point is required.\" \r\n            temp.dateOfRegistration = objValues.dateOfRegistration ? \"\" : \"Date of Registration is required.\"  \r\n            temp.uniqueId = objValues.uniqueId ? \"\" : \"Unique ID is required.\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId.id\r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.genderId,\r\n                    sexId:basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber: basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.hivEnrollment=objValues;\r\n                const response = await axios.put(`${baseUrl}hiv/patient/${patientObj.id}`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Updated successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage); \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n        if(e.target.name ===\"pregnancyStatusId\" ){\r\n            console.log(e.target.value)\r\n            if(e.target.value===\"72\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }                  \r\n    }    \r\n    \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.cardBottom}>\r\n                <CardContent>\r\n                <Link\r\n                    to={{\r\n                        pathname: \"/patient-history\",\r\n                        state: { patientObj: patientObj  }\r\n                    }}\r\n                >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Edit User Information</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={Math.floor(Math.random() * 1094328)}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        max={today}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"nin\"\r\n                                                        id=\"nin\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>HIV Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"uniqueId\">Unique ID No  * </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"uniqueId\"\r\n                                        id=\"uniqueId\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.uniqueId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled\r\n                                        \r\n                                    />\r\n                                    {errors.uniqueId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"dateOfRegistration\">Date of Enrollment * </Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateOfRegistration\"\r\n                                        id=\"dateOfRegistration\"\r\n                                        min={basicInfo.dateOfRegistration}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateOfRegistration}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    />\r\n                                    {errors.dateOfRegistration !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">Care Entry Point * </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"entryPointId\"\r\n                                    id=\"entryPointId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.entryPointId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> </option>                  \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                {transferIn===true ? \r\n                                    (\r\n                                        <FormGroup>\r\n                                        <Label >Facility Name</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"facilityName\"\r\n                                            id=\"facilityName\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.facilityName}  \r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        </FormGroup>\r\n                                    ):\"\"}\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Status at Registration *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"statusAtRegistrationId\"\r\n                                    id=\"statusAtRegistrationId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.statusAtRegistrationId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> Select</option>                  \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of Confirmed HIV Test *</Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateConfirmedHiv\"\r\n                                        id=\"dateConfirmedHiv\"\r\n                                        min={basicInfo.dob}\r\n                                        max={objValues.dateOfRegistration}\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateConfirmedHiv}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    /> \r\n                                    {errors.dateConfirmedHiv !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                        ) : \"\" } \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Source of Referral *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"sourceOfReferrerId\"\r\n                                        id=\"sourceOfReferrerId\"\r\n                                        value={objValues.sourceOfReferrerId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    >\r\n                                        <option value=\"\">Select </option>                 \r\n                                            {sourceReferral.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.sourceOfReferrerId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sourceOfReferrerId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Enrollment Setting *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"enrollmentSettingId\"\r\n                                        id=\"enrollmentSettingId\"\r\n                                        value={objValues.enrollmentSettingId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        onChange={handleInputChange}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n\r\n                                            {enrollSetting.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.enrollmentSettingId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.enrollmentSettingId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {(femaleStatus && basicInfo.age > 9) && (\r\n                                    <>\r\n                                   \r\n                                    <div className = \"form-group mb-3 col-md-6\" >\r\n                                        <FormGroup>\r\n                                        <Label> Pregnancy </Label>\r\n                                        <Input\r\n                                            type = \"select\"\r\n                                            name = \"pregnancyStatusId\"\r\n                                            id = \"pregnancyStatusId\"\r\n                                            value = {objValues.pregnancyStatusId}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            onChange = {handleInputChange}  \r\n                                            //disabled={locationState.actionType==='update'? false : true}                                      \r\n                                        >\r\n                                        < option value = \"\" >Select </option>\r\n                                        {pregnancyStatus.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>                                                                        \r\n                                    </FormGroup>  \r\n                                    </div>\r\n                                    {objValues.pregnancyStatusId!=='72' && (\r\n                                    <>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of LMP </Label>                                    \r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateOfLpm\"\r\n                                            id=\"dateOfLpm\"\r\n                                            max={today}\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateOfLpm}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />  \r\n                                            \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    </>\r\n                                    )}\r\n                                    </>\r\n                                )}\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >TB Status * </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"tbStatusId\"\r\n                                        id=\"tbStatusId\"\r\n                                        value={objValues.tbStatusId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n                                            {tbStatus.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                    </Input>\r\n                                    {errors.tbStatusId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.tbStatusId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {hideTargetGroup===\"false\" ? (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Target Group *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"targetGroupId\"\r\n                                        id=\"targetGroupId\"\r\n                                        value={objValues.targetGroupId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>                    \r\n                                                {kP.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                    </Input>\r\n                                    {errors.targetGroupId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroupId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                ) : \"\"}\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                {basicInfo.age <=14 && (\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                )}\r\n                                {/* <div className=\"form-group mb-3 col-md-3\">\r\n                                    {ovcEnrolled===true ? \r\n                                        (\r\n                                        <FormGroup>\r\n                                        <Label >OVC Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"ovcNumber\"\r\n                                            id=\"ovcNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.ovcNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div> */}\r\n                                \r\n                                {ovcEnrolled===true && \r\n                                (\r\n                                <>        \r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Household Unique Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"householdNumber\"\r\n                                            id=\"householdNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.householdNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\"></div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredToOVCPartner\"\r\n                                            id=\"referredToOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredToOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredToOVCPartner\"\r\n                                            id=\"dateReferredToOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredToOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredFromOVCPartner\"\r\n                                            id=\"referredFromOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredFromOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredFromOVCPartner\"\r\n                                            id=\"dateReferredFromOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredFromOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                </>\r\n                                )}\r\n                            \r\n                            </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n                            {locationState.actionType ==='update' ?\r\n                            (\r\n                                <>\r\n                                    <MatButton\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<SaveIcon />}\r\n                                        onClick={handleSubmit}\r\n                                        style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                    >\r\n                                        {!saving ? (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                                        ) : (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                                        )}\r\n                                    </MatButton>\r\n            \r\n                                    <MatButton\r\n                                        variant=\"contained\"\r\n                                        className={classes.button}\r\n                                        startIcon={<CancelIcon />}\r\n                                        onClick={handleCancel}\r\n                                        style={{backgroundColor:'#992E62'}}\r\n                                    >\r\n                                        <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                                    </MatButton>\r\n                            </>\r\n                            ):\"\"}\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Home from './main/webapp/jsx/components/Home'\r\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail'\r\nimport RegisterPatientPage from './main/webapp/jsx/components/Patient/RegisterPatient';\r\nimport EnrollPatientPage from './main/webapp/jsx/components/Patient/EnrollPatient';\r\nimport UpdatePatientEnrollment from './main/webapp/jsx/components/Patient/UpdatePatientEnrollment';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/patient-history\">\r\n            <PatientDetail />\r\n          </Route> \r\n          <Route path=\"/register-patient\">\r\n            <RegisterPatientPage />\r\n          </Route>\r\n          <Route path=\"/enroll-patient\">\r\n            <EnrollPatientPage />\r\n          </Route>\r\n          <Route path=\"/update-patient\">\r\n            <UpdatePatientEnrollment />\r\n          </Route>\r\n\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>       \r\n          \r\n        </Switch>\r\n      </div>\r\n </Router>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}