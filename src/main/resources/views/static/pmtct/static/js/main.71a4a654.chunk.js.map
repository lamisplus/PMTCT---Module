{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/components/Patient/ActiveANCPatientList.js","main/webapp/jsx/components/Visualisation/DashboardAnalytics/SummaryView/Highcharts/ReceivingArtByAge.js","main/webapp/jsx/components/Visualisation/DashboardAnalytics/SummaryView/Highcharts/ReceivingArtBySex.js","main/webapp/jsx/components/Visualisation/DashboardAnalytics/SummaryView/Index.js","main/webapp/jsx/components/Visualisation/Index.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/CaptureBiometric.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/components/Consultation/Home.js","main/webapp/jsx/components/Consultation/ViewUpdate/ADR/Index.js","main/webapp/jsx/components/Consultation/ViewUpdate/OpportunisticInfection/Index.js","main/webapp/jsx/components/Consultation/ViewUpdate/History/ConsultationPage.js","main/webapp/jsx/components/Consultation/Index.js","main/webapp/jsx/components/PmtctServices/PmtctEnrollment.js","main/webapp/jsx/components/PmtctServices/AncEnrollement.js","main/webapp/jsx/components/PmtctServices/LabourDelivery.js","main/webapp/jsx/images/fingerprintimage.png","main/webapp/jsx/components/Patient/Biometric.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/RegisterPatient.js","main/webapp/jsx/components/Patient/EnrollPatient.js","main/webapp/jsx/components/Patient/UpdatePatientEnrollment.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["url","token","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","Patients","makeStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","width","marginTop","submit","cardBottom","marginBottom","Select","height","button","root","input","error","color","fontSize","success","useState","setPatientList","setLoading","axios","get","baseUrl","headers","then","response","data","catch","useEffect","patients","calculate_age","dob","today","Date","dateParts","split","dateObject","birthDate","age_now","getFullYear","m","getMonth","getDate","getHospitalNumber","identifier","hospitalNumber","find","obj","type","value","icons","title","columns","field","filtering","query","Promise","resolve","reject","pageSize","page","search","result","records","map","row","name","to","pathname","state","patientId","id","patientObj","firstName","surname","hospital_number","gender","sex","age","dateOfBirth","undefined","moment","format","actions","ButtonGroup","variant","style","backgroundColor","size","Button","fontWeight","totalCount","totalRecords","options","headerStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","debounceInterval","Highcharts","setOptions","colors","getOptions","radialGradient","cx","cy","r","stops","brighten","ReceivingArtByAge","chart","plotBackgroundColor","plotBorderWidth","plotShadow","text","tooltip","pointFormat","accessibility","point","valueSuffix","plotOptions","pie","allowPointSelect","cursor","dataLabels","enabled","connectorColor","showInLegend","series","sliced","y","ReceivingArtBySex","align","verticalAlign","distance","startAngle","endAngle","center","innerSize","useStyles","SummaryView","activeItem","React","anchorEl","Boolean","padding","md","lg","sm","xs","className","CardBody","highcharts","subtitle","legend","layout","xAxis","categories","labels","x","yAxis","allowDecimals","responsive","rules","condition","maxWidth","chartOptions","credits","options2","Widget","class","divStyle","borderRadius","Home","key","setKey","startIcon","textTransform","Row","Col","xl","Card","Body","Tabs","activeKey","onSelect","k","Tab","eventKey","withStyles","heading","typography","pxToRem","secondaryHeading","palette","secondary","icon","details","column","flexBasis","helper","borderLeft","divider","unit","link","primary","main","textDecoration","classes","patientObjs","permissions","biometricStatus","setBiometricStatus","setDevices","setHivStatus","PatientCurrentStatus","CheckBiometric","console","log","ExpansionPanel","ExpansionPanelSummary","root2","phoneNumber","contactPoint","getPhoneNumber","address","city","getAddress","Typography","Label","Detail","navItemText","SubMenu","currentStatus","setGenderType","Observation","observation","mental","filter","evaluation","length","Menu","inverted","Item","onClick","setActiveContent","activeContent","route","ClinicVisit","errors","setErrors","setClinicVisitList","temp","setGetPatientObj","saving","setSaving","clinicalStage","setClinicalStage","functionalStatus","setFunctionalStatus","adherenceLevel","setAdherenceLevel","currentVitalSigns","setcurrentVitalSigns","showCurrentVitalSigns","setShowCurrentVitalSigns","adr","adrOnsetDate","bodyWeight","diastolic","systolic","pulse","temperature","respiratoryRate","vitalClinicalSupport","setVitalClinicalSupport","ard","onSetDate","ancNo","clinicalNotes","dateOfVisit","levelOfAdherence","nextClinicalAppointmentDate","onAntiTbDrugs","opportunisticInfection","illness","whoStaging","objValues","setObjValues","encounterDate","facilityId","personId","serviceTypeId","vital","setVitalSignDto","FunctionalStatus","WhoStaging","AdherenceLevel","VitalSigns","GetPatientObj","ClinicVisitList","PatientDetaild","lastVitalSigns","patObJ","handleInputChange","e","target","handleInputChangeVitalSignDto","Grid","Column","Segment","as","ribbon","FormGroup","Input","border","onChange","min","artCommence","visitDate","max","required","checked","htmlFor","InputGroup","onKeyUp","InputGroupText","addonType","toFixed","Math","round","nextAppointment","disabled","preventDefault","Object","values","every","post","toast","errorMessage","apierror","message","ADR","ClinicVisitPage","activeTab","flexGrow","AncPnc","useHistory","agreed2PartnerNotification","fetalPresentation","fpl","fundalHeight","infantFeeding","nextAppointmentDate","nutritionalSupport","pmtctEnrollmentDate","referredTo","tbStatus","viralLoadSample","viralLoadSampleDate","visitStatus","visitType","enroll","setEnrollDto","handleInputChangeEnrollmentDto","bmi","Message","content","BmiCal","Spinner","position","POSITION","BOTTOM_CENTER","AncEnrollement","visitId","commenced","toggle","patientsVitalsSigns","LabourDelivery","delieryMode","setDelieryMode","feedingDecision","setfeedingDecision","maternalOutCome","setmaternalOutCome","childStatus","setChildStatus","bookingStatus","setBookingStatus","artStartedLdWard","childGivenArvWithin72","dateOfDelivery","deliveryTime","episiotomy","gaweeks","hbstatus","hcstatus","hivExposedInfantGivenHbWithin24hrs","maternalOutcome","modeOfDelivery","onArt","referalSource","romDeliveryInterval","vaginalTear","delivery","setDelivery","MODE_DELIVERY","FEEDING_DECISION","MATERNAL_OUTCOME","CHILD_STATUS_DELIVERY","BOOKING_STATUS","handleInputChangeDeliveryDto","code","validate","fontFamily","marginLeft","lineHeight","checkUrl","Biometrics","history","location","biometricDevices","setbiometricDevices","biometricType","templateType","device","fingerType","setFingerType","pageLoading","setPageLoading","showCapture","setshowCapture","setTryAgain","setSuccess","storedBiometrics","setStoredBiometrics","capturedFingered","setCapturedFingered","setSelectedFingers","getPersonBiometrics","bgcolor","green","fingersCodeset","personCapturedFingers","_","uniq","biometricItems","item","extend","captured","includes","clear_storelist","TemplateType","flex","boxShadow","minHeight","flexWrap","biometric","index","lastModifiedDate","Dropdown","Toggle","drop","borderColor","marginRight","xmlns","xmlnsXlink","viewBox","version","stroke","strokeWidth","fill","fillRule","alignRight","finger","delete","newStoredBiometrics","updatePatientBiometricStatus","justifyContent","src","fingerprintimage","alt","Badge","iso","Alert","severity","AlertTitle","for","deviceName","selectedDevice","errorType","errorName","window","setTimeout","ERROR","biometricsEnrollments","capturedBiometricsList","uniqBy","paddingBottom","List","celled","horizontal","Header","paddingLeft","Icon","Content","capturedObj","art","setArt","actionType","CardContent","Biometric","PmtctEnrollment","library","add","faCheckSquare","faCoffee","faEdit","faTrash","demo","background","default","inline","UserRegistration","active","contact","deceased","deceasedDateTime","genderId","otherName","maritalStatusId","educationId","employmentStatusId","dateOfRegistration","isDateOfBirthEstimated","altPhonenumber","countryId","stateId","district","sexId","ninNumber","basicInfo","setBasicInfo","phone","email","relationshipId","lastName","middleName","relatives","setRelatives","toISOString","substr","replace","contacts","setContacts","disabledAgeBaseOnAge","setDisabledAgeBaseOnAge","ageDisabled","setAgeDisabled","showRelative","setShowRelative","genders","setGenders","maritalStatusOptions","setMaritalStatusOptions","educationOptions","setEducationOptions","occupationOptions","setOccupationOptions","relationshipOptions","setRelationshipOptions","countries","setCountries","states","setStates","provinces","setProvinces","settopLevelUnitCountryOptions","userDetail","user","useLocation","setfemaleStatus","gravida","expectedDeliveryDate","lmp","parity","hivDiognosicTime","referredSyphilisTreatment","testResultSyphilis","testedSyphilis","treatedSyphilis","personDto","pmtctHtsInfo","syphilisInfo","partnerNotification","setCarePoints","setSourceReferral","setEnrollSetting","setTbStatus","setKP","setPregnancyStatus","hospitalNumStatus","setHospitalNumStatus","setHospitalNumStatus2","open","setOpen","locationState","loadGenders","loadMaritalStatus","loadEducation","loadOccupation","loadRelationships","loadTopLevelCountry","CareEntryPoint","SourceReferral","HivStatus","EnrollmentSetting","TBStatus","KP","PregnancyStatus","GetCountry","alert","useCallback","handleDateOfBirthChange","handleInputChangeBasic","alphabetOnly","ninNumberValue","checkNINLimit","getHosiptalNumber","hosiptalNumber","uniqueId","getRelationship","relationship","handleInputChangeRelatives","handleSubmit","sourceOfReferral","newConatctsInfo","contactInfo","line","fullName","push","patientForm","landmark","subErrors","checkPhoneNumberBasic","inputName","slice","autoClose","hideProgressBar","margingRight","Form","defaultChecked","currentDate","setDate","setMonth","dobNew","abs","maritalStatusOption","occupationOption","educationOption","containerStyle","inputStyle","country","placeholder","maxLength","masks","ng","at","getCountryId","setStateByCountryId","relative","splice","handleEditRelative","handleDeleteRelative","checkPhoneNumber","validateRelatives","show","centered","backdrop","Title","Footer","person_uuid","getSex","patientAge","patientSex","getSexId","uuid","outline","ageNumber","patientDTO","femaleStatus","entryPointId","facilityName","statusAtRegistrationId","dateConfirmedHiv","sourceOfReferrerId","enrollmentSettingId","pregnancyStatusId","dateOfLpm","tbStatusId","targetGroupId","ovc_enrolled","ovcNumber","householdNumber","referredToOVCPartner","dateReferredToOVCPartner","referredFromOVCPartner","dateReferredFromOVCPartner","careEntryPointOther","carePoints","sourceReferral","hivStatus","enrollSetting","kP","pregnancyStatus","transferIn","setTransferIn","ovcEnrolled","setOvcEnrolled","hideTargetGroup","hospitalNumStatus2","identifiers","altphone","maritalStatus","employmentStatus","education","getStateId","enrollment","getCharacters","dateOfRegistration1","person","hivEnrollment","put","handleCheckBox","floor","random","App","path","PatientDetail","RegisterPatient","EnrollPatient","UpdatePatientEnrollment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","label","sideBarStyle","setSideBarStyle","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","body","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","sidebarpositions","openMenuToggle","setDemoTheme","setAttr","themeSettings","children","ReactDOM","render","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.71a4a654.chunk.js","sourcesContent":["// export const  token = (new URLSearchParams(window.location.search)).get(\"jwt\")\r\n// export const url = '/api/v1/'\r\nexport const url =  'http://localhost:8282/api/v1/';\r\nexport const  token = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNjY5MzQyMDU5fQ.rLKJ-WPAB818yRkJdKIn3aeDRAt1yGiu-z2dpE4aswPEoGEHNVZiQrfgTIzUeaC3wL--XFxfauqmHL5u9YlFKw';\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n//import { FaUserPlus } from \"react-icons/fa\";\r\nimport {TiArrowForward} from 'react-icons/ti'\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n    const [patientList, setPatientList] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            setLoading(true)\r\n            axios\r\n                .get(`${baseUrl}pmtct/pmtct-from-person`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    setLoading(false)\r\n                    setPatientList(response.data);\r\n                   \r\n                })\r\n                .catch((error) => {  \r\n                    setLoading(false)  \r\n                });        \r\n        }\r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now + \" year(s)\";\r\n        };\r\n    \r\n    const getHospitalNumber = (identifier) => {     \r\n        const identifiers = identifier;\r\n        const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');       \r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n    \r\n  return (\r\n    <div>\r\n\r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Find Patient \"\r\n              columns={[\r\n              // { title: \" ID\", field: \"Id\" },\r\n                {\r\n                  title: \"Patient Name\",\r\n                  field: \"name\",\r\n                },\r\n                { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n                { title: \"Sex\", field: \"gender\", filtering: false },\r\n                { title: \"Age\", field: \"age\", filtering: false },\r\n                //{ title: \"Enrollment Status\", field: \"v_status\", filtering: false },\r\n                //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n                // { title: \"ART Status\", field: \"status\", filtering: false },\r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              //isLoading={loading}\r\n                  data={query =>\r\n                    new Promise((resolve, reject) =>\r\n                        axios.get(`${baseUrl}pmtct/anc/pmtct-from-person?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                            .then(response => response)\r\n                            .then(result => {\r\n                                //console.log(result.data.records)\r\n                                resolve({\r\n                                    data: result.data.records.map((row) => ({\r\n                                        \r\n                                        name:<Link\r\n                                                to={{\r\n                                                    pathname: \"/enroll-patient\",\r\n                                                    state: { patientId : row.id, patientObj: row }\r\n                                                }}\r\n                 \r\n                                             title={\"Enroll Patient\"}\r\n                                             > {row.firstName + \" \" + row.surname}\r\n                                             </Link>\r\n                                           ,\r\n                                    hospital_number: getHospitalNumber(row.identifier),\r\n                                    gender:row && row.sex ? row.sex : \"\",\r\n                                    age: (row.dateOfBirth === 0 ||\r\n                                        row.dateOfBirth === undefined ||\r\n                                        row.dateOfBirth === null ||\r\n                                        row.dateOfBirth === \"\" )\r\n                                          ? 0\r\n                                          : calculate_age(moment(row.dateOfBirth).format(\"DD-MM-YYYY\")),\r\n                                    \r\n                                    //status: (<Label color=\"blue\" size=\"mini\">{row.currentStatus}</Label>),\r\n                                 //enroll-patient\r\n                                    actions:<div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/enroll-patient\",\r\n                                                    state: { patientId : row.id, patientObj: row }\r\n                                                }}\r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <TiArrowForward />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Enroll Patient</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link>\r\n\r\n                                            </div>\r\n                                        })),\r\n                                    page: query.page,\r\n                                    totalCount: result.data.totalRecords,\r\n                                    \r\n                                })\r\n                            })\r\n                            \r\n                    )}\r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n//import { FaUserPlus } from \"react-icons/fa\";\r\nimport {TiArrowForward} from 'react-icons/ti'\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n    const [patientList, setPatientList] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            setLoading(true)\r\n            axios\r\n                .get(`${baseUrl}pmtct/pmtct-from-person`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    setLoading(false)\r\n                    setPatientList(response.data);\r\n                   \r\n                })\r\n                .catch((error) => {  \r\n                    setLoading(false)  \r\n                });        \r\n        }\r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now + \" year(s)\";\r\n        };\r\n    \r\n    const getHospitalNumber = (identifier) => {     \r\n        const identifiers = identifier;\r\n        const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');       \r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n    \r\n  return (\r\n    <div>\r\n\r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Find Patient \"\r\n              columns={[\r\n              // { title: \" ID\", field: \"Id\" },\r\n                {\r\n                  title: \"Patient Name\",\r\n                  field: \"name\",\r\n                },\r\n                { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n                { title: \"Sex\", field: \"gender\", filtering: false },\r\n                { title: \"Age\", field: \"age\", filtering: false },\r\n                //{ title: \"Enrollment Status\", field: \"v_status\", filtering: false },\r\n                //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n                // { title: \"ART Status\", field: \"status\", filtering: false },\r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              //isLoading={loading}\r\n                data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}pmtct/anc/all-active-anc?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            \r\n                            resolve({\r\n                                data: result.data.records.map((row) => ({\r\n                                    name:\r\n                                        <Link\r\n                                        to ={{\r\n                                            pathname: \"/patient-history\",\r\n                                            state: { patientObj: row  }\r\n                                        }}\r\n            \r\n                                        title={\"Click to view patient dashboard\"}\r\n                                        > {row.firstName + \" \" + row.surname}\r\n                                        </Link>,\r\n                                        \r\n                                hospital_number: getHospitalNumber(row.identifier),\r\n                                gender:row && row.sex ? row.sex : \"\",\r\n                                age: (row.dateOfBirth === 0 ||\r\n                                    row.dateOfBirth === undefined ||\r\n                                    row.dateOfBirth === null ||\r\n                                    row.dateOfBirth === \"\" )\r\n                                        ? 0\r\n                                        : calculate_age(moment(row.dateOfBirth).format(\"DD-MM-YYYY\")),\r\n                                \r\n                                actions:<div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: { patientObj: row  }\r\n                                                }}\r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Patient Dashboard</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link>\r\n                                                        \r\n                                        </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                                \r\n                            })\r\n                        })\r\n                        \r\n                )}\r\n                options={{\r\n                    headerStyle: {\r\n                        backgroundColor: \"#014d88\",\r\n                        color: \"#fff\",\r\n                    },\r\n                    searchFieldStyle: {\r\n                        width : '200%',\r\n                        margingLeft: '250px',\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    searchFieldAlignment: 'left',\r\n                    pageSizeOptions:[10,20,100],\r\n                    pageSize:10,\r\n                    debounceInterval: 400\r\n                }}\r\n            />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import Highcharts from 'highcharts';\r\n\r\n// Radialize the colors\r\nHighcharts.setOptions({\r\n    colors: Highcharts.map(Highcharts.getOptions().colors, function (color) {\r\n        return {\r\n            radialGradient: {\r\n                cx: 0.5,\r\n                cy: 0.3,\r\n                r: 0.7\r\n            },\r\n            stops: [\r\n                [0, color],\r\n                [1, Highcharts.color(color).brighten(-0.3).get('rgb')] // darken\r\n            ]\r\n        };\r\n    })\r\n});\r\n\r\nexport const ReceivingArtByAge = {\r\n    chart: {\r\n        \r\n        plotBackgroundColor: null,\r\n        plotBorderWidth: null,\r\n        plotShadow: false,\r\n        type: 'pie'\r\n    },\r\n    title: {\r\n        text: 'Number of Adults and Children currently receiving ART by Age'\r\n    },\r\n    tooltip: {\r\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n    },\r\n    accessibility: {\r\n        point: {\r\n            valueSuffix: '%'\r\n        }\r\n    },\r\n    plotOptions: {\r\n        pie: {\r\n            allowPointSelect: true,\r\n            cursor: 'pointer',\r\n            dataLabels: {\r\n                enabled: true,\r\n                format: '<b>{point.name}</b>: {point.percentage:.1f} %',\r\n                connectorColor: 'black'\r\n            },\r\n            showInLegend: true\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'Currently Receiving ART By Age',\r\n        data: [\r\n            { name: '25 + ',  sliced: true, y: 61.41 },\r\n            { name: '20-24 ', y: 11.84 },\r\n            { name: '10-19 ', y: 10.85 },\r\n            { name: '≤ 9 ', y: 4.67 },\r\n           \r\n        ]\r\n    }]\r\n};","export const ReceivingArtBySex = {\r\n    chart: {\r\n        plotBackgroundColor: null,\r\n        plotBorderWidth: 0,\r\n        plotShadow: false\r\n    },\r\n    title: {\r\n        text: 'Number of Adults and Children newly enrolled on ART by Sex',\r\n        align: 'center',\r\n        verticalAlign: 'middle',\r\n        y: -160\r\n    },\r\n    tooltip: {\r\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n    },\r\n    accessibility: {\r\n        point: {\r\n            valueSuffix: '%'\r\n        }\r\n    },\r\n    plotOptions: {\r\n        pie: {\r\n            \r\n            dataLabels: {\r\n                enabled: true,\r\n                distance: -50,\r\n                format: '<b>{point.name}</b>: {point.percentage:.1f} %',\r\n                style: {\r\n                    fontWeight: 'bold',\r\n                    color: 'white'\r\n                }\r\n            },\r\n            startAngle: -90,\r\n            endAngle: 90,\r\n            center: ['50%', '75%'],\r\n            size: '110%',\r\n            showInLegend: true\r\n        }\r\n    },\r\n    series: [{\r\n        type: 'pie',\r\n        name: 'Newly Enrolled on ART ',\r\n        innerSize: '50%',\r\n        data: [\r\n            ['Male', 58.9],\r\n            ['Female', 13.29],\r\n            \r\n        ]\r\n    }]\r\n};","import React, { useState } from 'react';\r\n\r\nimport { Col, Form,CardBody,  Row,CardTitle, CardText,\r\n   } from \"reactstrap\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Highcharts from 'highcharts';\r\n import HighchartsReact from 'highcharts-react-official';\r\nimport {NewlyEnrolledArtBySex} from './Highcharts/NewlyEnrolledArtBySex';\r\nimport {NewlyEnrolledArtByAge} from './Highcharts/NewlyEnrolledArtByAge';\r\nimport {ReceivingArtByAge}  from './Highcharts/ReceivingArtByAge';\r\nimport {ReceivingArtBySex} from './Highcharts/ReceivingArtBySex';\r\nimport { Progress } from 'reactstrap';\r\n\r\n\r\n// Load Highcharts modules\r\n//require(\"highcharts/modules/exporting\")(Highcharts);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n},\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst SummaryView = (props) => {\r\n  const classes = useStyles();\r\n  const [chartValue, setChartValue] = useState(\"\");\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const toggle = () => setDropdownOpen(!dropdownOpen);\r\n  const [state, setState] = useState({ activeItem: 'gamepad' })\r\n\r\n  const handleItemClick = (e, { name }) => setState({ activeItem: name })\r\n  const { activeItem } = state\r\n  const chartPage  = e => {\r\n\r\n    setChartValue(e)\r\n  }\r\n\r\n  //Menu Icon \r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div  spacing={5} style={{ padding: 20 }} >\r\n      <Row>\r\n        <Col md={12}>\r\n          {/* The second Column Card Layout  */}\r\n        <Row>\r\n                 \r\n                  <Col  lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\r\n                  <Card><CardBody>\r\n                    <HighchartsReact highcharts={Highcharts} options={ReceivingArtBySex} />\r\n                  </CardBody></Card>\r\n                  </Col>\r\n                  <Col  lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\r\n                  <Card><CardBody>\r\n                    <HighchartsReact highcharts={Highcharts} options={ReceivingArtByAge} />\r\n                  </CardBody></Card>\r\n                  </Col>\r\n              </Row>\r\n\r\n           \r\n        </Col>\r\n      </Row>\r\n\r\n      \r\n\r\n      \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SummaryView;\r\n","import React, { Fragment } from \"react\";\r\n// BS\r\nimport { Dropdown, Nav, Tab } from \"react-bootstrap\";\r\n/// Scroll\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { Link } from \"react-router-dom\";\r\n// images\r\nimport SummaryView from './DashboardAnalytics/SummaryView/Index';\r\nimport Highcharts from 'highcharts'\r\nimport HighchartsReact from 'highcharts-react-official'\r\nimport {NewlyEnrolledArtBySex} from './DashboardAnalytics/SummaryView/Highcharts/NewlyEnrolledArtBySex';\r\n\r\nconst options = {\r\n  chart: {\r\n    type: 'column'\r\n},\r\n\r\ntitle: {\r\n    text: 'Viral Load Cascade among new patients eligible after 6 months'\r\n},\r\n\r\nsubtitle: {\r\n    text: ''\r\n},\r\n\r\nlegend: {\r\n    align: 'right',\r\n    verticalAlign: 'middle',\r\n    layout: 'vertical'\r\n},\r\n\r\nxAxis: {\r\n    categories: ['Number Eligble', 'Number of Sample Collected', 'Number Tested', 'Number Suppressed'],\r\n    labels: {\r\n        x: -10\r\n    }\r\n},\r\n\r\nyAxis: {\r\n    allowDecimals: false,\r\n    title: {\r\n        text: 'Amount'\r\n    }\r\n},\r\n\r\nseries: [{\r\n    name: 'Number Eligble',\r\n    data: [20, 40, 30, 3]\r\n}, {\r\n    name: 'Number of Sample Collected',\r\n    data: [62, 41, 22, 22]\r\n}, {\r\n    name: 'Number Tested',\r\n    data: [200, 45, 30,20]\r\n}, {\r\n  name: 'Number Suppressed',\r\n  data: [40, 40, 10, 90]\r\n}],\r\n\r\nresponsive: {\r\n    rules: [{\r\n        condition: {\r\n            maxWidth: 500\r\n        },\r\n        chartOptions: {\r\n            legend: {\r\n                align: 'center',\r\n                verticalAlign: 'bottom',\r\n                layout: 'horizontal'\r\n            },\r\n            yAxis: {\r\n                labels: {\r\n                    align: 'left',\r\n                    x: 0,\r\n                    y: -5\r\n                },\r\n                title: {\r\n                    text: null\r\n                }\r\n            },\r\n            subtitle: {\r\n                text: null\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            }\r\n        }\r\n    }]\r\n}\r\n}\r\nconst options2 = {\r\n  chart: {\r\n    type: 'column'\r\n},\r\n\r\ntitle: {\r\n    text: 'Viral Load Cascade among patients currently on ART eligible after 12 months of last VL result'\r\n},\r\n\r\nsubtitle: {\r\n    text: ''\r\n},\r\n\r\nlegend: {\r\n    align: 'right',\r\n    verticalAlign: 'middle',\r\n    layout: 'vertical'\r\n},\r\n\r\nxAxis: {\r\n    categories: ['Number Eligble', 'Number of Sample Collected', 'Number Tested', 'Number Suppressed'],\r\n    labels: {\r\n        x: -10\r\n    }\r\n},\r\n\r\nyAxis: {\r\n    allowDecimals: false,\r\n    title: {\r\n        text: 'Amount'\r\n    }\r\n},\r\n\r\nseries: [{\r\n    name: 'Number Eligble',\r\n    data: [200, 40, 30, 3]\r\n}, {\r\n    name: 'Number of Sample Collected',\r\n    data: [62, 41, 22, 22]\r\n}, {\r\n    name: 'Number Tested',\r\n    data: [2000, 450, 300,200]\r\n}, {\r\n  name: 'Number Suppressed',\r\n  data: [40, 40, 100, 90]\r\n}],\r\n\r\nresponsive: {\r\n    rules: [{\r\n        condition: {\r\n            maxWidth: 500\r\n        },\r\n        chartOptions: {\r\n            legend: {\r\n                align: 'center',\r\n                verticalAlign: 'bottom',\r\n                layout: 'horizontal'\r\n            },\r\n            yAxis: {\r\n                labels: {\r\n                    align: 'left',\r\n                    x: 0,\r\n                    y: -5\r\n                },\r\n                title: {\r\n                    text: null\r\n                }\r\n            },\r\n            subtitle: {\r\n                text: null\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            }\r\n        }\r\n    }]\r\n}\r\n}\r\nconst Widget = () => {\r\n  return (\r\n    <Fragment>     \r\n      <div className=\"row\">\r\n       <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-primary text-danger\">\r\n                <i class=\"fa fa-user-plus\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">NEWLY DIAGNOSED HIV+</p>\r\n                  <h4 className=\"mb-0\">3280</h4>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-warning text-warning\">\r\n                <i class=\"fa fa-heartbeat\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">CURRENT ON ART</p>\r\n                  <h4 className=\"mb-0\">2570</h4>\r\n                  {/* <span className=\"badge badge-warning\">+3.5%</span> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body  p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-danger text-danger\">\r\n                <i class=\"fa fa-compress\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">VIRALLY SUPPRESSED</p>\r\n                  <h4 className=\"mb-0\">50</h4>\r\n                  {/* <span className=\"badge badge-danger\">-3.5%</span> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-success text-success\">\r\n                <i class=\"fa fa-users\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">CURRENTLY ACTIVE</p>\r\n                  <h4 className=\"mb-0\">2340</h4>\r\n                  {/* <span className=\"badge badge-success\">-3.5%</span> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <SummaryView />\r\n        <div className=\"col-xl-6 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <HighchartsReact\r\n            highcharts={Highcharts}\r\n            options={options}\r\n          />\r\n        </div>\r\n        <div className=\"col-xl-6 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <HighchartsReact\r\n            highcharts={Highcharts}\r\n            options={options2}\r\n          />\r\n        </div>\r\n        \r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Widget;\r\n","import React, {useState, Fragment } from \"react\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport NotEnrollPatients from './Patient/PatientList'\r\nimport ActiveANCPatients from './Patient/ActiveANCPatientList'\r\nimport VisualisationHome from './Visualisation/Index'\r\nimport { Link } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button';\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\n//import PageTitle from \"./../layouts/PageTitle\";\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n    const [key, setKey] = useState('home');\r\n\r\n\r\n  return (\r\n    <Fragment>  \r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4>PMTCT</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Link to={\"register-patient\"}>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end mb-10\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n                style={{backgroundColor:'#014d88'}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\r\n            </Button>\r\n        </Link>\r\n        <br/><br/>\r\n      <Row>       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n                  \r\n                  <Tab eventKey=\"home\" title=\"Find Patients\">                   \r\n                    <NotEnrollPatients />\r\n                  </Tab>\r\n                  <Tab eventKey=\"anc\" title=\"Active ANC Patients\">                   \r\n                    <ActiveANCPatients />\r\n                  </Tab>\r\n                  <Tab eventKey=\"visualization\" title=\"Data Visualisation\">                   \r\n                    <VisualisationHome />\r\n                  </Tab>                    \r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n        Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n        } from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nconst CaptureBiometric = (props) => {\r\n    const classes = useStyles()\r\n    const biometricDevices = props.biometricDevices\r\n    const patientID= props && props.patientId ? props.patientId : \"\"\r\n    \r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:patientID, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState(props.biometricDevices);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n   // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([])\r\n     console.log(biometricDevices)\r\n    const buttonSx = {\r\n      ...(success && {\r\n        bgcolor: green[500],\r\n        '&:hover': {\r\n          bgcolor: green[700],\r\n        },\r\n      }),\r\n    };\r\n\r\n\r\n    useEffect(() => {      \r\n        TemplateType();\r\n        if(objValues.device===\"\"){\r\n            setshowCapture(false)\r\n        }\r\n        \r\n      }, []);\r\n     //Get list of Finger index\r\n     const TemplateType =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setFingerType(response.data);\r\n           })\r\n           .catch((error) => {\r\n           });\r\n       \r\n     }\r\n\r\n     //check if device is plugged or not \r\n     const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        console.log(checkUrl)\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n           .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n            if(response.data.errorType ===\"ERROR\"){\r\n                toast.error(response.data.errorName + \" is not plug\");\r\n                //setshowCapture(true)\r\n            }else{\r\n                setshowCapture(true)\r\n            }\r\n           })\r\n           .catch((error) => {\r\n           });\r\n     }\r\n     // handle the input changes \r\n\r\n     const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //to capture  selected index finger \r\n    const captureFinger = (e) => {        \r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                  setLoading(true);\r\n                  if(response.data.type ===\"ERROR\"){                   \r\n                    setLoading(false);\r\n                    setTryAgain(true);\r\n                    window.setTimeout(() => {\r\n                        setTryAgain(false);\r\n                      }, 5000);\r\n                    toast.error(response.data.message.ERROR);\r\n                  }else{\r\n                    const templateType= response.data.templateType\r\n                    setTryAgain(false);\r\n                    setSuccess(true)\r\n                    window.setTimeout(() => {\r\n                        setSuccess(false)\r\n                        setLoading(false);                        \r\n                      }, 5000);\r\n                                        \r\n                    setCapturedFingered([...capturedFingered, response.data])\r\n                    fingerType.splice(templateType, 1);\r\n                    setFingerType([...fingerType]);\r\n                  }\r\n                  //toast.success(\"Record save successful\");\r\n              })\r\n              .catch(error => {                 \r\n              });\r\n        }\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {        \r\n        e.preventDefault();\r\n        if(capturedFingered.length > 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1]\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                toast.success(\"Biometric save successful\");\r\n                setCapturedFingered([])\r\n                props.setPatientBiometricStatus(true)\r\n                props.togglestatus()\r\n            })\r\n            .catch(error => {\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }else{\r\n            \r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n  }  \r\n    \r\n // console.log(capturedFingered)\r\n\r\n    return (\r\n        <div >\r\n            <Card >\r\n                <CardBody>\r\n                    <Modal isOpen={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"lg\">\r\n                        <Form >\r\n                            <ModalHeader toggle={props.togglestatus}>capture Biometric</ModalHeader>\r\n                            <ModalBody>\r\n                                <Card>\r\n                                {/* <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader> */}\r\n                                    <CardBody>\r\n                                    <Row form>\r\n                                    <ToastContainer />\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Device </Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"device\"\r\n                                                    id=\"device\"\r\n                                                    onChange={checkDevice}\r\n                                                    value={objValues.device}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Device </option>\r\n                                                {biometricDevices.map(({ id, name }) => (\r\n                                                    <option key={id} value={name}>\r\n                                                        {name}\r\n                                                    </option>\r\n                                                ))}\r\n                                              \r\n                                            </Input>\r\n                                            {errors.device !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.device}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Finger </option>\r\n\r\n                                                {fingerType.map((value) => (\r\n                                                    <option key={value.id} value={value.display}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                            {errors.templateType !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.templateType}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        \r\n\r\n                                        <Col md={4}>\r\n                                        \r\n                                        <MatButton\r\n                                            type='button'\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={captureFinger}\r\n                                            className={'mt-4'}\r\n                                            startIcon={<FingerprintIcon />}\r\n                                        >\r\n                                            Capture Finger\r\n                                        </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n                                        \r\n                                        </>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                        }\r\n                                        {/* <img width='500' height='200' src={responseImage}/> */}\r\n                                        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                                       \r\n                                     {loading && (\r\n                                        <>\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                </Fab>\r\n                                                {loading && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: green[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {tryAgain && (\r\n                                        <>\r\n                                        \r\n\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                 <FingerprintIcon />\r\n                                                </Fab>\r\n                                                {tryAgain && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: red[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            Click to Recapture Again\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {/*  */}\r\n                                        </Col>\r\n                                       \r\n                                            \r\n                                        </Row>\r\n\r\n                                    <Row>\r\n                                 {capturedFingered.length >=1 ? (  \r\n                                     <>                               \r\n                                    <Col md={12} >\r\n                                        <h3>Captured Fingerprints</h3>\r\n                                    </Col>\r\n                                    <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {capturedFingered.map((x) => (\r\n                                                <List.Item>\r\n                                                    {/* <List.Header><Icon name='cancel'  color='red' /> </List.Header> */}\r\n                                                    <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                    {/* <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col> */}\r\n                                    <br/><br/><br/><br/><br/><br/>\r\n                                        <Col md={12} >\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={saveBiometrics}\r\n                                                // className={classes.button}\r\n                                                startIcon={<SaveIcon/>}\r\n                                            >\r\n                                                Save Capture\r\n                                            </MatButton>\r\n                                        </Col>\r\n                                    </> \r\n                                    )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                    </Row>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </ModalBody>\r\n                        </Form>\r\n\r\n                    </Modal>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CaptureBiometric;\r\n","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Link } from 'react-router-dom'\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\n//import Chip from '@material-ui/core/Chip';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Button } from 'semantic-ui-react';\r\nimport {Label,} from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CaptureBiometric from './CaptureBiometric';\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  //const patientCurrentStatus=props.patientObj && props.patientObj.currentStatus===\"Died (Confirmed)\" ? true : false ;\r\n  const patientObjs = props.patientObj ? props.patientObj : {}\r\n  const permissions= props.permissions ? props.permissions : [];\r\n  const [patientObj, setpatientObj] = useState(patientObjs)\r\n  const [patientBiometricStatus, setPatientBiometricStatus]= useState(props.patientObj.biometricStatus);\r\n  const [biometricStatus, setBiometricStatus] = useState(false);\r\n  const [devices, setDevices] = useState([]);\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  const [biometricModal, setBiometricModal] = useState(false);\r\n  const BiometricModalToggle = () => setBiometricModal(!biometricModal);\r\n  const [hivStatus, setHivStatus] = useState();\r\n  const [artModal, setArtModal] = useState(false);\r\n  const Arttoggle = () => setArtModal(!artModal);\r\n  useEffect(() => {\r\n    PatientCurrentStatus();\r\n    CheckBiometric();\r\n  }, [props.patientObj]);\r\n\r\n  //Get list of KP\r\n  const CheckBiometric =()=>{\r\n      axios\r\n        .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setBiometricStatus(response.data);\r\n            if(response.data===true){\r\n              axios\r\n                  .get(`${baseUrl}biometrics/devices`,\r\n                      { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                  )\r\n                  .then((response) => {\r\n                      setDevices(response.data);\r\n                      \r\n                  })\r\n                  .catch((error) => {\r\n                      console.log(error)\r\n                  });\r\n            \r\n              }\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    \r\n  }\r\n    ///GET LIST OF Patients\r\n    async function PatientCurrentStatus() {\r\n        axios\r\n            .get(`${baseUrl}hiv/status/patient-current/${patientObj.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n\r\n              setHivStatus(response.data);\r\n            })\r\n            .catch((error) => {    \r\n            });        \r\n    }\r\n    const get_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now ;\r\n    }\r\n    const calculate_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now + \" year(s)\";\r\n    };\r\n\r\n    const loadChildEvaluation =(row)=> {\r\n      props.setActiveContent('child-evaluation')\r\n    }\r\n    const capturePatientBiometric =(row)=> {\r\n      //props.setActiveContent('biometrics')\r\n      props.setActiveContent({...props.activeContent, route:'biometrics', obj:row})\r\n    }\r\n    const loadArtCommencement =(row)=> {\r\n      props.setActiveContent('art-commencement')\r\n    }\r\n    \r\n    const loadArt =(row)=> {\r\n        setpatientObj({...patientObj, ...row});\r\n            setArtModal(!artModal)\r\n    }\r\n    \r\n    const CurrentStatus = ()=>{\r\n\r\n          return (  <Label color=\"blue\" size=\"mini\">{hivStatus}</Label>);\r\n  }\r\n    const getHospitalNumber = (identifier) => {     \r\n      const identifiers = identifier;\r\n      const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');       \r\n      return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n    const getPhoneNumber = (identifier) => {     \r\n      const identifiers = identifier;\r\n      const phoneNumber = identifiers.contactPoint.find(obj => obj.type == 'phone');       \r\n      return phoneNumber ? phoneNumber.value : '';\r\n    };\r\n    const getAddress = (identifier) => {     \r\n      const identifiers = identifier;\r\n      const address = identifiers.address.find(obj => obj.city);      \r\n      return address ? address.city : '';\r\n    };\r\n    const handleBiometricCapture = (id) => { \r\n      let patientObjID= id\r\n      setBiometricModal(!biometricModal);\r\n    }\r\n\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n       <ExpansionPanel >\r\n\r\n                <ExpansionPanelSummary >\r\n                \r\n                <Row>\r\n                \r\n                    <Col md={12}>\r\n                    <Row className={\"mt-1\"}>\r\n                    <Col md={12} className={classes.root2}>\r\n                        <b style={{fontSize: \"25px\"}}>\r\n                        {patientObj.firstName + \" \" + patientObj.surname }\r\n                        </b>\r\n                        <Link to={\"/\"} >\r\n                        <ButtonMui\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-2 mr-2 mt-2\"\r\n                            //startIcon={<FaUserPlus size=\"10\"/>}\r\n                            startIcon={<TiArrowBack  />}\r\n                            style={{backgroundColor:\"rgb(153, 46, 98)\", color:'#fff', height:'35px'}}\r\n\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                        </ButtonMui>\r\n                      </Link>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Patient ID : <b>{getHospitalNumber(patientObj.identifier) }</b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        Date Of Birth : <b>{patientObj.dateOfBirth }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Age : <b>{calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))}</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Gender :{\" \"}\r\n                        <b>{patientObj.sex && patientObj.sex!==null ?  patientObj.sex : '' }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Phone Number : <b>{getPhoneNumber(patientObj.contactPoint)}</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Address : <b>{getAddress(patientObj.address)} </b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    <Col md={12}>\r\n                    {biometricStatus===true ? (\r\n                          <>\r\n                              <div >\r\n                                  <Typography variant=\"caption\">\r\n                                      <Label color={props.patientObj.biometricStatus===true? \"green\" : \"red\"} size={\"mini\"}>\r\n                                          Biometric Status\r\n                                          <Label.Detail>{props.patientObj.biometricStatus===true? \"Captured\" : \"Not Capture\"}</Label.Detail>\r\n                                      </Label>\r\n                                     \r\n                                      \r\n                                  </Typography>\r\n                              </div>\r\n                          </>\r\n                          )\r\n                          :\r\n                          <>\r\n                              \r\n                          </>\r\n                      }\r\n                    </Col>\r\n                    </Row>\r\n                    </Col>\r\n                </Row>\r\n            \r\n                </ExpansionPanelSummary>\r\n               \r\n                \r\n                    {/* <Button\r\n                      color='red'\r\n                      content='BloodType'\r\n                      //icon='heart'\r\n                      label={{ basic: true, color: 'red', pointing: 'left', content: 'AB+' }}\r\n                    /> */}                                  \r\n                    {/* <Button\r\n                        basic\r\n                        color='blue'\r\n                        content='Height'\r\n                        icon='fork'\r\n                        label={{\r\n                            as: 'a',\r\n                            basic: true,\r\n                            color: 'blue',\r\n                            pointing: 'left',\r\n                            content: '74.5 in',\r\n                        }}\r\n                      />               */}\r\n                      {/* <Button\r\n                        basic\r\n                        color='blue'\r\n                        content='Weight'\r\n                        icon='fork'\r\n                        label={{\r\n                            as: 'a',\r\n                            basic: true,\r\n                            color: 'blue',\r\n                            pointing: 'left',\r\n                            content: '74.5 in',\r\n                        }}\r\n                      /> */}\r\n                               \r\n                {/* <div className={classes.column}>\r\n                  <Button primary  floated='left' onClick={() => get_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\")) > 5 ? loadAdultEvaluation(patientObj) :loadChildEvaluation(patientObj) }><span style={{fontSize:\"11px\"}}>Initial Clinic Evaluation</span></Button>\r\n                </div> */}\r\n                {/* {patientCurrentStatus !==true && props.patientObj.enrollment.targetGroupId !==\"456\" ?                   \r\n                  (\r\n                    <>\r\n                      <div className={classes.column}>\r\n                        <Button primary  floated='left' onClick={() => loadMentalHealthScreening(patientObj) }><span style={{fontSize:\"11px\"}}>Mental Health Screening</span></Button>\r\n                      </div>\r\n                    </>\r\n                  ) :\"\"           \r\n                } */}\r\n               {/* {patientObj.commenced!==true && (\r\n                <div className={classes.column} style={{paddingLeft:\"20px\"}}>\r\n                {\" \"}<Button primary onClick={() => loadArt(patientObj)} ><span style={{fontSize:\"11px\"}}>ART Commencement </span></Button>\r\n                </div>\r\n                )\r\n               }\r\n                     */}\r\n              \r\n            </ExpansionPanel>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {Dropdown, Menu } from \"semantic-ui-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navItemText: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction SubMenu(props) {\r\n    const classes = useStyles();\r\n    let gender=\"\"\r\n    const patientObjs = props.patientObj ? props.patientObj : {}\r\n    const patientCurrentStatus=props.patientObj && props.patientObj.currentStatus===\"Died (Confirmed)\" ? true : false ;\r\n    const [patientObj, setpatientObj] = useState(patientObjs)\r\n    const [genderType, setGenderType] = useState()\r\n    let mentalStatus=false\r\n    let initialEvaluationStatus=false\r\n    useEffect(() => {\r\n        Observation();\r\n        gender =props.patientObj && props.patientObj.sex ? props.patientObj.sex : null\r\n        setGenderType(gender===\"Female\" ? true : false)\r\n    }, [props.patientObj]);\r\n     //Get list of RegimenLine\r\n     const Observation =()=>{\r\n        axios\r\n            .get(`${baseUrl}observation/person/${props.patientObj.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                const observation = response.data\r\n                const mental= observation.filter((x)=> x.type==='mental health')\r\n                const evaluation= observation.filter((x)=> x.type==='initial evaluation')\r\n                if(mental.length > 1){\r\n                    mentalStatus=true\r\n                }\r\n                if(evaluation.length > 1){\r\n                    initialEvaluationStatus=true\r\n                }\r\n\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });\r\n        \r\n        }\r\n    const loadAncPnc =(row)=> {\r\n        props.setActiveContent({...props.activeContent, route:'anc-pnc'})\r\n    }\r\n    const loadLabourDelivery =(row)=> {\r\n        props.setActiveContent({...props.activeContent, route:'labour-delivery'})\r\n    }\r\n    const onClickConsultation = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'consultation'})\r\n    }\r\n    const onClickHome = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n    }\r\n\r\n\r\n    return (\r\n         <div>\r\n            <Menu size=\"mini\" color={\"black\"} inverted >\r\n                <Menu.Item onClick={() => onClickHome()} > Home</Menu.Item>  \r\n                <Menu.Item onClick={() => loadAncPnc()} >PMTCT Enrollment</Menu.Item>                \r\n                <Menu.Item onClick={() => onClickConsultation()} >Follow Up Visit</Menu.Item>                \r\n                <Menu.Item onClick={() => loadLabourDelivery()} >Labour and Delivery</Menu.Item>\r\n                                   \r\n            </Menu>             \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default SubMenu;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Segment, Label, Icon, List, Button, Card,Feed } from 'semantic-ui-react'\r\n// Page titie\r\nimport { FormGroup, Label as FormLabelName, InputGroup,\r\n          InputGroupText,\r\n          Input,\r\n        } from \"reactstrap\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1)\r\n    }\r\n  },\r\n  input: {\r\n    display: 'none'\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\nconst ClinicVisit = (props) => {\r\n  let patientObj = props.patientObj ? props.patientObj : {}\r\n  const [errors, setErrors] = useState({});\r\n  const [clinicVisitList, setClinicVisitList] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  let temp = { ...errors }\r\n  const classes = useStyles()\r\n  const [getPatientObj, setGetPatientObj] = useState({});\r\n  const [saving, setSaving] = useState(false);\r\n  const [clinicalStage, setClinicalStage] = useState([]);\r\n  const [functionalStatus, setFunctionalStatus] = useState([]);\r\n  const [adherenceLevel, setAdherenceLevel] = useState([]);\r\n\r\n\r\n  const [currentVitalSigns, setcurrentVitalSigns] = useState({})\r\n  const [showCurrentVitalSigns, setShowCurrentVitalSigns] = useState(false)\r\n\r\n  //ADR array Object \r\n  const [adrObj, setAdrObj] = useState({ adr: \"\", adrOnsetDate: \"\" });\r\n  const [adrList, setAdrList] = useState([]);\r\n  //Vital signs clinical decision support \r\n  const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n                                                                    bodyWeight: \"\",\r\n                                                                    diastolic: \"\",\r\n                                                                    height: \"\",\r\n                                                                    systolic: \"\",\r\n                                                                    pulse:\"\",\r\n                                                                    temperature:\"\",\r\n                                                                    respiratoryRate:\"\" \r\n                                                                  })\r\n  const [objValues, setObjValues] = useState({\r\n\r\n      adr: [\r\n        {\r\n          ard: \"\",\r\n          onSetDate: \"\"\r\n        }\r\n      ],\r\n      ancNo: \"\",\r\n      bodyWeight: \"\",\r\n      clinicalNotes: \"\",\r\n      dateOfVisit: \"\",\r\n      diastolic: \"\",\r\n      functionalStatus: \"\",\r\n      height: \"\",\r\n      levelOfAdherence: \"\",\r\n      nextClinicalAppointmentDate: \"\",\r\n      onAntiTbDrugs: \"\",\r\n      opportunisticInfection: [\r\n        {\r\n          illness: \"\",\r\n          onSetDate: \"\"\r\n        }\r\n      ],\r\n      pulse: \"\",\r\n      respiratoryRate: \"\",\r\n      systolic: \"\",\r\n      temperature: \"\",\r\n      whoStaging: \"\"\r\n    }\r\n  );\r\n  const [vital, setVitalSignDto] = useState({\r\n    bodyWeight: \"\",\r\n    diastolic: \"\",\r\n    encounterDate: \"\",\r\n    facilityId: 1,\r\n    height: \"\",\r\n    personId: props.patientObj.id,\r\n    serviceTypeId: 1,\r\n    systolic: \"\",\r\n    pulse:\"\",\r\n    temperature:\"\",\r\n    respiratoryRate:\"\" \r\n  })\r\n\r\n\r\n  useEffect(() => {\r\n    FunctionalStatus();\r\n    WhoStaging();\r\n    AdherenceLevel();\r\n    VitalSigns();\r\n    GetPatientObj();\r\n    ClinicVisitList();\r\n    PatientDetaild();\r\n    //hiv/patient/3\r\n  }, []);\r\n     //GET LIST Drug Refill\r\n     async function ClinicVisitList() {\r\n      setLoading(true)\r\n      axios\r\n          .get(`${baseUrl}hiv/art/clinic-visit/person?pageNo=0&pageSize=10&personId=${props.patientObj.id}`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n          )\r\n          .then((response) => {\r\n              setLoading(false)\r\n              setClinicVisitList(response.data);                \r\n          })\r\n          .catch((error) => {  \r\n              setLoading(false)  \r\n          });        \r\n    }\r\n    //Check for the last Vital Signs\r\n    const VitalSigns = () => {\r\n    axios\r\n      .get(`${baseUrl}patient/vital-sign/person/${props.patientObj.id}`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n\r\n        const lastVitalSigns = response.data[response.data.length - 1]\r\n        if (lastVitalSigns.encounterDate === moment(new Date()).format(\"YYYY-MM-DD\") === true) {\r\n          setcurrentVitalSigns(lastVitalSigns)\r\n          setShowCurrentVitalSigns(true)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n    }\r\n    //Check for the Patient Object\r\n    const PatientDetaild = () => {\r\n      axios\r\n        .get(`${baseUrl}hiv/patient/${props.patientObj.id}`,\r\n          { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n            patientObj=response.data\r\n        })\r\n        .catch((error) => {\r\n          //console.log(error);\r\n        });\r\n      }\r\n    //Get The updated patient objeect\r\n    const GetPatientObj = () => {\r\n      axios\r\n        .get(`${baseUrl}hiv/patients`,\r\n          { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n          const patObJ= response.data.filter((x)=> x.id===props.patientObj.id)\r\n\r\n          setGetPatientObj(patObJ[0])\r\n        })\r\n        .catch((error) => {\r\n          //console.log(error);\r\n        });\r\n    }\r\n\r\n  //Get list of WhoStaging\r\n  const WhoStaging = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/CLINICAL_STAGE`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setClinicalStage(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n  ///GET LIST OF FUNCTIONAL%20_STATUS\r\n  async function FunctionalStatus() {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/FUNCTIONAL%20_STATUS`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n\r\n        setFunctionalStatus(response.data);\r\n        //setValues(response.data)\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  ///Level of Adherence\r\n  async function AdherenceLevel() {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_LEVEL_OF_ADHERENCE`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setAdherenceLevel(response.data);\r\n\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  const handleInputChange = e => {\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    \r\n  }\r\n  const handleInputChangeVitalSignDto = e => {\r\n    setVitalSignDto({ ...vital, [e.target.name]: e.target.value });\r\n  } \r\n  //Handle CheckBox \r\n  const handleCheckBox = e => {\r\n    if (e.target.checked) {\r\n      //currentVitalSigns.personId === null ? props.patientObj.id : currentVitalSigns.personId\r\n      setVitalSignDto({ ...currentVitalSigns })\r\n    } else {\r\n      setVitalSignDto({\r\n        bodyWeight: \"\",\r\n        diastolic: \"\",\r\n        encounterDate: \"\",\r\n        facilityId: \"\",\r\n        height: \"\",\r\n        personId: props.patientObj.id,\r\n        serviceTypeId: \"\",\r\n        systolic: \"\",\r\n        pulse:\"\",\r\n        temperature:\"\",\r\n        respiratoryRate:\"\" \r\n      })\r\n    }\r\n  }\r\n  //to check the input value for clinical decision \r\n  const handleInputValueCheckHeight =(e)=>{\r\n    if(e.target.name===\"height\" && (e.target.value < 48.26 || e.target.value>216.408)){\r\n      const message =\"Height cannot be greater than 216.408 and less than 48.26\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, height:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, height:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckBodyWeight =(e)=>{\r\n    if(e.target.name===\"bodyWeight\" && (e.target.value < 3 || e.target.value>150)){      \r\n      const message =\"Body weight must not be greater than 150 and less than 3\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckSystolic =(e)=>{\r\n    if(e.target.name===\"systolic\" && (e.target.value < 90 || e.target.value>240)){      \r\n      const message =\"Blood Pressure systolic must not be greater than 240 and less than 90\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckDiastolic =(e)=>{\r\n    if(e.target.name===\"diastolic\" && (e.target.value < 60 || e.target.value>140)){      \r\n      const message =\"Blood Pressure diastolic must not be greater than 140 and less than 60\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckPulse =(e)=>{\r\n    if(e.target.name===\"pulse\" && (e.target.value < 40 || e.target.value>120)){      \r\n    const message =\"Pulse must not be greater than 120 and less than 40\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:\"\"})\r\n    }\r\n}\r\nconst handleInputValueCheckRespiratoryRate =(e)=>{\r\n    if(e.target.name===\"respiratoryRate\" && (e.target.value < 10 || e.target.value>70)){      \r\n    const message =\"Respiratory Rate must not be greater than 70 and less than 10\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:\"\"})\r\n    }\r\n}\r\nconst handleInputValueCheckTemperature =(e)=>{\r\n    if(e.target.name===\"temperature\" && (e.target.value < 35 || e.target.value>47)){      \r\n    const message =\"Temperature must not be greater than 47 and less than 35\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, temperature:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, temperature:\"\"})\r\n    }\r\n}\r\n  //Validations of the forms\r\n  const validate = () => {        \r\n    temp.encounterDate = vital.encounterDate ? \"\" : \"This field is required\"\r\n    temp.nextAppointment = objValues.nextAppointment ? \"\" : \"This field is required\"\r\n    temp.whoStaging = objValues.whoStaging ? \"\" : \"This field is required\"\r\n    temp.clinicalNotes = objValues.clinicalNotes ? \"\" : \"This field is required\"\r\n    temp.functionalStatus = objValues.functionalStatus ? \"\" : \"This field is required\"\r\n    temp.levelOfAdherence = objValues.levelOfAdherence ? \"\" : \"This field is required\"\r\n    //temp.labTestGroupId = vital.diastolic ? \"\" : \"This field is required\"\r\n    temp.systolic = vital.systolic ? \"\" : \"This field is required\"\r\n    temp.height = vital.height ? \"\" : \"This field is required\"\r\n    temp.bodyWeight = vital.bodyWeight ? \"\" : \"This field is required\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n\r\n\r\n  /**** Submit Button Processing  */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(validate()){\r\n    setSaving(true)\r\n    objValues.visitDate = vital.encounterDate\r\n    objValues['vitalSignDto'] = vital\r\n    axios.post(`${baseUrl}hiv/art/clinic-visit/`, objValues,\r\n      { headers: { \"Authorization\": `Bearer ${token}` } },\r\n\r\n    )\r\n      .then(response => {\r\n        PatientDetaild();\r\n        setSaving(false);\r\n        toast.success(\"Clinic Visit save successful\");\r\n        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n      })\r\n      .catch(error => {\r\n        setSaving(false);\r\n        if(error.response && error.response.data){\r\n          let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        }\r\n        else{\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n       \r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n    <div className=\"row\">\r\n\r\n      <div className=\"col-md-8 \">\r\n        <h2>Mother Follow-up Visit</h2>\r\n        </div>\r\n        \r\n      </div>\r\n      <Grid >\r\n\r\n        <Grid.Column >\r\n          <Segment>\r\n            <Label as='a' color='blue'  style={{width:'106%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}>VITAL  SIGNS</h4>\r\n            </Label>\r\n            <br /><br />\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Date of Visit *</FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"encounterDate\"\r\n                    id=\"encounterDate\"\r\n                    value={vital.encounterDate}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    onChange={handleInputChangeVitalSignDto}\r\n                    min={props.patientObj && props.patientObj.artCommence ? props.patientObj.artCommence.visitDate : null}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    required\r\n                  />\r\n                 {errors.encounterDate !==\"\" ? (\r\n                      <span className={classes.error}>{errors.encounterDate}</span>\r\n                  ) : \"\" }\r\n\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                {showCurrentVitalSigns && (\r\n                  <div className=\"form-check custom-checkbox ml-1 \">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className=\"form-check-input\"\r\n                      name=\"currentVitalSigns\"\r\n                      id=\"currentVitalSigns\"\r\n                      onChange={handleCheckBox} \r\n                                          \r\n                    />\r\n                    <label\r\n                      className=\"form-check-label\"\r\n                      htmlFor=\"basic_checkbox_1\"\r\n                    >\r\n                      use current Vital Signs\r\n                    </label>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"row\">\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Pulse</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"pulse\"\r\n                                id=\"pulse\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"40\"\r\n                                max=\"120\"\r\n                                value={vital.pulse}\r\n                                onKeyUp={handleInputValueCheckPulse} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.pulse !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.pulse}</span>\r\n                        ) : \"\"}\r\n                        {errors.pulse !==\"\" ? (\r\n                            <span className={classes.error}>{errors.pulse}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Respiratory Rate </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"respiratoryRate\"\r\n                                id=\"respiratoryRate\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"10\"\r\n                                max=\"70\"\r\n                                value={vital.respiratoryRate}\r\n                                onKeyUp={handleInputValueCheckRespiratoryRate} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.respiratoryRate !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.respiratoryRate}</span>\r\n                        ) : \"\"}\r\n                        {errors.respiratoryRate !==\"\" ? (\r\n                            <span className={classes.error}>{errors.respiratoryRate}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Temperature </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"temperature\"\r\n                                id=\"temperature\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"35\"\r\n                                max=\"47\"\r\n                                value={vital.temperature}\r\n                                onKeyUp={handleInputValueCheckTemperature} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                <sup>o</sup>c\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.temperature !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.temperature}</span>\r\n                        ) : \"\"}\r\n                        {errors.temperature !==\"\" ? (\r\n                            <span className={classes.error}>{errors.temperature}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Body Weight</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"bodyWeight\"\r\n                                id=\"bodyWeight\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"3\"\r\n                                max=\"150\"\r\n                                value={vital.bodyWeight}\r\n                                onKeyUp={handleInputValueCheckBodyWeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                kg\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.bodyWeight !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.bodyWeight}</span>\r\n                        ) : \"\"}\r\n                        {errors.bodyWeight !==\"\" ? (\r\n                            <span className={classes.error}>{errors.bodyWeight}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>                                   \r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Height</FormLabelName>\r\n                        <InputGroup> \r\n                        <InputGroupText\r\n                                addonType=\"append\"\r\n                                style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                cm\r\n                        </InputGroupText>\r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"height\"\r\n                                id=\"height\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                value={vital.height}\r\n                                min=\"48.26\"\r\n                                max=\"216.408\"\r\n                                onKeyUp={handleInputValueCheckHeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                                <InputGroupText\r\n                                addonType=\"append\"\r\n                              \r\n                                style={{ backgroundColor:\"#992E62\", color:\"#fff\", border: \"1px solid #992E62\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                {vital.height!=='' ? (vital.height/100).toFixed(2) + \"m\" : \"m\"}\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.height !==\"\" ? (\r\n                            <span className={classes.error}>{vitalClinicalSupport.height}</span>\r\n                        ) : \"\"}\r\n                        {errors.height !==\"\" ? (\r\n                            <span className={classes.error}>{errors.height}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 mt-2 col-md-4\">\r\n                        {vital.bodyWeight!==\"\" && vital.height!=='' && (\r\n                            <FormGroup>\r\n                            <Label > {\" \"}</Label>\r\n                            <InputGroup> \r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                BMI : {Math.round(vital.bodyWeight/((vital.height * vital.height)/100))}\r\n                            </InputGroupText>                   \r\n                           \r\n                            </InputGroup>                \r\n                            </FormGroup>\r\n                        )}\r\n                    </div>\r\n              </div>\r\n              <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-8\">\r\n                  <FormGroup>\r\n                  <FormLabelName >Blood Pressure</FormLabelName>\r\n                  <InputGroup>\r\n                  <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                          systolic(mmHg)\r\n                  </InputGroupText> \r\n                      <Input \r\n                          type=\"number\"\r\n                          name=\"systolic\"\r\n                          id=\"systolic\"\r\n                          min=\"90\"\r\n                          max=\"240\"\r\n                          onChange={handleInputChangeVitalSignDto}\r\n                          value={vital.systolic}\r\n                          onKeyUp={handleInputValueCheckSystolic}\r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}} \r\n                      />\r\n                      <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                      diastolic(mmHg)\r\n                      </InputGroupText>\r\n                          <Input \r\n                          type=\"number\"\r\n                          name=\"diastolic\"\r\n                          id=\"diastolic\"\r\n                          min={0}\r\n                          max={140}\r\n                          onChange={handleInputChangeVitalSignDto}\r\n                          value={vital.diastolic}\r\n                          onKeyUp={handleInputValueCheckDiastolic} \r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                          />\r\n                      \r\n                      \r\n                  </InputGroup>\r\n                  {vitalClinicalSupport.systolic !==\"\" ? (\r\n                  <span className={classes.error}>{vitalClinicalSupport.systolic}</span>\r\n                  ) : \"\"}\r\n                  {errors.systolic !==\"\" ? (\r\n                      <span className={classes.error}>{errors.systolic}</span>\r\n                  ) : \"\" }  \r\n                  {vitalClinicalSupport.diastolic !==\"\" ? (\r\n                  <span className={classes.error}>{vitalClinicalSupport.diastolic}</span>\r\n                  ) : \"\"}\r\n                  {errors.diastolic !==\"\" ? (\r\n                      <span className={classes.error}>{errors.diastolic}</span>\r\n                  ) : \"\" }          \r\n                  </FormGroup>\r\n              </div>\r\n\r\n              </div>\r\n            </div>\r\n            <Label as='a' color='black'  style={{width:'106%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}>CONSULTATION</h4>\r\n            </Label>\r\n            <br /><br />\r\n\r\n            <div className=\" mb-3\">\r\n              <FormLabelName >Clinical Notes</FormLabelName>\r\n              <textarea\r\n                name=\"clinicalNotes\"\r\n                className=\"form-control\"\r\n                value={objValues.clinicalNotes}\r\n                onChange={handleInputChange}\r\n                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n              ></textarea>\r\n              {errors.clinicalNotes !==\"\" ? (\r\n                      <span className={classes.error}>{errors.clinicalNotes}</span>\r\n                  ) : \"\" }\r\n            </div>\r\n            <div className=\"row\">\r\n\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >WHO Staging *</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"whoStaging\"\r\n                    id=\"whoStaging\"\r\n                    value={objValues.whoStaging}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"select\">Select </option>\r\n\r\n                    {clinicalStage.map((value) => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.whoStaging !==\"\" ? (\r\n                      <span className={classes.error}>{errors.whoStaging}</span>\r\n                  ) : \"\" }\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Functional Status *</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"functionalStatus\"\r\n                    id=\"functionalStatus\"\r\n                    value={objValues.functionalStatus}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"select\">Select </option>\r\n\r\n                    {functionalStatus.map((value) => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.functionalStatus !==\"\" ? (\r\n                      <span className={classes.error}>{errors.functionalStatus}</span>\r\n                  ) : \"\" }\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Level of Adherence *</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"levelOfAdherence\"\r\n                    id=\"levelOfAdherence\"\r\n                    value={objValues.levelOfAdherence}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"select\">Select </option>\r\n\r\n                    {adherenceLevel.map((value) => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.levelOfAdherence !==\"\" ? (\r\n                      <span className={classes.error}>{errors.levelOfAdherence}</span>\r\n                  ) : \"\" }\r\n                </FormGroup>\r\n              </div>\r\n\r\n            </div>\r\n            <br />\r\n\r\n            <Label as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n            <h4 style={{color:'#fff'}}>NEXT CLINICAL APPOINTMENT DATE </h4>\r\n            </Label>\r\n            <br /><br />\r\n            {/* TB Screening Form */}\r\n            <Input\r\n                    type=\"date\"\r\n                    name=\"nextAppointment\"\r\n                    id=\"nextAppointment\"\r\n                    className=\"col-md-6\"\r\n                    value={vital.nextAppointment}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    min={vital.encounterDate}\r\n                    \r\n                  />\r\n              {errors.nextAppointment !==\"\" ? (\r\n                      <span className={classes.error}>{errors.nextAppointment}</span>\r\n                  ) : \"\" }\r\n            <br />\r\n            <MatButton\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              disabled={saving}\r\n              startIcon={<SaveIcon />}\r\n              style={{backgroundColor:\"#014d88\"}}\r\n              onClick={handleSubmit}\r\n            >\r\n              {!saving ? (\r\n                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n              ) : (\r\n                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n              )}\r\n            </MatButton>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClinicVisit;\r\n","import React, {useState, useEffect } from \"react\";\r\n// import { Link } from 'react-router-dom';\r\nimport { Table  } from \"react-bootstrap\";\r\nimport { Input, Label, FormGroup, } from \"reactstrap\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {Icon, List, Label as LabelSui} from 'semantic-ui-react'\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { url as baseUrl,token } from \"./../../../../../api\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\nconst ADR = (props) => {\r\n  const [errors, setErrors] = useState({});\r\n  const classes = useStyles()\r\n  let temp = { ...errors }\r\n  const [prepSideEffect, setPrepSideEffect] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    PrepSideEffect();\r\n  }, []);\r\n       //Get list of PrepSideEffect\r\n       const PrepSideEffect =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/PREP_SIDE_EFFECTS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               //console.log(response.data);\r\n               setPrepSideEffect(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });\r\n       \r\n        }\r\n  const handAdrleInputChange = e => {\r\n    props.setAdrObj ({...props.adrObj,  [e.target.name]: e.target.value});\r\n  }\r\n   //Validations of the forms\r\n   const validate = () => {        \r\n    temp.adr = props.adrObj.adr ? \"\" : \"This field is required\"\r\n    temp.adrOnsetDate = props.adrObj.adrOnsetDate ? \"\" : \"This field is required\"\r\n\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n  const addADR = e => { \r\n    if(validate()){\r\n        props.setAdrList([...props.adrList, props.adrObj])\r\n    }else{\r\n      toast.error(\" Field are required \");\r\n    }\r\n  }\r\n  /* Remove ADR  function **/\r\n  const removeRelativeLocation = index => {       \r\n      props.adrList.splice(index, 1);\r\n      props.setAdrList([...props.adrList]);\r\n     \r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n        <div className=\"row\">\r\n        {props.enableUpdate && (\r\n        <>\r\n        <div className=\"form-group mb-3 col-md-5\">\r\n\r\n            <FormGroup>\r\n            <Label >ADR </Label>\r\n            \r\n              <Input\r\n                  type=\"select\"\r\n                  name=\"adr\"\r\n                  id=\"adr\"\r\n                  value={props.adrObj.adr}\r\n                  onChange={handAdrleInputChange}\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  required\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n                      {prepSideEffect.map((value) => (\r\n                          <option key={value.id} value={value.display}>\r\n                              {value.display}\r\n                          </option>\r\n                      ))}\r\n              </Input>\r\n                {errors.adr !==\"\" ? (\r\n                    <span className={classes.error}>{errors.adr}</span>\r\n                ) : \"\" }\r\n            </FormGroup>\r\n        </div>\r\n        <div className=\"form-group mb-3 col-md-5\">        \r\n        <FormGroup>\r\n            <Label > Onset Date</Label>\r\n            <Input\r\n                type=\"date\"\r\n                name=\"adrOnsetDate\"\r\n                id=\"adrOnsetDate\"\r\n                value={props.adrObj.adrOnsetDate}\r\n                min={props.artStartDate}\r\n                onChange={handAdrleInputChange}\r\n                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                required\r\n                > \r\n            </Input>\r\n            {errors.adrOnsetDate !==\"\" ? (\r\n                <span className={classes.error}>{errors.adrOnsetDate}</span>\r\n            ) : \"\" }\r\n            </FormGroup>\r\n        </div>\r\n        \r\n        <div className=\"form-group mb-3 col-md-2\">\r\n          <LabelSui as='a' color='black'  onClick={addADR}  size='tiny' style={{ marginTop:35}}>\r\n              <Icon name='plus' /> Add\r\n          </LabelSui>\r\n        </div>\r\n        </>)}\r\n        {props.adrList.length >0 \r\n          ?\r\n            <List>\r\n            <Table  striped responsive>\r\n                  <thead >\r\n                      <tr>\r\n                          <th>ADR</th>\r\n                          <th>OnSetDate</th>\r\n                          <th ></th>\r\n                      </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                {props.adrList.map((relative, index) => (\r\n\r\n                  <RelativeList\r\n                      key={index}\r\n                      index={index}\r\n                      relative={relative}\r\n                      removeRelativeLocation={removeRelativeLocation}\r\n                  />\r\n                  ))}\r\n                  </tbody>\r\n                  </Table>\r\n            </List>\r\n            :\r\n            \"\"\r\n        }       \r\n    </div>\r\n    </div>\r\n     \r\n  );\r\n};\r\n\r\nfunction RelativeList({\r\n  relative,\r\n  index,\r\n  removeRelativeLocation,\r\n}) {\r\n\r\n\r\n  return (\r\n          <tr>\r\n              <th>{relative.adr}</th>\r\n              <th>{relative.adrOnsetDate}</th>\r\n              <th></th>\r\n              <th >\r\n                  <IconButton aria-label=\"delete\" size=\"small\" color=\"error\" onClick={() =>removeRelativeLocation(index)}>\r\n                      <DeleteIcon fontSize=\"inherit\" />\r\n                  </IconButton>\r\n                  \r\n              </th>\r\n          </tr> \r\n  );\r\n}\r\n\r\n\r\nexport default ADR;\r\n","import React, { useState } from \"react\";\r\nimport {  Table  } from \"react-bootstrap\";\r\nimport { Input, Label, FormGroup, } from \"reactstrap\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport moment from \"moment\";\r\nimport {Icon, List, Label as LabelSui} from 'semantic-ui-react'\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\nconst ADR = (props) => {\r\n  const [errors, setErrors] = useState({});\r\n  const classes = useStyles()\r\n  let temp = { ...errors }\r\n  const handleInfectionInputChange = e => {\r\n  props.setInfection ({...props.infection,  [e.target.name]: e.target.value});\r\n  }\r\n  //Validations of the forms\r\n  const validate = () => {        \r\n    temp.ondateInfection = props.infection.ondateInfection ? \"\" : \"This field is required\"\r\n    temp.illnessInfection = props.infection.illnessInfection ? \"\" : \"This field is required\"\r\n\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n    const addInfection = e => { \r\n      if(validate()){\r\n        props.setInfectionList([...props.infectionList, props.infection])\r\n      }else{\r\n        toast.error(\" Field are required \");\r\n      }\r\n    \r\n    }\r\n    /* Remove ADR  function **/\r\n    const removeInfection = index => {       \r\n    props.infectionList.splice(index, 1);\r\n    props.setInfectionList([...props.infectionList]);\r\n        \r\n    };\r\n                                            \r\n\r\n  return (\r\n    <div>\r\n       <div className=\"row\">\r\n       {props.enableUpdate && (\r\n        <>\r\n          <div className=\"form-group mb-3 col-md-5\">\r\n              <FormGroup>\r\n              <Label >Onset Date </Label>\r\n              <Input\r\n                  type=\"date\"\r\n                  name=\"ondateInfection\"\r\n                  id=\"ondateInfection\"\r\n                  value={props.infection.ondateInfection}\r\n                  onChange={handleInfectionInputChange}\r\n                  max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  required\r\n                  > \r\n              </Input>\r\n              {errors.ondateInfection !==\"\" ? (\r\n                  <span className={classes.error}>{errors.ondateInfection}</span>\r\n              ) : \"\" }\r\n              </FormGroup>\r\n          </div>\r\n          <div className=\"form-group mb-3 col-md-5\">        \r\n          <FormGroup>\r\n              <Label > Illness</Label>\r\n              <Input\r\n                  type=\"text\"\r\n                  name=\"illnessInfection\"\r\n                  id=\"illnessInfection\"\r\n                  value={props.infection.illnessInfection}\r\n                  onChange={handleInfectionInputChange}\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  required\r\n                  > \r\n              </Input>\r\n              {errors.illnessInfection !==\"\" ? (\r\n                  <span className={classes.error}>{errors.illnessInfection}</span>\r\n              ) : \"\" }\r\n              </FormGroup>\r\n          </div>\r\n          <div className=\"form-group mb-3 col-md-2\">\r\n          <LabelSui as='a' color='black'  onClick={addInfection}  size='tiny' style={{ marginTop:35}}>\r\n              <Icon name='plus' /> Add\r\n          </LabelSui>\r\n          </div>\r\n        </>\r\n        )}\r\n        {props.infectionList.length >0 \r\n          ?\r\n            <List>\r\n            <div style={{padding:'3px 0px'}} >\r\n            <Table  striped responsive size=\"sm\" >\r\n                  <thead  >\r\n                      <tr >\r\n                          <th>Illness</th>\r\n                          <th>OnSetDate</th>\r\n                          <th ></th>\r\n                      </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                {props.infectionList.map((relative, index) => (\r\n\r\n                  <InfectionList\r\n                      key={index}\r\n                      index={index}\r\n                      relative={relative}\r\n                      removeInfection={removeInfection}\r\n                  />\r\n                  ))}\r\n                  </tbody>\r\n                  </Table>\r\n                  </div>\r\n                </List>\r\n                :\r\n                \"\"\r\n            } \r\n    </div>\r\n    </div>\r\n     \r\n  );\r\n};\r\n\r\nfunction InfectionList({\r\n    relative,\r\n    index,\r\n    removeInfection,\r\n  }) {\r\n  \r\n   \r\n    return (\r\n            <tr>\r\n  \r\n                <th>{relative.illnessInfection}</th>\r\n                <th>{relative.ondateInfection}</th>\r\n                <th></th>\r\n                <th >\r\n                    <IconButton aria-label=\"delete\" size=\"small\" color=\"error\" onClick={() =>removeInfection(index)}>\r\n                        <DeleteIcon fontSize=\"inherit\" />\r\n                    </IconButton>\r\n                    \r\n                </th>\r\n            </tr> \r\n    );\r\n  }\r\n\r\nexport default ADR;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Segment, Label,} from 'semantic-ui-react'\r\n// Page titie\r\nimport { FormGroup, Label as FormLabelName, InputGroup,\r\n          InputGroupText,\r\n          InputGroupButtonDropdown,\r\n          Input,\r\n          DropdownToggle,\r\n          DropdownMenu,\r\n          DropdownItem\r\n        } from \"reactstrap\";\r\nimport ADR from './../ADR/Index'\r\nimport OpportunisticInfection from './../OpportunisticInfection/Index'\r\nimport TBScreening from './../TBScreening/Index'\r\nimport { url as baseUrl, token } from \"../../../../../api\";\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Row, Col,   } from \"react-bootstrap\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { Button as ButtonSMUI, Icon} from 'semantic-ui-react'\r\nimport {Link} from 'react-router-dom';\r\n//import { objectValues } from \"react-toastify/dist/utils\";\r\n\r\n\r\nlet adherenceLevelObj = []\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1)\r\n    }\r\n  },\r\n  input: {\r\n    display: 'none'\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\n\r\n\r\nconst ClinicVisit = (props) => {\r\n  const patientObj = props.patientObj ? props.patientObj : {}\r\n  const [dropdownOpen, setDropdownOpen] = React.useState(false);\r\n  const [splitButtonOpen, setSplitButtonOpen] = React.useState(false);\r\n  const toggleDropDown = () => setDropdownOpen(!dropdownOpen);\r\n  const toggleSplit = () => setSplitButtonOpen(!splitButtonOpen);\r\n  const [visitId, setVisitId]= useState()\r\n  const [enableUpdateButton, setEnableUpdateButton]=useState(false)\r\n  const [heightValue, setHeightValue]= useState(\"cm\")\r\n  const [enableUpdate, setEnableUpdate]= useState(false) //Enable update for all input field if the user have permission\r\n  const [errors, setErrors] = useState({});\r\n  const [clinicVisitList, setClinicVisitList] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  let temp = { ...errors }\r\n  const classes = useStyles()\r\n  // the visit date history \r\n  //end of the visit date history\r\n  const [getPatientObj, setGetPatientObj] = useState({});\r\n  const [saving, setSaving] = useState(false);\r\n  const [clinicalStage, setClinicalStage] = useState([]);\r\n  const [functionalStatus, setFunctionalStatus] = useState([]);\r\n  const [adherenceLevel, setAdherenceLevel] = useState([]);\r\n  const [tbStatus, setTbStatus] = useState([]);\r\n  const [TBForms, setTBForms] = useState(false)\r\n  const [currentVitalSigns, setcurrentVitalSigns] = useState({})\r\n  const [showCurrentVitalSigns, setShowCurrentVitalSigns] = useState(false)\r\n  //opportunistic infection Object\r\n  const [infection, setInfection] = useState({ illnessInfection: \"\", ondateInfection: \"\" });\r\n  const [infectionList, setInfectionList] = useState([]);\r\n  //ADR array Object \r\n  const [adrObj, setAdrObj] = useState({ adr: \"\", adrOnsetDate: \"\" });\r\n  const [adrList, setAdrList] = useState([]);\r\n  //Vital signs clinical decision support \r\n  const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n                                                                    bodyWeight: \"\",\r\n                                                                    diastolic: \"\",\r\n                                                                    height: \"\",\r\n                                                                    systolic: \"\",\r\n                                                                    pulse:\"\",\r\n                                                                    temperature:\"\",\r\n                                                                    respiratoryRate:\"\" \r\n                                                                  })\r\n  const [objValues, setObjValues] = useState({\r\n    adherenceLevel: \"\",\r\n    adheres: {},\r\n    adrScreened: \"\",\r\n    adverseDrugReactions: {},\r\n    artStatusId: \"\" ,\r\n    cd4: \"\",\r\n    cd4Percentage: \"\",\r\n    clinicalNote: \"\",\r\n    clinicalStageId: \"\",\r\n    facilityId: 0,\r\n    functionalStatusId: \"\",\r\n    hivEnrollmentId: \"\",\r\n    nextAppointment: \"\",\r\n    lmpDate: \"\",\r\n    oiScreened: \"\",\r\n    opportunisticInfections: {},\r\n    personId: patientObj.id,\r\n    tbScreen: {},\r\n    stiIds: \"\",\r\n    stiTreated: \"\",\r\n    uuid: \"\",\r\n    visitDate: \"\",\r\n    whoStagingId: \"\"\r\n  });\r\n  const [vital, setVitalSignDto] = useState({\r\n    bodyWeight: \"\",\r\n    diastolic: \"\",\r\n    encounterDate: \"\",\r\n    facilityId: 1,\r\n    height: \"\",\r\n    personId: props.patientObj.id,\r\n    serviceTypeId: 1,\r\n    systolic: \"\",\r\n    pulse:\"\",\r\n    temperature:\"\",\r\n    respiratoryRate:\"\" \r\n  })\r\n  const [tbObj, setTbObj] = useState({\r\n    currentOnIpt: \"\",\r\n    coughing: \"\",\r\n    antiTBDrug: \"\",\r\n    nightSweat: \"\",\r\n    fever: \"\",\r\n    contactWithTBCase: \"\",\r\n    lethergy: \"\",\r\n    tbStatusId: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    FunctionalStatus();\r\n    WhoStaging();\r\n    AdherenceLevel();\r\n    TBStatus();\r\n    VitalSigns()\r\n    GetPatientObj();\r\n    ClinicVisitListHistory();\r\n    if(props.activeContent.id!==null){\r\n     \r\n      GetVisitById(props.activeContent.id)\r\n      setVisitId(props.activeContent.id)\r\n    }\r\n  }, []);\r\n     //GET LIST Drug Refill\r\n     async function ClinicVisitListHistory() {\r\n      setLoading(true)\r\n      axios\r\n          .get(`${baseUrl}hiv/art/clinic-visit/person?pageNo=0&pageSize=10&personId=${props.patientObj.id}`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n          )\r\n          .then((response) => {\r\n              setLoading(false)\r\n              setClinicVisitList(response.data.filter((x)=> x.isCommencement!==true));              \r\n          })\r\n          .catch((error) => {  \r\n              setLoading(false)  \r\n          });        \r\n    }\r\n  //Check for the last Vital Signs\r\n  const VitalSigns = () => {\r\n    axios\r\n      .get(`${baseUrl}patient/vital-sign/person/${props.patientObj.id}`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n\r\n        const lastVitalSigns = response.data[response.data.length - 1]\r\n        if (lastVitalSigns.encounterDate === moment(new Date()).format(\"YYYY-MM-DD\") === true) {\r\n          setcurrentVitalSigns(lastVitalSigns)\r\n          setShowCurrentVitalSigns(true)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n    //Get The updated patient objeect\r\n    const GetPatientObj = () => {\r\n      axios\r\n        .get(`${baseUrl}hiv/patients`,\r\n          { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n          const patObJ= response.data.filter((x)=> x.id===props.patientObj.id)\r\n\r\n          setGetPatientObj(patObJ[0])\r\n        })\r\n        .catch((error) => {\r\n          //console.log(error);\r\n        });\r\n    }\r\n\r\n  //Get list of WhoStaging\r\n  const WhoStaging = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/CLINICAL_STAGE`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setClinicalStage(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n  ///GET LIST OF FUNCTIONAL%20_STATUS\r\n  // TB STATUS\r\n  const TBStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setTbStatus(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n\r\n  async function FunctionalStatus() {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/FUNCTIONAL%20_STATUS`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n\r\n        setFunctionalStatus(response.data);\r\n        //setValues(response.data)\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  ///Level of Adherence\r\n  async function AdherenceLevel() {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_LEVEL_OF_ADHERENCE`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setAdherenceLevel(response.data);\r\n\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  const handleInputChange = e => {\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    if (e.target.name === \"whoStagingId\") {\r\n      if (e.target.value === \"NO\") {\r\n        setTBForms(true)\r\n      } else {\r\n        setTBForms(false)\r\n      }\r\n    }\r\n  }\r\n  const handleInputChangeVitalSignDto = e => {\r\n    setVitalSignDto({ ...vital, [e.target.name]: e.target.value });\r\n  }\r\n\r\n  //Handle CheckBox \r\n  const handleCheckBox = e => {\r\n    if (e.target.checked) {\r\n      //currentVitalSigns.personId === null ? props.patientObj.id : currentVitalSigns.personId\r\n      setVitalSignDto({ ...currentVitalSigns })\r\n    } else {\r\n      setVitalSignDto({\r\n        bodyWeight: \"\",\r\n        diastolic: \"\",\r\n        encounterDate: \"\",\r\n        facilityId: \"\",\r\n        height: \"\",\r\n        personId: props.patientObj.id,\r\n        serviceTypeId: \"\",\r\n        systolic: \"\",\r\n        pulse:\"\",\r\n        temperature:\"\",\r\n        respiratoryRate:\"\" \r\n      })\r\n    }\r\n  }\r\n  //to check the input value for clinical decision \r\n  const handleInputValueCheckHeight =(e)=>{\r\n    if(e.target.name===\"height\" && (e.target.value < 48.26 || e.target.value>216.408)){\r\n      const message =\"Height cannot be greater than 216.408 and less than 48.26\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, height:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, height:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckBodyWeight =(e)=>{\r\n    if(e.target.name===\"bodyWeight\" && (e.target.value < 3 || e.target.value>150)){      \r\n      const message =\"Body weight must not be greater than 150 and less than 3\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckSystolic =(e)=>{\r\n    if(e.target.name===\"systolic\" && (e.target.value < 90 || e.target.value>240)){      \r\n      const message =\"Blood Pressure systolic must not be greater than 240 and less than 90\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckDiastolic =(e)=>{\r\n    if(e.target.name===\"diastolic\" && (e.target.value < 60 || e.target.value>140)){      \r\n      const message =\"Blood Pressure diastolic must not be greater than 140 and less than 60\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckPulse =(e)=>{\r\n    if(e.target.name===\"pulse\" && (e.target.value < 40 || e.target.value>120)){      \r\n    const message =\"Pulse must not be greater than 120 and less than 40\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:\"\"})\r\n    }\r\n}\r\nconst handleInputValueCheckRespiratoryRate =(e)=>{\r\n    if(e.target.name===\"respiratoryRate\" && (e.target.value < 10 || e.target.value>70)){      \r\n    const message =\"Respiratory Rate must not be greater than 70 and less than 10\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:\"\"})\r\n    }\r\n}\r\nconst handleInputValueCheckTemperature =(e)=>{\r\n    if(e.target.name===\"temperature\" && (e.target.value < 35 || e.target.value>47)){      \r\n    const message =\"Temperature must not be greater than 47 and less than 35\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, temperature:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, temperature:\"\"})\r\n    }\r\n}\r\n  //Validations of the forms\r\n  const validate = () => {        \r\n    temp.encounterDate = vital.encounterDate ? \"\" : \"This field is required\"\r\n    temp.nextAppointment = objValues.nextAppointment ? \"\" : \"This field is required\"\r\n    temp.whoStagingId = objValues.whoStagingId ? \"\" : \"This field is required\"\r\n    temp.clinicalNote = objValues.clinicalNote ? \"\" : \"This field is required\"\r\n    temp.functionalStatusId = objValues.functionalStatusId ? \"\" : \"This field is required\"\r\n    temp.adherenceLevel = objValues.adherenceLevel ? \"\" : \"This field is required\"\r\n    temp.labTestGroupId = vital.diastolic ? \"\" : \"This field is required\"\r\n    temp.systolic = vital.systolic ? \"\" : \"This field is required\"\r\n    temp.height = vital.height ? \"\" : \"This field is required\"\r\n    temp.bodyWeight = vital.bodyWeight ? \"\" : \"This field is required\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n\r\n  const  heightFunction =(e)=>{\r\n    if(e==='cm'){\r\n        setHeightValue('cm')\r\n        if(vital.height!==\"\"){\r\n            const newHeightValue= (vital.height * 100)\r\n            setVitalSignDto ({...vital,  height: newHeightValue});\r\n        }\r\n    }else if(e==='m'){\r\n        setHeightValue('m')\r\n        if(vital.height!==\"\"){\r\n            const newHeightValue= (vital.height/100)\r\n            setVitalSignDto ({...vital,  height: newHeightValue});\r\n        }\r\n        \r\n    }\r\n\r\n  }\r\n  /**** Submit Button Processing  */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(validate()){\r\n    setSaving(true)\r\n    objValues.visitDate = vital.encounterDate\r\n    objValues.adverseDrugReactions = adrList\r\n    objValues.artStatusId = getPatientObj.artCommence.id\r\n    objValues.hivEnrollmentId = getPatientObj.enrollment.id\r\n    objValues.opportunisticInfections = infectionList\r\n    objValues.tbScreen = tbObj\r\n    objValues['vitalSignDto'] = vital\r\n    axios.put(`${baseUrl}hiv/art/clinic-visit/${visitId}`, objValues,\r\n      { headers: { \"Authorization\": `Bearer ${token}` } },\r\n\r\n    )\r\n      .then(response => {\r\n        setSaving(false);\r\n        toast.success(\"Clinic Visit updated successful\");\r\n        //GetVisitById(visitId)\r\n        //props.setActiveContent({...props.activeContent, route:'consultation', id:\"\", activeTab:\"history\", actionType:\"view\", obj:{}})\r\n      })\r\n      .catch(error => {\r\n        setSaving(false);\r\n        if(error.response && error.response.data){\r\n          let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        }\r\n        else{\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n       \r\n      });\r\n    }\r\n  }\r\n  //Get visit by ID\r\n  async function GetVisitById(visitID) {\r\n    axios\r\n      .get(`${baseUrl}hiv/art/clinic-visit/${visitID}`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n          const e = response.data\r\n          setVitalSignDto({ ...e.vitalSignDto })\r\n          objValues.clinicalNote = e.clinicalNote\r\n          objValues.functionalStatusId= e.functionalStatusId\r\n          objValues.whoStagingId= e.whoStagingId \r\n          objValues.nextAppointment= e.nextAppointment\r\n          objValues.adherenceLevel = e.adherenceLevel\r\n          setTbObj({...e.tbScreen})\r\n          setAdrList([...e.adverseDrugReactions])\r\n          setInfectionList([...e.opportunisticInfections])\r\n\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  const getVisitDetail=(e)=>{\r\n      setEnableUpdateButton(true)\r\n      setVisitId(e.id)\r\n      GetVisitById(e.id)      \r\n  }\r\n  const EnableUpdateAction =()=>{\r\n\r\n      setEnableUpdate(true)\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n        <div className=\"row\">\r\n            <div className=\"col-xl-3 col-xxl-3 col-lg-3\" >\r\n                <div className=\"card\" style={{ height: \"500px\" }}>\r\n                    <div className=\"card-header  border-0 pb-2\" style={{backgroundColor:\"#014D88\"}}>\r\n                    <h4 className=\"card-title\" style={{color:\"#fff\"}}> Clinic Visits</h4>\r\n                    </div>\r\n                    <div className=\"card-body\" >\r\n                    <PerfectScrollbar\r\n                        style={{ height: \"370px\" }}\r\n                        id=\"DZ_W_Todo1\"\r\n                        className=\"widget-media dz-scroll ps ps--active-y\"\r\n                    >\r\n                    {clinicVisitList.map((visit,index)=>(\t\r\n                    <div className=\"media pb-3 border-bottom mb-0 align-items-center\" key={index}>\t\t\t\t\t\t\t\t\r\n                      <div className=\"media-body\">\r\n                            <ButtonSMUI\r\n                                color='black'\r\n                                content='Visit Date'\r\n                                icon='calendar alternate'\r\n                                onClick={()=>getVisitDetail(visit)}\r\n                                label={{ basic: true, color: 'grey', pointing: 'left', content: `${visit.visitDate}` }}\r\n                            />\r\n                      </div>\r\n                    </div>\r\n\t\t\t\t\t\t))}\r\n                    </PerfectScrollbar>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"col-xl-9 col-xxl-9 col-lg-9\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header  border-0 pb-2\" style={{backgroundColor:\"#014D88\"}}>\r\n                    <h4 className=\"card-title\" style={{color:\"#fff\"}}> </h4>\r\n                    {enableUpdateButton && (\r\n                    <ButtonSMUI color='facebook' onClick={()=>EnableUpdateAction()} >\r\n                      <Icon name='edit' /> Edit Visit \r\n                    </ButtonSMUI>\r\n                    )}\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                    <Grid columns='equal'>\r\n                    <Grid.Column >\r\n                    <Segment>\r\n                    <Label as='a' color='black' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}> Visit Date - {vital.encounterDate}</h4>\r\n                        </Label>\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <FormLabelName >Date of Visit *</FormLabelName>\r\n                            <Input\r\n                                type=\"date\"\r\n                                name=\"encounterDate\"\r\n                                id=\"encounterDate\"\r\n                                value={vital.encounterDate}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            />\r\n                            {errors.encounterDate !==\"\" ? (\r\n                                <span className={classes.error}>{errors.encounterDate}</span>\r\n                            ) : \"\" }\r\n\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n\r\n                        </div>\r\n                        <div className=\"row\">\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Pulse</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"pulse\"\r\n                                id=\"pulse\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"40\"\r\n                                max=\"120\"\r\n                                value={vital.pulse}\r\n                                onKeyUp={handleInputValueCheckPulse} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.pulse !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.pulse}</span>\r\n                        ) : \"\"}\r\n                        {errors.pulse !==\"\" ? (\r\n                            <span className={classes.error}>{errors.pulse}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Respiratory Rate </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"respiratoryRate\"\r\n                                id=\"respiratoryRate\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"10\"\r\n                                max=\"70\"\r\n                                value={vital.respiratoryRate}\r\n                                onKeyUp={handleInputValueCheckRespiratoryRate} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.respiratoryRate !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.respiratoryRate}</span>\r\n                        ) : \"\"}\r\n                        {errors.respiratoryRate !==\"\" ? (\r\n                            <span className={classes.error}>{errors.respiratoryRate}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Temperature </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"temperature\"\r\n                                id=\"temperature\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"35\"\r\n                                max=\"47\"\r\n                                value={vital.temperature}\r\n                                onKeyUp={handleInputValueCheckTemperature} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                <sup>o</sup>c\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.temperature !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.temperature}</span>\r\n                        ) : \"\"}\r\n                        {errors.temperature !==\"\" ? (\r\n                            <span className={classes.error}>{errors.temperature}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Body Weight</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"bodyWeight\"\r\n                                id=\"bodyWeight\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"3\"\r\n                                max=\"150\"\r\n                                value={vital.bodyWeight}\r\n                                onKeyUp={handleInputValueCheckBodyWeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                kg\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.bodyWeight !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.bodyWeight}</span>\r\n                        ) : \"\"}\r\n                        {errors.bodyWeight !==\"\" ? (\r\n                            <span className={classes.error}>{errors.bodyWeight}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>                                   \r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Height</FormLabelName>\r\n                        <InputGroup> \r\n                        <InputGroupText\r\n                                addonType=\"append\"\r\n                                isOpen={dropdownOpen}\r\n                                toggle={toggleDropDown}\r\n                                style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                cm\r\n                        </InputGroupText>\r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"height\"\r\n                                id=\"height\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                value={vital.height}\r\n                                min=\"48.26\"\r\n                                max=\"216.408\"\r\n                                onKeyUp={handleInputValueCheckHeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                                <InputGroupText\r\n                                addonType=\"append\"\r\n                                isOpen={dropdownOpen}\r\n                                toggle={toggleDropDown}\r\n                                style={{ backgroundColor:\"#992E62\", color:\"#fff\", border: \"1px solid #992E62\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                {vital.height!=='' ? (vital.height/100).toFixed(2) + \"m\" : \"m\"}\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.height !==\"\" ? (\r\n                            <span className={classes.error}>{vitalClinicalSupport.height}</span>\r\n                        ) : \"\"}\r\n                        {errors.height !==\"\" ? (\r\n                            <span className={classes.error}>{errors.height}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 mt-2 col-md-4\">\r\n                        {vital.bodyWeight!==\"\" && vital.height!=='' && (\r\n                            <FormGroup>\r\n                            <Label > {\" \"}</Label>\r\n                            <InputGroup> \r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                BMI : {Math.round(vital.bodyWeight/((vital.height * vital.height)/100))}\r\n                            </InputGroupText>                   \r\n                           \r\n                            </InputGroup>                \r\n                            </FormGroup>\r\n                        )}\r\n                    </div>\r\n              </div>\r\n              <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-8\">\r\n                  <FormGroup>\r\n                  <FormLabelName >Blood Pressure</FormLabelName>\r\n                  <InputGroup>\r\n                  <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                          systolic(mmHg)\r\n                  </InputGroupText> \r\n                      <Input \r\n                          type=\"number\"\r\n                          name=\"systolic\"\r\n                          id=\"systolic\"\r\n                          min=\"90\"\r\n                          max=\"240\"\r\n                          onChange={handleInputChangeVitalSignDto}\r\n                          value={vital.systolic}\r\n                          onKeyUp={handleInputValueCheckSystolic}\r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}} \r\n                      />\r\n                      <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                      diastolic(mmHg)\r\n                      </InputGroupText>\r\n                          <Input \r\n                          type=\"number\"\r\n                          name=\"diastolic\"\r\n                          id=\"diastolic\"\r\n                          min={0}\r\n                          max={140}\r\n                          onChange={handleInputChangeVitalSignDto}\r\n                          value={vital.diastolic}\r\n                          onKeyUp={handleInputValueCheckDiastolic} \r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                          />\r\n                      \r\n                      \r\n                  </InputGroup>\r\n                  {vitalClinicalSupport.systolic !==\"\" ? (\r\n                  <span className={classes.error}>{vitalClinicalSupport.systolic}</span>\r\n                  ) : \"\"}\r\n                  {errors.systolic !==\"\" ? (\r\n                      <span className={classes.error}>{errors.systolic}</span>\r\n                  ) : \"\" }  \r\n                  {vitalClinicalSupport.diastolic !==\"\" ? (\r\n                  <span className={classes.error}>{vitalClinicalSupport.diastolic}</span>\r\n                  ) : \"\"}\r\n                  {errors.diastolic !==\"\" ? (\r\n                      <span className={classes.error}>{errors.diastolic}</span>\r\n                  ) : \"\" }          \r\n                  </FormGroup>\r\n              </div>\r\n\r\n              </div>\r\n                        </div>\r\n                        <Label as='a' color='grey' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>CONSULTATION</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n\r\n                        <div className=\" mb-3\">\r\n                        <FormLabelName >Clinical Notes</FormLabelName>\r\n                        <textarea\r\n                            name=\"clinicalNote\"\r\n                            className=\"form-control\"\r\n                            value={objValues.clinicalNote}\r\n                            onChange={handleInputChange}\r\n                            style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                            disabled={!enableUpdate}\r\n                        ></textarea>\r\n                        {errors.clinicalNote !==\"\" ? (\r\n                                <span className={classes.error}>{errors.clinicalNote}</span>\r\n                            ) : \"\" }\r\n                        </div>\r\n                        <div className=\"row\">\r\n\r\n                        <div className=\" mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <FormLabelName >WHO Staging *</FormLabelName>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"whoStagingId\"\r\n                                id=\"whoStagingId\"\r\n                                value={objValues.whoStagingId}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            >\r\n                                <option value=\"select\">Select </option>\r\n\r\n                                {clinicalStage.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                                ))}\r\n                            </Input>\r\n                            {errors.whoStagingId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.whoStagingId}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\" mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <FormLabelName >Functional Status *</FormLabelName>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"functionalStatusId\"\r\n                                id=\"functionalStatusId\"\r\n                                value={objValues.functionalStatusId}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            >\r\n                                <option value=\"select\">Select </option>\r\n\r\n                                {functionalStatus.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                                ))}\r\n                            </Input>\r\n                            {errors.functionalStatusId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.functionalStatusId}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\" mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <FormLabelName >Level of Adherence *</FormLabelName>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"adherenceLevel\"\r\n                                id=\"adherenceLevel\"\r\n                                value={objValues.adherenceLevel}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            >\r\n                                <option value=\"\">Select </option>\r\n\r\n                                {adherenceLevel.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                                ))}\r\n                            </Input>\r\n                            {errors.adherenceLevel !==\"\" ? (\r\n                                <span className={classes.error}>{errors.adherenceLevel}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n\r\n                        </div>\r\n                        <br />\r\n                        <Label as='a' color='red' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>OPPORTUNISTIC INFECTION</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n                        <OpportunisticInfection setInfection={setInfection} infection={infection} setInfectionList={setInfectionList} infectionList={infectionList} enableUpdate={enableUpdate}/>\r\n                        <br />\r\n                        <Label as='a' color='pink' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>ADR</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n                        <ADR setAdrObj={setAdrObj} adrObj={adrObj} setAdrList={setAdrList} adrList={adrList}  enableUpdate={enableUpdate}/>\r\n                        <br />\r\n                        <Label as='a' color='teal' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>TB SCREENING</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n                        {/* TB Screening Form */}\r\n                        <TBScreening tbObj={tbObj} setTbObj={setTbObj} enableUpdate={enableUpdate}/>\r\n                        <br />\r\n                        <Label as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>NEXT CLINICAL APPOINTMENT DATE</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n                        {/* TB Screening Form */}\r\n                        <Input\r\n                                type=\"date\"\r\n                                name=\"nextAppointment\"\r\n                                id=\"nextAppointment\"\r\n                                className=\"col-md-6\"\r\n                                value={objValues.nextAppointment}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                min={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            />\r\n                        {errors.nextAppointment !==\"\" ? (\r\n                                <span className={classes.error}>{errors.nextAppointment}</span>\r\n                            ) : \"\" }\r\n                        <br />\r\n                        <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        disabled={saving}\r\n                        startIcon={<SaveIcon />}\r\n                        style={{backgroundColor:\"#014d88\"}}\r\n                        onClick={handleSubmit}\r\n                        hidden={!enableUpdate}\r\n                        >\r\n                        {!saving ? (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                        ) : (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                        )}\r\n                        </MatButton>\r\n                    </Segment>\r\n                    </Grid.Column>\r\n\r\n                </Grid>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    </div>    \r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClinicVisit;\r\n","import React, {useState, Fragment, useEffect } from \"react\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport ConsultationPage from './Home';\r\nimport ClinicHistoryPage from \"./ViewUpdate/ClinicHistory\";\r\n\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst ClinicVisitPage = (props) => {\r\n    const [key, setKey] = useState('home');\r\n    const patientObj = props.patientObj\r\n    \r\n    useEffect ( () => {\r\n      setKey(props.activeContent.activeTab)\r\n    }, [props.activeContent.id]);\r\n\r\n\r\n  return (\r\n    <Fragment>  \r\n      <Row>       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n\r\n                  <Tab eventKey=\"home\" title=\"MOTHER FOLLOW UP VISIT \">                   \r\n                    <ConsultationPage patientObj={patientObj} setActiveContent={props.setActiveContent}/>\r\n                  </Tab>  \r\n                  <Tab eventKey=\"history\" title=\" CHILD FOLLOW UP VISIT\">                   \r\n                   <ConsultationPage patientObj={patientObj} setActiveContent={props.setActiveContent}/>\r\n                  </Tab>                   \r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ClinicVisitPage;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Card,CardBody, FormGroup, Label, Input, InputGroup,InputGroupText} from 'reactstrap';\r\nimport {Label as FormLabelName, } from \"reactstrap\";\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\nimport {Message } from 'semantic-ui-react'\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\nconst AncPnc = (props) => {\r\n    const patientObj = props.patientObj;\r\n    console.log(patientObj)\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    //const [values, setValues] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const [enroll, setEnrollDto]= useState({\r\n\r\n                    agreed2PartnerNotification: \"\",\r\n                    ancNo: patientObj.ancNo,\r\n                    bodyWeight: \"\",\r\n                    diastolic: \"\",\r\n                    fetalPresentation: \"\",\r\n                    fpl: \"\",\r\n                    fundalHeight: \"\",\r\n                    id: \"\",\r\n                    infantFeeding: \"\",\r\n                    nextAppointmentDate: \"\",\r\n                    nutritionalSupport: \"\",\r\n                    pmtctEnrollmentDate: \"\",\r\n                    referredTo: \"\",\r\n                    systolic: \"\",\r\n                    tbStatus: \"\",\r\n                    viralLoadSample: \"\",\r\n                    viralLoadSampleDate: \"\",\r\n                    visitStatus: \"\",\r\n                    visitType: \"\"\r\n    })\r\n    \r\n    const handleInputChangeEnrollmentDto = e => {            \r\n        setEnrollDto ({...enroll,  [e.target.name]: e.target.value});\r\n    }\r\n\r\n    //FORM VALIDATION\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        //temp.name = details.name ? \"\" : \"This field is required\"\r\n        //temp.description = details.description ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Vital signs clinical decision support \r\n  const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n    bodyWeight: \"\",\r\n    diastolic: \"\",\r\n    fundalHeight: \"\",\r\n    systolic: \"\",\r\n  })\r\n     //to check the input value for clinical decision \r\n  const handleInputValueCheckHeight =(e)=>{\r\n    if(e.target.name===\"fundalHeight\" && (e.target.value < 48.26 || e.target.value>216.408)){\r\n      const message =\"Height cannot be greater than 216.408 and less than 48.26\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, fundalHeight:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, fundalHeight:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckBodyWeight =(e)=>{\r\n    if(e.target.name===\"bodyWeight\" && (e.target.value < 3 || e.target.value>150)){      \r\n      const message =\"Body weight must not be greater than 150 and less than 3\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckSystolic =(e)=>{\r\n    if(e.target.name===\"systolic\" && (e.target.value < 90 || e.target.value>240)){      \r\n      const message =\"Blood Pressure systolic must not be greater than 240 and less than 90\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckDiastolic =(e)=>{\r\n    if(e.target.name===\"diastolic\" && (e.target.value < 60 || e.target.value>140)){      \r\n      const message =\"Blood Pressure diastolic must not be greater than 140 and less than 60\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckPulse =(e)=>{\r\n    if(e.target.name===\"pulse\" && (e.target.value < 40 || e.target.value>120)){      \r\n    const message =\"Pulse must not be greater than 120 and less than 40\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:\"\"})\r\n    }\r\n  }      \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();        \r\n        \r\n        setSaving(true);\r\n        axios.post(`${baseUrl}pmtct/anc/pmtct-enrollment`, enroll,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n        \r\n        )\r\n            .then(response => {\r\n                setSaving(false);\r\n                //props.patientObj.commenced=true\r\n                toast.success(\"Enrollment save successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                toast.error(\"Something went wrong\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                \r\n            });\r\n        \r\n    }\r\n\r\n    function BmiCal (bmi){\r\n        if(bmi<18.5){\r\n          return (\r\n            <Message        \r\n             size='mini'\r\n             color='brown'\r\n              content='Underweight'\r\n            />\r\n          )      \r\n        }else if(bmi >=18.5 && bmi<=24.9){\r\n          <Message        \r\n             size='mini'\r\n             color='olive'\r\n              content='Well nourished'\r\n            />\r\n        }\r\n        else if( bmi>25){\r\n          <Message        \r\n             size='mini'\r\n             color='blue'\r\n              content='Overweight/Obese'\r\n            />\r\n        }\r\n        \r\n      }\r\n\r\n  return (      \r\n      <div >\r\n                   \r\n        <Card className={classes.root}>\r\n            <CardBody>\r\n            <form >\r\n                <div className=\"row\">\r\n                <h2>PMTCT Enrollment</h2>\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >ANC ID *</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"ancNo\"\r\n                                    id=\"ancNo\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={patientObj.ancNo} \r\n                                    disabled\r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date of Enrollment</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"pmtctEnrollmentDate\"\r\n                                    id=\"pmtctEnrollmentDate\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.pmtctEnrollmentDate} \r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-12\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Blood Pressure</FormLabelName>\r\n                        <InputGroup>\r\n                        <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                systolic(mmHg)\r\n                        </InputGroupText> \r\n                            <Input \r\n                                type=\"text\"\r\n                                name=\"systolic\"\r\n                                id=\"systolic\"\r\n                                min=\"90\"\r\n                                max=\"240\"\r\n                                onChange={handleInputChangeEnrollmentDto}\r\n                                value={enroll.systolic}\r\n                                onKeyUp={handleInputValueCheckSystolic}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}} \r\n                            />\r\n                            \r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                            diastolic(mmHg)\r\n                            </InputGroupText>\r\n                            \r\n                                <Input \r\n                                type=\"text\"\r\n                                name=\"diastolic\"\r\n                                id=\"diastolic\"\r\n                                min={0}\r\n                                max={140}\r\n                                onChange={handleInputChangeEnrollmentDto}\r\n                                value={enroll.diastolic}\r\n                                onKeyUp={handleInputValueCheckDiastolic} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                />\r\n                            \r\n                            \r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.systolic !==\"\" ? (\r\n                            <span className={classes.error}>{vitalClinicalSupport.systolic}</span>\r\n                            ) : \"\"}\r\n                            {errors.systolic !==\"\" ? (\r\n                                <span className={classes.error}>{errors.systolic}</span>\r\n                            ) : \"\" }  \r\n                            {vitalClinicalSupport.diastolic !==\"\" ? (\r\n                            <span className={classes.error} >{vitalClinicalSupport.diastolic}</span>\r\n                            ) : \"\"}\r\n                            {errors.diastolic !==\"\" ? (\r\n                                <span className={'float-end'}><span className={classes.error} >{errors.diastolic}</span></span>\r\n                            ) : \"\" }       \r\n                        </FormGroup>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"row\">                  \r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Body Weight</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"text\"\r\n                                name=\"bodyWeight\"\r\n                                id=\"bodyWeight\"\r\n                                onChange={handleInputChangeEnrollmentDto}\r\n                                min=\"3\"\r\n                                max=\"150\"\r\n                                value={enroll.bodyWeight}\r\n                                onKeyUp={handleInputValueCheckBodyWeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                kg\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.bodyWeight !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.bodyWeight}</span>\r\n                        ) : \"\"}\r\n                        {errors.bodyWeight !==\"\" ? (\r\n                            <span className={classes.error}>{errors.bodyWeight}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>                                   \r\n                    <div className=\"form-group mb-3 col-md-5\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Fundal Height</FormLabelName>\r\n                        <InputGroup> \r\n                        <InputGroupText\r\n                                addonType=\"append\"\r\n                                \r\n                                style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                cm\r\n                        </InputGroupText>\r\n                            <Input \r\n                                type=\"text\"\r\n                                name=\"fundalHeight\"\r\n                                id=\"fundalHeight\"\r\n                                onChange={handleInputChangeEnrollmentDto}\r\n                                value={enroll.fundalHeight}\r\n                                min=\"48.26\"\r\n                                max=\"216.408\"\r\n                                onKeyUp={handleInputValueCheckHeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                                <InputGroupText\r\n                                addonType=\"append\"\r\n                               \r\n                                style={{ backgroundColor:\"#992E62\", color:\"#fff\", border: \"1px solid #992E62\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                {enroll.fundalHeight!=='' && enroll.fundalHeight!=='NaN' ? (enroll.fundalHeight/100).toFixed(2) + \"m\" : \"m\"}\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.fundalHeight !==\"\" ? (\r\n                            <span className={classes.error}>{vitalClinicalSupport.fundalHeight}</span>\r\n                        ) : \"\"}\r\n                        {errors.fundalHeight !==\"\" ? (\r\n                            <span className={classes.error}>{errors.fundalHeight}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 mt-2 col-md-3\">\r\n                        {enroll.bodyWeight!==\"\" && enroll.fundalHeight!=='' && (\r\n                            <FormGroup>\r\n                            <Label > {\" \"}</Label>\r\n                            <InputGroup> \r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                BMI : {(enroll.bodyWeight/(((enroll.fundalHeight/100) * (enroll.fundalHeight/100)))).toFixed(2)}\r\n                            </InputGroupText>                   \r\n                           \r\n                            </InputGroup>                \r\n                            </FormGroup>\r\n                        )}\r\n                    </div>\r\n                    {enroll.bodyWeight!=='' && enroll.fundalHeight!=='' && (\r\n                      <div className=\"form-group mb-3 mt-2 col-md-12\">\r\n                            {\r\n                              BmiCal((enroll.bodyWeight/(((enroll.fundalHeight/100) * (enroll.fundalHeight/100)))).toFixed(2))\r\n                            }\r\n                      </div>\r\n                     )}\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Fetal Presentation</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"fetalPresentation\"\r\n                                    id=\"fetalPresentation\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.fetalPresentation} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Gestational Age(weeks) *</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"gAge\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Type of Visit</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"visitType\"\r\n                                    id=\"visitType\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.visitType} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Visit Status</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"visitStatus\"\r\n                                    id=\"visitStatus\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.visitStatus} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Viral Load Sample Collected?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"viralLoadSample\"\r\n                                    id=\"viralLoadSample\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.viralLoadSample} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date Sample Collected*</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"viralLoadSampleDate\"\r\n                                    id=\"viralLoadSampleDate\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.viralLoadSampleDate} \r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >TB Status</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"tbStatus\"\r\n                                    id=\"tbStatus\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.tbStatus} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date of next appointment*</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"nextAppointmentDate\"\r\n                                    id=\"nextAppointmentDate\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.nextAppointmentDate} \r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <hr/>\r\n                    <h3>Counseling/Other Services Provided</h3>\r\n                    <hr/>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Nutritional Support</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"nutritionalSupport\"\r\n                                    id=\"nutritionalSupport\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.nutritionalSupport} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Infant Feeding</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"infantFeeding\"\r\n                                    id=\"infantFeeding\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.infantFeeding} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Family Planing Method Used</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"fpl\"\r\n                                    id=\"fpl\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.fpl} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Referred to</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"referredTo\"\r\n                                    id=\"referredTo\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.referredTo} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <hr/>\r\n                    <h3>Partner Information</h3>\r\n                    <hr/>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Agreed to partner notification</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"agreed2PartnerNotification\"\r\n                                    id=\"agreed2PartnerNotification\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.agreed2PartnerNotification} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                </div>\r\n                \r\n                {saving ? <Spinner /> : \"\"}\r\n            <br />\r\n            \r\n            <MatButton\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            startIcon={<SaveIcon />}\r\n            onClick={handleSubmit}\r\n            >\r\n                {!saving ? (\r\n                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                ) : (\r\n                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                )}\r\n            </MatButton>\r\n            \r\n            <MatButton\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                startIcon={<CancelIcon />}\r\n                \r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n            </MatButton>\r\n            \r\n                </form>\r\n            </CardBody>\r\n        </Card> \r\n                  \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AncPnc;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Card,CardBody, FormGroup, Label, Input, InputGroup} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\nconst AncEnrollement = (props) => {\r\n    const patientObj = props.patientObj;\r\n    console.log(patientObj)\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    //const [values, setValues] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const [vital, setVitalSignDto]= useState({\r\n\r\n                                                bodyWeight: \"\",\r\n                                                diastolic: \"\",\r\n                                                encounterDate: \"\",\r\n                                                facilityId: 1,\r\n                                                height: \"\",\r\n                                                personId: \"\",\r\n                                                pulse: \"\",\r\n                                                respiratoryRate: \"\",\r\n                                                systolic:\"\",\r\n                                                temperature: \"\",\r\n                                                visitId:\"\"\r\n                                            })\r\n    \r\n        const handleInputChangeVitalSignDto = e => {            \r\n            setVitalSignDto ({...vital,  [e.target.name]: e.target.value});\r\n        }\r\n\r\n        //FORM VALIDATION\r\n        const validate = () => {\r\n            let temp = { ...errors }\r\n            //temp.name = details.name ? \"\" : \"This field is required\"\r\n            //temp.description = details.description ? \"\" : \"This field is required\"\r\n            setErrors({\r\n                ...temp\r\n                })    \r\n            return Object.values(temp).every(x => x == \"\")\r\n        }\r\n          \r\n        /**** Submit Button Processing  */\r\n        const handleSubmit = (e) => {        \r\n            e.preventDefault();        \r\n            \r\n            setSaving(true);\r\n            axios.post(`${baseUrl}patient/vital-sign/`, vital,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  props.patientObj.commenced=true\r\n                  toast.success(\"Vital signs save successful\");\r\n                  props.toggle()\r\n                  props.patientsVitalsSigns()\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n                 \r\n              });\r\n          \r\n        }\r\n\r\n  return (      \r\n      <div >\r\n                   \r\n        <Card className={classes.root}>\r\n            <CardBody>\r\n            <form >\r\n                <div className=\"row\">\r\n                <h2>ANC Enrollment</h2>\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >ANC No *</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date of 1st ANC *</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Gravida</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"number\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Parity</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"number\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date Of Last Menstrual Period* </Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Expected Date Of Delivery </Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"Date\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Gestational Age (Weeks)</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Time of HIV Diagnosis</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Source of Referral</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    \r\n                    <h3>Syphilis Information</h3>\r\n                    <hr/>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Tested for syphilis?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Test Result</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Treated for Syphilis</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Referred for syphilis treatment</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <h3>PMTCT HTS</h3>\r\n                    <hr/>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Previously known HIV positive?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date tested HIV positive</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Accepted HIV Testing?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >HIV test result</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >HIV Restesting?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Received HIV test result?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    \r\n                    <h3>Hepatitis Information</h3>\r\n                    <hr/>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Tested for Hepatitis B</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Hepatitis B test result</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Tested for Hepatitis C</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Hepatitis C test result</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <h3>Partner Notification</h3>\r\n                    <hr/>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Agreed to partner notification?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                >\r\n                                    <option value=\"\">Select</option>\r\n                                </Input>\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Partner's HIV status</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                >\r\n                                    <option value=\"\">Select</option>\r\n                                </Input>\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Partner referred to?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                >\r\n                                    <option value=\"\">Select</option>\r\n                                </Input>\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                </div>\r\n                \r\n                {saving ? <Spinner /> : \"\"}\r\n            <br />\r\n            \r\n            <MatButton\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            startIcon={<SaveIcon />}\r\n            onClick={handleSubmit}\r\n            >\r\n                {!saving ? (\r\n                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                ) : (\r\n                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                )}\r\n            </MatButton>\r\n            \r\n            <MatButton\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                startIcon={<CancelIcon />}\r\n                \r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n            </MatButton>\r\n            \r\n                </form>\r\n            </CardBody>\r\n        </Card> \r\n                  \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AncEnrollement;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Card,CardBody, FormGroup, Label, Input, InputGroup} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\nconst LabourDelivery = (props) => {\r\n    const patientObj = props.patientObj;\r\n    //let history = useHistory();\r\n    const classes = useStyles()\r\n    const [delieryMode, setDelieryMode] = useState([]);\r\n    const [feedingDecision, setfeedingDecision] = useState([]);\r\n    const [maternalOutCome, setmaternalOutCome] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [childStatus, setChildStatus] = useState([]);\r\n    const [bookingStatus, setBookingStatus] = useState([]);\r\n    const [delivery, setDelivery]= useState({\r\n\r\n                ancNo: patientObj.ancNo,\r\n                artStartedLdWard: \"\",\r\n                bookingStatus: \"\",\r\n                childGivenArvWithin72: \"\",\r\n                childStatus: \"\",\r\n                dateOfDelivery: \"\",\r\n                deliveryTime: \"\",\r\n                episiotomy: \"\",\r\n                feedingDecision: \"\",\r\n                gaweeks: \"\",\r\n                hbstatus: \"\",\r\n                hcstatus: \"\",\r\n                hivExposedInfantGivenHbWithin24hrs: \"\",\r\n                maternalOutcome: \"\",\r\n                modeOfDelivery: \"\",\r\n                onArt: \"\",\r\n                referalSource: \"\",\r\n                romDeliveryInterval: \"\",\r\n                vaginalTear: \"\"\r\n    })\r\n    useEffect(() => {           \r\n        MODE_DELIVERY();\r\n        FEEDING_DECISION();\r\n        MATERNAL_OUTCOME();\r\n        CHILD_STATUS_DELIVERY();\r\n        BOOKING_STATUS();\r\n    }, [props.patientObj.id, ]);\r\n    //Get list \r\n    const BOOKING_STATUS =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/BOOKING STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setBookingStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const MODE_DELIVERY =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/MODE_DELIVERY`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setDelieryMode(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const CHILD_STATUS_DELIVERY =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/CHILD_STATUS_DELIVERY`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setChildStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const FEEDING_DECISION =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/FEEDING DECISION`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setfeedingDecision(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const MATERNAL_OUTCOME =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/MATERNAL_OUTCOME`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setmaternalOutCome(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChangeDeliveryDto = e => {  \r\n        setErrors({...errors, [e.target.name]: \"\"})            \r\n        setDelivery ({...delivery,  [e.target.name]: e.target.value});\r\n    }\r\n\r\n    //FORM VALIDATION\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.artStartedLdWard = delivery.artStartedLdWard ? \"\" : \"This field is required\"\r\n        temp.referalSource = delivery.referalSource ? \"\" : \"This field is required\"\r\n        temp.romDeliveryInterval = delivery.romDeliveryInterval ? \"\" : \"This field is required\"\r\n        temp.vaginalTear = delivery.vaginalTear ? \"\" : \"This field is required\"\r\n        temp.onArt = delivery.onArt ? \"\" : \"This field is required\"\r\n        temp.modeOfDelivery = delivery.modeOfDelivery ? \"\" : \"This field is required\"\r\n        temp.maternalOutcome = delivery.maternalOutcome ? \"\" : \"This field is required\"\r\n        temp.hivExposedInfantGivenHbWithin24hrs = delivery.hivExposedInfantGivenHbWithin24hrs ? \"\" : \"This field is required\"\r\n        temp.hcstatus = delivery.hcstatus ? \"\" : \"This field is required\"\r\n        temp.hbstatus = delivery.hbstatus ? \"\" : \"This field is required\"\r\n        temp.gaweeks = delivery.gaweeks ? \"\" : \"This field is required\"\r\n        temp.feedingDecision = delivery.feedingDecision ? \"\" : \"This field is required\"\r\n        temp.episiotomy = delivery.episiotomy ? \"\" : \"This field is required\"\r\n        temp.deliveryTime = delivery.deliveryTime ? \"\" : \"This field is required\"\r\n        temp.dateOfDelivery = delivery.dateOfDelivery ? \"\" : \"This field is required\"\r\n        temp.childStatus = delivery.childStatus ? \"\" : \"This field is required\"\r\n        temp.childGivenArvWithin72 = delivery.childGivenArvWithin72 ? \"\" : \"This field is required\"\r\n        temp.bookingStatus = delivery.bookingStatus ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();        \r\n        if(validate()){\r\n        setSaving(true);\r\n        axios.post(`${baseUrl}pmtct/anc/pmtct-delivery`, delivery,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n        \r\n        )\r\n            .then(response => {\r\n                setSaving(false);\r\n                //props.patientObj.commenced=true\r\n                toast.success(\"Record save successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                toast.error(\"Something went wrong\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                \r\n            });\r\n        }else{\r\n            toast.error(\"All field are required\", {position: toast.POSITION.BOTTOM_CENTER});\r\n        } \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n                   \r\n        <Card className={classes.root}>\r\n            <CardBody>\r\n            <form >\r\n                <div className=\"row\">\r\n                    <h2>labour and Delivery</h2>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >ANC ID  *</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"ancNo\"\r\n                                    id=\"ancNo\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.ancNo} \r\n                                    disabled\r\n                                />\r\n                            </InputGroup>\r\n                            {errors.ancNo !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.ancNo}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Booking Status</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"bookingStatus\"\r\n                                    id=\"bookingStatus\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.bookingStatus} \r\n                                >\r\n                                <option value=\"\">Select </option>\r\n                                    \r\n                                    {bookingStatus.map((value) => (\r\n                                        <option key={value.id} value={value.code}>\r\n                                            {value.display}\r\n                                        </option>\r\n                                    ))}\r\n\r\n                               </Input>\r\n                            </InputGroup>\r\n                            {errors.bookingStatus !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.bookingStatus}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date of Delivery</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"dateOfDelivery\"\r\n                                    id=\"dateOfDelivery\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.dateOfDelivery} \r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                />\r\n\r\n                            </InputGroup>\r\n                            {errors.dateOfDelivery !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfDelivery}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Gestational Age (weeks)</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"number\"\r\n                                    name=\"gaweeks\"\r\n                                    id=\"gaweeks\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.gaweeks} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                            {errors.gaweeks !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.gaweeks}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >ROM to Delivery Interval </Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"number\"\r\n                                    name=\"romDeliveryInterval\"\r\n                                    id=\"romDeliveryInterval\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.romDeliveryInterval} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                            {errors.romDeliveryInterval !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.romDeliveryInterval}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Mode of Delivery</Label>\r\n                            \r\n                            <Input\r\n                                    type=\"select\"\r\n                                    name=\"modeOfDelivery\"\r\n                                    id=\"modeOfDelivery\"\r\n                                    value={delivery.modeOfDelivery}\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    required\r\n                                >\r\n                                     <option value=\"\">Select </option>\r\n                                        \r\n                                        {delieryMode.map((value) => (\r\n                                            <option key={value.id} value={value.code}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                </Input>\r\n                                {errors.modeOfDelivery !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.modeOfDelivery}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Episiotomy</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"episiotomy\"\r\n                                    id=\"episiotomy\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.episiotomy} \r\n                                >\r\n                                    <option value=\"\" >Select</option>\r\n                                    <option value=\"Yes\" >Yes</option>\r\n                                    <option value=\"No\" >No</option>\r\n                                </Input>\r\n\r\n                            </InputGroup>\r\n                            {errors.episiotomy !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.episiotomy}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Vaginal Tear</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"vaginalTear\"\r\n                                    id=\"vaginalTear\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.vaginalTear} \r\n                                >\r\n                                    <option value=\"\" >Select</option>\r\n                                    <option value=\"Yes\" >Yes</option>\r\n                                    <option value=\"No\" >No</option>\r\n                                </Input>\r\n                            </InputGroup>\r\n                            {errors.vaginalTear !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.vaginalTear}</span>\r\n                                ) : \"\" }                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Feeding decision</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"feedingDecision\"\r\n                                    id=\"feedingDecision\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.feedingDecision} \r\n                                >\r\n                                    <option value=\"\">Select </option>\r\n                                        \r\n                                    {feedingDecision.map((value) => (\r\n                                        <option key={value.id} value={value.code}>\r\n                                            {value.display}\r\n                                        </option>\r\n                                    ))}\r\n                                </Input>\r\n\r\n                            </InputGroup>\r\n                            {errors.feedingDecision !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.feedingDecision}</span>\r\n                                ) : \"\" }  \r\n                            </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Maternal Outcome</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"maternalOutcome\"\r\n                                    id=\"maternalOutcome\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.maternalOutcome} \r\n                                >\r\n                                    <option value=\"\">Select </option>    \r\n                                    {maternalOutCome.map((value) => (\r\n                                        <option key={value.id} value={value.code}>\r\n                                            {value.display}\r\n                                        </option>\r\n                                    ))}\r\n                                </Input>\r\n                            </InputGroup> \r\n                            {errors.maternalOutcome !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.maternalOutcome}</span>\r\n                                ) : \"\" }                                       \r\n                            </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Child given ARV within 72 hrs</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"childGivenArvWithin72\"\r\n                                    id=\"childGivenArvWithin72\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.childGivenArvWithin72} \r\n                                >\r\n                                <option value=\"\" >Select</option>\r\n                                <option value=\"Yes\" >Yes</option>\r\n                                <option value=\"No\" >No</option>\r\n                            </Input>\r\n                            </InputGroup>\r\n                            {errors.childGivenArvWithin72 !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.childGivenArvWithin72}</span>\r\n                                ) : \"\" }                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Child status</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"childStatus\"\r\n                                    id=\"childStatus\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.childStatus} \r\n                                >\r\n                                <option value=\"\">Select </option>    \r\n                                {childStatus.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                            </InputGroup>\r\n                            {errors.childStatus !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.childStatus}</span>\r\n                                ) : \"\" }                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >On ART?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"onArt\"\r\n                                    id=\"onArt\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.onArt} \r\n                                >\r\n                                \r\n                                <option value=\"\" >Select</option>\r\n                                <option value=\"Yes\" >Yes</option>\r\n                                <option value=\"No\" >No</option>\r\n                                </Input>\r\n                            </InputGroup> \r\n                            {errors.onArt !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.onArt}</span>\r\n                                ) : \"\" }                                       \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >HIV exposed infant given Hep B within 24 hrs of birth</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"hivExposedInfantGivenHbWithin24hrs\"\r\n                                    id=\"hivExposedInfantGivenHbWithin24hrs\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.hivExposedInfantGivenHbWithin24hrs} \r\n                                    >\r\n                                    <option value=\"\" >Select</option>\r\n                                    <option value=\"Yes\" >Yes</option>\r\n                                    <option value=\"No\" >No</option>\r\n                                    </Input>\r\n                            </InputGroup>\r\n                            {errors.hivExposedInfantGivenHbWithin24hrs !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.hivExposedInfantGivenHbWithin24hrs}</span>\r\n                                ) : \"\" }                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    \r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Time of Diagnosis</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"time\"\r\n                                    name=\"deliveryTime\"\r\n                                    id=\"deliveryTime\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.deliveryTime} \r\n                                />\r\n                            </InputGroup>\r\n                            {errors.deliveryTime !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.deliveryTime}</span>\r\n                                ) : \"\" }                                          \r\n                            </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >ART started in L&D ward</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"artStartedLdWard\"\r\n                                    id=\"artStartedLdWard\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.artStartedLdWard} \r\n                                >\r\n                                <option value=\"\" >Select</option>\r\n                                <option value=\"Yes\" >Yes</option>\r\n                                <option value=\"No\" >No</option>\r\n                                </Input>\r\n                            </InputGroup>\r\n                            {errors.artStartedLdWard !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.artStartedLdWard}</span>\r\n                                ) : \"\" }                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Source of Referral</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"referalSource\"\r\n                                    id=\"referalSource\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.referalSource} \r\n                                />\r\n                            </InputGroup>\r\n                            {errors.referalSource !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.referalSource}</span>\r\n                                ) : \"\" }                                         \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Hepatitis B Status</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"hbstatus\"\r\n                                    id=\"hbstatus\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.hbstatus} \r\n                                    >\r\n                                    <option value=\"\" >Select</option>\r\n                                    <option value=\"Positive\" >Yes</option>\r\n                                    <option value=\"Negative\" >No</option>\r\n                                    </Input>\r\n                            </InputGroup>\r\n                            {errors.hbstatus !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.hbstatus}</span>\r\n                                ) : \"\" }                                         \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Hepatitis C Status</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"hcstatus\"\r\n                                    id=\"hcstatus\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.hcstatus} \r\n                                >\r\n                                <option value=\"\" >Select</option>\r\n                                <option value=\"Positive\" >Yes</option>\r\n                                <option value=\"Negative\" >No</option>\r\n                                </Input>\r\n                            </InputGroup> \r\n                            {errors.hcstatus !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.hcstatus}</span>\r\n                                ) : \"\" }                                        \r\n                            </FormGroup>\r\n                    </div>\r\n  \r\n            </div>\r\n                \r\n                {saving ? <Spinner /> : \"\"}\r\n            <br />\r\n            \r\n            <MatButton\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            startIcon={<SaveIcon />}\r\n            style={{backgroundColor:\"#014d88\"}}\r\n            onClick={handleSubmit}\r\n            >\r\n                {!saving ? (\r\n                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                ) : (\r\n                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                )}\r\n            </MatButton>\r\n            \r\n            <MatButton\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                startIcon={<CancelIcon />}\r\n                style={{backgroundColor:'#992E62'}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n            </MatButton>\r\n            \r\n                </form>\r\n            </CardBody>\r\n        </Card> \r\n                  \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LabourDelivery;\r\n","export default __webpack_public_path__ + \"static/media/fingerprintimage.73ff98ea.png\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport {Dropdown,Badge} from 'react-bootstrap';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport fingerprintimage  from './../../images/fingerprintimage.png';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\r\n            fontFamily:'FontAwesome',\r\n            border:'0',\r\n            verticalAlign:'middle',\r\n            marginLeft:'.25em',\r\n            lineHeight:'1'\r\n        },\r\n        \"& .dropdown-menu .dropdown-item\":{\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            padding: '0.3rem 1.5rem',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .mt-4\":{\r\n            marginTop:'28px !important'\r\n        },\r\n        \"& .form-control\":{\r\n            color:'#992E62'\r\n        },\r\n        \"& .form-control:focus\":{\r\n            color:'#014d88'\r\n        },\r\n        \"& .sharp \":{\r\n            \"min-width\": \"35px\",\r\n            padding:\"5px\",\r\n            height: '35px',\r\n            \"min-height\": \"35px\"\r\n}\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n/*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nfunction Biometrics(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [biometricDevices,setbiometricDevices] = useState([]);\r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageLoading, setPageLoading] = useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n    // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([]);\r\n    const [selectedFingers, setSelectedFingers] = useState([]);\r\n\r\n    const buttonSx = {\r\n        ...(success && {\r\n            bgcolor: green[500],\r\n            '&:hover': {\r\n                bgcolor: green[700],\r\n            },\r\n        }),\r\n    };\r\n\r\n    const getPersonBiometrics = async() =>{\r\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n\r\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\r\n            if(response.data.length > 0){\r\n                setStoredBiometrics(response.data);\r\n                setPageLoading(true);\r\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\r\n                setSelectedFingers(personCapturedFingers);\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\r\n\r\n                });\r\n                setFingerType(biometricItems);\r\n            }else{\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: false});\r\n                    //return item.captured = personCapturedFingers.includes(item.display)\r\n                });\r\n                setFingerType(biometricItems);\r\n\r\n            }\r\n\r\n        }).catch(async (error)=>{\r\n            console.log(\"getPersonBiometrics error\")\r\n            console.log(error)\r\n\r\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                return _.extend({}, item, {captured: false});\r\n            });\r\n            setFingerType(biometricItems);\r\n            setPageLoading(true);\r\n        })\r\n    }\r\n\r\n    const clear_storelist = () =>{\r\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            console.log('cleared store')\r\n        }).catch((error)=>{\r\n            console.log(\"cleared store error\")\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        clear_storelist();\r\n        getPersonBiometrics();\r\n        TemplateType();\r\n        //biometricFingers();\r\n    }, []);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n                            setbiometricDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    //Get list of Finger index\r\n    const biometricFingers =()=>{\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setFingerType(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    //check if device is plugged or not\r\n    const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data.errorType ===\"ERROR\"){\r\n                    toast.error(response.data.errorName + \" is not plug\");\r\n                    //setshowCapture(true)\r\n                }else{\r\n                    setshowCapture(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // handle the input changes\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //to capture  selected index finger\r\n    const captureFinger = (e) => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    setLoading(true);\r\n                    if(response.data.type ===\"ERROR\"){\r\n                        setLoading(false);\r\n                        setTryAgain(true);\r\n                        window.setTimeout(() => {\r\n                            setTryAgain(false);\r\n                        }, 5000);\r\n                        toast.error(response.data.message.ERROR);\r\n                    }else{\r\n                        const templateType= response.data.templateType\r\n                        setTryAgain(false);\r\n                        setSuccess(true)\r\n                        window.setTimeout(() => {\r\n                            setSuccess(false)\r\n                            setLoading(false);\r\n                        }, 5000);\r\n                        let biometricsEnrollments = response.data\r\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\r\n\r\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\r\n                        //fingerType.splice(templateType, 1);\r\n                        _.find(fingerType,{'display':templateType}).captured = true;\r\n                        setFingerType([...fingerType]);\r\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\r\n                        setObjValues({...objValues, templateType:\"\"});\r\n                    }\r\n                    //toast.success(\"Record save successful\");\r\n                })\r\n                .catch(error => {\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteBiometric =(id,finger)=>{\r\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            toast.success(`${finger} deleted successfully`);\r\n            _.find(fingerType,{'display':finger}).captured = false;\r\n            setFingerType([...fingerType]);\r\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\r\n            setStoredBiometrics(newStoredBiometrics);\r\n            clear_storelist();\r\n            if(newStoredBiometrics.length === 0){\r\n                props.updatePatientBiometricStatus(false);\r\n            }\r\n        }).catch((error)=>{\r\n            toast.error(\"Something went wrong\");\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {\r\n        e.preventDefault();\r\n        if(capturedFingered.length >= 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\r\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Biometric save successful\");\r\n                    setCapturedFingered([])\r\n                    getPersonBiometrics();\r\n                    props.patientObj.biometricStatus=true\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    //props.updatePatientBiometricStatus(true);\r\n                })\r\n                .catch(error => {\r\n                    toast.error(\"Something went wrong saving biometrics\");\r\n                    console.log(error);\r\n                });\r\n        }else{\r\n\r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n\r\n            <div style={{display:\"flex\",width:'100%'}}>\r\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\r\n                    {pageLoading && storedBiometrics.length > 0 ? (\r\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\r\n                                {storedBiometrics.map((biometric, index)=>(\r\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\r\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\r\n\r\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\r\n                                                <div>\r\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\r\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                                </div>\r\n\r\n                                                {/*Action button -- Dropdown menu*/}\r\n                                                <Dropdown className=\"dropdown ms-auto\"  >\r\n                                                    <Dropdown.Toggle\r\n                                                        as=\"button\"\r\n                                                        variant=\"\"\r\n                                                        drop=\"up\"\r\n                                                        className=\"btn sharp btn-primary \"\r\n                                                        id=\"tp-btn\"\r\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\r\n                                                    >\r\n                                                        <svg\r\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                                            width=\"18px\"\r\n                                                            height=\"18px\"\r\n                                                            viewBox=\"0 0 24 24\"\r\n                                                            version=\"1.1\"\r\n                                                        >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                    </Dropdown.Toggle>\r\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\r\n                                                            <DeleteIcon /> Delete\r\n                                                        </Dropdown.Item>\r\n\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n\r\n                                            </div>\r\n                                            <div className=\"card-body p-0 pb-2\">\r\n                                                <ul className=\"list-group list-group-flush\">\r\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\r\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\r\n                                                    </li>\r\n\r\n                                                    <li className=\"list-group-item\">\r\n\r\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\r\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\r\n                                                        <span className=\"text-black desc-text ms-2\">\r\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\r\n                                                    </span>\r\n                                                    </li>\r\n\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div className=\"flex-grow-8\">\r\n                                <div  className=\"flex-grow-8\"  >\r\n                                    <Alert severity=\"info\">\r\n                                        <AlertTitle style={{height:'400px'}}>\r\n                                            <strong>No biometrics captured</strong>\r\n                                        </AlertTitle>\r\n                                    </Alert>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <div className=\"col-12\">\r\n                            <ToastContainer />\r\n                            <Col md={12}>\r\n                                <FormGroup>\r\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Device </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"device\"\r\n                                        id=\"device\"\r\n                                        onChange={checkDevice}\r\n                                        value={objValues.device}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Select Device </option>\r\n                                        {biometricDevices.map(({ id, name }) => (\r\n                                            <option key={id} value={name}>\r\n                                                {name}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.device !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.device}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </Col>\r\n                            {showCapture ? (\r\n                                    <div className=\"row col-12\">\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">Select Finger </option>\r\n\r\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\r\n                                                        <option key={value.id} value={value.display}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Input>\r\n                                                {errors.templateType !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.templateType}</span>\r\n                                                ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md={6}>\r\n\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={captureFinger}\r\n                                                className={'mt-4'}\r\n                                                style={{backgroundColor:'#992E62'}}\r\n                                                startIcon={<FingerprintIcon />}\r\n                                            >\r\n                                                Capture Finger\r\n                                            </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\r\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\r\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n\r\n                   \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n            <Form >\r\n\r\n                    <Card>\r\n                         <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader>\r\n                        <CardBody>\r\n                            <Row form>\r\n                                <ToastContainer />\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for='device'>Select Device </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"device\"\r\n                                            id=\"device\"\r\n                                            onChange={checkDevice}\r\n                                            value={objValues.device}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Device </option>\r\n                                            {biometricDevices.map(({ id, name }) => (\r\n                                                <option key={id} value={name}>\r\n                                                    {name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                        {errors.device !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.device}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for='device'>Select Finger</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"templateType\"\r\n                                                        id=\"templateType\"\r\n                                                        onChange={handleInputChange}\r\n                                                        value={objValues.templateType}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\">Select Finger </option>\r\n\r\n                                                        {fingerType.map((value) => (\r\n                                                            <option key={value.id} value={value.display}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                    {errors.templateType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.templateType}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col md={4}>\r\n\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={captureFinger}\r\n                                                    className={'mt-4'}\r\n                                                    startIcon={<FingerprintIcon />}\r\n                                                >\r\n                                                    Capture Finger\r\n                                                </MatButton>\r\n\r\n                                            </Col>\r\n                                            <br/>\r\n\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                 <img width='500' height='200' src={responseImage}/>\r\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                                    {loading && (\r\n                                        <>\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                    </Fab>\r\n                                                    {loading && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: green[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                    {tryAgain && (\r\n                                        <>\r\n\r\n\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        <FingerprintIcon />\r\n                                                    </Fab>\r\n                                                    {tryAgain && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: red[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    Click to Recapture Again\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} >\r\n                                                <h3>Captured Fingerprints</h3>\r\n                                            </Col>\r\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\r\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n            </Form>\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Biometrics;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './PatientCard'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SubMenu from './SubMenu';\r\n//import RecentHistory from './../History/RecentHistory';\r\nimport ClinicVisit from '../Consultation/Index'\r\nimport PmtctEnrollment from './../PmtctServices/PmtctEnrollment';\r\nimport AncEnrollement from './../PmtctServices/AncEnrollement';\r\nimport LabourDelivery from './../PmtctServices/LabourDelivery';\r\nimport Biometrics from './Biometric'\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction PatientCard(props) {\r\n    let history = useHistory();\r\n    const [art, setArt] = useState(false);\r\n    const [activeContent, setActiveContent] = useState({route:\"recent-history\", id:\"\", activeTab:\"home\", actionType:\"create\", obj:{}});\r\n    const { classes } = props;\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    console.log(patientObj)\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PMTCT /</Link> Patient Dashboard</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Card >\r\n        <CardContent>\r\n            <PatientCardDetail patientObj={patientObj} setArt={setArt} setActiveContent={setActiveContent}/>            \r\n            <SubMenu patientObj={patientObj} art={art} setActiveContent={setActiveContent}/>\r\n            <br/>\r\n          {/* {activeContent.route==='recent-history' &&(<RecentHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)} */}\r\n          {activeContent.route==='biometrics' &&(<Biometrics patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='consultation' &&( <ClinicVisit patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='anc-pnc' &&( <PmtctEnrollment patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='anc-enrollment' &&( <AncEnrollement patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='labour-delivery' &&( <LabourDelivery patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {/* History Pages */}\r\n         \r\n         </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form, InputGroup} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport  './patient.css'\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },  \r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n                \r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState(\r\n        {   ancNo:\"\",\r\n            gaweeks: \"\",\r\n            gravida: \"\",\r\n            expectedDeliveryDate:\"\",\r\n            lmp: \"\",\r\n            parity: \"\",\r\n            hivDiognosicTime:\"\",\r\n            referredSyphilisTreatment: \"\",\r\n            testResultSyphilis: \"\",\r\n            testedSyphilis: \"\",\r\n            treatedSyphilis: \"\",\r\n            personDto:{},\r\n            pmtctHtsInfo:{},\r\n            syphilisInfo:{},\r\n            partnerNotification:{}\r\n        });\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n     //status for hospital Number \r\n     const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n     const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    patientId = locationState ? locationState.patientId : null;\r\n    let temp = { ...errors }\r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n    \r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n          \r\n    }, [basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            \r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n        //console.log(getCountryId)\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }   \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n                if(m<18){\r\n                    alert(\"The child is less than 18months\")\r\n                    setDisabledAgeBaseOnAge(true)\r\n                }else{\r\n                    setDisabledAgeBaseOnAge(false)\r\n                }\r\n                if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n                basicInfo.age=age_now\r\n                //setBasicInfo({...basicInfo, age: age_now});        \r\n                } else {\r\n                    setBasicInfo({...basicInfo, age:  \"\"});\r\n                }\r\n                setBasicInfo({...basicInfo, dob: e.target.value});\r\n                if(basicInfo.age!=='' && basicInfo.age>=60){\r\n                    toggle()\r\n                }\r\n           \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            if(e.target.value!=='' && e.target.value>=60){\r\n                toggle()\r\n            }\r\n            if(e.target.value <=1){\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {  \r\n        setErrors({...temp, [e.target.name]:\"\"})      \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='377') {\r\n            setfemaleStatus(true)\r\n        } \r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n        async function getHosiptalNumber() {\r\n            const hosiptalNumber=e.target.value\r\n            const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                );\r\n            if(response.data!==true){\r\n                setHospitalNumStatus(false)\r\n                errors.hospitalNumber=\"\"\r\n                setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                setHospitalNumStatus2(true)\r\n            }else{\r\n                errors.hospitalNumber=\"\"\r\n                toast.error(\"Error! Hosiptal Number already exist\");\r\n                setHospitalNumStatus(true)\r\n                setHospitalNumStatus2(false)\r\n            }\r\n        }\r\n        getHosiptalNumber();\r\n        } \r\n                \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.phone = relatives.phone ? \"\" : \"Phone Number  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n            setRelatives({ \r\n                address:\"\",\r\n                phone:\"\",\r\n                firstName: \"\",\r\n                email: \"\",\r\n                relationshipId: \"\",\r\n                lastName: \"\",\r\n                middleName: \"\"\r\n            })\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        \r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Gender is required.\"\r\n            temp.dateOfRegistration = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //ANC FORM VALIDATION\r\n            temp.gaweeks = objValues.gaweeks ? \"\" : \"This field is required\"\r\n            temp.gravida = objValues.gravida ? \"\" : \"This field is required\"\r\n            temp.referredSyphilisTreatment = objValues.referredSyphilisTreatment ? \"\" : \"This field is required\"\r\n            temp.lmp = objValues.lmp ? \"\" : \"This field is required\"\r\n            temp.parity = objValues.parity ? \"\" : \"This field is required\"\r\n            temp.testedSyphilis = objValues.testedSyphilis ? \"\" : \"This field is required\"\r\n            temp.treatedSyphilis = objValues.treatedSyphilis ? \"\" : \"This field is required\"\r\n            temp.sourceOfReferral = objValues.sourceOfReferral ? \"\" : \"This field is required\"\r\n            temp.testResultSyphilis = objValues.testResultSyphilis ? \"\" : \"This field is required\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                objValues.personDto=patientForm;\r\n                //patientDTO.personDto=objValues;\r\n                console.log(objValues)\r\n                const response = await axios.post(`${baseUrl}pmtct/anc/anc-new-registration`, objValues, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Register successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    if(error.response.data.apierror && error.response.data.apierror.message!==\"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message!==\"\"){\r\n                        toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }else{\r\n                        toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {  \r\n        setErrors({...temp, [e.target.name]:\"\"})        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});          \r\n    }      \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <ToastContainer autoClose={3000} hideProgressBar />\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PMTCT /</Link> Patient Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n          <Link\r\n                to={{\r\n                    pathname: \"/\",\r\n                    state: 'users'\r\n                }}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\" float-end mr-10 pr-10\"\r\n                    style={{backgroundColor:'#014d88',fontWeight:\"bolder\", margingRight:\"-40px\"}}\r\n                    startIcon={<TiArrowBack />}\r\n                >\r\n                    <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                </Button>\r\n            </Link>\r\n            <br /><br/>\r\n  \r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    \r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {/* {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"} */}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={1094328}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.id}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                \r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                \r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        id=\"dob\"\r\n                                                        max={basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        \r\n                                                        type=\"number\"\r\n                                                        name=\"age\"                                                       \r\n                                                        className=\"form-control\"                                                        \r\n                                                        id=\"age\"\r\n                                                        min=\"1\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        id=\"ninNumber\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                   onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                   //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                ) : \"\" } */}\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    \r\n                                                />\r\n                                                 {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                ) : \"\" } */}\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    required\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e,'phone')}}\r\n                                                                        />\r\n                                                                    {errors.phone !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.phone}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"email\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            required\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            \r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>ANC  Enrollment</h5>\r\n                                </div>\r\n\r\n                            <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                              \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >ANC No *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"text\"\r\n                                                    name=\"ancNo\"\r\n                                                    id=\"ancNo\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.ancNo} \r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                            {errors.ancNo !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.ancNo}</span>\r\n                                            ) : \"\" }           \r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Gravida *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"number\"\r\n                                                    name=\"gravida\"\r\n                                                    id=\"gravida\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.gravida} \r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                            {errors.gravida !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.gravida}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Parity *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"number\"\r\n                                                    name=\"parity\"\r\n                                                    id=\"parity\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.parity} \r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                            {errors.parity !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.parity}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Date Of Last Menstrual Period* </Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"date\"\r\n                                                    name=\"lmp\"\r\n                                                    id=\"lmp\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.lmp} \r\n                                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                            {errors.lmp !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lmp}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                    </div>\r\n                                   \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Gestational Age (Weeks)*</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"number\"\r\n                                                    name=\"gaweeks\"\r\n                                                    id=\"gaweeks\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.gaweeks} \r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                            {errors.gaweeks !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.gaweeks}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Source of Referral*</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"text\"\r\n                                                    name=\"sourceOfReferral\"\r\n                                                    id=\"sourceOfReferral\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.sourceOfReferral} \r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                            {errors.sourceOfReferral !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sourceOfReferral}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                    </div>                                \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Tested for syphilis *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"select\"\r\n                                                    name=\"testedSyphilis\"\r\n                                                    id=\"testedSyphilis\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.testedSyphilis} \r\n                                                >\r\n                                                     <option value=\"\" >Select</option>\r\n                                                    <option value=\"Yes\" >Yes</option>\r\n                                                    <option value=\"No\" >No</option>\r\n                                                </Input>\r\n                                            </InputGroup> \r\n                                            {errors.testedSyphilis !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.testedSyphilis}</span>\r\n                                            ) : \"\" }                                       \r\n                                            </FormGroup>\r\n                                    </div>\r\n                                \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Syphilis test result *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"select\"\r\n                                                    name=\"testResultSyphilis\"\r\n                                                    id=\"testResultSyphilis\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.testResultSyphilis} \r\n                                                >\r\n                                                    <option value=\"\" >Select</option>\r\n                                                    <option value=\"Positive\" >Positive</option>\r\n                                                    <option value=\"Negative\" >Negative</option>\r\n                                                </Input>\r\n                                            </InputGroup> \r\n                                            {errors.testResultSyphilis !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.testResultSyphilis}</span>\r\n                                            ) : \"\" }                                        \r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Treated for syphilis (penicillin) *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"select\"\r\n                                                    name=\"treatedSyphilis\"\r\n                                                    id=\"treatedSyphilis\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.encounterDate} \r\n                                                >\r\n                                                    <option value=\"\" >Select</option>\r\n                                                    <option value=\"Yes\" >Yes</option>\r\n                                                    <option value=\"No\" >No</option>\r\n                                                </Input>\r\n                                            </InputGroup> \r\n                                            {errors.treatedSyphilis !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.treatedSyphilis}</span>\r\n                                            ) : \"\" }                                        \r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Referred Syphilis +ve client *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"select\"\r\n                                                    name=\"referredSyphilisTreatment\"\r\n                                                    id=\"referredSyphilisTreatment\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.referredSyphilisTreatment} \r\n                                                >\r\n                                                    <option value=\"\" >Select</option>\r\n                                                    <option value=\"Yes\" >Yes</option>\r\n                                                    <option value=\"No\" >No</option>\r\n                                                </Input>\r\n                                            </InputGroup>\r\n                                            {errors.referredSyphilisTreatment !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.referredSyphilisTreatment}</span>\r\n                                            ) : \"\" }                                         \r\n                                            </FormGroup>\r\n                                    </div>\r\n                                   \r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                                onClick={handleCancel}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal> \r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form, InputGroup} from \"reactstrap\";\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\nimport {  Modal } from \"react-bootstrap\";\r\n\r\n\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n\r\n    const [genders, setGenders]= useState([]);\r\n\r\n\r\n    const [errors, setErrors] = useState({})\r\n\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({   ancNo:\"\",\r\n            gaweeks: \"\",\r\n            gravida: \"\",\r\n            expectedDeliveryDate:\"\",\r\n            lmp: \"\",\r\n            parity: \"\",\r\n            person_uuid:\"\",\r\n            hivDiognosicTime:\"\",\r\n            referredSyphilisTreatment: \"\",\r\n            testResultSyphilis: \"\",\r\n            testedSyphilis: \"\",\r\n            treatedSyphilis: \"\",\r\n            personDto:{},\r\n            pmtctHtsInfo:{},\r\n            syphilisInfo:{},\r\n            partnerNotification:{},\r\n            sourceOfReferral:\"\"\r\n    });\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        getSex();\r\n        PregnancyStatus();\r\n        if(patientObj){\r\n            const identifiers = patientObj.identifier;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type === 'HospitalNumber');\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.hospitalNumber=hospitalNumber && hospitalNumber ? hospitalNumber.value : ''\r\n            setObjValues ({...objValues,  uniqueId: hospitalNumber ? hospitalNumber.value : ''});\r\n            basicInfo.genderId=patientObj && patientObj.gender ? patientObj.gender.id : null\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            objValues.personId=patientObj.id\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n    //Get list of Source of Referral\r\n    const getSex =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/SEX`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            let patientSex=\"\"\r\n            if(patientObj.sex==='female' || patientObj.sex==='Female' || patientObj.sex==='FEMALE'){\r\n                 patientSex= 'Female'\r\n            }\r\n            if(patientObj.sex==='Male' || patientObj.sex==='male' || patientObj.sex==='MALE' ){\r\n                 patientSex= 'Male'\r\n            }\r\n            const getSexId=  response.data.find((x)=> x.display===patientSex)//get patient sex ID by filtering the request\r\n            basicInfo.sexId=getSexId.display\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n}\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n    };\r\n\r\n    const handleAgeChange = (e) => {\r\n        const ageNumber = e.target.value.replace(/\\D/g, '')\r\n        if (!ageDisabled && ageNumber) {\r\n            if(ageNumber!=='' && ageNumber>=60){\r\n                toggle()\r\n            }\r\n            if(ageNumber <=1){\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((ageNumber * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: ageNumber});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.gaweeks = objValues.gaweeks ? \"\" : \"This field is required\"\r\n            temp.gravida = objValues.gravida ? \"\" : \"This field is required\"\r\n            temp.referredSyphilisTreatment = objValues.referredSyphilisTreatment ? \"\" : \"This field is required\"\r\n            temp.lmp = objValues.lmp ? \"\" : \"This field is required\"\r\n            temp.parity = objValues.parity ? \"\" : \"This field is required\"\r\n            temp.testedSyphilis = objValues.testedSyphilis ? \"\" : \"This field is required\"\r\n            temp.treatedSyphilis = objValues.treatedSyphilis ? \"\" : \"This field is required\"\r\n            temp.sourceOfReferral = objValues.sourceOfReferral ? \"\" : \"This field is required\"\r\n            temp.testResultSyphilis = objValues.testResultSyphilis ? \"\" : \"This field is required\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => { \r\n        \r\n        setErrors({...errors, [e.target.name]: \"\"})        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value});              \r\n    } \r\n\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})       \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});                \r\n    }    \r\n\r\n    //Handle CheckBox \r\n\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n\r\n         if(validate()){\r\n            try {\r\n\r\n                objValues.person_uuid = patientObj.uuid;\r\n                console.log(objValues)\r\n                const response = await axios.post(`${baseUrl}pmtct/anc/anc-enrollement`, objValues, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Register successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    if(error.response.data.apierror && error.response.data.apierror.message!==\"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message!==\"\"){\r\n                        toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }else{\r\n                        toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\nconsole.log(errors)\r\n    return (\r\n        <>\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >HIV /</Link> Patient Enrollment</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <Link\r\n                        to={{\r\n                            pathname: \"/\",\r\n                            state: 'users'\r\n                        }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName + \" \"+ basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: 'none', backgroundColor: 'transparent', outline:'none'}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: 'none', backgroundColor: 'transparent', outline:'none'}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>            \r\n\r\n                                            <div className=\"form-group  col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex </Label>\r\n                                                    <Input\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: 'none', backgroundColor: 'transparent', outline:'none'}}\r\n                                                            \r\n                                                        />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: 'none', backgroundColor: 'transparent', outline:'none'}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>                                     \r\n                                    </div>\r\n                                </div>\r\n                           \r\n                            </div>\r\n\r\n                            {/* Adding  ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                            <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                <h5 className=\"card-title\"  style={{color:'#fff'}}>ANC  Enrollment</h5>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                              \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >ANC No *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"text\"\r\n                                                    name=\"ancNo\"\r\n                                                    id=\"ancNo\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.ancNo} \r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                            {errors.ancNo !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.ancNo}</span>\r\n                                            ) : \"\" }           \r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Gravida *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"number\"\r\n                                                    name=\"gravida\"\r\n                                                    id=\"gravida\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.gravida} \r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                            {errors.gravida !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.gravida}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Parity *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"number\"\r\n                                                    name=\"parity\"\r\n                                                    id=\"parity\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.parity} \r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                            {errors.parity !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.parity}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Date Of Last Menstrual Period * </Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"date\"\r\n                                                    name=\"lmp\"\r\n                                                    id=\"lmp\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.lmp} \r\n                                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                            {errors.lmp !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lmp}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                    </div>\r\n                                   \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Gestational Age (Weeks) *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"number\"\r\n                                                    name=\"gaweeks\"\r\n                                                    id=\"gaweeks\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.gaweeks} \r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                            {errors.gaweeks !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.gaweeks}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Source of Referral *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"text\"\r\n                                                    name=\"sourceOfReferral\"\r\n                                                    id=\"sourceOfReferral\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.sourceOfReferral} \r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                            {errors.sourceOfReferral !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sourceOfReferral}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                    </div>                                \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Tested for syphilis *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"select\"\r\n                                                    name=\"testedSyphilis\"\r\n                                                    id=\"testedSyphilis\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.testedSyphilis} \r\n                                                >\r\n                                                     <option value=\"\" >Select</option>\r\n                                                    <option value=\"Yes\" >Yes</option>\r\n                                                    <option value=\"No\" >No</option>\r\n                                                </Input>\r\n                                            </InputGroup> \r\n                                            {errors.testedSyphilis !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.testedSyphilis}</span>\r\n                                            ) : \"\" }                                       \r\n                                            </FormGroup>\r\n                                    </div>\r\n                                \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Syphilis test result *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"select\"\r\n                                                    name=\"testResultSyphilis\"\r\n                                                    id=\"testResultSyphilis\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.testResultSyphilis} \r\n                                                >\r\n                                                    <option value=\"\" >Select</option>\r\n                                                    <option value=\"Positive\" >Positive</option>\r\n                                                    <option value=\"Negative\" >Negative</option>\r\n                                                </Input>\r\n                                            </InputGroup> \r\n                                            {errors.testResultSyphilis !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.testResultSyphilis}</span>\r\n                                            ) : \"\" }                                        \r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Treated for syphilis (penicillin) *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"select\"\r\n                                                    name=\"treatedSyphilis\"\r\n                                                    id=\"treatedSyphilis\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.encounterDate} \r\n                                                >\r\n                                                    <option value=\"\" >Select</option>\r\n                                                    <option value=\"Yes\" >Yes</option>\r\n                                                    <option value=\"No\" >No</option>\r\n                                                </Input>\r\n                                            </InputGroup> \r\n                                            {errors.treatedSyphilis !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.treatedSyphilis}</span>\r\n                                            ) : \"\" }                                        \r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Referred Syphilis +ve client *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"select\"\r\n                                                    name=\"referredSyphilisTreatment\"\r\n                                                    id=\"referredSyphilisTreatment\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.referredSyphilisTreatment} \r\n                                                >\r\n                                                    <option value=\"\" >Select</option>\r\n                                                    <option value=\"Yes\" >Yes</option>\r\n                                                    <option value=\"No\" >No</option>\r\n                                                </Input>\r\n                                            </InputGroup>\r\n                                            {errors.referredSyphilisTreatment !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.referredSyphilisTreatment}</span>\r\n                                            ) : \"\" }                                         \r\n                                            </FormGroup>\r\n                                    </div>\r\n                                   \r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                onClick={handleCancel}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\"  }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    console.log(props)\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrerId:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\",\r\n     householdNumber:\"\", referredToOVCPartner:\"\", dateReferredToOVCPartner:\"\",\r\n     referredFromOVCPartner:\"\", dateReferredFromOVCPartner:\"\",\r\n     careEntryPointOther:\"\"});\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n    \r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n    //status for hospital Number \r\n    const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n    const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n    \r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n            const contacts = patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(contacts.contact);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type == 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber ? hospitalNumber.value : ''\r\n            basicInfo.maritalStatusId=patientObj.maritalStatus.id\r\n            basicInfo.employmentStatusId=patientObj.employmentStatus.id\r\n            basicInfo.genderId=patientObj.gender ? patientObj.gender.id : null\r\n            basicInfo.sexId=patientObj.sex \r\n            basicInfo.educationId=patientObj.education.id\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value : \"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value : \"\"\r\n            basicInfo.email=email && email.value ? email.value : \"\"\r\n            basicInfo.address=country && country.city ? country.city : \"\"\r\n            basicInfo.landmark=country.line[0]\r\n            basicInfo.countryId=country.countryId\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country.stateId)\r\n            basicInfo.stateId=country.stateId\r\n            basicInfo.district=country.district\r\n            setObjValues(patientObj.enrollment)\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n      };\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: e.target.value});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n            async function getCharacters() {\r\n                const hosiptalNumber=e.target.value\r\n                const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                    );\r\n                if(response.data!==true){\r\n                    setHospitalNumStatus(false)\r\n                    setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                    setHospitalNumStatus2(true)\r\n                }else{\r\n                    setHospitalNumStatus(false)\r\n                    setHospitalNumStatus2(true)\r\n                }\r\n            }\r\n            getCharacters();\r\n            }  \r\n             \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };     \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.targetGroupId = objValues.targetGroupId ? \"\" : \"Target group is required.\"\r\n            temp.dateConfirmedHiv = objValues.dateConfirmedHiv ? \"\" : \"date confirm HIV is required.\"\r\n            temp.sourceOfReferrerId = objValues.sourceOfReferrerId ? \"\" : \"Source of referrer is required.\"\r\n            temp.enrollmentSettingId = objValues.enrollmentSettingId ? \"\" : \"Enrollment Setting Number  is required.\"\r\n            temp.tbStatusId = objValues.tbStatusId ? \"\" : \"TB status is required.\"    \r\n            temp.statusAtRegistrationId = objValues.statusAtRegistrationId ? \"\" : \"Status at Registration is required.\"  \r\n            temp.entryPointId = objValues.entryPointId ? \"\" : \"Care Entry Point is required.\" \r\n            temp.dateOfRegistration = objValues.dateOfRegistration ? \"\" : \"Date of Registration is required.\"  \r\n            temp.uniqueId = objValues.uniqueId ? \"\" : \"Unique ID is required.\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId.id\r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.genderId,\r\n                    sexId:basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber: basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.hivEnrollment=objValues;\r\n                const response = await axios.put(`${baseUrl}hiv/patient/${patientObj.id}`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Updated successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage); \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n        if(e.target.name ===\"pregnancyStatusId\" ){\r\n            console.log(e.target.value)\r\n            if(e.target.value===\"72\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }                  \r\n    }    \r\n    \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.cardBottom}>\r\n                <CardContent>\r\n                <Link\r\n                    to={{\r\n                        pathname: \"/patient-history\",\r\n                        state: { patientObj: patientObj  }\r\n                    }}\r\n                >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Edit User Information</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={Math.floor(Math.random() * 1094328)}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        max={today}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"nin\"\r\n                                                        id=\"nin\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>HIV Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"uniqueId\">Unique ID No  * </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"uniqueId\"\r\n                                        id=\"uniqueId\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.uniqueId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled\r\n                                        \r\n                                    />\r\n                                    {errors.uniqueId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"dateOfRegistration\">Date of Enrollment * </Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateOfRegistration\"\r\n                                        id=\"dateOfRegistration\"\r\n                                        min={basicInfo.dateOfRegistration}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateOfRegistration}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    />\r\n                                    {errors.dateOfRegistration !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">Care Entry Point * </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"entryPointId\"\r\n                                    id=\"entryPointId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.entryPointId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> </option>                  \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                {transferIn===true ? \r\n                                    (\r\n                                        <FormGroup>\r\n                                        <Label >Facility Name</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"facilityName\"\r\n                                            id=\"facilityName\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.facilityName}  \r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        </FormGroup>\r\n                                    ):\"\"}\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Status at Registration *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"statusAtRegistrationId\"\r\n                                    id=\"statusAtRegistrationId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.statusAtRegistrationId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> Select</option>                  \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of Confirmed HIV Test *</Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateConfirmedHiv\"\r\n                                        id=\"dateConfirmedHiv\"\r\n                                        min={basicInfo.dob}\r\n                                        max={objValues.dateOfRegistration}\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateConfirmedHiv}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    /> \r\n                                    {errors.dateConfirmedHiv !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                        ) : \"\" } \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Source of Referral *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"sourceOfReferrerId\"\r\n                                        id=\"sourceOfReferrerId\"\r\n                                        value={objValues.sourceOfReferrerId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    >\r\n                                        <option value=\"\">Select </option>                 \r\n                                            {sourceReferral.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.sourceOfReferrerId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sourceOfReferrerId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Enrollment Setting *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"enrollmentSettingId\"\r\n                                        id=\"enrollmentSettingId\"\r\n                                        value={objValues.enrollmentSettingId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        onChange={handleInputChange}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n\r\n                                            {enrollSetting.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.enrollmentSettingId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.enrollmentSettingId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {(femaleStatus && basicInfo.age > 9) && (\r\n                                    <>\r\n                                   \r\n                                    <div className = \"form-group mb-3 col-md-6\" >\r\n                                        <FormGroup>\r\n                                        <Label> Pregnancy </Label>\r\n                                        <Input\r\n                                            type = \"select\"\r\n                                            name = \"pregnancyStatusId\"\r\n                                            id = \"pregnancyStatusId\"\r\n                                            value = {objValues.pregnancyStatusId}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            onChange = {handleInputChange}  \r\n                                            //disabled={locationState.actionType==='update'? false : true}                                      \r\n                                        >\r\n                                        < option value = \"\" >Select </option>\r\n                                        {pregnancyStatus.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>                                                                        \r\n                                    </FormGroup>  \r\n                                    </div>\r\n                                    {objValues.pregnancyStatusId!=='72' && (\r\n                                    <>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of LMP </Label>                                    \r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateOfLpm\"\r\n                                            id=\"dateOfLpm\"\r\n                                            max={today}\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateOfLpm}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />  \r\n                                            \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    </>\r\n                                    )}\r\n                                    </>\r\n                                )}\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >TB Status * </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"tbStatusId\"\r\n                                        id=\"tbStatusId\"\r\n                                        value={objValues.tbStatusId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n                                            {tbStatus.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                    </Input>\r\n                                    {errors.tbStatusId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.tbStatusId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {hideTargetGroup===\"false\" ? (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Target Group *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"targetGroupId\"\r\n                                        id=\"targetGroupId\"\r\n                                        value={objValues.targetGroupId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>                    \r\n                                                {kP.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                    </Input>\r\n                                    {errors.targetGroupId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroupId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                ) : \"\"}\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                {basicInfo.age <=14 && (\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                )}\r\n                                {/* <div className=\"form-group mb-3 col-md-3\">\r\n                                    {ovcEnrolled===true ? \r\n                                        (\r\n                                        <FormGroup>\r\n                                        <Label >OVC Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"ovcNumber\"\r\n                                            id=\"ovcNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.ovcNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div> */}\r\n                                \r\n                                {ovcEnrolled===true && \r\n                                (\r\n                                <>        \r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Household Unique Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"householdNumber\"\r\n                                            id=\"householdNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.householdNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\"></div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredToOVCPartner\"\r\n                                            id=\"referredToOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredToOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredToOVCPartner\"\r\n                                            id=\"dateReferredToOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredToOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredFromOVCPartner\"\r\n                                            id=\"referredFromOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredFromOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredFromOVCPartner\"\r\n                                            id=\"dateReferredFromOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredFromOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                </>\r\n                                )}\r\n                            \r\n                            </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n                            {locationState.actionType ==='update' ?\r\n                            (\r\n                                <>\r\n                                    <MatButton\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<SaveIcon />}\r\n                                        onClick={handleSubmit}\r\n                                        style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                    >\r\n                                        {!saving ? (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                                        ) : (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                                        )}\r\n                                    </MatButton>\r\n            \r\n                                    <MatButton\r\n                                        variant=\"contained\"\r\n                                        className={classes.button}\r\n                                        startIcon={<CancelIcon />}\r\n                                        onClick={handleCancel}\r\n                                        style={{backgroundColor:'#992E62'}}\r\n                                    >\r\n                                        <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                                    </MatButton>\r\n                            </>\r\n                            ):\"\"}\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Home from './main/webapp/jsx/components/Home'\r\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail'\r\nimport RegisterPatientPage from './main/webapp/jsx/components/Patient/RegisterPatient';\r\nimport EnrollPatientPage from './main/webapp/jsx/components/Patient/EnrollPatient';\r\nimport UpdatePatientEnrollment from './main/webapp/jsx/components/Patient/UpdatePatientEnrollment';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/patient-history\">\r\n            <PatientDetail />\r\n          </Route> \r\n          <Route path=\"/register-patient\">\r\n            <RegisterPatientPage />\r\n          </Route>\r\n          <Route path=\"/enroll-patient\">\r\n            <EnrollPatientPage />\r\n          </Route>\r\n          <Route path=\"/update-patient\">\r\n            <UpdatePatientEnrollment />\r\n          </Route>\r\n\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>       \r\n          \r\n        </Switch>\r\n      </div>\r\n </Router>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}