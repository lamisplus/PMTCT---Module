{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/components/Patient/ActiveANCPatientList.js","main/webapp/jsx/components/Visualisation/DashboardAnalytics/SummaryView/Highcharts/ReceivingArtByAge.js","main/webapp/jsx/components/Visualisation/DashboardAnalytics/SummaryView/Highcharts/ReceivingArtBySex.js","main/webapp/jsx/components/Visualisation/DashboardAnalytics/SummaryView/Index.js","main/webapp/jsx/components/Visualisation/Index.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/CaptureBiometric.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/components/Consultation/Home.js","main/webapp/jsx/components/Consultation/ViewUpdate/ADR/Index.js","main/webapp/jsx/components/Consultation/ViewUpdate/OpportunisticInfection/Index.js","main/webapp/jsx/components/Consultation/Index.js","main/webapp/jsx/components/Consultation/ViewUpdate/History/ConsultationPage.js","main/webapp/jsx/components/PmtctServices/PmtctEnrollment.js","main/webapp/jsx/components/PmtctServices/AncEnrollement.js","main/webapp/jsx/components/PmtctServices/LabourDelivery.js","main/webapp/jsx/images/fingerprintimage.png","main/webapp/jsx/components/Patient/Biometric.js","main/webapp/jsx/components/PMTCTHTSEnrollment/BasicInfo.js","main/webapp/jsx/components/PMTCTHTSEnrollment/PreTest.js","main/webapp/jsx/components/PMTCTHTSEnrollment/HivTestResult.js","main/webapp/jsx/components/PMTCTHTSEnrollment/Elicitation/AddIndexContact.js","main/webapp/jsx/components/PMTCTHTSEnrollment/Elicitation/IndexContactList.js","main/webapp/jsx/components/PMTCTHTSEnrollment/Elicitation/Index.js","main/webapp/jsx/components/PMTCTHTSEnrollment/Others.js","main/webapp/jsx/components/PMTCTHTSEnrollment/PostTest.js","main/webapp/jsx/components/PMTCTHTSEnrollment/RecencyTesting.js","main/webapp/jsx/components/PMTCTHTSEnrollment/RiskStratification.js","main/webapp/jsx/components/PMTCTHTSEnrollment/Index.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/RegisterPatient.js","main/webapp/jsx/components/Patient/EnrollPatient.js","main/webapp/jsx/components/Patient/UpdatePatientEnrollment.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["token","URLSearchParams","window","location","search","get","url","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","Patients","makeStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","width","marginTop","submit","cardBottom","marginBottom","Select","height","button","root","input","error","color","fontSize","success","useState","setPatientList","setLoading","axios","baseUrl","headers","then","response","data","catch","useEffect","patients","calculate_age","dob","today","Date","dateParts","split","dateObject","birthDate","age_now","getFullYear","m","getMonth","getDate","getHospitalNumber","identifier","hospitalNumber","find","obj","type","value","icons","title","columns","field","filtering","query","Promise","resolve","reject","pageSize","page","result","records","map","row","name","to","pathname","state","patientId","id","patientObj","firstName","surname","hospital_number","gender","sex","age","dateOfBirth","undefined","moment","format","actions","ButtonGroup","variant","style","backgroundColor","size","Button","fontWeight","totalCount","totalRecords","options","headerStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","debounceInterval","fullname","Highcharts","setOptions","colors","getOptions","radialGradient","cx","cy","r","stops","brighten","ReceivingArtByAge","chart","plotBackgroundColor","plotBorderWidth","plotShadow","text","tooltip","pointFormat","accessibility","point","valueSuffix","plotOptions","pie","allowPointSelect","cursor","dataLabels","enabled","connectorColor","showInLegend","series","sliced","y","ReceivingArtBySex","align","verticalAlign","distance","startAngle","endAngle","center","innerSize","useStyles","SummaryView","activeItem","React","anchorEl","Boolean","padding","md","lg","sm","xs","className","CardBody","highcharts","subtitle","legend","layout","xAxis","categories","labels","x","yAxis","allowDecimals","responsive","rules","condition","maxWidth","chartOptions","credits","options2","Widget","class","divStyle","borderRadius","Home","key","setKey","startIcon","textTransform","Row","Col","xl","Card","Body","Tabs","activeKey","onSelect","k","Tab","eventKey","withStyles","heading","typography","pxToRem","secondaryHeading","palette","secondary","icon","details","column","flexBasis","helper","borderLeft","divider","unit","link","primary","main","textDecoration","classes","patientObjs","permissions","biometricStatus","setBiometricStatus","setDevices","setHivStatus","PatientCurrentStatus","CheckBiometric","console","log","ExpansionPanel","ExpansionPanelSummary","root2","address","city","getAddress","Typography","Label","Detail","navItemText","SubMenu","setGenderType","Observation","observation","mental","filter","evaluation","length","Menu","inverted","Item","onClick","setActiveContent","activeContent","route","hivStatus","pmtctRegStatus","ClinicVisit","errors","setErrors","temp","saving","setSaving","dsdModelType","setDsdModelType","setcurrentVitalSigns","setShowCurrentVitalSigns","visitStatus","setVisitStatus","maternalCome","setMaternalCome","fp","setFp","entryPoint","setEntryPoint","bodyWeight","diastolic","systolic","pulse","temperature","respiratoryRate","ancNo","dateOfViralLoad","dateOfVisit","dateOfmeternalOutcome","dsd","dsdModel","dsdOption","enteryPoint","fpCounseling","fpMethod","gaOfViralLoad","maternalOutcome","nextAppointmentDate","personUuid","person_uuid","resultOfViralLoad","transferTo","timeOfViralLoad","objValues","setObjValues","encounterDate","facilityId","personId","serviceTypeId","vital","VitalSigns","VISIT_STATUS_PMTCT","MATERNAL_OUTCOME","FAMILY_PLANNING_METHOD","POINT_ENTRY_PMTCT","lastVitalSigns","handleInputChange","e","target","dsdmodel","DsdModelType","Grid","Column","Segment","as","ribbon","FormGroup","Input","border","onChange","max","required","code","checked","min","nextAppointment","disabled","preventDefault","Object","values","every","post","toast","position","POSITION","BOTTOM_CENTER","errorMessage","apierror","message","ADR","ClinicVisitPage","activeTab","flexGrow","AncPnc","useHistory","pointOfEntry","setPointOfEntry","tbStatus","setTbStatus","timingOfArtInitiation","setTimingOfArtInitiation","pmtctEnrollmentDate","ga","gaweeks","gravida","artStartDate","enroll","setEnrollDto","TIME_ART_INITIATION_PMTCT","TB_STATUS","handleInputChangeEnrollmentDto","InputGroup","index","Spinner","validate","AncEnrollement","visitId","setVitalSignDto","handleInputChangeVitalSignDto","commenced","LabourDelivery","delieryMode","setDelieryMode","feedingDecision","setfeedingDecision","maternalOutCome","setmaternalOutCome","childStatus","setChildStatus","bookingStatus","setBookingStatus","artStartedLdWard","childGivenArvWithin72","dateOfDelivery","deliveryTime","episiotomy","hbstatus","hcstatus","hivExposedInfantGivenHbWithin24hrs","modeOfDelivery","onArt","referalSource","romDeliveryInterval","vaginalTear","delivery","setDelivery","MODE_DELIVERY","FEEDING_DECISION","CHILD_STATUS_DELIVERY","BOOKING_STATUS","handleInputChangeDeliveryDto","fontFamily","marginLeft","lineHeight","checkUrl","Biometrics","history","biometricDevices","setbiometricDevices","biometricType","templateType","device","fingerType","setFingerType","pageLoading","setPageLoading","showCapture","setshowCapture","setTryAgain","setSuccess","storedBiometrics","setStoredBiometrics","capturedFingered","setCapturedFingered","setSelectedFingers","getPersonBiometrics","bgcolor","green","fingersCodeset","personCapturedFingers","_","uniq","biometricItems","item","extend","captured","includes","clear_storelist","TemplateType","flex","boxShadow","minHeight","flexWrap","biometric","lastModifiedDate","Dropdown","Toggle","drop","borderColor","marginRight","xmlns","xmlnsXlink","viewBox","version","stroke","strokeWidth","fill","fillRule","alignRight","finger","delete","newStoredBiometrics","updatePatientBiometricStatus","justifyContent","src","fingerprintimage","alt","Badge","iso","Alert","severity","AlertTitle","for","deviceName","selectedDevice","errorType","errorName","setTimeout","ERROR","biometricsEnrollments","capturedBiometricsList","uniqBy","paddingBottom","List","celled","horizontal","Header","paddingLeft","Icon","Content","capturedObj","demo","background","default","inline","BasicInfo","kP","setKP","enrollSetting","setEnrollSetting","sourceReferral","setSourceReferral","setGender","counselingType","setCounselingType","pregnancyStatus","setPregnancyStatus","indexTesting","setIndexTesting","setclientCodeetail","setclientCodeetail2","clientCodeCheck","setClientCodeCheck","active","clientCode","breastFeeding","dateVisit","firstTimeVisit","indexClient","numChildren","numWives","pregnant","previouslyTested","referredFrom","riskAssessment","riskStratificationCode","extra","targetGroup","testingSetting","typeCounseling","relationshipWithIndexClient","indexClientCode","KP","EnrollmentSetting","SourceReferral","Genders","CounselingType","PregnancyStatus","IndexTesting","getIndexClientCode","handleItemClick","completedMenu","completed","setCompleted","dateOfRegistration","sexId","onBlur","content","labelPosition","patientForm","setPatientObj","patientAge","patientID","personResponseDto","clientId","sexPartnerHivPositive","newDiagnosedHivlastThreeMonths","currentlyArvForPmtct","knowHivPositiveOnArv","knowHivPositiveAfterLostToFollowUp","uprotectedAnalSex","riskAssessmentPartner","setRiskAssessmentPartner","htsClientId","knowledgeAssessment","stiScreening","tbScreening","sexPartnerRiskAssessment","previousTestedHIVNegative","timeLastHIVNegativeTestResult","clientPregnant","clientInformHivTransRoutes","clientInformRiskkHivTrans","clientInformPreventingsHivTrans","clientInformPossibleTestResult","informConsentHivTest","setKnowledgeAssessment","everHadSexualIntercourse","bloodtransInlastThreeMonths","uprotectedSexWithCasualLastThreeMonths","uprotectedSexWithRegularPartnerLastThreeMonths","unprotectedVaginalSex","stiLastThreeMonths","sexUnderInfluence","moreThanOneSexPartnerLastThreeMonths","experiencePain","haveSexWithoutCondom","abuseDrug","bloodTransfusion","consistentWeightFeverNightCough","soldPaidVaginalSex","setRiskAssessment","vaginalDischarge","lowerAbdominalPains","urethralDischarge","complaintsOfScrotal","complaintsGenitalSore","setStiScreening","currentCough","weightLoss","lymphadenopathy","fever","nightSweats","setTbScreening","riskStratificationResponseDto","keys","handleInputChangeKnowledgeAssessment","handleInputChangeRiskAssessment","riskCount","handleInputChangeRiskAssessmentPartner","sexPartRiskCount","handleInputChangeStiScreening","stiCount","tbCount","settbCount","handleInputChangeTbScreening","newcount","Message","warning","haveCondomBurst","put","HivTestResult","hivTestDate","setHivTestDate","showCD4Count","setShowCD4Count","confirmatoryTest","confirmatoryTest2","hivTestResult","hivTestResult2","test1","test2","tieBreakerTest","tieBreakerTest2","syphilisTesting","hepatitisTesting","others","cd4","date","initialTest1","setInitailTest","date2","result2","initialTest12","setInitailTest2","handleInputChangeCd4Count","setCd4Count","cd4Count","cd4SemiQuantitative","cd4FlowCyteometry","handleInputChangeInitial","setConfirmatoryTest","setTieBreakerTest","handleInputChangeInitial2","setConfirmatoryTest2","setTieBreakerTest2","handleInputChangeConfirmatory","handleInputChangeConfirmatory2","handleInputChangeTie","handleInputChangeTie2","syphilisTestResult","syphills","setSyphills","hepatitisCTestResult","hepatitisBTestResult","longitude","latitude","adhocCode","hepatitis","setHepatitis","handleInputChangeHepatitis","setOthers","handleInputChangeOthers","dateOfEac1","AddIndexContact","sexs","setSexs","notificationContact","setNotificationContact","ageDisabled","setAgeDisabled","consent","setConsent","indexNotificationServicesElicitation","middleName","lastName","phoneNumber","altPhoneNumber","physicalHurt","threatenToHurt","hangOutSpots","relativeToIndexClient","currentlyLiveWithPartner","partnerTestedPositive","sexuallyUncomfortable","notificationMethod","datePartnerCameForTesting","Sex","NotificationContact","Consent","handleItemClickPage","handleIClickPage","alphabetOnly","handleDateOfBirthChange","isDateOfBirthEstimated","checkPhoneNumberBasic","inputName","slice","replace","defaultChecked","currentDate","setDate","setMonth","dobNew","toISOString","add","containerStyle","inputStyle","country","placeholder","minLength","masks","ng","at","datePartnerComeForTesting","PatientnHistory","indexClientList","setIndexClientList","phone","Elicitation","activePage","setActivePage","IndexContactList","PostTest","postTestCounselingKnowledgeAssessment","hivTestBefore","hivRequestResult","hivRequestResultCt","clientReceivedHivTestResult","postTestCounseling","riskReduction","postTestDisclosure","bringPartnerHivtesting","childrenHivtesting","informationFp","partnerFpThanCondom","partnerFpUseCondom","correctCondomUse","condomProvidedToClient","unprotectedSexRegularPartnerLastThreeMonth","referredToServices","postTest","setPostTest","handleInputChangePostTest","handleSubmit","push","Recency","recency","optOutRTRI","optOutRTRITestName","optOutRTRITestDate","rencencyId","controlLine","verififcationLine","longTermLine","rencencyInterpretation","hasViralLoad","sampleCollectedDate","sampleReferanceNumber","dateSampleSentToPCRLab","sampleTestDate","sampleType","receivingPcrLab","viralLoadResultClassification","recencyResult","finalRecencyResult","setRecency","handleInputChangeRecency","recencyIdNumberValue","checkRecencyLimit","RiskStratification","riskCountQuestion","open","setOpen","toggle","setting","setSetting","setRiskCount","visitDate","modality","lastHivTestForceToHaveSex","lastHivTestHadAnal","lastHivTestInjectedDrugs","whatWasTheResult","lastHivTestDone","diagnosedWithTb","lastHivTestPainfulUrination","lastHivTestBloodTransfusion","lastHivTestVaginalOral","lastHivTestBasedOnRequest","settingId","SettingModality","actualRiskCountTrue","setExtra","setHideOtherMenu","show","centered","Title","Footer","PmtctHts","useLocation","setactiveItem","hideOtherMenu","capturedBy","indexElicitation","archived","htsClient","person","contact","contactPoint","createdDate","deceased","deceasedDateTime","education","employmentStatus","emrId","maritalStatus","new","ninNumber","organization","otherName","uuid","relationWithIndexClient","htsClientUuid","relationshipToIndexClient","line","stateId","district","countryId","postalCode","organisationUnitId","checkInDate","risk","pre","elicitation","autoClose","hideProgressBar","vertical","PreTest","patientsHistory","RecencyTesting","Others","art","setArt","actionType","CardContent","Biometric","PmtctEnrollment","library","faCheckSquare","faCoffee","faEdit","faTrash","UserRegistration","genderId","maritalStatusId","educationId","employmentStatusId","altPhonenumber","basicInfo","setBasicInfo","email","relationshipId","relatives","setRelatives","substr","contacts","setContacts","disabledAgeBaseOnAge","setDisabledAgeBaseOnAge","showRelative","setShowRelative","genders","setGenders","maritalStatusOptions","setMaritalStatusOptions","educationOptions","setEducationOptions","occupationOptions","setOccupationOptions","relationshipOptions","setRelationshipOptions","countries","setCountries","states","setStates","provinces","setProvinces","settopLevelUnitCountryOptions","userDetail","user","setfemaleStatus","expectedDeliveryDate","lmp","parity","hivDiognosicTime","referredSyphilisTreatment","testResultSyphilis","testedSyphilis","treatedSyphilis","personDto","pmtctHtsInfo","syphilisInfo","partnerNotification","setCarePoints","ancNumberCheck","setAncNumberCheck","hospitalNumStatus","locationState","loadGenders","loadMaritalStatus","loadEducation","loadOccupation","loadRelationships","loadTopLevelCountry","CareEntryPoint","GetCountry","alert","useCallback","handleInputChangeBasic","ninNumberValue","checkNINLimit","getAncNumber","ancNumber","getRelationship","relationship","handleInputChangeRelatives","sourceOfReferral","newConatctsInfo","contactInfo","fullName","landmark","subErrors","margingRight","Form","Math","abs","maritalStatusOption","occupationOption","educationOption","maxLength","getCountryId","setStateByCountryId","relative","splice","handleEditRelative","handleDeleteRelative","checkPhoneNumber","validateRelatives","backdrop","setSourceOfReferral","getSex","uniqueId","SOURCE_REFERRAL_PMTCT","patientSex","getSexId","outline","ageNumber","patientDTO","femaleStatus","entryPointId","facilityName","statusAtRegistrationId","dateConfirmedHiv","sourceOfReferrerId","enrollmentSettingId","pregnancyStatusId","dateOfLpm","tbStatusId","targetGroupId","ovc_enrolled","ovcNumber","householdNumber","referredToOVCPartner","dateReferredToOVCPartner","referredFromOVCPartner","dateReferredFromOVCPartner","careEntryPointOther","carePoints","transferIn","setTransferIn","ovcEnrolled","setOvcEnrolled","hideTargetGroup","setHospitalNumStatus","hospitalNumStatus2","setHospitalNumStatus2","HivStatus","TBStatus","identifiers","altphone","getStateId","enrollment","getCharacters","hosiptalNumber","dateOfRegistration1","hivEnrollment","handleCheckBox","floor","random","htmlFor","App","path","PatientDetail","RegisterPatient","EnrollPatient","UpdatePatientEnrollment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","label","sideBarStyle","setSideBarStyle","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","body","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","sidebarpositions","openMenuToggle","setDemoTheme","setAttr","themeSettings","children","ReactDOM","render","StrictMode","basename","getElementById"],"mappings":"sXAAcA,EAAS,IAAIC,gBAAgBC,OAAOC,SAASC,QAASC,IAAI,OAC3DC,EAAM,W,2YCuCnBC,KAAOC,OAAO,MACdC,OAEA,IAAMC,GAAa,CACnBC,IAAKC,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAYD,GAAZ,IAAmBC,IAAKA,IAAxC,IAChBC,MAAOH,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAWD,GAAX,IAAkBC,IAAKA,IAAvC,IAClBE,MAAOJ,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAWD,GAAX,IAAkBC,IAAKA,IAAvC,IAClBG,OAAQL,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAmBD,GAAnB,IAA0BC,IAAKA,IAA/C,IACnBI,YAAaN,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAkBD,GAAlB,IAAyBC,IAAKA,IAA9C,IACxBK,KAAMP,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAUD,GAAV,IAAiBC,IAAKA,IAAtC,IACjBM,OAAQR,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAaD,GAAb,IAAoBC,IAAKA,IAAzC,IACnBO,OAAQT,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAgBD,GAAhB,IAAuBC,IAAKA,IAA5C,IACnBQ,UAAWV,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAeD,GAAf,IAAsBC,IAAKA,IAA3C,IACtBS,SAAUX,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAcD,GAAd,IAAqBC,IAAKA,IAA1C,IACrBU,SAAUZ,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAkBD,GAAlB,IAAyBC,IAAKA,IAA9C,IACrBW,aAAcb,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAiBD,GAAjB,IAAwBC,IAAKA,IAA7C,IACzBY,YAAad,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAWD,GAAX,IAAkBC,IAAKA,IAAvC,IACxBa,OAAQf,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAYD,GAAZ,IAAmBC,IAAKA,IAAxC,IACnBc,UAAWhB,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAiBD,GAAjB,IAAwBC,IAAKA,IAA7C,IACtBe,gBAAiBjB,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAYD,GAAZ,IAAmBC,IAAKA,IAAxC,IAC5BgB,WAAYlB,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,KAAD,2BAAgBD,GAAhB,IAAuBC,IAAKA,IAA5C,KA2MRiB,IAxMGC,cAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAG1Ba,KAAM,CACF,QAAS,CACLd,OAAQF,EAAMG,QAAQ,KAG9Bc,MAAO,CACHb,QAAS,QAEbc,MAAO,CACHC,MAAO,UACPC,SAAU,QAEdC,QAAS,CACLF,MAAO,WACPC,SAAU,QAvCgB,IA4CjB,SAACxC,GACd,MAAsC0C,mBAAS,IAA/C,mBAAoBC,GAApB,WACA,EAA8BD,oBAAS,GAAvC,mBAAgBE,GAAhB,WAFwB,sDAOpB,wFACIA,GAAW,GACXC,IACKrD,IADL,UACYsD,EADZ,2BAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAEvC6D,MAAK,SAACC,GACHL,GAAW,GACXD,EAAeM,EAASC,KAE3B,IACAC,OAAM,SAACb,GACJM,GAAW,EACd,IAbT,4CAPoB,sBAGxBQ,qBAAU,YAHc,mCAIpBC,EACD,GAAE,IAiBL,IAAMC,EAAgB,SAAAC,GAClB,IAAIC,EAAQ,IAAIC,KACZC,EAAYH,EAAII,MAAM,KACtBC,EAAa,IAAIH,MAAMC,EAAU,GAAIA,EAAU,GAAK,GAAIA,EAAU,IAClEG,EAAY,IAAIJ,KAAKG,GACrBE,EAAUN,EAAMO,cAAgBF,EAAUE,cAC1CC,EAAIR,EAAMS,WAAaJ,EAAUI,WAIjC,OAHID,EAAI,GAAY,IAANA,GAAWR,EAAMU,UAAYL,EAAUK,YAC7CJ,IAEQ,IAAZA,EACWE,EAAI,YAERF,EAAU,UACxB,EAECK,EAAoB,SAACC,GACvB,IACMC,EADcD,EACeA,WAAWE,MAAK,SAAAC,GAAG,MAAgB,kBAAZA,EAAIC,IAAR,IACtD,OAAOH,EAAiBA,EAAeI,MAAQ,EAClD,EAEH,OACE,+BAEQ,eAAC,IAAD,CACAC,MAAO7E,GACL8E,MAAM,gBACNC,QAAS,CAEP,CACED,MAAO,eACPE,MAAO,QAET,CAAEF,MAAO,kBAAmBE,MAAO,kBAAmBC,WAAW,GACjE,CAAEH,MAAO,MAAOE,MAAO,SAAUC,WAAW,GAC5C,CAAEH,MAAO,MAAOE,MAAO,MAAOC,WAAW,GAIzC,CAAEH,MAAO,UAAWE,MAAO,UAAWC,WAAW,IAG/C5B,KAAM,SAAA6B,GAAK,OACT,IAAIC,SAAQ,SAACC,EAASC,GAAV,OACRrC,IAAMrD,IAAN,UAAasD,EAAb,gDAA4DiC,EAAMI,SAAlE,mBAAqFJ,EAAMK,KAA3F,wBAA+GL,EAAMxF,QAAU,CAAEwD,QAAS,CAAC,+BAA4B5D,MAClK6D,MAAK,SAAAC,GAAQ,OAAIA,CAAJ,IACbD,MAAK,SAAAqC,GAEFJ,EAAQ,CACJ/B,KAAMmC,EAAOnC,KAAKoC,QAAQC,KAAI,SAACC,GAAD,MAAU,CAEpCC,KAAK,gBAAC,IAAD,CACGC,GAAI,CACAC,SAAU,kBACVC,MAAO,CAAEC,UAAYL,EAAIM,GAAIC,WAAYP,IAGhDb,MAAO,iBANP,cAOGa,EAAIQ,UAAY,IAAMR,EAAIS,WAGtCC,gBAAiB/B,EAAkBqB,EAAIpB,YACvC+B,OAAOX,GAAOA,EAAIY,IAAMZ,EAAIY,IAAM,GAClCC,IAA0B,IAApBb,EAAIc,kBACcC,IAApBf,EAAIc,aACgB,OAApBd,EAAIc,aACgB,KAApBd,EAAIc,YACA,EACAhD,EAAckD,KAAOhB,EAAIc,aAAaG,OAAO,eAIrDC,QAAQ,+BACA,eAAC,IAAD,CACIhB,GAAI,CACAC,SAAU,kBACVC,MAAO,CAAEC,UAAYL,EAAIM,GAAIC,WAAYP,IAHjD,SAMI,gBAACmB,GAAA,EAAD,CAAaC,QAAQ,YACjB,aAAW,eACXC,MAAO,CAACC,gBAAgB,mBAAoB5E,OAAO,OAAON,MAAM,SAChEmF,KAAK,QAHT,UAKA,eAACC,GAAA,EAAD,CACAzE,MAAM,UACNwE,KAAK,QACL,aAAW,wBACX,gBAAc,OACdF,MAAO,CAACC,gBAAgB,oBALxB,SAOI,eAAC,KAAD,MAEJ,eAACE,GAAA,EAAD,CACAH,MAAO,CAACC,gBAAgB,oBADxB,SAGI,uBAAMD,MAAO,CAACrE,SAAS,OAAQD,MAAM,OAAQ0E,WAAW,UAAxD,qCA/Cc,IAuD9B7B,KAAML,EAAMK,KACZ8B,WAAY7B,EAAOnC,KAAKiE,cAG/B,GAjEG,GADH,EAqELC,QAAS,CACPC,YAAa,CACTP,gBAAiB,UACjBvE,MAAO,QAEX+E,iBAAkB,CACd1F,MAAQ,OACR2F,YAAa,SAEjBzC,WAAW,EACX0C,cAAc,EACdC,qBAAsB,OACtBC,gBAAgB,CAAC,GAAG,GAAG,KACvBvC,SAAS,GACTwC,iBAAkB,QAM3C,G,UC7NDjI,KAAOC,OAAO,MACdC,OAEA,IAAMC,GAAa,CACnBC,IAAKC,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAYD,GAAZ,IAAmBC,IAAKA,IAAxC,IAChBC,MAAOH,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAWD,GAAX,IAAkBC,IAAKA,IAAvC,IAClBE,MAAOJ,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAWD,GAAX,IAAkBC,IAAKA,IAAvC,IAClBG,OAAQL,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAmBD,GAAnB,IAA0BC,IAAKA,IAA/C,IACnBI,YAAaN,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAkBD,GAAlB,IAAyBC,IAAKA,IAA9C,IACxBK,KAAMP,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAUD,GAAV,IAAiBC,IAAKA,IAAtC,IACjBM,OAAQR,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAaD,GAAb,IAAoBC,IAAKA,IAAzC,IACnBO,OAAQT,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAgBD,GAAhB,IAAuBC,IAAKA,IAA5C,IACnBQ,UAAWV,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAeD,GAAf,IAAsBC,IAAKA,IAA3C,IACtBS,SAAUX,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAcD,GAAd,IAAqBC,IAAKA,IAA1C,IACrBU,SAAUZ,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAkBD,GAAlB,IAAyBC,IAAKA,IAA9C,IACrBW,aAAcb,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAiBD,GAAjB,IAAwBC,IAAKA,IAA7C,IACzBY,YAAad,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAWD,GAAX,IAAkBC,IAAKA,IAAvC,IACxBa,OAAQf,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAYD,GAAZ,IAAmBC,IAAKA,IAAxC,IACnBc,UAAWhB,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAiBD,GAAjB,IAAwBC,IAAKA,IAA7C,IACtBe,gBAAiBjB,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAYD,GAAZ,IAAmBC,IAAKA,IAAxC,IAC5BgB,WAAYlB,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,KAAD,2BAAgBD,GAAhB,IAAuBC,IAAKA,IAA5C,KAoMRiB,IAjMGC,cAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAG1Ba,KAAM,CACF,QAAS,CACLd,OAAQF,EAAMG,QAAQ,KAG9Bc,MAAO,CACHb,QAAS,QAEbc,MAAO,CACHC,MAAO,UACPC,SAAU,QAEdC,QAAS,CACLF,MAAO,WACPC,SAAU,QAvCgB,IA4CjB,SAACxC,GACd,MAAsC0C,mBAAS,IAA/C,mBAAoBC,GAApB,WACA,EAA8BD,oBAAS,GAAvC,mBAAgBE,GAAhB,WAFwB,sDAOpB,wFACIA,GAAW,GACXC,IACKrD,IADL,UACYsD,EADZ,2BAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAEvC6D,MAAK,SAACC,GACHL,GAAW,GACXD,EAAeM,EAASC,KAE3B,IACAC,OAAM,SAACb,GACJM,GAAW,EACd,IAbT,4CAPoB,sBAGxBQ,qBAAU,YAHc,mCAIpBC,EACD,GAAE,IAwCP,OACE,+BAEQ,eAAC,IAAD,CACAqB,MAAO7E,GACL8E,MAAM,gBACNC,QAAS,CAEP,CACED,MAAO,eACPE,MAAO,QAET,CAAEF,MAAO,kBAAmBE,MAAO,kBAAmBC,WAAW,GACjE,CAAEH,MAAO,MAAOE,MAAO,SAAUC,WAAW,GAC5C,CAAEH,MAAO,MAAOE,MAAO,MAAOC,WAAW,GAIzC,CAAEH,MAAO,UAAWE,MAAO,UAAWC,WAAW,IAGjD5B,KAAM,SAAA6B,GAAK,OACX,IAAIC,SAAQ,SAACC,EAASC,GAAV,OACRrC,IAAMrD,IAAN,UAAasD,EAAb,6CAAyDiC,EAAMI,SAA/D,mBAAkFJ,EAAMK,KAAxF,wBAA4GL,EAAMxF,QAAU,CAAEwD,QAAS,CAAC,+BAA4B5D,MAC/J6D,MAAK,SAAAC,GAAQ,OAAIA,CAAJ,IACbD,MAAK,SAAAqC,GAEFJ,EAAQ,CACJ/B,KAAMmC,EAAOnC,KAAKoC,QAAQC,KAAI,SAACC,GAAD,MAAU,CACpCC,KACI,gBAAC,IAAD,CACAC,GAAK,CACDC,SAAU,mBACVC,MAAO,CAAEG,WAAYP,IAGzBb,MAAO,kCANP,cAOGa,EAAIoC,YAGf1B,gBAAiBV,EAAInB,eACrB8B,OAAOX,GAAOA,EAAIY,IAAMZ,EAAIY,IAAM,SAClCC,IAAKb,EAAIa,IACTK,QAAQ,+BACI,eAAC,IAAD,CACIhB,GAAI,CACAC,SAAU,mBACVC,MAAO,CAAEG,WAAYP,IAH7B,SAMI,gBAACmB,GAAA,EAAD,CAAaC,QAAQ,YACjB,aAAW,eACXC,MAAO,CAACC,gBAAgB,mBAAoB5E,OAAO,OAAON,MAAM,SAChEmF,KAAK,QAHT,UAKA,eAACC,GAAA,EAAD,CACAzE,MAAM,UACNwE,KAAK,QACL,aAAW,wBACX,gBAAc,OACdF,MAAO,CAACC,gBAAgB,oBALxB,SAOI,eAAC,KAAD,MAEJ,eAACE,GAAA,EAAD,CACAH,MAAO,CAACC,gBAAgB,oBADxB,SAGI,uBAAMD,MAAO,CAACrE,SAAS,OAAQD,MAAM,OAAQ0E,WAAW,UAAxD,wCAvCU,IA+C9B7B,KAAML,EAAMK,KACZ8B,WAAY7B,EAAOnC,KAAKiE,cAG/B,GAzDG,GADD,EA6DXC,QAAS,CACLC,YAAa,CACTP,gBAAiB,UACjBvE,MAAO,QAEX+E,iBAAkB,CACd1F,MAAQ,OACR2F,YAAa,SAEjBzC,WAAW,EACX0C,cAAc,EACdC,qBAAsB,OACtBC,gBAAgB,CAAC,GAAG,GAAG,KACvBvC,SAAS,GACTwC,iBAAkB,QAMrC,G,+FC3PDE,KAAWC,WAAW,CAClBC,OAAQF,KAAWtC,IAAIsC,KAAWG,aAAaD,QAAQ,SAAUxF,GAC7D,MAAO,CACH0F,eAAgB,CACZC,GAAI,GACJC,GAAI,GACJC,EAAG,IAEPC,MAAO,CACH,CAAC,EAAG9F,GACJ,CAAC,EAAGsF,KAAWtF,MAAMA,GAAO+F,UAAU,IAAK9I,IAAI,SAG1D,MAGE,IAAM+I,GAAoB,CAC7BC,MAAO,CAEHC,oBAAqB,KACrBC,gBAAiB,KACjBC,YAAY,EACZnE,KAAM,OAEVG,MAAO,CACHiE,KAAM,gEAEVC,QAAS,CACLC,YAAa,iDAEjBC,cAAe,CACXC,MAAO,CACHC,YAAa,MAGrBC,YAAa,CACTC,IAAK,CACDC,kBAAkB,EAClBC,OAAQ,UACRC,WAAY,CACRC,SAAS,EACT9C,OAAQ,gDACR+C,eAAgB,SAEpBC,cAAc,IAGtBC,OAAQ,CAAC,CACLjE,KAAM,iCACNvC,KAAM,CACF,CAAEuC,KAAM,QAAUkE,QAAQ,EAAMC,EAAG,OACnC,CAAEnE,KAAM,SAAUmE,EAAG,OACrB,CAAEnE,KAAM,SAAUmE,EAAG,OACrB,CAAEnE,KAAM,YAAQmE,EAAG,UCxDlBC,GAAoB,CAC7BrB,MAAO,CACHC,oBAAqB,KACrBC,gBAAiB,EACjBC,YAAY,GAEhBhE,MAAO,CACHiE,KAAM,6DACNkB,MAAO,SACPC,cAAe,SACfH,GAAI,KAERf,QAAS,CACLC,YAAa,iDAEjBC,cAAe,CACXC,MAAO,CACHC,YAAa,MAGrBC,YAAa,CACTC,IAAK,CAEDG,WAAY,CACRC,SAAS,EACTS,UAAW,GACXvD,OAAQ,gDACRI,MAAO,CACHI,WAAY,OACZ1E,MAAO,UAGf0H,YAAa,GACbC,SAAU,GACVC,OAAQ,CAAC,MAAO,OAChBpD,KAAM,OACN0C,cAAc,IAGtBC,OAAQ,CAAC,CACLlF,KAAM,MACNiB,KAAM,yBACN2E,UAAW,MACXlH,KAAM,CACF,CAAC,OAAQ,MACT,CAAC,SAAU,WC3BjBmH,GAAYlJ,cAAW,SAACC,GAAD,MAAY,CACvCgB,KAAM,CACJ,uBAAwB,CACpBd,OAAQF,EAAMG,QAAQ,GACtBK,MAAO,MAGbP,KAAM,CACJC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAXa,IA2Ed4I,GA5DK,SAACtK,GACHqK,KAAhB,IACA,EAAoC3H,mBAAS,IAA7C,mBACA,GADA,UACwCA,oBAAS,IAAjD,mBAGA,GAHA,UAG0BA,mBAAS,CAAE6H,WAAY,aAAjD,mBAAO3E,EAAP,KAUA,GAVA,KAGuBA,EAAf2E,WAOwBC,IAAM9H,SAAS,OAA/C,mBAAO+H,EAAP,UACaC,QAAQD,GAYrB,OACE,sBAAMlJ,QAAS,EAAGsF,MAAO,CAAE8D,QAAS,IAApC,SACE,eAAC,KAAD,UACE,eAAC,KAAD,CAAKC,GAAI,GAAT,SAEA,gBAAC,KAAD,WAEU,eAAC,KAAD,CAAMC,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAIC,GAAI,GAAIC,UAAU,OAA9C,SACA,eAAC,KAAD,UAAM,eAACC,GAAA,EAAD,UACJ,eAAC,KAAD,CAAiBC,WAAYrD,KAAYT,QAASyC,WAGpD,eAAC,KAAD,CAAMgB,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAIC,GAAI,GAAIC,UAAU,OAA9C,SACA,eAAC,KAAD,UAAM,eAACC,GAAA,EAAD,UACJ,eAAC,KAAD,CAAiBC,WAAYrD,KAAYT,QAASmB,mBAerE,EC/EKnB,GAAU,CACdoB,MAAO,CACLhE,KAAM,UAGVG,MAAO,CACHiE,KAAM,iEAGVuC,SAAU,CACNvC,KAAM,IAGVwC,OAAQ,CACJtB,MAAO,QACPC,cAAe,SACfsB,OAAQ,YAGZC,MAAO,CACHC,WAAY,CAAC,iBAAkB,6BAA8B,gBAAiB,qBAC9EC,OAAQ,CACJC,GAAI,KAIZC,MAAO,CACHC,eAAe,EACfhH,MAAO,CACHiE,KAAM,WAIdc,OAAQ,CAAC,CACLjE,KAAM,iBACNvC,KAAM,CAAC,GAAI,GAAI,GAAI,IACpB,CACCuC,KAAM,6BACNvC,KAAM,CAAC,GAAI,GAAI,GAAI,KACpB,CACCuC,KAAM,gBACNvC,KAAM,CAAC,IAAK,GAAI,GAAG,KACpB,CACDuC,KAAM,oBACNvC,KAAM,CAAC,GAAI,GAAI,GAAI,MAGrB0I,WAAY,CACRC,MAAO,CAAC,CACJC,UAAW,CACPC,SAAU,KAEdC,aAAc,CACVZ,OAAQ,CACJtB,MAAO,SACPC,cAAe,SACfsB,OAAQ,cAEZK,MAAO,CACHF,OAAQ,CACJ1B,MAAO,OACP2B,EAAG,EACH7B,GAAI,GAERjF,MAAO,CACHiE,KAAM,OAGduC,SAAU,CACNvC,KAAM,MAEVqD,QAAS,CACL1C,SAAS,QAMnB2C,GAAW,CACf1D,MAAO,CACLhE,KAAM,UAGVG,MAAO,CACHiE,KAAM,iGAGVuC,SAAU,CACNvC,KAAM,IAGVwC,OAAQ,CACJtB,MAAO,QACPC,cAAe,SACfsB,OAAQ,YAGZC,MAAO,CACHC,WAAY,CAAC,iBAAkB,6BAA8B,gBAAiB,qBAC9EC,OAAQ,CACJC,GAAI,KAIZC,MAAO,CACHC,eAAe,EACfhH,MAAO,CACHiE,KAAM,WAIdc,OAAQ,CAAC,CACLjE,KAAM,iBACNvC,KAAM,CAAC,IAAK,GAAI,GAAI,IACrB,CACCuC,KAAM,6BACNvC,KAAM,CAAC,GAAI,GAAI,GAAI,KACpB,CACCuC,KAAM,gBACNvC,KAAM,CAAC,IAAM,IAAK,IAAI,MACvB,CACDuC,KAAM,oBACNvC,KAAM,CAAC,GAAI,GAAI,IAAK,MAGtB0I,WAAY,CACRC,MAAO,CAAC,CACJC,UAAW,CACPC,SAAU,KAEdC,aAAc,CACVZ,OAAQ,CACJtB,MAAO,SACPC,cAAe,SACfsB,OAAQ,cAEZK,MAAO,CACHF,OAAQ,CACJ1B,MAAO,OACP2B,EAAG,EACH7B,GAAI,GAERjF,MAAO,CACHiE,KAAM,OAGduC,SAAU,CACNvC,KAAM,MAEVqD,QAAS,CACL1C,SAAS,QA6FV4C,GAvFA,WACb,OACE,eAAC,WAAD,UACE,uBAAKnB,UAAU,MAAf,UACC,sBAAKA,UAAU,uCAAf,SACG,sBAAKA,UAAU,mBAAf,SACE,sBAAKA,UAAU,gBAAf,SACE,uBAAKA,UAAU,gBAAf,UACE,uBAAMA,UAAU,+BAAhB,SACA,oBAAGoB,MAAM,kBAAkB,cAAY,WAEvC,uBAAKpB,UAAU,aAAf,UACE,oBAAGA,UAAU,OAAb,kCACA,qBAAIA,UAAU,OAAd,8BAMV,sBAAKA,UAAU,uCAAf,SACE,sBAAKA,UAAU,mBAAf,SACE,sBAAKA,UAAU,gBAAf,SACE,uBAAKA,UAAU,gBAAf,UACE,uBAAMA,UAAU,gCAAhB,SACA,oBAAGoB,MAAM,kBAAkB,cAAY,WAEvC,uBAAKpB,UAAU,aAAf,UACE,oBAAGA,UAAU,OAAb,4BACA,qBAAIA,UAAU,OAAd,8BAOV,sBAAKA,UAAU,uCAAf,SACE,sBAAKA,UAAU,mBAAf,SACE,sBAAKA,UAAU,iBAAf,SACE,uBAAKA,UAAU,gBAAf,UACE,uBAAMA,UAAU,8BAAhB,SACA,oBAAGoB,MAAM,iBAAiB,cAAY,WAEtC,uBAAKpB,UAAU,aAAf,UACE,oBAAGA,UAAU,OAAb,gCACA,qBAAIA,UAAU,OAAd,4BAOV,sBAAKA,UAAU,uCAAf,SACE,sBAAKA,UAAU,mBAAf,SACE,sBAAKA,UAAU,gBAAf,SACE,uBAAKA,UAAU,gBAAf,UACE,uBAAMA,UAAU,gCAAhB,SACA,oBAAGoB,MAAM,cAAc,cAAY,WAEnC,uBAAKpB,UAAU,aAAf,UACE,oBAAGA,UAAU,OAAb,8BACA,qBAAIA,UAAU,OAAd,8BAQV,eAAC,GAAD,IACA,sBAAKA,UAAU,uCAAf,SACE,eAAC,KAAD,CACEE,WAAYrD,KACZT,QAASA,OAGb,sBAAK4D,UAAU,uCAAf,SACE,eAAC,KAAD,CACEE,WAAYrD,KACZT,QAAS8E,WAOpB,E,UCpPKG,GAAW,CACfC,aAAc,MACd9J,SAAU,IA2DG+J,GAxDF,WACT,MAAsB7J,mBAAS,QAA/B,mBAAO8J,EAAP,KAAYC,EAAZ,KAGF,OACE,gBAAC,WAAD,WACE,sBAAKzB,UAAU,uBAAuBnE,MAAO,CAAChF,UAAU,MAAOG,aAAa,SAA5E,SACH,qBAAIgJ,UAAU,aAAd,SACC,qBAAIA,UAAU,yBAAd,SAAuC,8CAGrC,eAAC,IAAD,CAAMtF,GAAI,mBAAV,SACM,eAACsB,GAAA,EAAD,CACIJ,QAAQ,YACRrE,MAAM,UACNyI,UAAU,mBACV0B,UAAW,eAAC,KAAD,CAAY3F,KAAK,OAC5BF,MAAO,CAACC,gBAAgB,WAL5B,SAOI,uBAAMD,MAAO,CAAE8F,cAAe,cAA9B,6BAGR,wBAAK,wBACP,eAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,SACE,eAACC,EAAA,EAAD,CAAMlG,MAAOwF,GAAb,SACE,eAACU,EAAA,EAAKC,KAAN,UAEE,sBAAKhC,UAAU,eAAf,SACE,gBAACiC,EAAA,EAAD,CACInH,GAAG,yBACHoH,UAAWV,EACXW,SAAU,SAACC,GAAD,OAAOX,EAAOW,EAAd,EACVpC,UAAU,OAJd,UAOE,eAACqC,EAAA,EAAD,CAAKC,SAAS,OAAO3I,MAAM,gBAA3B,SACE,eAAC,GAAD,MAEF,eAAC0I,EAAA,EAAD,CAAKC,SAAS,MAAM3I,MAAM,sBAA1B,SACE,eAAC,GAAD,MAEF,eAAC0I,EAAA,EAAD,CAAKC,SAAS,gBAAgB3I,MAAM,qBAApC,SACE,eAAC,GAAD,qBAWnB,E,iSCpCiBxD,cAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAE1Ba,KAAM,CACF,QAAS,CACLd,OAAQF,EAAMG,QAAQ,KAG9Bc,MAAO,CACHb,QAAS,QAEbc,MAAO,CACHC,MAAO,UACPC,SAAU,UAlCW,ICL7B9C,KAAOC,OAAO,MACdC,OAwUe2N,qBAtUA,SAAAnM,GAAK,MAAK,CACvBgB,KAAM,CACJR,MAAO,QAET4L,QAAS,CACPhL,SAAUpB,EAAMqM,WAAWC,QAAQ,KAErCC,iBAAkB,CAChBnL,SAAUpB,EAAMqM,WAAWC,QAAQ,IACnCnL,MAAOnB,EAAMwM,QAAQhF,KAAKiF,WAE5BC,KAAM,CACJ/D,cAAe,SACf7H,OAAQ,GACRN,MAAO,IAETmM,QAAS,CACPrM,WAAY,UAEdsM,OAAQ,CACNC,UAAW,UAEbC,OAAQ,CACNC,WAAW,aAAD,OAAe/M,EAAMwM,QAAQQ,SACvCzD,QAAQ,GAAD,OAAKvJ,EAAMG,QAAQ8M,KAAnB,cAAkD,EAArBjN,EAAMG,QAAQ8M,KAA3C,OAETC,KAAM,CACJ/L,MAAOnB,EAAMwM,QAAQW,QAAQC,KAC7BC,eAAgB,OAChB,UAAW,CACTA,eAAgB,cA9BF,GAsULlB,EAnSf,SAAqBvN,GACnB,IAAQ0O,EAAY1O,EAAZ0O,QAEFC,EAAc3O,EAAM+F,WAAa/F,EAAM+F,WAAa,CAAC,EAE3D,GADmB/F,EAAM4O,aAAc5O,EAAM4O,YACTlM,mBAASiM,IAA7C,mBAAO5I,EAAP,KACA,GADA,KAC2DrD,mBAAS1C,EAAM+F,WAAW8I,kBAArF,mBACA,GADA,UAC8CnM,oBAAS,IAAvD,mBAAOmM,EAAP,KAAwBC,EAAxB,KACA,EAA8BpM,mBAAS,IAAvC,mBAAgBqM,GAAhB,WACA,EAA0BrM,oBAAS,GAAnC,mBAEA,GAFA,UAE4CA,oBAAS,IAArD,mBAEA,GAFA,UAEkCA,sBAAlC,mBAAkBsM,GAAlB,WACA,EAAgCtM,oBAAS,GAAzC,6BAEAU,qBAAU,YAhBgB,mCAiBxB6L,GACAC,GACD,GAAE,CAAClP,EAAM+F,aAGV,IAAMmJ,EAAgB,WAClBrM,IACGrD,IADH,UACUsD,EADV,sCAEM,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACH6L,EAAmB7L,EAASC,OACT,IAAhBD,EAASC,MACVL,IACKrD,IADL,UACYsD,EADZ,sBAEQ,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACH8L,EAAW9L,EAASC,KAEvB,IACAC,OAAM,SAACb,GACJ6M,QAAQC,IAAI9M,EACf,GAGV,IACAa,OAAM,SAACb,GAEP,GAEN,EAhDyB,sDAkDxB,wFACIO,IACKrD,IADL,UACYsD,EADZ,sCACiDiD,EAAWD,IACxD,CAAE/C,QAAS,CAAC,+BAA4B5D,MAEvC6D,MAAK,SAACC,GAEL+L,EAAa/L,EAASC,KACvB,IACAC,OAAM,SAACb,GACP,IAVT,4CAlDwB,sBAsI1B,OACE,sBAAK0I,UAAW0D,EAAQtM,KAAxB,SACG,eAACiN,GAAA,EAAD,UAES,eAACC,GAAA,EAAD,UAEA,eAAC,KAAD,UAEI,eAAC,KAAD,CAAK1E,GAAI,GAAT,SACA,gBAAC,KAAD,CAAKI,UAAW,OAAhB,UACA,gBAAC,KAAD,CAAKJ,GAAI,GAAII,UAAW0D,EAAQa,MAAhC,UACI,oBAAG1I,MAAO,CAACrE,SAAU,QAArB,SACCuD,EAAW6B,WAEZ,eAAC,IAAD,CAAMlC,GAAI,IAAV,SACA,eAACsB,GAAA,EAAD,CACIJ,QAAQ,YACRrE,MAAM,UACNyI,UAAU,4BAEV0B,UAAW,eAAC,KAAD,IACX7F,MAAO,CAACC,gBAAgB,mBAAoBvE,MAAM,OAAQL,OAAO,QANrE,SASI,uBAAM2E,MAAO,CAAE8F,cAAe,cAA9B,yBAIR,eAAC,KAAD,CAAK/B,GAAI,EAAGI,UAAW0D,EAAQa,MAA/B,SACA,kCACK,IADL,gBAEiB,6BAAIxJ,EAAW1B,sBAIhC,eAAC,KAAD,CAAKuG,GAAI,EAAGI,UAAW0D,EAAQa,MAA/B,SACA,4BAIA,eAAC,KAAD,CAAK3E,GAAI,EAAGI,UAAW0D,EAAQa,MAA/B,SACA,kCACK,IADL,SAEU,6BAAIxJ,EAAWM,WAGzB,eAAC,KAAD,CAAKuE,GAAI,EAAT,SACA,kCACK,IADL,WAEa,IACT,6BAAI7E,EAAWK,KAAwB,OAAjBL,EAAWK,IAAcL,EAAWK,IAAM,gBAGpE,eAAC,KAAD,CAAKwE,GAAI,EAAGI,UAAW0D,EAAQa,MAA/B,SACA,gCACK,QAIL,eAAC,KAAD,CAAK3E,GAAI,EAAGI,UAAW0D,EAAQa,MAA/B,SACA,kCACK,IADL,aAEc,+BAzEX,SAACnL,GAClB,IACMoL,EADcpL,EACQoL,QAAQlL,MAAK,SAAAC,GAAG,OAAIA,EAAIkL,IAAR,IAC5C,OAAOD,EAAUA,EAAQC,KAAO,EACjC,CAqEiCC,CAAW3J,EAAWyJ,SAA1B,YAId,eAAC,KAAD,CAAK5E,GAAI,GAAT,UACmB,IAAlBiE,EACK,qCACI,+BACI,eAACc,GAAA,EAAD,CAAY/I,QAAQ,UAApB,SACI,gBAACgJ,GAAA,EAAD,CAAOrN,OAA0C,IAAnCvC,EAAM+F,WAAW8I,gBAAwB,QAAU,MAAO9H,KAAM,OAA9E,6BAEI,eAAC6I,GAAA,EAAMC,OAAP,WAAkD,IAAnC7P,EAAM+F,WAAW8I,gBAAwB,WAAa,yBASrF,6CAqEzB,I,WCvVKxE,GAAYlJ,cAAW,SAACC,GAAD,MAAY,CACrC0O,YAAa,CACTnF,QAASvJ,EAAMG,QAAQ,IAFF,IA2FdwO,OArFf,SAAiB/P,GACGqK,KAAhB,IACIlE,EAAO,GACLwI,EAAc3O,EAAM+F,WAAa/F,EAAM+F,WAAa,CAAC,EAE3D,EAAoCrD,mBAASiM,GAA7C,mBAAO5I,EAAP,KACA,GADA,KACoCrD,sBAApC,mBAAmBsN,GAAnB,WAGA5M,qBAAU,WACN6M,IACA9J,EAAQnG,EAAM+F,YAAc/F,EAAM+F,WAAWK,IAAMpG,EAAM+F,WAAWK,IAAM,KAC1E4J,EAAuB,WAAT7J,EACjB,GAAE,CAACnG,EAAM+F,aAET,IAAMkK,EAAa,WAChBpN,IACKrD,IADL,UACYsD,EADZ,8BACyC9C,EAAM+F,WAAWD,IAClD,CAAE/C,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACH,IAAMiN,EAAcjN,EAASC,KACvBiN,EAAQD,EAAYE,QAAO,SAAC3E,GAAD,MAAe,kBAATA,EAAEjH,IAAR,IAC3B6L,EAAYH,EAAYE,QAAO,SAAC3E,GAAD,MAAe,uBAATA,EAAEjH,IAAR,IAClC2L,EAAOG,OAAS,IACF,EAEdD,EAAWC,OAAS,IACK,CAG/B,IACAnN,OAAM,SAACb,GAEP,GAEJ,EAkBL,OACK,+BACG,gBAACiO,GAAA,EAAD,CAAMxJ,KAAK,OAAOxE,MAAO,QAASiO,UAAQ,EAA1C,UACI,eAACD,GAAA,EAAKE,KAAN,CAAWC,QAAS,WAV5B1Q,EAAM2Q,iBAAN,2BAA2B3Q,EAAM4Q,eAAjC,IAAgDC,MAAM,mBAU1B,EAApB,mBACwB,OAAvB9K,EAAW+K,WAA2C,aAAvB/K,EAAW+K,WAA2B,sCACrC,IAA5B/K,EAAWgL,eACR,qCACA,eAACR,GAAA,EAAKE,KAAN,CAAWC,QAAS,WAvBpC1Q,EAAM2Q,iBAAN,2BAA2B3Q,EAAM4Q,eAAjC,IAAgDC,MAAM,YAuBlB,EAApB,gCAMI,uCACA,eAACN,GAAA,EAAKE,KAAN,CAAWC,QAAS,WAxBxC1Q,EAAM2Q,iBAAN,2BAA2B3Q,EAAM4Q,eAAjC,IAAgDC,MAAM,iBAwBd,EAApB,6BACA,eAACN,GAAA,EAAKE,KAAN,CAAWC,QAAS,WA5BxC1Q,EAAM2Q,iBAAN,2BAA2B3Q,EAAM4Q,eAAjC,IAAgDC,MAAM,oBA4Bd,EAApB,sCAMY,OAAvB9K,EAAW+K,WAA2C,aAAvB/K,EAAW+K,WAA2B,qCAClE,eAACP,GAAA,EAAKE,KAAN,CAAWC,QAAS,WA1BhC1Q,EAAM2Q,iBAAN,2BAA2B3Q,EAAM4Q,eAAjC,IAAgDC,MAAM,cA0BtB,EAApB,6BAKnB,E,sBC/EKxG,GAAYlJ,cAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,KAAM,CACJC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE3BO,OAAQ,CACNR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAE9BQ,WAAY,CACVC,aAAc,IAEhBC,OAAQ,CACNC,OAAQ,GACRN,MAAO,KAETO,OAAQ,CACNb,OAAQF,EAAMG,QAAQ,IAGxBa,KAAM,CACJ,QAAS,CACPd,OAAQF,EAAMG,QAAQ,KAG1Bc,MAAO,CACLb,QAAS,QAEXc,MAAO,CACLC,MAAO,UACPC,SAAU,QAEZC,QAAS,CACPF,MAAO,WACPC,SAAU,QAvCoB,IAo6BnBwO,GAz3BK,SAAChR,GACnB,IAAI+F,EAAa/F,EAAM+F,WAAa/F,EAAM+F,WAAa,CAAC,EAExD,EAA4BrD,mBAAS,CAAC,GAAtC,mBAAOuO,EAAP,KAAeC,EAAf,KAEIC,EAAI,eAAQF,GACVvC,EAAUrE,KAChB,EAA4B3H,oBAAS,GAArC,mBAAO0O,EAAP,KAAeC,EAAf,KACA,EAA0C3O,mBAAS,IAAnD,mBACA,GADA,UACwCA,mBAAS,KAAjD,mBAAO4O,EAAP,KAAqBC,EAArB,KACA,EAAkD7O,mBAAS,CAAC,GAA5D,mBAA0B8O,GAA1B,WACA,EAA0D9O,oBAAS,GAAnE,mBAA8B+O,GAA9B,WACA,EAAsC/O,mBAAS,IAA/C,mBAAOgP,EAAP,KAAoBC,EAApB,KACA,EAAwCjP,mBAAS,IAAjD,mBAAOkP,EAAP,KAAqBC,EAArB,KACA,EAAoBnP,mBAAS,IAA7B,mBAAOoP,EAAP,KAAWC,EAAX,KACA,EAAoCrP,mBAAS,IAA7C,mBAAOsP,EAAP,KAAmBC,EAAnB,KAEA,EAAwDvP,mBAChD,CACEwP,WAAY,GACZC,UAAW,GACXjQ,OAAQ,GACRkQ,SAAU,GACVC,MAAM,GACNC,YAAY,GACZC,gBAAgB,KAR1B,mBAUA,GAVA,UAUkC7P,mBAAS,CACzC8P,MAAOzM,EAAWyM,MAClBC,gBAAiB,GACjBC,YAAa,GACbC,sBAAuB,GACvBC,IAAK,GACLC,SAAU,GACVC,UAAW,GACXC,YAAa,GACbC,aAAc,GACdC,SAAU,GACVC,cAAe,GACfpN,GAAI,GACJqN,gBAAiB,GACjBC,oBAAqB,GACrBC,WAAYtN,EAAWuN,YACvBC,kBAAmB,GACnBC,WAAY,GACZ9B,YAAa,GACb+B,gBAAiB,MAnBnB,mBAAOC,EAAP,KAAkBC,EAAlB,KAsBA,EAAiCjR,mBAAS,CACxCwP,WAAY,GACZC,UAAW,GACXyB,cAAe,GACfC,WAAY,EACZ3R,OAAQ,GACR4R,SAAU9T,EAAM+F,WAAWD,GAC3BiO,cAAe,EACf3B,SAAU,GACVC,MAAM,GACNC,YAAY,GACZC,gBAAgB,KAXlB,oBAAOyB,GAAP,YAaA5Q,qBAAU,WACR6Q,KACAC,KACAC,KACAC,KACAC,IACD,GAAE,IAGD,IAAMJ,GAAa,WACnBpR,IACGrD,IADH,UACUsD,EADV,qCAC8C9C,EAAM+F,WAAWD,IAC3D,CAAE/C,QAAS,CAAE,cAAgB,UAAhB,OAA2B5D,MAEzC6D,MAAK,SAACC,GAEL,IAAMqR,EAAiBrR,EAASC,KAAKD,EAASC,KAAKoN,OAAS,GACxDgE,EAAeV,gBAAkBpN,KAAO,IAAI/C,MAAQgD,OAAO,iBAAkB,IAC/E+K,EAAqB8C,GACrB7C,GAAyB,GAE5B,IACAtO,OAAM,SAACb,GAEP,GACF,EACK4R,GAAqB,WACzBrR,IACGrD,IADH,UACUsD,EADV,8CAEI,CAAEC,QAAS,CAAE,cAAgB,UAAhB,OAA2B5D,MAEzC6D,MAAK,SAACC,GAEL0O,EAAe1O,EAASC,KACzB,IACAC,OAAM,SAACb,GAEP,GAEJ,EACK+R,GAAoB,WACxBxR,IACGrD,IADH,UACUsD,EADV,6CAEI,CAAEC,QAAS,CAAE,cAAgB,UAAhB,OAA2B5D,MAEzC6D,MAAK,SAACC,GAELgP,EAAchP,EAASC,KACxB,IACAC,OAAM,SAACb,GAEP,GAEJ,EAEK8R,GAAyB,WAC7BvR,IACGrD,IADH,UACUsD,EADV,kDAEI,CAAEC,QAAS,CAAE,cAAgB,UAAhB,OAA2B5D,MAEzC6D,MAAK,SAACC,GAEL8O,EAAM9O,EAASC,KAChB,IACAC,OAAM,SAACb,GAEP,GAEJ,EACK6R,GAAmB,WACvBtR,IACGrD,IADH,UACUsD,EADV,4CAEI,CAAEC,QAAS,CAAE,cAAgB,UAAhB,OAA2B5D,MAEzC6D,MAAK,SAACC,GAEL4O,EAAgB5O,EAASC,KAC1B,IACAC,OAAM,SAACb,GAEP,GAEJ,EAEGiS,GAAoB,SAAAC,GACxBtD,EAAU,2BAAIC,GAAL,mBAAYqD,EAAEC,OAAOhP,KAAM,MAChB,aAAjB+O,EAAEC,OAAOhP,MAyFhB,SAAuBiP,GACrB,IAAM9B,EAAkB,aAAZ8B,EAAyB,qBAAuB,sBAC5D7R,IACIrD,IADJ,UACWsD,EADX,mCAC6C8P,GACtC,CAAE7P,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEHsO,EAAgBtO,EAASC,KAC5B,IACAC,OAAM,SAACb,GAEP,GAEL,CAtGKqS,CAAaH,EAAEC,OAAOhQ,OAGxBkP,EAAa,2BAAKD,GAAN,mBAAkBc,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,QAExD,EAgJD,OACE,iCACA,sBAAKuG,UAAU,MAAf,SAEE,sBAAKA,UAAU,YAAf,SACE,6DAIF,eAAC4J,GAAA,EAAD,UAEE,eAACA,GAAA,EAAKC,OAAN,UACE,gBAACC,GAAA,EAAD,WACE,eAAClF,GAAA,EAAD,CAAOmF,GAAG,IAAIxS,MAAM,OAAQsE,MAAO,CAACjF,MAAM,OAAQM,OAAO,QAAS8S,QAAM,EAAxE,SACE,qBAAInO,MAAO,CAACtE,MAAM,QAAlB,4BAEF,wBAAM,wBACN,sBAAKyI,UAAU,MAAf,SACE,sBAAKA,UAAU,2BAAf,SACE,gBAACiK,GAAA,EAAD,WACE,eAAC,KAAD,8BACA,eAACC,GAAA,EAAD,CACE1Q,KAAK,OACLiB,KAAK,cACLK,GAAG,cACHrB,MAAOiP,EAAUhB,YACjB7L,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,WAClD8I,SAAUb,GAEVc,IAAK7O,KAAO,IAAI/C,MAAQgD,OAAO,cAE/B6O,UAAQ,IAEY,KAAtBrE,EAAOyB,YACH,uBAAM1H,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOyB,cACxC,UA6OV,uBAAK1H,UAAU,MAAf,UAEE,sBAAKA,UAAU,iBAAf,SACE,gBAACiK,GAAA,EAAD,WACE,eAAC,KAAD,8BACA,gBAACC,GAAA,EAAD,CACE1Q,KAAK,SACLiB,KAAK,cACLK,GAAG,cACHrB,MAAOiP,EAAUX,YACjBqC,SAAUb,GACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,WAClDgJ,UAAQ,EAPV,UASE,yBAAQ7Q,MAAM,SAAd,qBAECuN,EAAWzM,KAAI,SAACd,GAAD,OACd,yBAAuBA,MAAOA,EAAM8Q,KAApC,SACG9Q,EAAMjD,SADIiD,EAAMqB,GADL,OAMK,KAAtBmL,EAAO8B,YACJ,uBAAM/H,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO8B,cACxC,QAGR,sBAAK/H,UAAU,iBAAf,SACE,gBAACiK,GAAA,EAAD,WACE,eAAC,KAAD,+BACA,gBAACC,GAAA,EAAD,CACE1Q,KAAK,SACLiB,KAAK,eACLK,GAAG,eACHrB,MAAOiP,EAAUV,aACjBoC,SAAUb,GACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,WAClDgJ,UAAQ,EAPV,UASE,yBAAQ7Q,MAAM,GAAd,qBACA,yBAAQA,MAAM,MAAd,kBACA,yBAAQA,MAAM,KAAd,oBAGsB,KAAvBwM,EAAO+B,aACJ,uBAAMhI,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO+B,eACxC,QAGR,sBAAKhI,UAAU,iBAAf,SACE,gBAACiK,GAAA,EAAD,WACE,eAAC,KAAD,0BACA,gBAACC,GAAA,EAAD,CACE1Q,KAAK,SACLiB,KAAK,WACLK,GAAG,WACHrB,MAAOiP,EAAUT,SACjBmC,SAAUb,GACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,WAClDgJ,UAAQ,EAPV,UASE,yBAAQ7Q,MAAM,SAAd,qBACCqN,EAAGvM,KAAI,SAACd,GAAD,OACN,yBAAuBA,MAAOA,EAAMqB,GAApC,SACGrB,EAAMjD,SADIiD,EAAMqB,GADb,OAMU,KAAnBmL,EAAOgC,SACJ,uBAAMjI,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOgC,WACxC,WAIV,wBACA,eAACrD,GAAA,EAAD,CAAOmF,GAAG,IAAIxS,MAAM,OAAOsE,MAAO,CAACjF,MAAM,OAAQM,OAAO,QAAS8S,QAAM,EAAvE,SACA,sBAAInO,MAAO,CAACtE,MAAM,QAAlB,UAA2B,wBAAOiC,KAAK,QAAQiB,KAAK,kBAAkBhB,MAAM,gBAAgB2Q,SAAUb,GAAmBiB,QAAqC,kBAA5B9B,EAAUD,kBAA5I,wBAAqN,KAArN,IAA4N,KAA5N,IAAkO,wBAAOjP,KAAK,QAAQiB,KAAK,kBAAkBhB,MAAM,qBAAqB2Q,SAAUb,GAAmBiB,QAAqC,uBAA5B9B,EAAUD,kBAAxV,kCAEA,wBAAM,wBAEN,uBAAKzI,UAAU,MAAf,UAEE,sBAAKA,UAAU,iBAAf,SACA,gBAACiK,GAAA,EAAD,WACE,eAAC,KAAD,0CACF,eAACC,GAAA,EAAD,CACE1Q,KAAK,OACLiB,KAAK,kBACLK,GAAG,kBACHrB,MAAOiP,EAAUjB,gBACjB2C,SAAUb,GACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,WAElD+I,IAAK7O,KAAO,IAAI/C,MAAQgD,OAAO,gBAEN,KAA1BwK,EAAOwB,gBACA,uBAAMzH,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOwB,kBACxC,QAGR,sBAAKzH,UAAU,iBAAf,SACA,gBAACiK,GAAA,EAAD,WACE,eAAC,KAAD,mCACA,eAACC,GAAA,EAAD,CACE1Q,KAAK,SACLiB,KAAK,gBACLK,GAAG,gBACHrB,MAAOiP,EAAUR,cACjBkC,SAAUb,GACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,WAClDmJ,IAAKzB,GAAMJ,gBAEU,KAAxB3C,EAAOiC,cACJ,uBAAMlI,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOiC,gBACxC,QAGJ,sBAAKlI,UAAU,iBAAf,SACE,gBAACiK,GAAA,EAAD,WACE,eAAC,KAAD,uBACA,eAACC,GAAA,EAAD,CACE1Q,KAAK,OACLiB,KAAK,oBACLK,GAAG,oBACHrB,MAAOuP,GAAM0B,gBACbN,SAAUb,GACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,aAEzB,KAA5B2E,EAAOsC,kBACJ,uBAAMvI,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOsC,oBACxC,WAIR,wBAEA,wBACA,eAAC3D,GAAA,EAAD,CAAOmF,GAAG,IAAIxS,MAAM,QAAQsE,MAAO,CAACjF,MAAM,OAAQM,OAAO,QAAS8S,QAAM,EAAxE,SACA,qBAAInO,MAAO,CAACtE,MAAM,QAAlB,oCAEA,wBAAM,wBAEN,uBAAKyI,UAAU,MAAf,UACA,sBAAKA,UAAU,iBAAf,SACI,gBAACiK,GAAA,EAAD,WACE,eAAC,KAAD,oBACA,gBAACC,GAAA,EAAD,CACE1Q,KAAK,SACLiB,KAAK,MACLK,GAAG,MACHrB,MAAOiP,EAAUd,IACjBwC,SAAUb,GACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,WAClDgJ,UAAQ,EAPV,UASE,yBAAQ7Q,MAAM,GAAd,qBACA,yBAAQA,MAAM,MAAd,kBACA,yBAAQA,MAAM,KAAd,oBAGa,KAAdwM,EAAO2B,IACJ,uBAAM5H,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO2B,MACxC,QAGS,QAAhBc,EAAUd,KAAgB,uCAC3B,sBAAK5H,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,wBACA,gBAACC,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,WACLK,GAAG,WACHrB,MAAOiP,EAAUb,SACjBuC,SAAUb,GACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,WANtD,UAQI,yBAAQ7H,MAAM,GAAd,qBACA,yBAAQA,MAAM,WAAd,uBACA,yBAAQA,MAAM,YAAd,gCAMZ,sBAAKuG,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,6BACA,gBAACC,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,YACLK,GAAG,YACHrB,MAAOiP,EAAUZ,UACjBsC,SAAUb,GACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,WANtD,UAQI,yBAAQ7H,MAAM,GAAd,qBACC6M,EAAa/L,KAAI,SAACd,GAAD,OACd,yBAAyBA,MAAOA,EAAM8Q,KAAtC,SACK9Q,EAAMjD,SADEiD,EAAM8Q,KADL,eAW9B,sBAAKvK,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,iCACA,gBAACC,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,kBACLK,GAAG,kBACHrB,MAAOiP,EAAUP,gBACjBiC,SAAUb,GACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,WANtD,UAQI,yBAAQ7H,MAAM,GAAd,qBACCmN,EAAarM,KAAI,SAACd,GAAD,OACd,yBAAyBA,MAAOA,EAAM8Q,KAAtC,SACK9Q,EAAMjD,SADEiD,EAAM8Q,KADL,YAU9B,sBAAKvK,UAAU,iBAAf,SACA,gBAACiK,GAAA,EAAD,WACE,eAAC,KAAD,gCACA,eAACC,GAAA,EAAD,CACE1Q,KAAK,OACLiB,KAAK,wBACLK,GAAG,wBACHrB,MAAOuP,GAAMrB,sBACbyC,SAAUb,GACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,WAElD+I,IAAK7O,KAAO,IAAI/C,MAAQgD,OAAO,gBAEA,KAAhCwK,EAAO0B,sBACJ,uBAAM3H,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO0B,wBACxC,QAIN,sBAAK3H,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,oCACA,gBAACC,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,cACLK,GAAG,cACHrB,MAAOiP,EAAUhC,YACjB0D,SAAUb,GACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,WANtD,UAQI,yBAAQ7H,MAAM,GAAd,qBACCiN,EAAYnM,KAAI,SAACd,GAAD,OACb,yBAAyBA,MAAOA,EAAM8Q,KAAtC,SACK9Q,EAAMjD,SADEiD,EAAM8Q,KADN,OAOE,KAAtBtE,EAAOS,YACJ,uBAAM1G,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOS,cACxC,QAGa,oCAAxBgC,EAAUhC,aACX,sBAAK1G,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,oCACA,eAACC,GAAA,EAAD,CACA1Q,KAAK,OACLiB,KAAK,aACLK,GAAG,aACHrB,MAAOiP,EAAUF,WACjB4B,SAAUb,GACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,aAGhC,KAArB2E,EAAOuC,WACA,uBAAMxI,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOuC,aACxC,WAMd,wBACA,eAAC,KAAD,CACEhP,KAAK,SACLoC,QAAQ,YACRrE,MAAM,UACNyI,UAAW0D,EAAQvM,OACnBwT,SAAUvE,EACV1E,UAAW,eAAC,KAAD,IACX7F,MAAO,CAACC,gBAAgB,WACxB4J,QA3lBS,SAAC8D,GACpBA,EAAEoB,iBAjBFzE,EAAKO,YAAcgC,EAAUhC,YAAc,GAAK,yBAChDP,EAAKuB,YAAcgB,EAAUhB,YAAc,GAAK,yBAChDvB,EAAKyB,IAAMc,EAAUd,IAAM,GAAK,yBAChCzB,EAAK4B,YAAcW,EAAUX,YAAc,GAAK,yBAChD5B,EAAK6B,aAAeU,EAAUV,aAAe,GAAK,yBAClD7B,EAAK8B,SAAWS,EAAUT,SAAW,GAAK,yBAC1C9B,EAAKwB,sBAAwBe,EAAUf,sBAAwB,GAAK,yBACpExB,EAAKgC,gBAAkBO,EAAUP,gBAAkB,GAAK,yBACxDjC,EAAU,eACHC,IAEA0E,OAAOC,OAAO3E,GAAM4E,OAAM,SAAAtK,GAAC,MAAS,IAALA,CAAJ,MAQlC4F,GAAU,GACVxO,IAAMmT,KAAN,UAAclT,EAAd,yBAA8C4Q,EAC5C,CAAE3Q,QAAS,CAAE,cAAgB,UAAhB,OAA2B5D,MAGvC6D,MAAK,SAAAC,GACJoO,GAAU,GACV4E,IAAMxT,QAAQ,+BAAgC,CAACyT,SAAUD,IAAME,SAASC,gBACxEpW,EAAM2Q,iBAAN,2BAA2B3Q,EAAM4Q,eAAjC,IAAgDC,MAAM,mBACvD,IACA1N,OAAM,SAAAb,GAEL,GADA+O,GAAU,GACP/O,EAAMW,UAAYX,EAAMW,SAASC,KAAK,CACvC,IAAImT,EAAe/T,EAAMW,SAASC,KAAKoT,UAAmD,KAAvChU,EAAMW,SAASC,KAAKoT,SAASC,QAAejU,EAAMW,SAASC,KAAKoT,SAASC,QAAW,yCACvIN,IAAM3T,MAAM+T,EAAc,CAACH,SAAUD,IAAME,SAASC,eACrD,MAECH,IAAM3T,MAAM,4CAA6C,CAAC4T,SAAUD,IAAME,SAASC,eAGtF,IAEJ,EA0jBS,SAUIhF,EAGA,uBAAMvK,MAAO,CAAE8F,cAAe,cAA9B,uBAFA,uBAAM9F,MAAO,CAAE8F,cAAe,cAA9B,6BAWf,E,sECp6BiBxL,cAAW,SAAAC,GAAK,MAAK,CACrCkB,MAAO,CACLC,MAAO,UACPC,SAAU,QAEZC,QAAS,CACPF,MAAO,WACPC,SAAU,QAPoB,ICHhBrB,cAAW,SAAAC,GAAK,MAAK,CACrCkB,MAAO,CACLC,MAAO,UACPC,SAAU,QAEZC,QAAS,CACPF,MAAO,WACPC,SAAU,QAPoB,IAuJnBgU,I,WC5JTnK,IC0BYlL,cAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,KAAM,CACJC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE3BO,OAAQ,CACNR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAE9BQ,WAAY,CACVC,aAAc,IAEhBC,OAAQ,CACNC,OAAQ,GACRN,MAAO,KAETO,OAAQ,CACNb,OAAQF,EAAMG,QAAQ,IAGxBa,KAAM,CACJ,QAAS,CACPd,OAAQF,EAAMG,QAAQ,KAG1Bc,MAAO,CACLb,QAAS,QAEXc,MAAO,CACLC,MAAO,UACPC,SAAU,QAEZC,QAAS,CACPF,MAAO,WACPC,SAAU,QAvCoB,ID1BjB,CACf8J,aAAc,MACd9J,SAAU,KA4CGiU,GAzCS,SAACzW,GACrB,MAAsB0C,mBAAS,QAA/B,mBAAO8J,EAAP,KAAYC,EAAZ,KACM1G,EAAa/F,EAAM+F,WAO3B,OALE3C,qBAAY,WACVqJ,EAAOzM,EAAM4Q,cAAc8F,UAC5B,GAAE,CAAC1W,EAAM4Q,cAAc9K,KAIxB,eAAC,WAAD,UACE,eAAC8G,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,SACE,eAACC,EAAA,EAAD,CAAMlG,MAAOwF,GAAb,SACE,eAACU,EAAA,EAAKC,KAAN,UAEE,sBAAKhC,UAAU,eAAf,SACE,gBAACiC,EAAA,EAAD,CACInH,GAAG,yBACHoH,UAAWV,EACXW,SAAU,SAACC,GAAD,OAAOX,EAAOW,EAAd,EACVpC,UAAU,OAJd,UAOE,eAACqC,EAAA,EAAD,CAAKC,SAAS,OAAO3I,MAAM,0BAA3B,SACE,eAAC,GAAD,CAAkBoB,WAAYA,EAAY4K,iBAAkB3Q,EAAM2Q,qBAEpE,eAACtD,EAAA,EAAD,CAAKC,SAAS,UAAU3I,MAAM,yBAA9B,SACC,eAAC,GAAD,CAAkBoB,WAAYA,EAAY4K,iBAAkB3Q,EAAM2Q,mCAWpF,E,yCEjCKtG,GAAYlJ,cAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAG1Ba,KAAM,CACFuU,SAAU,EACV,gBAAgB,CACZpU,MAAM,OACN0E,WAAW,QAEf,kBAAkB,CACdqF,aAAa,UACbpK,OAAO,QAEX,6BAA8B,CAC1BoK,aAAc,+CAElB,4BAA6B,CACzB9K,QAAS,qBAEb,WAAW,CACP,qBAAsB,sBAE1B,MAAM,CACFe,MAAM,OAEV,UAAU,CACNC,SAAS,OACTD,MAAM,UACN0E,WAAW,SAGnB5E,MAAO,CACHb,QAAS,QAEbc,MAAO,CACHC,MAAO,UACPC,SAAU,QAEdC,QAAS,CACLF,MAAO,WACPC,SAAU,QA9DgB,IAqYnBoU,GAnUA,SAAC5W,GACZ,IAAM+F,EAAa/F,EAAM+F,WAGnB2I,GADQmI,cACExM,MAChB,EAAwC3H,mBAAS,IAAjD,mBAAOoU,EAAP,KAAqBC,EAArB,KACA,EAAgCrU,mBAAS,IAAzC,mBAAOsU,EAAP,KAAiBC,EAAjB,KACA,EAA0DvU,mBAAS,IAAnE,mBAAOwU,EAAP,KAA8BC,EAA9B,KACA,EAA4BzU,oBAAS,GAArC,mBAAO0O,EAAP,KAAeC,EAAf,KACA,EAA4B3O,mBAAS,CAAC,GAAtC,mBAAOuO,EAAP,KAAeC,EAAf,KAEA,EAA8BxO,mBAAS,CAC/B8P,MAAOzM,EAAWyM,MAClB4E,oBAAoB,GACpBN,aAAc,GACdO,GAAIrX,EAAM+F,WAAWuR,QACrBC,QAASvX,EAAM+F,WAAWwR,QAC1BC,aAAc,GACdN,sBAAuB,GACvBpR,GAAI,GACJkR,SAAS,KATjB,mBAAOS,EAAP,KAAeC,EAAf,KAWAtU,qBAAU,WACNiR,IACAsD,IACAC,GACH,GAAE,IACH,IAAMvD,EAAmB,WACrBxR,IACCrD,IADD,UACQsD,EADR,6CAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACH8T,EAAgB9T,EAASC,KAC5B,IACAC,OAAM,SAACb,GAEP,GACJ,EACKqV,EAA2B,WAC7B9U,IACCrD,IADD,UACQsD,EADR,qDAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACHkU,EAAyBlU,EAASC,KACrC,IACAC,OAAM,SAACb,GAEP,GACJ,EACKsV,EAAW,WACb/U,IACCrD,IADD,UACQsD,EADR,qCAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACHgU,EAAYhU,EAASC,KACxB,IACAC,OAAM,SAACb,GAEP,GACJ,EACKuV,EAAiC,SAAArD,GACnCkD,EAAY,2BAAMD,GAAN,mBAAgBjD,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,QACxD,EA2CH,OACI,+BAEE,eAAC,KAAD,CAAMuG,UAAW0D,EAAQtM,KAAzB,SACI,eAAC6I,GAAA,EAAD,UACA,kCACI,uBAAKD,UAAU,MAAf,UACA,mDACA,sBAAKA,UAAU,2BAAf,SACY,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,uBACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,QACLK,GAAG,QACHsP,SAAUyC,EACVpT,MAAOsB,EAAWyM,MAClBmD,UAAQ,MAIC,KAAhB1E,EAAOuB,MACJ,uBAAMxH,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOuB,QAC5C,QAGR,sBAAKxH,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,mCACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,sBACLK,GAAG,sBACHsP,SAAUyC,EACVpT,MAAOgT,EAAOL,oBACd/B,IAAM7O,KAAO,IAAI/C,MAAQgD,OAAO,kBAIT,KAA9BwK,EAAOmG,oBACJ,uBAAMpM,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOmG,sBACxC,QAGZ,sBAAKpM,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,+BACA,eAAC6C,GAAA,EAAD,UACI,gBAAC5C,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,eACLK,GAAG,eACHsP,SAAUyC,EACVpT,MAAOgT,EAAOX,aALlB,UAOI,yBAAQrS,MAAM,GAAd,oBACCqS,EAAavR,KAAI,SAACd,EAAOsT,GAAR,OACd,yBAAoBtT,MAAOA,EAAM8Q,KAAjC,SACK9Q,EAAMjD,SADEuW,EADC,SAQF,KAAvB9G,EAAO6F,aACA,uBAAM9L,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO6F,eAC5C,QAGR,sBAAK9L,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,mBACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,KACLK,GAAG,KACHsP,SAAUyC,EACVpT,MAAOgT,EAAOJ,GACd1B,UAAQ,MAIF,KAAb1E,EAAOoG,GACJ,uBAAMrM,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOoG,KACxC,QAGZ,sBAAKrM,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,wBACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,UACLK,GAAG,UACHsP,SAAUyC,EACVpT,MAAOgT,EAAOF,QACd5B,UAAQ,MAIG,KAAlB1E,EAAOsG,QACJ,uBAAMvM,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOsG,UACxC,QAGZ,sBAAKvM,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,+BACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,eACLK,GAAG,eACHsP,SAAUyC,EACVpT,MAAOgT,EAAOD,aACdnC,IAAM7O,KAAO,IAAI/C,MAAQgD,OAAO,kBAIhB,KAAvBwK,EAAOuG,aACJ,uBAAMxM,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOuG,eACxC,QAGZ,sBAAKxM,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,yCACA,eAAC6C,GAAA,EAAD,UACI,gBAAC5C,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,wBACLK,GAAG,wBACHsP,SAAUyC,EACVpT,MAAOgT,EAAOP,sBALlB,UAOI,yBAAQzS,MAAM,GAAd,oBACCyS,EAAsB3R,KAAI,SAACd,EAAOsT,GAAR,OACvB,yBAAoBtT,MAAOA,EAAM8Q,KAAjC,SACK9Q,EAAMjD,SADEuW,EADU,SAQF,KAAhC9G,EAAOiG,sBACA,uBAAMlM,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOiG,wBAC5C,QAGR,sBAAKlM,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,0BACA,eAAC6C,GAAA,EAAD,UACI,gBAAC5C,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,WACLK,GAAG,WACHsP,SAAUyC,EACVpT,MAAOgT,EAAOT,SALlB,UAOI,yBAAQvS,MAAM,GAAd,oBACCuS,EAASzR,KAAI,SAACd,EAAOsT,GAAR,OACV,yBAAoBtT,MAAOA,EAAM8Q,KAAjC,SACK9Q,EAAMjD,SADEuW,EADH,SAQF,KAAnB9G,EAAO+F,SACA,uBAAMhM,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO+F,WAC5C,WAKX5F,EAAS,eAAC4G,GAAA,EAAD,IAAc,GAC5B,wBAEA,eAAC,KAAD,CACAxT,KAAK,SACLoC,QAAQ,YACRrE,MAAM,UACNyI,UAAW0D,EAAQvM,OACnBuK,UAAW,eAAC,KAAD,IACXgE,QApNa,SAAC8D,GAClBA,EAAEoB,iBAlBW,WACb,IAAIzE,EAAI,eAAQF,GAYhB,OAXAE,EAAKiG,oBAAsBK,EAAOL,oBAAsB,GAAK,yBAC7DjG,EAAK2F,aAAeW,EAAOX,aAAe,GAAK,yBAC/C3F,EAAKkG,GAAKI,EAAOJ,GAAK,GAAK,yBAC3BlG,EAAKoG,QAAUE,EAAOF,QAAU,GAAK,yBACrCpG,EAAKiG,oBAAsBK,EAAOL,oBAAsB,GAAK,yBAC7DjG,EAAKqG,aAAeC,EAAOD,aAAe,GAAK,yBAC/CrG,EAAK+F,sBAAwBO,EAAOP,sBAAwB,GAAK,yBACjE/F,EAAK6F,SAAWS,EAAOT,SAAW,GAAK,yBACvC9F,EAAU,eACHC,IAEA0E,OAAOC,OAAO3E,GAAM4E,OAAM,SAAAtK,GAAC,MAAS,IAALA,CAAJ,GACrC,CAKOwM,KACJ5G,GAAU,GACVxO,IAAMmT,KAAN,UAAclT,EAAd,8BAAmD2U,EACnD,CAAE1U,QAAS,CAAC,+BAA4B5D,MAGnC6D,MAAK,SAAAC,GACFoO,GAAU,GACVrR,EAAM+F,WAAWgL,gBAAe,EAChCkF,IAAMxT,QAAQ,6BAA8B,CAACyT,SAAUD,IAAME,SAASC,gBACtEpW,EAAM2Q,iBAAN,2BAA2B3Q,EAAM4Q,eAAjC,IAAgDC,MAAM,mBAEzD,IACA1N,OAAM,SAAAb,GACH+O,GAAU,GACV4E,IAAM3T,MAAM,uBAAwB,CAAC4T,SAAUD,IAAME,SAASC,eAEjE,IAER,EAyLO,SAQMhF,EAGF,uBAAMvK,MAAO,CAAE8F,cAAe,cAA9B,uBAFA,uBAAM9F,MAAO,CAAE8F,cAAe,cAA9B,oBAMJ,eAAC,KAAD,CACI/F,QAAQ,YACRoE,UAAW0D,EAAQvM,OACnBuK,UAAW,eAAC,KAAD,IAHf,SAMI,uBAAM7F,MAAO,CAAE8F,cAAe,cAA9B,8BASf,ECrYKtC,GAAYlJ,cAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAG1Ba,KAAM,CACFuU,SAAU,EACV,gBAAgB,CACZpU,MAAM,OACN0E,WAAW,QAEf,kBAAkB,CACdqF,aAAa,UACbpK,OAAO,QAEX,6BAA8B,CAC1BoK,aAAc,+CAElB,4BAA6B,CACzB9K,QAAS,qBAEb,WAAW,CACP,qBAAsB,sBAE1B,MAAM,CACFe,MAAM,OAEV,UAAU,CACNC,SAAS,OACTD,MAAM,UACN0E,WAAW,SAGnB5E,MAAO,CACHb,QAAS,QAEbc,MAAO,CACHC,MAAO,UACPC,SAAU,QAEdC,QAAS,CACLF,MAAO,WACPC,SAAU,QA9DgB,IA+jBnB0V,GA7fQ,SAAClY,GACpB,IAAM+F,EAAa/F,EAAM+F,WACzBoJ,QAAQC,IAAIrJ,GACE8Q,cAAd,IACMnI,EAAUrE,KAEhB,EAA4B3H,oBAAS,GAArC,mBAAO0O,EAAP,KAAeC,EAAf,KACA,EAA4B3O,mBAAS,CAAC,GAAtC,mBAEA,GAFA,UAEgCA,mBAAS,CAEGwP,WAAY,GACZC,UAAW,GACXyB,cAAe,GACfC,WAAY,EACZ3R,OAAQ,GACR4R,SAAU,GACVzB,MAAO,GACPE,gBAAiB,GACjBH,SAAS,GACTE,YAAa,GACb6F,QAAQ,MAZpD,mBAAOnE,EAAP,KAAcoE,EAAd,KAeMC,EAAgC,SAAA7D,GAClC4D,EAAe,2BAAMpE,GAAN,mBAAeQ,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,QAC1D,EAoCH,OACI,+BAEE,eAAC,KAAD,CAAMuG,UAAW0D,EAAQtM,KAAzB,SACI,eAAC6I,GAAA,EAAD,UACA,kCACI,uBAAKD,UAAU,MAAf,UACA,iDACA,sBAAKA,UAAU,2BAAf,SACY,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,uBACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,gBACLK,GAAG,gBACHsP,SAAUiD,EACV5T,MAAOuP,EAAMJ,uBAO7B,sBAAK5I,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,gCACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,gBACLK,GAAG,gBACHsP,SAAUiD,EACV5T,MAAOuP,EAAMJ,cACbyB,IAAM7O,KAAO,IAAI/C,MAAQgD,OAAO,uBAOhD,sBAAKuE,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,sBACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,gBACLK,GAAG,gBACHsP,SAAUiD,EACV5T,MAAOuP,EAAMJ,uBAO7B,sBAAK5I,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,qBACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,gBACLK,GAAG,gBACHsP,SAAUiD,EACV5T,MAAOuP,EAAMJ,uBAO7B,sBAAK5I,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,8CACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,gBACLK,GAAG,gBACHsP,SAAUiD,EACVhD,IAAM7O,KAAO,IAAI/C,MAAQgD,OAAO,cAChChC,MAAOuP,EAAMJ,uBAO7B,sBAAK5I,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,yCACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,gBACLK,GAAG,gBACHsP,SAAUiD,EACVhD,IAAM7O,KAAO,IAAI/C,MAAQgD,OAAO,cAChChC,MAAOuP,EAAMJ,uBAO7B,sBAAK5I,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,sCACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,gBACLK,GAAG,gBACHsP,SAAUiD,EACV5T,MAAOuP,EAAMJ,uBAO7B,sBAAK5I,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,oCACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,gBACLK,GAAG,gBACHsP,SAAUiD,EACV5T,MAAOuP,EAAMJ,uBAK7B,sBAAK5I,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,iCACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,gBACLK,GAAG,gBACHsP,SAAUiD,EACV5T,MAAOuP,EAAMJ,uBAQ7B,uDACA,wBACA,sBAAK5I,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,mCACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,gBACLK,GAAG,gBACHsP,SAAUiD,EACV5T,MAAOuP,EAAMJ,uBAM7B,sBAAK5I,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,0BACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,gBACLK,GAAG,gBACHsP,SAAUiD,EACV5T,MAAOuP,EAAMJ,cACbyB,IAAM7O,KAAO,IAAI/C,MAAQgD,OAAO,uBAKhD,sBAAKuE,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,mCACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,gBACLK,GAAG,gBACHsP,SAAUiD,EACV5T,MAAOuP,EAAMJ,uBAK7B,sBAAK5I,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,8CACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,gBACLK,GAAG,gBACHsP,SAAUiD,EACV5T,MAAOuP,EAAMJ,uBAK7B,4CACA,wBACA,sBAAK5I,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,6CACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,gBACLK,GAAG,gBACHsP,SAAUiD,EACV5T,MAAOuP,EAAMJ,uBAK7B,sBAAK5I,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,uCACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,gBACLK,GAAG,gBACHsP,SAAUiD,EACV5T,MAAOuP,EAAMJ,cACbyB,IAAM7O,KAAO,IAAI/C,MAAQgD,OAAO,uBAKhD,sBAAKuE,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,oCACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,gBACLK,GAAG,gBACHsP,SAAUiD,EACV5T,MAAOuP,EAAMJ,uBAK7B,sBAAK5I,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,8BACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,gBACLK,GAAG,gBACHsP,SAAUiD,EACV5T,MAAOuP,EAAMJ,uBAK7B,sBAAK5I,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,8BACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,gBACLK,GAAG,gBACHsP,SAAUiD,EACV5T,MAAOuP,EAAMJ,uBAK7B,sBAAK5I,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,wCACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,gBACLK,GAAG,gBACHsP,SAAUiD,EACV5T,MAAOuP,EAAMJ,uBAM7B,wDACA,wBACA,sBAAK5I,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,qCACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,gBACLK,GAAG,gBACHsP,SAAUiD,EACV5T,MAAOuP,EAAMJ,uBAK7B,sBAAK5I,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,sCACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,gBACLK,GAAG,gBACHsP,SAAUiD,EACV5T,MAAOuP,EAAMJ,uBAK7B,sBAAK5I,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,qCACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,gBACLK,GAAG,gBACHsP,SAAUiD,EACV5T,MAAOuP,EAAMJ,uBAK7B,sBAAK5I,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,sCACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,gBACLK,GAAG,gBACHsP,SAAUiD,EACV5T,MAAOuP,EAAMJ,uBAK7B,uDACA,wBACA,sBAAK5I,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,8CACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,gBACLK,GAAG,gBACHsP,SAAUiD,EACV5T,MAAOuP,EAAMJ,cALjB,SAOI,yBAAQnP,MAAM,GAAd,6BAKhB,sBAAKuG,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,mCACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,gBACLK,GAAG,gBACHsP,SAAUiD,EACV5T,MAAOuP,EAAMJ,cALjB,SAOI,yBAAQnP,MAAM,GAAd,6BAKhB,sBAAKuG,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,mCACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,gBACLK,GAAG,gBACHsP,SAAUiD,EACV5T,MAAOuP,EAAMJ,cALjB,SAOI,yBAAQnP,MAAM,GAAd,gCAOnB2M,EAAS,eAAC4G,GAAA,EAAD,IAAc,GAC5B,wBAEA,eAAC,KAAD,CACAxT,KAAK,SACLoC,QAAQ,YACRrE,MAAM,UACNyI,UAAW0D,EAAQvM,OACnBuK,UAAW,eAAC,KAAD,IACXgE,QA3ba,SAAC8D,GAClBA,EAAEoB,iBAEFvE,GAAU,GACVxO,IAAMmT,KAAN,UAAclT,EAAd,uBAA4CkR,EAC5C,CAAEjR,QAAS,CAAC,+BAA4B5D,MAGnC6D,MAAK,SAAAC,GACFoO,GAAU,GACVrR,EAAM+F,WAAWuS,WAAU,EAC3BrC,IAAMxT,QAAQ,+BACdzC,EAAM2Q,iBAAN,2BAA2B3Q,EAAM4Q,eAAjC,IAAgDC,MAAM,mBACzD,IACA1N,OAAM,SAAAb,GACH+O,GAAU,GACV4E,IAAM3T,MAAM,uBAEf,GAER,EAiaO,SAQM8O,EAGF,uBAAMvK,MAAO,CAAE8F,cAAe,cAA9B,uBAFA,uBAAM9F,MAAO,CAAE8F,cAAe,cAA9B,oBAMJ,eAAC,KAAD,CACI/F,QAAQ,YACRoE,UAAW0D,EAAQvM,OACnBuK,UAAW,eAAC,KAAD,IAHf,SAMI,uBAAM7F,MAAO,CAAE8F,cAAe,cAA9B,8BASf,EC7jBKtC,GAAYlJ,cAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAG1Ba,KAAM,CACFuU,SAAU,EACV,gBAAgB,CACZpU,MAAM,OACN0E,WAAW,QAEf,kBAAkB,CACdqF,aAAa,UACbpK,OAAO,QAEX,6BAA8B,CAC1BoK,aAAc,+CAElB,4BAA6B,CACzB9K,QAAS,qBAEb,WAAW,CACP,qBAAsB,sBAE1B,MAAM,CACFe,MAAM,OAEV,UAAU,CACNC,SAAS,OACTD,MAAM,UACN0E,WAAW,SAGnB5E,MAAO,CACHb,QAAS,QAEbc,MAAO,CACHC,MAAO,UACPC,SAAU,QAEdC,QAAS,CACLF,MAAO,WACPC,SAAU,QA9DgB,IA2qBnB+V,GAzmBQ,SAACvY,GACpB,IAAM+F,EAAa/F,EAAM+F,WAEnB2I,EAAUrE,KAChB,EAAsC3H,mBAAS,IAA/C,mBAAO8V,EAAP,KAAoBC,EAApB,KACA,EAA8C/V,mBAAS,IAAvD,mBAAOgW,EAAP,KAAwBC,EAAxB,KACA,EAA8CjW,mBAAS,IAAvD,mBAAOkW,EAAP,KAAwBC,EAAxB,KACA,EAA4BnW,oBAAS,GAArC,mBAAO0O,EAAP,KAAeC,EAAf,KACA,EAA4B3O,mBAAS,CAAC,GAAtC,mBAAOuO,EAAP,KAAeC,EAAf,KACA,EAAsCxO,mBAAS,IAA/C,mBAAOoW,EAAP,KAAoBC,EAApB,KACA,EAA0CrW,mBAAS,IAAnD,mBAAOsW,EAAP,KAAsBC,EAAtB,KACA,EAA+BvW,mBAAS,CAE5B8P,MAAOzM,EAAWyM,MAClB0G,iBAAkB,GAClBF,cAAe,GACfG,sBAAuB,GACvBL,YAAa,GACbM,eAAgB,GAChBC,aAAc,GACdC,WAAY,GACZZ,gBAAiB,GACjBpB,QAAS,GACTiC,SAAU,GACVC,SAAU,GACVC,mCAAoC,GACpCtG,gBAAiB,GACjBuG,eAAgB,GAChBC,MAAO,GACPC,cAAe,GACfC,oBAAqB,GACrBC,YAAa,KApBzB,mBAAOC,EAAP,KAAiBC,EAAjB,KAsBA5W,qBAAU,WACN6W,IACAC,IACA/F,IACAgG,IACAC,GACH,GAAE,CAACpa,EAAM+F,WAAWD,KAErB,IAAMsU,EAAgB,WAClBvX,IACCrD,IADD,UACQsD,EADR,0CAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEHgW,EAAiBhW,EAASC,KAC7B,IACAC,OAAM,SAACb,GAEP,GACJ,EACK2X,EAAe,WACjBpX,IACCrD,IADD,UACQsD,EADR,yCAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEHwV,EAAexV,EAASC,KAC3B,IACAC,OAAM,SAACb,GAEP,GACJ,EACK6X,EAAuB,WACzBtX,IACCrD,IADD,UACQsD,EADR,iDAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEH8V,EAAe9V,EAASC,KAC3B,IACAC,OAAM,SAACb,GAEP,GACJ,EACK4X,EAAkB,WACpBrX,IACCrD,IADD,UACQsD,EADR,4CAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEH0V,EAAmB1V,EAASC,KAC/B,IACAC,OAAM,SAACb,GAEP,GACJ,EACK6R,EAAkB,WACpBtR,IACCrD,IADD,UACQsD,EADR,4CAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEH4V,EAAmB5V,EAASC,KAC/B,IACAC,OAAM,SAACb,GAEP,GACJ,EACK+X,EAA+B,SAAA7F,GACjCtD,EAAU,2BAAID,GAAL,mBAAcuD,EAAEC,OAAOhP,KAAO,MACvCuU,EAAW,2BAAMD,GAAN,mBAAkBvF,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,QACzD,EAqDH,OACI,+BAEE,eAAC,KAAD,CAAMuG,UAAW0D,EAAQtM,KAAzB,SACI,eAAC6I,GAAA,EAAD,UACA,kCACI,uBAAKD,UAAU,MAAf,UACI,sDACA,sBAAKA,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,wBACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,QACLK,GAAG,QACHsP,SAAUiF,EACV5V,MAAOsV,EAASvH,MAChBmD,UAAQ,MAGC,KAAhB1E,EAAOuB,MACA,uBAAMxH,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOuB,QAC5C,QAGZ,sBAAKxH,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,6BACA,eAAC6C,GAAA,EAAD,UACI,gBAAC5C,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,gBACLK,GAAG,gBACHsP,SAAUiF,EACV5V,MAAOsV,EAASf,cALpB,UAOA,yBAAQvU,MAAM,GAAd,qBAEKuU,EAAczT,KAAI,SAACd,GAAD,OACf,yBAAuBA,MAAOA,EAAM8Q,KAApC,SACK9Q,EAAMjD,SADEiD,EAAMqB,GADJ,SAQF,KAAxBmL,EAAO+H,cACA,uBAAMhO,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO+H,gBAC5C,QAGZ,sBAAKhO,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,+BACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,iBACLK,GAAG,iBACHsP,SAAUiF,EACV5V,MAAOsV,EAASX,eAChB/D,IAAM7O,KAAO,IAAI/C,MAAQgD,OAAO,kBAId,KAAzBwK,EAAOmI,eACA,uBAAMpO,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOmI,iBAC5C,QAGZ,sBAAKpO,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,sCACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,UACLK,GAAG,UACHsP,SAAUiF,EACV5V,MAAOsV,EAASzC,YAIL,KAAlBrG,EAAOqG,QACA,uBAAMtM,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOqG,UAC5C,QAGZ,sBAAKtM,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,wCACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,sBACLK,GAAG,sBACHsP,SAAUiF,EACV5V,MAAOsV,EAASF,wBAIO,KAA9B5I,EAAO4I,oBACA,uBAAM7O,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO4I,sBAC5C,QAGZ,sBAAK7O,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,+BAEA,gBAACC,GAAA,EAAD,CACQ1Q,KAAK,SACLiB,KAAK,iBACLK,GAAG,iBACHrB,MAAOsV,EAASL,eAChBtE,SAAUiF,EACVxT,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,WAClDgJ,UAAQ,EAPhB,UASS,yBAAQ7Q,MAAM,GAAd,qBAEI+T,EAAYjT,KAAI,SAACd,GAAD,OACb,yBAAuBA,MAAOA,EAAM8Q,KAApC,SACK9Q,EAAMjD,SADEiD,EAAMqB,GADN,OAOC,KAAzBmL,EAAOyI,eACJ,uBAAM1O,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOyI,iBACxC,QAGhB,sBAAK1O,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,yBACA,eAAC6C,GAAA,EAAD,UACI,gBAAC5C,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,aACLK,GAAG,aACHsP,SAAUiF,EACV5V,MAAOsV,EAAST,WALpB,UAOI,yBAAQ7U,MAAM,GAAd,oBACA,yBAAQA,MAAM,MAAd,iBACA,yBAAQA,MAAM,KAAd,qBAIc,KAArBwM,EAAOqI,WACA,uBAAMtO,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOqI,aACxC,QAGhB,sBAAKtO,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,2BACA,eAAC6C,GAAA,EAAD,UACI,gBAAC5C,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,cACLK,GAAG,cACHsP,SAAUiF,EACV5V,MAAOsV,EAASD,YALpB,UAOI,yBAAQrV,MAAM,GAAd,oBACA,yBAAQA,MAAM,MAAd,iBACA,yBAAQA,MAAM,KAAd,qBAGe,KAAtBwM,EAAO6I,YACA,uBAAM9O,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO6I,cACxC,QAGhB,sBAAK9O,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,+BACA,eAAC6C,GAAA,EAAD,UACI,gBAAC5C,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,kBACLK,GAAG,kBACHsP,SAAUiF,EACV5V,MAAOsV,EAASrB,gBALpB,UAOI,yBAAQjU,MAAM,GAAd,qBAECiU,EAAgBnT,KAAI,SAACd,GAAD,OACjB,yBAAuBA,MAAOA,EAAM8Q,KAApC,SACK9Q,EAAMjD,SADEiD,EAAMqB,GADF,SAQF,KAA1BmL,EAAOyH,gBACA,uBAAM1N,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOyH,kBACxC,QAIhB,sBAAK1N,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,+BACA,eAAC6C,GAAA,EAAD,UACI,gBAAC5C,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,kBACLK,GAAG,kBACHsP,SAAUiF,EACV5V,MAAOsV,EAAS5G,gBALpB,UAOI,yBAAQ1O,MAAM,GAAd,qBACCmU,EAAgBrT,KAAI,SAACd,GAAD,OACjB,yBAAuBA,MAAOA,EAAM8Q,KAApC,SACK9Q,EAAMjD,SADEiD,EAAMqB,GADF,SAOF,KAA1BmL,EAAOkC,gBACA,uBAAMnI,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOkC,kBACxC,QAIhB,sBAAKnI,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,4CACA,eAAC6C,GAAA,EAAD,UACI,gBAAC5C,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,wBACLK,GAAG,wBACHsP,SAAUiF,EACV5V,MAAOsV,EAASZ,sBALpB,UAOA,yBAAQ1U,MAAM,GAAd,oBACA,yBAAQA,MAAM,MAAd,iBACA,yBAAQA,MAAM,KAAd,qBAG6B,KAAhCwM,EAAOkI,sBACA,uBAAMnO,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOkI,wBACxC,QAGhB,sBAAKnO,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,2BACA,eAAC6C,GAAA,EAAD,UACI,gBAAC5C,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,cACLK,GAAG,cACHsP,SAAUiF,EACV5V,MAAOsV,EAASjB,YALpB,UAOA,yBAAQrU,MAAM,GAAd,qBACCqU,EAAYvT,KAAI,SAACd,GAAD,OACb,yBAAuBA,MAAOA,EAAM8Q,KAApC,SACK9Q,EAAMjD,SADEiD,EAAMqB,GADN,SAOE,KAAtBmL,EAAO6H,YACA,uBAAM9N,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO6H,cACxC,QAGhB,sBAAK9N,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,sBACA,eAAC6C,GAAA,EAAD,UACI,gBAAC5C,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,QACLK,GAAG,QACHsP,SAAUiF,EACV5V,MAAOsV,EAASJ,MALpB,UAQA,yBAAQlV,MAAM,GAAd,oBACA,yBAAQA,MAAM,MAAd,iBACA,yBAAQA,MAAM,KAAd,qBAGa,KAAhBwM,EAAO0I,MACA,uBAAM3O,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO0I,QACxC,QAGhB,sBAAK3O,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,oEACA,eAAC6C,GAAA,EAAD,UACI,gBAAC5C,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,qCACLK,GAAG,qCACHsP,SAAUiF,EACV5V,MAAOsV,EAASN,mCALpB,UAOI,yBAAQhV,MAAM,GAAd,oBACA,yBAAQA,MAAM,MAAd,iBACA,yBAAQA,MAAM,KAAd,qBAGsC,KAA7CwM,EAAOwI,mCACA,uBAAMzO,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOwI,qCACxC,QAIhB,sBAAKzO,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,gCACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,eACLK,GAAG,eACHsP,SAAUiF,EACV5V,MAAOsV,EAASV,iBAGA,KAAvBpI,EAAOoI,aACA,uBAAMrO,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOoI,eACxC,QAIhB,sBAAKrO,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,sCACA,eAAC6C,GAAA,EAAD,UACI,gBAAC5C,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,mBACLK,GAAG,mBACHsP,SAAUiF,EACV5V,MAAOsV,EAASb,iBALpB,UAOA,yBAAQzU,MAAM,GAAd,oBACA,yBAAQA,MAAM,MAAd,iBACA,yBAAQA,MAAM,KAAd,qBAGwB,KAA3BwM,EAAOiI,iBACA,uBAAMlO,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOiI,mBACxC,QAGhB,sBAAKlO,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,iCACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,gBACLK,GAAG,gBACHsP,SAAUiF,EACV5V,MAAOsV,EAASH,kBAGC,KAAxB3I,EAAO2I,cACA,uBAAM5O,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO2I,gBACxC,QAGhB,sBAAK5O,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,iCACA,eAAC6C,GAAA,EAAD,UACI,gBAAC5C,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,WACLK,GAAG,WACHsP,SAAUiF,EACV5V,MAAOsV,EAASR,SALpB,UAOI,yBAAQ9U,MAAM,GAAd,oBACA,yBAAQA,MAAM,WAAd,iBACA,yBAAQA,MAAM,WAAd,qBAGY,KAAnBwM,EAAOsI,SACA,uBAAMvO,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOsI,WACxC,QAGhB,sBAAKvO,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,iCACA,eAAC6C,GAAA,EAAD,UACI,gBAAC5C,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,WACLK,GAAG,WACHsP,SAAUiF,EACV5V,MAAOsV,EAASP,SALpB,UAOA,yBAAQ/U,MAAM,GAAd,oBACA,yBAAQA,MAAM,WAAd,iBACA,yBAAQA,MAAM,WAAd,qBAGgB,KAAnBwM,EAAOuI,SACA,uBAAMxO,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOuI,WACxC,WAMnBpI,EAAS,eAAC4G,GAAA,EAAD,IAAc,GAC5B,wBAEA,eAAC,KAAD,CACAxT,KAAK,SACLoC,QAAQ,YACRrE,MAAM,UACNyI,UAAW0D,EAAQvM,OACnBuK,UAAW,eAAC,KAAD,IACX7F,MAAO,CAACC,gBAAgB,WACxB4J,QArca,SAAC8D,GAClBA,EAAEoB,kBA3BW,WACb,IAAIzE,EAAI,eAAQF,GAsBhB,OArBAE,EAAK+H,iBAAmBa,EAASb,iBAAmB,GAAK,yBACzD/H,EAAKyI,cAAgBG,EAASH,cAAgB,GAAK,yBACnDzI,EAAK0I,oBAAsBE,EAASF,oBAAsB,GAAK,yBAC/D1I,EAAK2I,YAAcC,EAASD,YAAc,GAAK,yBAC/C3I,EAAKwI,MAAQI,EAASJ,MAAQ,GAAK,yBACnCxI,EAAKuI,eAAiBK,EAASL,eAAiB,GAAK,yBACrDvI,EAAKgC,gBAAkB4G,EAAS5G,gBAAkB,GAAK,yBACvDhC,EAAKsI,mCAAqCM,EAASN,mCAAqC,GAAK,yBAC7FtI,EAAKqI,SAAWO,EAASP,SAAW,GAAK,yBACzCrI,EAAKoI,SAAWQ,EAASR,SAAW,GAAK,yBACzCpI,EAAKmG,QAAUyC,EAASzC,QAAU,GAAK,yBACvCnG,EAAKuH,gBAAkBqB,EAASrB,gBAAkB,GAAK,yBACvDvH,EAAKmI,WAAaS,EAAST,WAAa,GAAK,yBAC7CnI,EAAKkI,aAAeU,EAASV,aAAe,GAAK,yBACjDlI,EAAKiI,eAAiBW,EAASX,eAAiB,GAAK,yBACrDjI,EAAK2H,YAAciB,EAASjB,YAAc,GAAK,yBAC/C3H,EAAKgI,sBAAwBY,EAASZ,sBAAwB,GAAK,yBACnEhI,EAAK6H,cAAgBe,EAASf,cAAgB,GAAK,yBACnD9H,EAAU,eACHC,IAEA0E,OAAOC,OAAO3E,GAAM4E,OAAM,SAAAtK,GAAC,MAAS,IAALA,CAAJ,GACrC,CAIMwM,GAkBChC,IAAM3T,MAAM,yBAA0B,CAAC4T,SAAUD,IAAME,SAASC,iBAjBpE/E,GAAU,GACVxO,IAAMmT,KAAN,UAAclT,EAAd,4BAAiDiX,EACjD,CAAEhX,QAAS,CAAC,+BAA4B5D,MAGnC6D,MAAK,SAAAC,GACFoO,GAAU,GAEV4E,IAAMxT,QAAQ,yBAA0B,CAACyT,SAAUD,IAAME,SAASC,gBAClEpW,EAAM2Q,iBAAN,2BAA2B3Q,EAAM4Q,eAAjC,IAAgDC,MAAM,mBACzD,IACA1N,OAAM,SAAAb,GACH+O,GAAU,GACV4E,IAAM3T,MAAM,uBAAwB,CAAC4T,SAAUD,IAAME,SAASC,eAEjE,IAIR,EAwaO,SASMhF,EAGF,uBAAMvK,MAAO,CAAE8F,cAAe,cAA9B,uBAFA,uBAAM9F,MAAO,CAAE8F,cAAe,cAA9B,oBAMJ,eAAC,KAAD,CACI/F,QAAQ,YACRoE,UAAW0D,EAAQvM,OACnBuK,UAAW,eAAC,KAAD,IACX7F,MAAO,CAACC,gBAAgB,WAJ5B,SAMI,uBAAMD,MAAO,CAAE8F,cAAe,cAA9B,8BASf,E,4CCvrBc,OAA0B,6C,qBCwCnCtC,GAAYlJ,cAAW,SAACC,GAAD,MAAY,CACrCgB,KAAM,CACFR,MAAO,OACP,sIAAsI,CAClI0Y,WAAW,cACXnF,OAAO,IACPpL,cAAc,SACdwQ,WAAW,QACXC,WAAW,KAEf,kCAAkC,CAC9BhY,SAAU,OACVD,MAAO,UACPoI,QAAS,gBACT1D,WAAW,QAEf,UAAU,CACNpF,UAAU,mBAEd,kBAAkB,CACdU,MAAM,WAEV,wBAAwB,CACpBA,MAAM,WAEV,YAAY,CACR,YAAa,OACboI,QAAQ,MACRzI,OAAQ,OACR,aAAc,SAGtBb,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UApCS,IAqEzB+Y,GAAS,GA8rBEC,OA5rBf,SAAoB1a,GAChB,IAAM0O,EAAUrE,KACZsQ,EAAU9D,cAEd,GADoB8D,EAAQrb,UAAYqb,EAAQrb,SAASsG,OAAQ+U,EAAQrb,SAASsG,MAAMgJ,YACzClM,mBAAS,KAAxD,mBAAOkY,EAAP,KAAwBC,EAAxB,KACA,EAAiCnY,mBAAS,CAACoY,cAAe,cAAejV,UAAU7F,EAAM6F,UAAWkV,aAAa,GAAIC,OAAO,KAA5H,mBAAOtH,EAAP,KAAkBC,EAAlB,KACA,EAAoCjR,mBAAS,IAA7C,mBAAOuY,EAAP,KAAmBC,EAAnB,KACA,EAA8BxY,mBAAS,IAAvC,mBAAgBqM,GAAhB,WACA,EAA8BvE,IAAM9H,UAAS,GAA7C,mBAAgBE,GAAhB,WACA,EAAsCF,oBAAS,GAA/C,mBAAOyY,EAAP,KAAoBC,EAApB,KACA,EAAsC5Q,IAAM9H,UAAS,GAArD,mBAAO2Y,EAAP,KAAoBC,EAApB,KACA,EAAgC9Q,IAAM9H,UAAS,GAA/C,mBAAiB6Y,GAAjB,WACA,EAA8B/Q,IAAM9H,UAAS,GAA7C,mBAAOD,EAAP,KAAgB+Y,EAAhB,KACA,EAA4B9Y,mBAAS,CAAC,GAAtC,mBAAOuO,EAAP,KAAeC,EAAf,KACA,EAAgDxO,mBAAS,IAAzD,mBAAO+Y,GAAP,KAAyBC,GAAzB,KAEA,GAA+ChZ,mBAAS,IAAxD,qBAAOiZ,GAAP,MAAyBC,GAAzB,MACA,GAA8ClZ,mBAAS,IAAvD,qBAAwBmZ,IAAxB,aAWMC,IATQ,eACNrZ,GAAW,CACXsZ,QAASC,KAAM,KACf,UAAW,CACPD,QAASC,KAAM,QAKF,iDAAG,8GACKnZ,IAAMrD,IAAN,UAAasD,EAAb,qDAAyE,CAAEC,QAAS,CAAC,+BAA4B5D,MADtH,OAClB8c,EADkB,OAGxBpZ,IAAMrD,IAAN,UAAasD,EAAb,6BAAyC9C,EAAM6F,WAAY,CAAE9C,QAAS,CAAC,+BAA4B5D,MAAW6D,KAA9G,iDAAmH,WAAOC,GAAP,qFAC5GA,EAASC,KAAKoN,OAAS,GACtBoL,GAAoBzY,EAASC,MAC7BkY,GAAe,GACXc,EAAwBC,KAAEC,KAAKD,KAAE5W,IAAItC,EAASC,KAAK,iBACvD2Y,GAAmBK,GACfG,EAAkBF,KAAE5W,IAAI0W,EAAe/Y,MAAM,SAACoZ,GAC9C,OAAOH,KAAEI,OAAO,CAAC,EAAGD,EAAM,CAACE,SAAUN,EAAsBO,SAASH,EAAK9a,UAE5E,IACD0Z,EAAcmB,KAEVA,EAAkBF,KAAE5W,IAAI0W,EAAe/Y,MAAM,SAACoZ,GAC9C,OAAOH,KAAEI,OAAO,CAAC,EAAGD,EAAM,CAACE,UAAU,GAExC,IACDtB,EAAcmB,IAhB6F,2CAAnH,uDAoBGlZ,MApBH,iDAoBS,WAAOb,GAAP,iFACL6M,QAAQC,IAAI,6BACZD,QAAQC,IAAI9M,GAER+Z,EAAkBF,KAAE5W,IAAI0W,EAAe/Y,MAAM,SAACoZ,GAC9C,OAAOH,KAAEI,OAAO,CAAC,EAAGD,EAAM,CAACE,UAAU,GACxC,IACDtB,EAAcmB,GACdjB,GAAe,GARV,2CApBT,uDAHwB,2CAAH,sDAmCnBsB,GAAkB,WACpB7Z,IAAMmT,KAAN,UAAclT,EAAd,iCAA8C9C,EAAM6F,WAAY7F,EAAM6F,UAAU,CAAE9C,QAAS,CAAC,+BAA4B5D,MAAW6D,MAAK,SAACC,GACrIkM,QAAQC,IAAI,gBACf,IAAEjM,OAAM,SAACb,GACN6M,QAAQC,IAAI,uBACZD,QAAQC,IAAI9M,EAEf,GACJ,EAGDc,qBAAU,WACNsZ,KACAZ,KACAa,IAEH,GAAE,IAEH,IAAMA,GAAc,WAChB9Z,IACKrD,IADL,UACYsD,EADZ,sCAEQ,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,IACgB,IAAhBA,EAASC,MACRL,IACKrD,IADL,UACYsD,EADZ,sBAEQ,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACH8L,EAAW9L,EAASC,MACpB2X,EAAoB5X,EAASC,KAEhC,IACAC,OAAM,SAACb,GACJ6M,QAAQC,IAAI9M,EACf,GAGZ,IACAa,OAAM,SAACb,GAEP,GAER,EAyID,OACI,sBAAK0I,UAAW0D,EAAQtM,KAAxB,SAGI,uBAAKyE,MAAO,CAACrF,QAAQ,OAAOI,MAAM,QAAlC,UACI,sBAAKoJ,UAAU,GAAGnE,MAAO,CAAC8D,QAAQ,MAAOiS,KAAK,IAAIC,UAAW,wCAAwCC,UAAU,SAA/G,SACK3B,GAAeM,GAAiBnL,OAAS,EAClC,sBAAKzJ,MAAO,CAACrF,QAAQ,OAAOI,MAAM,OAAOmb,SAAS,QAAlD,SACKtB,GAAiBlW,KAAI,SAACyX,EAAWjF,GAAZ,OAClB,sBAAmBlR,MAAO,CAACiW,UAAU,QAAQnS,QAAQ,MAAO/I,MAAM,OAAlE,SACI,uBAAMoJ,UAAU,QAAQnE,MAAO,CAACyF,aAAa,OAA7C,UAEI,uBAAKtB,UAAU,gCAAgCnE,MAAO,CAACC,gBAAgB,QAAvE,UACI,iCACI,qBAAIkE,UAAU,iCAAd,SAA+C,eAAC,IAAD,CAAMtF,GAAI,IAAKmB,MAAO,CAACtE,MAAM,UAAUC,SAAS,OAAO8X,WAAW,wBAAlE,SAA4F0C,EAAUjC,iBACrJ,uBAAK/P,UAAU,mBAAmBnE,MAAO,CAACrE,SAAS,OAAOD,MAAM,UAAW0E,WAAW,OAAOqT,WAAW,wBAAxG,UAAiI,oBAAGtP,UAAU,wBAAwB,cAAY,SAAYxE,KAAOwW,EAAUC,kBAAkBxW,OAAO,0BAI5O,gBAACyW,GAAA,EAAD,CAAUlS,UAAU,mBAApB,UACI,eAACkS,GAAA,EAASC,OAAV,CACIpI,GAAG,SACHnO,QAAQ,GACRwW,KAAK,KACLpS,UAAU,yBACVlF,GAAG,SACHe,MAAO,CAAEC,gBAAiB,UAAWuW,YAAY,UAAW/Q,aAAa,MAAMgR,YAAY,QAAQzb,UAAU,SANjH,SAQI,sBACI0b,MAAM,6BACNC,WAAW,+BACX5b,MAAM,OACNM,OAAO,OACPub,QAAQ,YACRC,QAAQ,MANZ,SAQI,qBACIC,OAAO,OACPC,YAAY,IACZC,KAAK,OACLC,SAAS,UAJb,UAMI,uBAAMrS,EAAE,IAAI7B,EAAE,IAAIhI,MAAM,KAAKM,OAAO,OACpC,yBAAQ2b,KAAK,UAAU3V,GAAG,KAAKC,GAAG,IAAIC,EAAE,MACxC,yBAAQyV,KAAK,UAAU3V,GAAG,KAAKC,GAAG,KAAKC,EAAE,MACzC,yBAAQyV,KAAK,UAAU3V,GAAG,KAAKC,GAAG,KAAKC,EAAE,aAIrD,eAAC8U,GAAA,EAAS3M,KAAV,CAAewN,YAAY,EAAM/S,UAAU,sBAA3C,SACI,gBAACkS,GAAA,EAASzM,KAAV,CAAe5J,MAAO,CAACtE,MAAM,OAAQmO,QAAS,kBA/F1E5K,EA+F8FkX,EAAUlX,GA/FrGkY,EA+FwGhB,EAAUjC,kBA9FzIlY,IAAMob,OAAN,UAAgBnb,EAAhB,sBAAqCgD,GAAK,CAAE/C,QAAS,CAAC,+BAA4B5D,MAAW6D,MAAK,SAACC,GAC/FgT,IAAMxT,QAAN,UAAiBub,EAAjB,0BACA7B,KAAE7X,KAAK2W,EAAW,CAAC,QAAU+C,IAASxB,UAAW,EACjDtB,EAAc,aAAID,IAClB,IAAIiD,EAAsB/B,KAAEjX,OAAOuW,GAAkB,CAAC,aAAeuC,IACrEtC,GAAoBwC,GACpBxB,KACkC,IAA/BwB,EAAoB5N,QACnBtQ,EAAMme,8BAA6B,EAE1C,IAAEhb,OAAM,SAACb,GACN2T,IAAM3T,MAAM,wBACZ6M,QAAQC,IAAI9M,EAEf,IAfkB,IAACwD,EAAGkY,CA+FuE,EAA9C,UACI,eAAC,KAAD,IADJ,qBAQZ,sBAAKhT,UAAU,qBAAf,SACI,sBAAIA,UAAU,8BAAd,UACI,qBAAIA,UAAU,kBAAkBnE,MAAO,CAAC3E,OAAO,QAASV,QAAQ,OAAO4c,eAAe,UAAtF,SACI,sBAAKC,IAAKC,GAAmBC,IAAI,GAAG1X,MAAO,CAAC3E,OAAO,YAGvD,sBAAI8I,UAAU,kBAAd,UAEI,eAACwT,GAAA,EAAD,CAAO5X,QAAQ,sBAAsBoE,UAAU,sBAA/C,sBACA,wBAAMA,UAAU,aAAhB,oBAAqCgS,EAAUyB,OAHnD,KAII,uBAAMzT,UAAU,4BAAhB,SACA,gBAACwT,GAAA,EAAD,CAAO5X,SAAyB,IAAhBoW,EAAUyB,IAAY,mBAAoB,kBAA1D,UAA6E,oBAAGzT,UAAU,iCAAiC,cAAY,SAAvI,qBA5DR+M,EADM,MA2E9B,qCACI,sBAAK/M,UAAU,cAAf,SACI,sBAAMA,UAAU,cAAhB,SACI,eAAC0T,GAAA,EAAD,CAAOC,SAAS,OAAhB,SACI,eAACC,GAAA,EAAD,CAAY/X,MAAO,CAAC3E,OAAO,SAA3B,SACI,yEASxB,sBAAK2E,MAAO,CAAC+V,KAAK,IAAIjS,QAAQ,MAAM4P,WAAW,MAAMpF,OAAO,kCAAkC0H,UAAW,yCAAzG,SACI,uBAAK7R,UAAU,SAAf,UACI,eAAC,IAAD,IACA,eAAC,KAAD,CAAKJ,GAAI,GAAT,SACI,gBAACqK,GAAA,EAAD,WACI,eAAC,KAAD,CAAO4J,IAAI,SAAShY,MAAO,CAACtE,MAAM,UAAU0E,WAAW,OAAOzE,SAAS,QAAvE,4BACA,gBAAC0S,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,SACLK,GAAG,SACHsP,SApOhB,SAAAZ,GAChB,IAAMsK,EAAYtK,EAAEC,OAAOhQ,MACrBsa,EAAenE,EAAiBtW,MAAK,SAACmH,GAAD,OAAMA,EAAEhG,OAAQqZ,CAAhB,IAC3CrE,GAA+B,OAArBsE,EAAetf,IAAYqD,EAAUic,EAAetf,IAC9DkU,EAAa,2BAAID,GAAL,IAAgBsH,OAAO8D,KACnCjc,IACKrD,IADL,UACYib,GADZ,0CACsDqE,GAC9C,CAAE/b,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAC2B,UAA3BA,EAASC,KAAK8b,UACb/I,IAAM3T,MAAMW,EAASC,KAAK+b,UAAY,gBAGtC3D,GAAe,EAEtB,IACAnY,OAAM,SAACb,GACP,GACR,EAkNmCmC,MAAOiP,EAAUsH,OACjB1F,UAAQ,EANZ,UAQI,yBAAQ7Q,MAAM,GAAd,4BACCmW,EAAiBrV,KAAI,gBAAGO,EAAH,EAAGA,GAAIL,EAAP,EAAOA,KAAP,OAClB,yBAAiBhB,MAAOgB,EAAxB,SACKA,GADQK,EADK,OAOR,KAAjBmL,EAAO+J,OACJ,uBAAMhQ,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO+J,SACxC,QAGXK,EACO,uBAAKrQ,UAAU,aAAf,UACI,eAAC,KAAD,CAAKJ,GAAI,EAAT,SACI,gBAACqK,GAAA,EAAD,WACI,eAAC,KAAD,CAAO4J,IAAI,SAAShY,MAAO,CAACtE,MAAM,UAAU0E,WAAW,OAAOzE,SAAS,QAAvE,2BACA,gBAAC0S,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,eACLK,GAAG,eACHsP,SAxOtB,SAAAZ,GACtBb,EAAY,2BAAMD,GAAN,mBAAmBc,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,QAC3D,EAuO+CA,MAAOiP,EAAUqH,aACjBzF,UAAQ,EANZ,UAQI,yBAAQ7Q,MAAM,GAAd,4BAEC0X,KAAE/L,OAAO6K,EAAY,CAAC,YAAY,IAAQ1V,KAAI,SAACd,GAAD,OAC3C,yBAAuBA,MAAOA,EAAMjD,QAApC,SACKiD,EAAMjD,SADEiD,EAAMqB,GADwB,OAM3B,KAAvBmL,EAAO8J,aACJ,uBAAM/P,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO8J,eACxC,QAKZ,eAAC,KAAD,CAAKnQ,GAAI,EAAT,SAEI,eAAC,KAAD,CACIpG,KAAK,SACLoC,QAAQ,YACRrE,MAAM,UACNmO,QAnPtB,SAAC8D,GACnBA,EAAEoB,iBAXW,WACb,IAAIzE,EAAI,eAAQF,GAMhB,OALAE,EAAK4J,aAAerH,EAAUqH,aAAe,GAAK,yBAClD5J,EAAK6J,OAAStH,EAAUsH,OAAS,GAAK,yBACtC9J,EAAU,eACHC,IAEA0E,OAAOC,OAAO3E,GAAM4E,OAAM,SAAAtK,GAAC,MAAU,KAANA,CAAJ,GACrC,CAIMwM,IACCpV,IAAMmT,KAAN,UAAcyE,GAAd,oDAAyE/G,EACrE,CAAE3Q,QAAS,CAAC,+BAA4B5D,MAEvC6D,MAAK,SAAAC,GAEF,GADAL,GAAW,GACc,UAAtBK,EAASC,KAAKsB,KACb5B,GAAW,GACX2Y,GAAY,GACZlc,OAAO6f,YAAW,WACd3D,GAAY,EACf,GAAE,KACHtF,IAAM3T,MAAMW,EAASC,KAAKqT,QAAQ4I,WACjC,CACD,IAAMpE,EAAc9X,EAASC,KAAK6X,aAClCQ,GAAY,GACZC,GAAW,GACXnc,OAAO6f,YAAW,WACd1D,GAAW,GACX5Y,GAAW,EACd,GAAE,KACH,IAAIwc,EAAwBnc,EAASC,KACrCkc,EAAsBC,uBAAyBlD,KAAEmD,OAAOF,EAAsBC,uBAAuB,gBAErGzD,GAAoB,GAAD,oBAAKD,IAAL,CAAuByD,KAE1CjD,KAAE7X,KAAK2W,EAAW,CAAC,QAAUF,IAAeyB,UAAW,EACvDtB,EAAc,aAAID,IAElBtH,EAAa,2BAAID,GAAL,IAAgBqH,aAAa,KAC5C,CAEJ,IACA5X,OAAM,SAAAb,GACN,GAEZ,EA8M2C0I,UAAW,OACXnE,MAAO,CAACC,gBAAgB,WACxB4F,UAAW,eAAC,KAAD,IAPf,8BAaJ,2BAKR,GAGJ,eAAC,KAAD,UACKiP,GAAiBrL,QAAS,EACnB,uCACI,eAAC,KAAD,CAAK1F,GAAI,GAAI/D,MAAO,CAAChF,UAAU,OAAQ0d,cAAc,QAArD,SACI,eAACC,GAAA,EAAD,CAAMC,QAAM,EAACC,YAAU,EAAvB,SACK/D,GAAiBpW,KAAI,SAACkG,GAAD,OAClB,gBAAC+T,GAAA,EAAK/O,KAAN,CAAW5J,MAAO,CAACjF,MAAM,QAAQM,OAAO,QAAQiT,OAAO,qBAAqB7T,OAAO,OAAnF,UACI,gBAACke,GAAA,EAAKG,OAAN,CAAa9Y,MAAO,CAAE+Y,YAAY,MAAO1d,OAAO,SAASV,QAAQ,OAAQ4c,eAAe,QAAQ1c,WAAY,SAA5G,UAAsH,eAACme,GAAA,EAAD,CAAMpa,KAAK,SAAUlD,MAAM,QAAjJ,OACA,gBAACid,GAAA,EAAKM,QAAN,CAAcjZ,MAAO,CAACjF,MAAM,QAAQM,OAAO,QAAQV,QAAQ,OAAQ4c,eAAe,SAAS1c,WAAY,UAAvG,cAAmH,eAAC,KAAD,CAAiBmF,MAAO,CAACtE,MAAM,UAAWC,SAAU,UACvK,eAACgd,GAAA,EAAKM,QAAN,CAAcjZ,MAAO,CAACjF,MAAM,QAAQM,OAAO,OAAOV,QAAQ,OAAQ4c,eAAe,SAAS1c,WAAY,SAAUc,SAAU,OAAOD,MAAM,UAAU0E,WAAW,OAAQqT,WAAW,yBAA/K,SAA0M7O,EAAEsP,iBAJ9L,QAW9B,wBAAK,wBAAK,wBAAK,wBAAK,wBAAK,wBACzB,eAAC,KAAD,CAAKnQ,GAAI,GAAT,SACI,eAAC,KAAD,CACIpG,KAAK,SACLoC,QAAQ,YACRrE,MAAM,UACNmO,QA/NzB,SAAC8D,GAEpB,GADAA,EAAEoB,iBACC+F,GAAiBrL,QAAU,EAAE,CAC5B,IAAMyP,EAAapE,GAAiBA,GAAiBrL,OAAS,GAC9DyP,EAAYV,uBAAwBlD,KAAEmD,OAAOS,EAAYV,uBAAuB,gBAChFxc,IAAMmT,KAAN,UAAclT,EAAd,wBAA4Cid,EACxC,CAAEhd,QAAS,CAAC,+BAA4B5D,MAEvC6D,MAAK,SAAAC,GACFgT,IAAMxT,QAAQ,6BACdmZ,GAAoB,IACpBE,KACA9b,EAAM+F,WAAW8I,iBAAgB,EACjC7O,EAAM2Q,iBAAN,2BAA2B3Q,EAAM4Q,eAAjC,IAAgDC,MAAM,mBAEzD,IACA1N,OAAM,SAAAb,GACH2T,IAAM3T,MAAM,0CACZ6M,QAAQC,IAAI9M,EACf,GACR,MAEG2T,IAAM3T,MAAM,oCAEnB,EAyM+CoK,UAAW,eAAC,KAAD,IANf,+BAcZ,cAuPnC,E,8BC9wBKrC,GAAYlJ,cAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAE1Ba,KAAM,CACF,QAAS,CACLd,OAAQF,EAAMG,QAAQ,IAE1B,gBAAgB,CACZgB,MAAM,OACN0E,WAAW,QAEf,kBAAkB,CACdqF,aAAa,UACbpK,OAAO,QAEX,6BAA8B,CAC1BoK,aAAc,+CAElB,4BAA6B,CACzB9K,QAAS,qBAEb,WAAW,CACP,qBAAsB,sBAE1B,MAAM,CACFe,MAAM,OAEV,UAAU,CACNC,SAAS,OACTD,MAAM,UACN0E,WAAW,SAGnB+Y,KAAM,CACFlZ,gBAAiB1F,EAAMwM,QAAQqS,WAAWC,SAE9CC,OAAQ,CACJ3e,QAAS,UAEbc,MAAM,CACFC,MAAO,UACPC,SAAU,UAEdC,QAAQ,CACJF,MAAO,QACPC,SAAU,SACVyE,WAAW,QAnEU,IAisBdmZ,GAznBG,SAACpgB,GACfmP,QAAQC,IAAIpP,GACZ,IAAM0O,EAAUrE,KAEhB,GADgBwM,cACYnU,mBAAS,CAAC,IAAtC,mBAAOuO,EAAP,KAAeC,EAAf,KACA,EAA4BxO,oBAAS,GAArC,mBAAe2O,GAAf,WACA,EAAwC3O,oBAAS,GAAjD,mBACA,GADA,UACoBA,mBAAS,KAA7B,mBAAO2d,EAAP,KAAWC,EAAX,KACA,EAA0C5d,mBAAS,IAAnD,mBAAO6d,EAAP,KAAsBC,EAAtB,KACA,EAA4C9d,mBAAS,IAArD,mBAAO+d,EAAP,KAAuBC,EAAvB,KACA,EAA4Bhe,mBAAS,IAArC,mBAAeie,GAAf,WACA,EAA4Cje,mBAAS,IAArD,mBAAOke,EAAP,KAAuBC,EAAvB,KACA,EAA8Cne,mBAAS,IAAvD,mBAAOoe,EAAP,KAAwBC,EAAxB,KACA,EAAuCre,mBAAS,IAAhD,mBAAOse,EAAP,KAAqBC,EAArB,KACI9P,EAAI,eAAQF,GAChB,EAA6CvO,mBAAS,IAAtD,mBAAwBwe,GAAxB,WACA,EAA+Cxe,mBAAS,IAAxD,mBAAyBye,IAAzB,WACA,GAA6Cze,mBAAS,IAAtD,qBAAO0e,GAAP,MAAwBC,GAAxB,MAEA,GAAiC3e,mBAC7B,CACI4e,QAAQ,EACRxN,SAAU9T,EAAM+F,WAAW+N,SAC3ByN,WAAYvhB,EAAM+F,YAAc/F,EAAM+F,WAAWwb,WAAavhB,EAAM+F,WAAWwb,WAAY,GAC3FC,cAAcxhB,EAAM+F,YAAc/F,EAAM+F,WAAWyb,cAAgBxhB,EAAM+F,WAAWyb,cAAe,GACnGC,UAAWzhB,EAAM+F,YAAc/F,EAAM+F,WAAW0b,UAAYzhB,EAAM+F,WAAW0b,UAAW,GACxFC,eAAgB1hB,EAAM+F,YAAc/F,EAAM+F,WAAW2b,eAAiB1hB,EAAM+F,WAAW2b,eAAgB,GACvGC,YAAa3hB,EAAM+F,YAAc/F,EAAM+F,WAAW4b,YAAc3hB,EAAM+F,WAAW4b,YAAa,GAC9FC,YAAa5hB,EAAM+F,YAAc/F,EAAM+F,WAAW6b,YAAc5hB,EAAM+F,WAAW6b,YAAa,GAC9FC,SAAU7hB,EAAM+F,YAAc/F,EAAM+F,WAAW8b,SAAW7hB,EAAM+F,WAAW8b,SAAU,GACrFC,SAAS9hB,EAAM+F,YAAc/F,EAAM+F,WAAW+b,SAAW9hB,EAAM+F,WAAW+b,SAAU,GACpFC,iBAAkB/hB,EAAM+F,WAAa/F,EAAM+F,WAAWgc,iBAAkB,GACxEC,aAAchiB,EAAM+F,WAAa/F,EAAM+F,WAAWic,aAAc,GAChEC,eAAiBjiB,EAAM+F,YAAc/F,EAAM+F,WAAWkc,eAAgBjiB,EAAM+F,WAAWkc,eAAiB,CAAC,EACzGC,uBAAuBliB,EAAMmiB,OAA4B,KAAnBniB,EAAMmiB,MAAM5M,KAAYvV,EAAMmiB,MAAM5M,KAAO,GACjF6M,YAAapiB,EAAM+F,YAAc/F,EAAM+F,WAAWqc,YAAapiB,EAAM+F,WAAWqc,YAAa,GAC7FC,eAAeriB,EAAM+F,WAAa/F,EAAM+F,WAAWsc,eAAgB,GACnEC,eAAgBtiB,EAAM+F,WAAa/F,EAAM+F,WAAWuc,eAAgB,GACpEC,4BAA4BviB,EAAM+F,WAAa/F,EAAM+F,WAAWwc,4BAA6B,GAC7FC,gBAAgBxiB,EAAM+F,WAAa/F,EAAM+F,WAAWyc,gBAAiB,KApB7E,qBAAO9O,GAAP,MAAkBC,GAAlB,MAuBAvQ,qBAAU,WACNqf,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,IACH,GAAE,CAAE/iB,EAAM+F,aAEX,IAAM0c,GAAI,WACN5f,IACCrD,IADD,UACQsD,EADR,wCAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACHqd,EAAMrd,EAASC,KAClB,IACAC,OAAM,SAACb,GAEP,GACJ,EAEKygB,GAAc,WAChBlgB,IACCrD,IADD,UACQsD,EADR,yCAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACHge,EAAgBhe,EAASC,KAC5B,IACAC,OAAM,SAACb,GAEP,GACJ,EAEKwgB,GAAiB,WACnBjgB,IACCrD,IADD,UACQsD,EADR,4CAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACH8d,EAAmB9d,EAASC,KAC/B,IACAC,OAAM,SAACb,GAEP,GACJ,EAGKugB,GAAgB,WAClBhgB,IACCrD,IADD,UACQsD,EADR,2CAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACH4d,EAAkB5d,EAASC,KAC9B,IACAC,OAAM,SAACb,GAEP,GACJ,EAEKogB,GAAmB,WACrB7f,IACCrD,IADD,UACQsD,EADR,wCAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEHud,EAAiBvd,EAASC,KAC7B,IACAC,OAAM,SAACb,GAEP,GACJ,EAGKqgB,GAAgB,WACd9f,IACCrD,IADD,UACQsD,EADR,2CAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEHyd,EAAkBzd,EAASC,KAC9B,IACAC,OAAM,SAACb,GAEP,GACR,EAEKsgB,GAAS,WACX/f,IACCrD,IADD,UACQsD,EADR,kCAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEH0d,EAAU1d,EAASC,KACtB,IACAC,OAAM,SAACb,GAEP,GACJ,EACKiS,GAAoB,SAAAC,GAEtB,GADAtD,EAAU,2BAAIC,GAAL,mBAAYqD,EAAEC,OAAOhP,KAAM,MACjB,oBAAhB+O,EAAEC,OAAOhP,MAA6C,KAAjB+O,EAAEC,OAAOhQ,MAAW,CAAC,IAC1Cue,EADyC,iDACxD,uGACUR,EAAgBhO,EAAEC,OAAOhQ,MADnC,SAE2B5B,IAAMrD,IAAN,UAAasD,EAAb,sBAAkC0f,GACjD,CAAEzf,QAAS,CAAC,+BAA4B5D,GAAS,eAAgB,gBAH7E,OAKuB,sBAHb8D,EAFV,QAKgBC,MACRie,GAAoB,IACpBD,EAAmBje,EAASC,QAG5Bge,EAAmB,IACnBC,GAAoBle,EAASC,OAXrC,2CADwD,qDAexD8f,GACH,CACDrP,GAAY,2BAAMD,IAAN,mBAAmBc,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,QAC3D,EAkBKwe,GAAiB,SAAC7d,EAAM8d,GAC1BljB,EAAMijB,gBAAgB7d,GACnBpF,EAAMmjB,UAAU1G,SAASyG,IAGxBljB,EAAMojB,aAAN,uBAAuBpjB,EAAMmjB,WAA7B,CAAwCD,IAE/C,EAyED,OACI,qCAEI,eAAC,KAAD,CAAMlY,UAAW0D,EAAQtM,KAAzB,SACI,gBAAC6I,GAAA,EAAD,WACA,qBAAIpE,MAAO,CAACtE,MAAM,QAAlB,iCACA,wBACI,gCACI,uBAAKyI,UAAU,MAAf,UACI,sBAAKA,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,6BACA,0BACIjK,UAAU,eACVvF,KAAK,cACLK,GAAG,cACHsP,SAAUb,GACV9P,MAAOiP,GAAU0O,YACjBzM,UAAQ,EACR9O,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UAPtD,UASI,yBAAQ7H,MAAO,KACd4b,EAAG9a,KAAI,SAACd,GAAD,OACJ,yBAAuBA,MAAOA,EAAM8Q,KAApC,SACK9Q,EAAMjD,SADEiD,EAAMqB,GADf,OAMW,KAAtBmL,EAAOmR,YACJ,uBAAMpX,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOmR,cACxC,QAGZ,sBAAKpX,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,CAAO4J,IAAI,GAAX,2BACA,eAAC3J,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,aACLK,GAAG,aACHrB,MAAOiP,GAAU6N,WACjBnM,SAAUb,GAEV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,aAGhC,KAArB2E,EAAOsQ,WACJ,uBAAMvW,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOsQ,aACxC,QAGR,sBAAKvW,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,8BACA,0BACIjK,UAAU,eACVvF,KAAK,eACLK,GAAG,eACHsP,SAAUb,GACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UALtD,UAOI,yBAAQ7H,MAAO,KACdgc,EAAelb,KAAI,SAACd,GAAD,OAChB,yBAAuBA,MAAOA,EAAMqB,GAApC,SACKrB,EAAMjD,SADEiD,EAAMqB,GADH,OAMA,KAAvBmL,EAAO+Q,aACJ,uBAAMhX,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO+Q,eACxC,QAGZ,sBAAKhX,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,uBACA,0BACIjK,UAAU,eACVvF,KAAK,iBACLK,GAAG,iBACHrB,MAAOiP,GAAU2O,eACjBjN,SAAUb,GACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACd8b,EAAchb,KAAI,SAACd,GAAD,OACf,yBAAuBA,MAAOA,EAAM8Q,KAApC,SACK9Q,EAAMjD,SADEiD,EAAMqB,GADJ,OAMG,KAAzBmL,EAAOoR,eACJ,uBAAMrX,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOoR,iBACxC,QAGZ,sBAAKrX,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,CAAO4J,IAAI,GAAX,0BACA,eAAC3J,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,YACLK,GAAG,YACHrB,MAAOiP,GAAU+N,UACjBrM,SAAUb,GACVkB,IAAK/B,GAAU2P,mBACfhO,IAAM7O,GAAO,IAAI/C,MAAQgD,OAAO,cAChCI,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,aAGjC,KAApB2E,EAAOwQ,UACJ,uBAAMzW,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOwQ,YACxC,QA4BN/N,GAAUrN,IAAI,GAChB,sBAAK2E,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,gBAAC,KAAD,iCAA2B,KAA3B,YACA,eAACC,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,cACLK,GAAG,cACH2P,IAAK,EACLhR,MAAOiP,GAAUkO,YACjBxM,SAAUb,GACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,kBAO5DoH,GAAUrN,IAAM,GAAsB,OAAjBqN,GAAU4P,OACjC,sBAAKtY,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,uCACA,eAACC,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,WACLK,GAAG,WACH2P,IAAK,EACLhR,MAAOiP,GAAUmO,SACjBzM,SAAUb,GACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,kBAO9D,sBAAKtB,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,4BACA,0BACIjK,UAAU,eACVvF,KAAK,cACLK,GAAG,cACHrB,MAAOiP,GAAUiO,YACjBvM,SAAUb,GACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAEmB,KAAtBwM,EAAO0Q,YACJ,uBAAM3W,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO0Q,cACxC,QAGa,SAAxBjO,GAAUiO,aACX,uCACA,sBAAK3W,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,+CACA,0BACIjK,UAAU,eACVvF,KAAK,8BACLK,GAAG,8BACHrB,MAAOiP,GAAU6O,4BACjBnN,SAAUb,GACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACduc,EAAazb,KAAI,SAACd,GAAD,OACd,yBAAuBA,MAAOA,EAAMqB,GAApC,SACKrB,EAAMjD,SADEiD,EAAMqB,GADL,YAU7B,sBAAKkF,UAAU,uBAAf,SACA,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,mCACA,eAACC,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,kBACLK,GAAG,kBACHrB,MAAOiP,GAAU8O,gBACjBe,OA3ST,SAAA/O,GAAK,sDAEzB,qGACUgO,EAAgB9O,GAAU6N,WADpC,SAE2B1e,IAAMrD,IAAN,UAAasD,EAAb,sBAAkC0f,GACjD,CAAEzf,QAAS,CAAC,+BAA4B5D,GAAS,eAAgB,gBAH7E,OAKuB,qBALvB,OAKgB+D,KACRme,GAAmB,6BAEnBA,GAAmB,IAR3B,4CAFyB,uBAAC,WAAD,wBAazB2B,EAEH,EA6RgC5N,SAAUb,GACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,aAGnC,KAAlB8U,GACF,uBAAMpW,UAAW0D,EAAQpM,MAAzB,SAAiC8e,KACjC,WAKa,QAAhB1N,GAAUtN,KACX,uCACA,sBAAK4E,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,uBACA,0BACIjK,UAAU,eACVvF,KAAK,WACLK,GAAG,WACHrB,MAAOiP,GAAUoO,SACjB1M,SAAUb,GACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACdqc,EAAgBvb,KAAI,SAACd,GAAD,OACjB,yBAAuBA,MAAOA,EAAMqB,GAApC,SACKrB,EAAMjD,SADEiD,EAAMqB,GADF,YAWjC,sBAAKkF,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,6BACA,0BACIjK,UAAU,eACVvF,KAAK,gBACLK,GAAG,gBACHrB,MAAOiP,GAAU8N,cACjBpM,SAAUb,GACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,2BAQZ,sBAAKuG,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,+BACA,0BACIjK,UAAU,eACVvF,KAAK,iBACLK,GAAG,iBACHrB,MAAOiP,GAAUgO,eACjBtM,SAAUb,GACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGsB,KAAzBwM,EAAOyQ,eACJ,uBAAM1W,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOyQ,iBACxC,QAGZ,sBAAK1W,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,yDACA,0BACIjK,UAAU,eACVvF,KAAK,mBACLK,GAAG,mBACHrB,MAAOiP,GAAUqO,iBACjB3M,SAAUb,GACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAEwB,KAA3BwM,EAAO8Q,iBACJ,uBAAM/W,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO8Q,mBACxC,QAGZ,sBAAK/W,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,iCACA,0BACIjK,UAAU,eACVvF,KAAK,iBACLK,GAAG,iBACHrB,MAAOiP,GAAU4O,eACjBlN,SAAUb,GACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACdmc,EAAerb,KAAI,SAACd,GAAD,OAChB,yBAAuBA,MAAOA,EAAMqB,GAApC,SACKrB,EAAMjD,SADEiD,EAAMqB,GADH,OAOE,KAAzBmL,EAAOqR,eACJ,uBAAMtX,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOqR,iBACxC,QAIZ,wBACA,sBAAKtX,UAAU,MAAf,SACA,sBAAKA,UAAU,2BAAf,SAEA,eAAC,KAAD,CAAQwY,QAAQ,kBAAkBhf,KAAK,SAASsJ,KAAK,cAAc2V,cAAc,QAAQ5c,MAAO,CAACC,gBAAgB,UAAWvE,MAAM,QAASmO,QA3Z/I,SAAC8D,GACjBA,EAAEoB,iBACF,IAAM8N,EAAa,CACfnC,WAAY7N,GAAU6N,WACtBE,UAAW/N,GAAU+N,UACrBU,MAAO,CAAC,EACRT,eAAgBhO,GAAUgO,eAC1BC,YAAajO,GAAUiO,YACvBC,YAAalO,GAAUkO,YACvBC,SAAUnO,GAAUmO,SACpB/N,SAAU9T,EAAM+F,WAAW+N,SAC3BzP,eAAeqP,GAAU6N,WACzBQ,iBAAkBrO,GAAUqO,iBAC5BC,aAActO,GAAUsO,aACxBI,YAAa1O,GAAU0O,YACvBC,eAAgB3O,GAAU2O,eAC1BC,eAAe5O,GAAU4O,eACzBd,cAAc9N,GAAU8N,cACxBM,SAASpO,GAAUoO,SACnBS,4BAA4B7O,GAAU6O,4BACtCL,uBAAuBliB,EAAMmiB,OAA4B,KAAnBniB,EAAMmiB,MAAM5M,KAAYvV,EAAMmiB,MAAM5M,KAAO,IAzDlFpE,EAAKoQ,WAAa7N,GAAU6N,WAAa,GAAK,0BAC7CpQ,EAAKmR,eAAiB5O,GAAU4O,eAAiB,GAAK,0BACtDnR,EAAKkR,eAAiB3O,GAAU2O,eAAiB,GAAK,0BACtDlR,EAAKiR,YAAc1O,GAAU0O,YAAc,GAAK,0BAChDjR,EAAK6Q,aAAetO,GAAUsO,aAAe,GAAK,0BAClD7Q,EAAK4Q,iBAAmBrO,GAAUqO,iBAAmB,GAAK,0BAC1D5Q,EAAKwQ,YAAcjO,GAAUiO,YAAc,GAAK,0BAChDxQ,EAAKuQ,eAAiBhO,GAAUgO,eAAiB,GAAK,0BACtDvQ,EAAKsQ,UAAY/N,GAAU+N,UAAY,GAAK,0BACxCvQ,EAAU,eAAKC,IAChB0E,OAAOC,OAAO3E,GAAM4E,OAAM,SAAAtK,GAAC,MAAS,IAALA,CAAJ,IAmD9B5I,IAAMmT,KAAN,UAAclT,EAAd,OAA2B4gB,EAC3B,CAAE3gB,QAAS,CAAC,+BAA4B5D,MAGvC6D,MAAK,SAAAC,GACFoO,GAAU,GACVrR,EAAM2jB,cAAc1gB,EAASC,MAE1BlD,EAAM4jB,WAAW,GAChBX,GAAgB,mBAAoB,SAEpCA,GAAgB,WAAY,QAGnC,IACA9f,OAAM,SAAAb,GAEH,GADA+O,GAAU,GACP/O,EAAMW,UAAYX,EAAMW,SAASC,KAAK,CACrC,IAAImT,EAAe/T,EAAMW,SAASC,KAAKoT,UAAmD,KAAvChU,EAAMW,SAASC,KAAKoT,SAASC,QAAejU,EAAMW,SAASC,KAAKoT,SAASC,QAAW,yCACvIN,IAAM3T,MAAM+T,EAAc,CAACH,SAAUD,IAAME,SAASC,eACvD,MAEGH,IAAM3T,MAAM,4CAA6C,CAAC4T,SAAUD,IAAME,SAASC,eAE1F,IAEGH,IAAM3T,MAAM,0BAA4B,CAAC4T,SAAUD,IAAME,SAASC,eAE7E,mBAiXJ,E,WCrsBK/L,GAAYlJ,cAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAE1Ba,KAAM,CACF,QAAS,CACLd,OAAQF,EAAMG,QAAQ,IAE1B,gBAAgB,CACZgB,MAAM,OACN0E,WAAW,QAEf,kBAAkB,CACdqF,aAAa,UACbpK,OAAO,QAEX,6BAA8B,CAC1BoK,aAAc,+CAElB,4BAA6B,CACzB9K,QAAS,qBAEb,WAAW,CACP,qBAAsB,sBAE1B,MAAM,CACFe,MAAM,OAEV,UAAU,CACNC,SAAS,OACTD,MAAM,UACN0E,WAAW,SAGnB+Y,KAAM,CACFlZ,gBAAiB1F,EAAMwM,QAAQqS,WAAWC,SAE9CC,OAAQ,CACJ3e,QAAS,UAEbc,MAAM,CACFC,MAAO,UACPC,SAAU,UA9DW,IAstCd4d,GAnpCG,SAACpgB,GACf,IAAM0O,EAAUrE,KACVwZ,EAAW7jB,EAAM+F,YAAc/F,EAAM+F,WAAW+d,kBAAoB9jB,EAAM+F,WAAW+d,kBAAkBhe,GAAK,GAC5GM,EAAKpG,EAAM+F,YAAc/F,EAAM+F,WAAW+d,kBAAoB9jB,EAAM+F,WAAW+d,kBAAkB1d,IAAM,GACvG2d,EAAW/jB,EAAM+F,YAAc/F,EAAM+F,WAAa/F,EAAM+F,WAAWD,GAAK,GAC9E,EAA4BpD,oBAAS,GAArC,mBAAO0O,EAAP,KAAeC,EAAf,KACA,EAA4B3O,mBAAS,CAAC,GAAtC,mBAAOuO,EAAP,KAEA,GAFA,KACQ,eAAQA,GACyCvO,mBACrD,CACIshB,sBAAsB,GACtBC,+BAA+B,GAC/BC,qBAAsB,GACtBC,qBAAsB,GACtBC,mCAAmC,GACnCC,kBAAoB,MAP5B,mBAAOC,EAAP,KAA8BC,EAA9B,KAUA,EAAiC7hB,mBAC7B,CACI8hB,YAAaT,EACbU,oBAAqB,CAAC,EACtB3Q,SAAU+P,EACV5B,eAAgB,CAAC,EACjByC,aAAc,CAAC,EACfC,YAAa,CAAC,EACdC,yBAAyB,CAAC,IARlC,mBAAOlR,EAAP,KAWA,GAXA,KAWqDhR,mBACjD,CACImiB,0BAA0B,GAC1BC,8BAA8B,GAC9BC,eAAe,GACfC,2BAA2B,GAC3BC,0BAA0B,GAC1BC,gCAAgC,GAChCC,+BAA+B,GAC/BC,qBAAqB,MAT7B,mBAAOX,EAAP,KAA4BY,EAA5B,KAYA,EAA2C3iB,mBACvC,CACI4iB,yBAAyB,GACzBC,4BAA4B,GAC5BC,uCAAuC,GACvCC,+CAA+C,GAC/CC,sBAAsB,GACtBrB,kBAAkB,GAClBsB,mBAAmB,GACnBC,kBAAmB,GACnBC,qCAAqC,GACrCC,eAAe,GACfC,qBAAqB,GACrBC,UAAU,GACVC,iBAAiB,GACjBC,gCAAgC,GAChCC,mBAAmB,KAhB3B,mBAAOlE,EAAP,KAAuBmE,EAAvB,KAmBA,EAAuC1jB,mBACnC,CACI2jB,iBAAiB,GACjBC,oBAAqB,GACrBC,kBAAmB,GACnBC,oBAAoB,GACpBC,sBAAwB,KANhC,mBAAO/B,EAAP,KAAqBgC,EAArB,KAUA,EAAqChkB,mBACjC,CACIikB,aAAc,GACdC,WAAa,GACbC,gBAAiB,GACjBC,MAAO,GACPC,YAAa,KANrB,mBAAOpC,EAAP,KAAoBqC,EAApB,KASA5jB,qBAAU,WAEHpD,EAAM+F,aACLsf,EAAuBrlB,EAAM+F,WAAW0e,qBAA+D,OAAvCzkB,EAAM+F,WAAW0e,oBAA6BzkB,EAAM+F,WAAW0e,oBAAsB,CAAC,GACtJ2B,EAAkBpmB,EAAM+F,WAAWkc,gBAAqD,OAAlCjiB,EAAM+F,WAAWkc,eAAwBjiB,EAAM+F,WAAWkc,eAAiB,CAAC,GAClIsC,EAAyBvkB,EAAM+F,WAAW6e,0BAAwE,OAA5C5kB,EAAM+F,WAAW6e,yBAAkC5kB,EAAM+F,WAAW6e,yBAA2B,CAAC,GACtK8B,EAAgB1mB,EAAM+F,WAAW2e,cAAiD,OAAhC1kB,EAAM+F,WAAW2e,aAAqB1kB,EAAM+F,WAAW2e,aAAe,CAAC,GACzHsC,EAAehnB,EAAM+F,WAAW4e,aAA+C,OAA/B3kB,EAAM+F,WAAW4e,YAAoB3kB,EAAM+F,WAAW4e,YAAc,CAAC,GAGlH3kB,EAAM+F,WAAWkhB,+BAAuH,IAAtFpR,OAAOqR,KAAKlnB,EAAM+F,WAAWkhB,8BAA8BhF,gBAAgB3R,QAAkD,OAAlCtQ,EAAM+F,WAAWkc,eAC7JmE,EAAkB,2BAAInE,GAAmBjiB,EAAM+F,WAAWkhB,8BAA8BhF,iBAExFmE,EAAkB,2BAAInE,GAAmBjiB,EAAM+F,WAAWkc,iBAGrE,GAAE,CAACjiB,EAAM+F,aACV,IAAMkd,EAAiB,SAAC7d,EAAM8d,GACvBljB,EAAMmjB,UAAU1G,SAASyG,IAExBljB,EAAMojB,aAAN,uBAAuBpjB,EAAMmjB,WAA7B,CAAwCD,KAE5CljB,EAAMijB,gBAAgB7d,EACzB,EAEK+hB,EAAuC,SAAA3S,GAGzC6Q,EAAsB,2BAAMZ,GAAN,mBAA6BjQ,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,QAE/E,EAEK2iB,EAAkC,SAAA5S,GAEpC4R,EAAiB,2BAAMnE,GAAN,mBAAwBzN,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,QACrE,EAGK4iB,EADoBxR,OAAOC,OAAOmM,GACJ7R,QAAO,SAAC3E,GAAD,MAAU,SAAJA,CAAN,IAErC6b,EAAyC,SAAA9S,GAE3C+P,EAAwB,2BAAMD,GAAN,mBAA+B9P,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,QACnF,EAGK8iB,EAD2B1R,OAAOC,OAAOwO,GACGlU,QAAO,SAAC3E,GAAD,MAAU,SAAJA,CAAN,IAEnD+b,EAAgC,SAAAhT,GAElCkS,EAAe,2BAAMhC,GAAN,mBAAsBlQ,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,QACjE,EAGKgjB,EADc5R,OAAOC,OAAO4O,GACLtU,QAAO,SAAC3E,GAAD,MAAU,SAAJA,CAAN,IAEpC,EAA8B/I,mBAAS,GAAvC,mBAAOglB,EAAP,KAAgBC,EAAhB,KACMC,GAA+B,SAAApT,GAGjC,GAAoB,SAAjBA,EAAEC,OAAOhQ,MAAgB,CACxB,IAAMojB,EAAWH,EAAS,EACvBG,GAAU,GAAKA,GAAW,GACzBF,EAAWE,EAElB,CACD,GAAoB,UAAjBrT,EAAEC,OAAOhQ,MAAiB,CACzB,IAAMojB,EAAWH,EAAS,EAKtBC,EAFDE,GAAW,EAEC,EAEAA,EAElB,CACDb,EAAc,2BAAMrC,GAAN,mBAAqBnQ,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,QAC/D,EA0FD,OAFA0K,QAAQC,IAAIkV,GAGR,qCACI,eAAC,KAAD,CAAMtZ,UAAW0D,EAAQtM,KAAzB,SACI,gBAAC6I,GAAA,EAAD,WAEA,sDACI,gCACI,uBAAKD,UAAU,MAAf,UAEA,sBAAKA,UAAU,8CAA8CnE,MAAO,CAACC,gBAAgB,iBAAkBlF,MAAM,OAAQM,OAAO,OAAQK,MAAM,OAAQ0E,WAAW,QAA7J,kCAEI,sBAAK+D,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,+CACA,0BACIjK,UAAU,eACVvF,KAAK,4BACLK,GAAG,4BACHrB,MAAOggB,EAAoBI,0BAC3BzP,SAAU+R,EACVtgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGiC,KAApCwM,EAAO4T,0BACR,uBAAM7Z,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO4T,4BACpC,QAGqC,SAAhDJ,EAAoBI,2BACrB,sBAAK7Z,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,qDACA,0BACIjK,UAAU,eACVvF,KAAK,gCACLK,GAAG,gCACHrB,MAAOggB,EAAoBK,8BAC3B1P,SAAU+R,EACVtgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,0BAAQA,MAAM,KAAd,cAAqB,MAArB,YACA,yBAAQA,MAAM,aAAd,wBACA,yBAAQA,MAAM,aAAd,wBACA,0BAAQA,MAAM,YAAd,cAA4B,KAA5B,gBAGqC,KAAxCwM,EAAO6T,8BACR,uBAAM9Z,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO6T,gCACpC,QAIJ,WAAP1e,GACD,sBAAK4E,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,gCACA,0BACIjK,UAAU,eACVvF,KAAK,iBACLK,GAAG,iBACHrB,MAAOggB,EAAoBM,eAC3B3P,SAAU+R,EACVtgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGsB,KAAzBwM,EAAO8T,eACR,uBAAM/Z,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO8T,iBACpC,QAIZ,sBAAK/Z,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,8DACA,0BACIjK,UAAU,eACVvF,KAAK,6BACLK,GAAG,6BACHrB,MAAOggB,EAAoBO,2BAC3B5P,SAAU+R,EACVtgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGkC,KAArCwM,EAAO+T,2BACR,uBAAMha,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO+T,6BACpC,QAGZ,sBAAKha,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,wEACA,0BACIjK,UAAU,eACVvF,KAAK,4BACLK,GAAG,4BACHrB,MAAOggB,EAAoBQ,0BAC3B7P,SAAU+R,EACVtgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGiC,KAApCwM,EAAOgU,0BACR,uBAAMja,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOgU,4BACpC,QAGZ,sBAAKja,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,uEACA,0BACIjK,UAAU,eACVvF,KAAK,kCACLK,GAAG,kCACHrB,MAAOggB,EAAoBS,gCAC3B9P,SAAU+R,EACVtgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGuC,KAA1CwM,EAAOiU,gCACR,uBAAMla,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOiU,kCACpC,QAGZ,sBAAKla,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,4DACA,0BACIjK,UAAU,eACVvF,KAAK,iCACLK,GAAG,iCACHrB,MAAOggB,EAAoBU,+BAC3B/P,SAAU+R,EACVtgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGsC,KAAzCwM,EAAOkU,+BACR,uBAAMna,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOkU,iCACpC,QAIZ,sBAAKna,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,uDACA,0BACIjK,UAAU,eACVvF,KAAK,uBACLK,GAAG,uBACHrB,MAAOggB,EAAoBW,qBAC3BhQ,SAAU+R,EACVtgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAG4B,KAA/BwM,EAAOmU,qBACR,uBAAMpa,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOmU,uBACpC,QAGZ,wBACA,wBACA,sBAAKpa,UAAU,8CAA8CnE,MAAO,CAACC,gBAAgB,OAAQlF,MAAM,OAAQM,OAAO,OAAQK,MAAM,OAAQ0E,WAAW,QAAnJ,mCACA,sBAAK+D,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,8BACA,0BACIjK,UAAU,eACVvF,KAAK,eACLK,GAAG,eACHrB,MAAOkgB,EAAYgC,aACnBvR,SAAUwS,GACV/gB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGoB,KAAvBwM,EAAO0V,aACR,uBAAM3b,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO0V,eACpC,QAGZ,sBAAK3b,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,4BACA,0BACIjK,UAAU,eACVvF,KAAK,aACLK,GAAG,aACHrB,MAAOkgB,EAAYiC,WACnBxR,SAAUwS,GACV/gB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGkB,KAArBwM,EAAO2V,WACR,uBAAM5b,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO2V,aACpC,QAGZ,sBAAK5b,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,8DACA,0BACIjK,UAAU,eACVvF,KAAK,kBACLK,GAAG,kBACHrB,MAAOkgB,EAAYkC,gBACnBzR,SAAUwS,GACV/gB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGuB,KAA1BwM,EAAO4V,gBACR,uBAAM7b,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO4V,kBACpC,QAGZ,sBAAK7b,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,sBACA,0BACIjK,UAAU,eACVvF,KAAK,QACLK,GAAG,QACHrB,MAAOkgB,EAAYmC,MACnB1R,SAAUwS,GACV/gB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGa,KAAhBwM,EAAO6V,MACR,uBAAM9b,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO6V,QACpC,QAGZ,sBAAK9b,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,4BACA,0BACIjK,UAAU,eACVvF,KAAK,cACLK,GAAG,cACHrB,MAAOkgB,EAAYoC,YACnB3R,SAAUwS,GACV/gB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGmB,KAAtBwM,EAAO8V,YACR,uBAAM/b,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO8V,cACpC,QAGZ,gBAACe,GAAA,EAAD,CAASC,SAAO,EAAhB,UACI,wGAA0E,OAA1E,qDACA,0CAAYL,QAEhB,wBACA,wBAC+B,yBAA/B1nB,EAAM+F,WAAWqc,aAA0C,uCAC3D,sBAAKpX,UAAU,8CAA8CnE,MAAO,CAACC,gBAAgB,UAAWlF,MAAM,OAAQM,OAAO,OAAQK,MAAM,OAAQ0E,WAAW,QAAtJ,kDACA,sBAAK+D,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,2CACA,0BACIjK,UAAU,eACVvF,KAAK,2BACLK,GAAG,2BACHrB,MAAOwd,EAAeqD,yBACtBlQ,SAAUgS,EACVvgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGgC,KAAnCwM,EAAOqU,yBACR,uBAAMta,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOqU,2BACpC,QAGZ,sBAAKta,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,mDACA,0BACIjK,UAAU,eACVvF,KAAK,8BACLK,GAAG,8BACHrB,MAAOwd,EAAesD,4BACtBnQ,SAAUgS,EACVvgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGmC,KAAtCwM,EAAOsU,4BACR,uBAAMva,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOsU,8BACpC,QAGZ,sBAAKva,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,qEACA,0BACIjK,UAAU,eACVvF,KAAK,yCACLK,GAAG,yCACHrB,MAAOwd,EAAeuD,uCACtBpQ,SAAUgS,EACVvgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAG8C,KAAjDwM,EAAOuU,uCACR,uBAAMxa,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOuU,yCACpC,QAGZ,sBAAKxa,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,uEACA,0BACIjK,UAAU,eACVvF,KAAK,iDACLK,GAAG,iDACHrB,MAAOwd,EAAewD,+CACtBrQ,SAAUgS,EACVvgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGsD,KAAzDwM,EAAOwU,+CACR,uBAAMza,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOwU,iDACpC,QAGZ,sBAAKza,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,sCACA,0BACIjK,UAAU,eACVvF,KAAK,wBACLK,GAAG,wBACHrB,MAAOwd,EAAeyD,sBACtBtQ,SAAUgS,EACVvgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAG6B,KAAhCwM,EAAOyU,sBACR,uBAAM1a,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOyU,wBACpC,QAGZ,sBAAK1a,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,mCACA,0BACIjK,UAAU,eACVvF,KAAK,oBACLK,GAAG,oBACHrB,MAAOwd,EAAeoC,kBACtBjP,SAAUgS,EACVvgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGyB,KAA5BwM,EAAOoT,kBACR,uBAAMrZ,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOoT,oBACpC,QAGZ,sBAAKrZ,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,qCACA,0BACIjK,UAAU,eACVvF,KAAK,qBACLK,GAAG,qBACHrB,MAAOwd,EAAe0D,mBACtBvQ,SAAUgS,EACVvgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAG0B,KAA7BwM,EAAO0U,mBACR,uBAAM3a,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO0U,qBACpC,QAGZ,sBAAK3a,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,2DACA,0BACIjK,UAAU,eACVvF,KAAK,oBACLK,GAAG,oBACHrB,MAAOwd,EAAe2D,kBACtBxQ,SAAUgS,EACVvgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGyB,KAA5BwM,EAAO2U,kBACR,uBAAM5a,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO2U,oBACpC,QAGZ,sBAAK5a,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,4DACA,0BACIjK,UAAU,eACVvF,KAAK,uCACLK,GAAG,uCACHrB,MAAOwd,EAAe4D,qCACtBzQ,SAAUgS,EACVvgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAG4C,KAA/CwM,EAAO4U,qCACR,uBAAM7a,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO4U,uCACpC,QAGZ,gBAACiC,GAAA,EAAD,CAASC,SAAO,EAAhB,UACI,4FACA,0CAAYV,EAAU/W,aAE1B,wBACA,2BAEgC,yBAA/BtQ,EAAM+F,WAAWqc,aAA0C,uCAC5D,sBAAKpX,UAAU,8CAA8CnE,MAAO,CAACC,gBAAgB,UAAWlF,MAAM,OAAQM,OAAO,OAAQK,MAAM,OAAQ0E,WAAW,QAAtJ,kDACA,sBAAK+D,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,4JACA,0BACIjK,UAAU,eACVvF,KAAK,iBACLK,GAAG,iBACHrB,MAAOwd,EAAe6D,eACtB1Q,SAAUgS,EACVvgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGsB,KAAzBwM,EAAO6U,eACR,uBAAM9a,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO6U,iBACpC,QAGZ,sBAAK9a,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,sJACA,0BACIjK,UAAU,eACVvF,KAAK,uBACLK,GAAG,uBACHrB,MAAOwd,EAAe8D,qBACtB3Q,SAAUgS,EACVvgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAG4B,KAA/BwM,EAAO8U,qBACR,uBAAM/a,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO8U,uBACpC,QAGZ,sBAAK/a,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,0FACA,0BACIjK,UAAU,eACVvF,KAAK,kBACLK,GAAG,kBACHrB,MAAOwd,EAAe+F,gBACtB5S,SAAUgS,EACVvgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGuB,KAA1BwM,EAAO+W,gBACR,uBAAMhd,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO+W,kBACpC,QAGZ,sBAAKhd,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,oHACA,0BACIjK,UAAU,eACVvF,KAAK,YACLK,GAAG,YACHrB,MAAOwd,EAAe+D,UACtB5Q,SAAUgS,EACVvgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGiB,KAApBwM,EAAO+U,UACR,uBAAMhb,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO+U,YACpC,QAGZ,sBAAKhb,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,2EACA,0BACIjK,UAAU,eACVvF,KAAK,mBACLK,GAAG,mBACHrB,MAAOwd,EAAegE,iBACtB7Q,SAAUgS,EACVvgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGwB,KAA3BwM,EAAOgV,iBACR,uBAAMjb,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOgV,mBACpC,QAGZ,sBAAKjb,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,oGACA,0BACIjK,UAAU,eACVvF,KAAK,kCACLK,GAAG,kCACHrB,MAAOwd,EAAeiE,gCACtB9Q,SAAUgS,EACVvgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGuC,KAA1CwM,EAAOiV,gCACR,uBAAMlb,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOiV,kCACpC,QAGZ,sBAAKlb,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,yEACA,0BACIjK,UAAU,eACVvF,KAAK,qBACLK,GAAG,qBACHrB,MAAOwd,EAAekE,mBACtB/Q,SAAUgS,EACVvgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAG0B,KAA7BwM,EAAOkV,mBACR,uBAAMnb,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOkV,qBACpC,QAGZ,gBAAC2B,GAAA,EAAD,CAASC,SAAO,EAAhB,UACI,4FACA,yCAAWV,EAAU/W,aAEzB,wBACA,2BAEA,sBAAKtF,UAAU,8CAA8CnE,MAAO,CAACC,gBAAgB,UAAWlF,MAAM,OAAQM,OAAO,OAAQK,MAAM,OAAQ0E,WAAW,QAAtJ,yDACA,sBAAK+D,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,oEACA,0BACIjK,UAAU,eACVvF,KAAK,wBACLK,GAAG,wBACHrB,MAAO6f,EAAsBN,sBAC7B5O,SAAUkS,EACVzgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAG6B,KAAhCwM,EAAO+S,sBACR,uBAAMhZ,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO+S,wBACpC,QAGmC,SAA9CM,EAAsBN,uBAAmC,uCAC1D,sBAAKhZ,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,uGACA,0BACIjK,UAAU,eACVvF,KAAK,iCACLK,GAAG,iCACHrB,MAAO6f,EAAsBL,+BAC7B7O,SAAUkS,EACVzgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGsC,KAAzCwM,EAAOgT,+BACR,uBAAMjZ,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOgT,iCACpC,QAGZ,sBAAKjZ,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,8EACA,0BACIjK,UAAU,eACVvF,KAAK,uBACLK,GAAG,uBACHrB,MAAO6f,EAAsBJ,qBAC7B9O,SAAUkS,EACVzgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAG4B,KAA/BwM,EAAOiT,qBACR,uBAAMlZ,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOiT,uBACpC,QAGZ,sBAAKlZ,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,wEACA,0BACIjK,UAAU,eACVvF,KAAK,uBACLK,GAAG,uBACHrB,MAAO6f,EAAsBH,qBAC7B/O,SAAUkS,EACVzgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAG4B,KAA/BwM,EAAOkT,qBACR,uBAAMnZ,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOkT,uBACpC,QAGZ,sBAAKnZ,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,8FACA,0BACIjK,UAAU,eACVvF,KAAK,qCACLK,GAAG,qCACHrB,MAAO6f,EAAsBF,mCAC7BhP,SAAUkS,EACVzgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAG0C,KAA7CwM,EAAOmT,mCACR,uBAAMpZ,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOmT,qCACpC,QAGZ,sBAAKpZ,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,mCACA,0BACIjK,UAAU,eACVvF,KAAK,oBACLK,GAAG,oBACHrB,MAAO6f,EAAsBD,kBAC7BjP,SAAUkS,EACVzgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGyB,KAA5BwM,EAAOoT,kBACR,uBAAMrZ,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOoT,oBACpC,WAIZ,gBAACyD,GAAA,EAAD,CAASC,SAAO,EAAhB,UACI,2FACA,yCAAWR,EAAiBjX,aAGhC,wBACA,wBACA,sBAAKtF,UAAU,8CAA8CnE,MAAO,CAACC,gBAAgB,UAAWlF,MAAM,OAAQM,OAAO,OAAQK,MAAM,OAAQ0E,WAAW,QAAtJ,qCACCjH,EAAM+F,YAAuD,WAAzC/F,EAAM+F,WAAW+d,kBAAkB1d,KACxD,uCACA,sBAAK4E,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,yEACA,0BACIjK,UAAU,eACVvF,KAAK,mBACLK,GAAG,mBACHrB,MAAOigB,EAAa2B,iBACpBjR,SAAUoS,EACV3gB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGwB,KAA3BwM,EAAOoV,iBACR,uBAAMrb,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOoV,mBACpC,QAIZ,sBAAKrb,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,qFACA,0BACIjK,UAAU,eACVvF,KAAK,sBACLK,GAAG,sBACHrB,MAAOigB,EAAa4B,oBACpBlR,SAAUoS,EACV3gB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAG2B,KAA9BwM,EAAOqV,oBACR,uBAAMtb,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOqV,sBACpC,WAIXtmB,EAAM+F,WAAW+d,mBAA8D,SAAzC9jB,EAAM+F,WAAW+d,kBAAkB1d,KAC1E,uCACA,sBAAK4E,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,0EACA,0BACIjK,UAAU,eACVvF,KAAK,oBACLK,GAAG,oBACHrB,MAAOigB,EAAa6B,kBACpBnR,SAAUoS,EACV3gB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGyB,KAA5BwM,EAAOsV,kBACR,uBAAMvb,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOsV,oBACpC,QAGZ,sBAAKvb,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,sDACA,0BACIjK,UAAU,eACVvF,KAAK,sBACLK,GAAG,sBACHrB,MAAOigB,EAAa8B,oBACpBpR,SAAUoS,EACV3gB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAG2B,KAA9BwM,EAAOuV,oBACR,uBAAMxb,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOuV,sBACpC,QAGZ,sBAAKxb,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,mGACA,0BACIjK,UAAU,eACVvF,KAAK,wBACLK,GAAG,wBACHrB,MAAOigB,EAAa+B,sBACpBrR,SAAUoS,EACV3gB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAG6B,KAAhCwM,EAAOwV,sBACR,uBAAMzb,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOwV,wBACpC,WAIZ,gBAACqB,GAAA,EAAD,CAASC,SAAO,EAAhB,UACI,8EAAgD,MAAhD,yCACA,yCAAWN,EAASnX,aAGvBc,EAAS,eAAC4G,GAAA,EAAD,IAAc,GACxB,wBACA,sBAAKhN,UAAU,MAAf,SACA,uBAAKA,UAAU,4BAAf,UACA,eAAC,KAAD,CAAQwY,QAAQ,OAAO1V,KAAK,aAAa2V,cAAc,OAAO5c,MAAO,CAACC,gBAAgB,UAAWvE,MAAM,QAASmO,QAAS,kBAAIuS,EAAgB,QAAQ,QAA5B,IACzH,eAAC,KAAD,CAAQO,QAAQ,kBAAkB1V,KAAK,cAAc2V,cAAc,QAAQ5c,MAAO,CAACC,gBAAgB,UAAWvE,MAAM,QAASmO,QAp7BjI,SAAC8D,GACjBA,EAAEoB,iBAEElC,EAAU8Q,YAAaT,EACvBrQ,EAAU+Q,oBAAqBA,EAC/B/Q,EAAUI,SAAU+P,EACpBnQ,EAAUuO,eAAgBA,EAC1BvO,EAAUgR,aAAaA,EACvBhR,EAAUiR,YAAYA,EACtBjR,EAAUkR,yBAAyBN,EACnCzhB,IAAMolB,IAAN,UAAanlB,EAAb,eAA2BihB,EAA3B,wBAA0DrQ,EAC1D,CAAE3Q,QAAS,CAAC,+BAA4B5D,MAGvC6D,MAAK,SAAAC,GACFoO,GAAU,GACVrR,EAAM2jB,cAAc1gB,EAASC,MAE7B+f,EAAgB,WAAY,mBAE/B,IACA9f,OAAM,SAAAb,GAEH,GADA+O,GAAU,GACP/O,EAAMW,UAAYX,EAAMW,SAASC,KAAK,CACrC,IAAImT,EAAe/T,EAAMW,SAASC,KAAKoT,UAAmD,KAAvChU,EAAMW,SAASC,KAAKoT,SAASC,QAAejU,EAAMW,SAASC,KAAKoT,SAASC,QAAW,yCACvIN,IAAM3T,MAAM+T,EACf,MAEGJ,IAAM3T,MAAM,4CAEnB,GAER,oBA65BJ,ECrtCK+H,GAAYlJ,cAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAE1Ba,KAAM,CACF,QAAS,CACLd,OAAQF,EAAMG,QAAQ,IAE1B,gBAAgB,CACZgB,MAAM,OACN0E,WAAW,QAEf,kBAAkB,CACdqF,aAAa,UACbpK,OAAO,QAEX,6BAA8B,CAC1BoK,aAAc,+CAElB,4BAA6B,CACzB9K,QAAS,qBAEb,WAAW,CACP,qBAAsB,sBAE1B,MAAM,CACFe,MAAM,OAEV,UAAU,CACNC,SAAS,OACTD,MAAM,UACN0E,WAAW,SAGnB+Y,KAAM,CACFlZ,gBAAiB1F,EAAMwM,QAAQqS,WAAWC,SAE9CC,OAAQ,CACJ3e,QAAS,UAEbc,MAAM,CACFC,MAAO,UACPC,SAAU,UA9DW,IAwkCd0lB,GArgCO,SAACloB,GACnB,IAAM0O,EAAUrE,KAChB,EAA4B3H,oBAAS,GAArC,mBAAO0O,EAAP,KAAeC,EAAf,KACA,EAA4B3O,mBAAS,CAAC,GAAtC,mBAAOuO,EAAP,KAAeC,EAAf,KACIC,EAAI,eAAQF,GAChB9B,QAAQC,IAAIpP,EAAM+F,YAClB,IAAM8d,EAAW7jB,EAAM+F,YAAc/F,EAAM+F,WAAW+d,kBAAoB9jB,EAAM+F,WAAW+d,kBAAkBhe,GAAK,GAC5Gie,EAAW/jB,EAAM+F,YAAc/F,EAAM+F,WAAa/F,EAAM+F,WAAWD,GAAK,GAC9E,EAAsCpD,mBAAS,IAA/C,mBAAOylB,EAAP,KAAoBC,EAApB,KACA,EAAwC1lB,oBAAS,GAAjD,mBAAO2lB,EAAP,KAAqBC,EAArB,KAgBM1E,EAfgB,SAAArgB,GAClB,IAAIC,EAAQ,IAAIC,KACZC,EAAYH,EAAII,MAAM,KACtBC,EAAa,IAAIH,MAAMC,EAAU,GAAIA,EAAU,GAAK,GAAIA,EAAU,IAClEG,EAAY,IAAIJ,KAAKG,GACrBE,EAAUN,EAAMO,cAAgBF,EAAUE,cAC1CC,EAAIR,EAAMS,WAAaJ,EAAUI,WAIjC,OAHID,EAAI,GAAY,IAANA,GAAWR,EAAMU,UAAYL,EAAUK,YAC7CJ,IAEQ,IAAZA,EACWE,EAAI,YAERF,CAClB,CACgBR,CAAckD,GAAOxG,EAAM+F,WAAW+d,mBAAqB9jB,EAAM+F,WAAW+d,kBAAkBxd,YAActG,EAAM+F,WAAW+d,kBAAkBxd,YAAc,GAAGG,OAAO,eAExL,EAAiC/D,mBAC7B,CACI6lB,iBAAkB,CAAC,EACnBC,kBAAmB,CAAC,EACpBC,cAAe,GACfC,eAAgB,GAChBlE,YAAY,GACZ1Q,SAAU9T,EAAM+F,WAAc/F,EAAM+F,WAAWD,GAAK,GACpD6iB,MAAO,CAAC,EACRC,MAAO,CAAC,EACRC,eAAgB,CAAC,EACjBC,gBAAiB,CAAC,EAClBC,gBAAgB,CAAC,EACjBC,iBAAiB,CAAC,EAClBC,OAAO,CAAC,EACRC,IAAI,CAAC,IAfb,mBAAOxV,EAAP,KAsBA,GAtBA,KAsBsChR,mBAClC,CACIymB,KAAK,GACL9jB,OAAO,MAHf,mBAAO+jB,EAAP,KAAqBC,EAArB,KAMA,EAAwC3mB,mBACpC,CACI4mB,MAAO,GACPC,QAAU,KAHlB,mBAAOC,EAAP,KAAsBC,EAAtB,KAMMC,EAA4B,SAAAlV,GAE9BmV,EAAW,2BAAMC,GAAN,mBAAkBpV,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,QACzD,EACD,EAA+B/B,mBAC3B,CACIknB,SAAS,GACTC,oBAAoB,GACpBC,kBAAkB,KAJ1B,mBAAOF,EAAP,KAAiBD,EAAjB,KAOMI,EAA2B,SAAAvV,GAET,OAAjBA,EAAEC,OAAOhQ,OACR4kB,EAAc,2BAAMD,GAAN,mBAAsB5U,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,SAC7DulB,EAAoB,CAChBb,KAAM,GACN9jB,OAAS,KAEb4kB,GAAkB,CACdd,KAAM,GACN9jB,OAAS,KAGbijB,GAAgB,KAGhBe,EAAc,2BAAMD,GAAN,mBAAsB5U,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,SAE7D6jB,GAAgB,GAEvB,EACK4B,EAA4B,SAAA1V,GAEV,OAAjBA,EAAEC,OAAOhQ,OACRglB,EAAe,2BAAMD,GAAN,mBAAuBhV,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,SAC/D0lB,GAAqB,CACjBhB,KAAM,GACN9jB,OAAS,KAEb+kB,GAAmB,CACfjB,KAAM,GACN9jB,OAAS,KAGbijB,GAAgB,KAEhBmB,EAAe,2BAAMD,GAAN,mBAAuBhV,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,SAE/D6jB,GAAgB,GAEvB,EACD,EAA+C5lB,mBAC3C,CACIymB,KAAM,GACN9jB,OAAS,KAHjB,mBAAOkjB,EAAP,KAAyByB,EAAzB,KAMA,EAAiDtnB,mBAC7C,CACI4mB,MAAO,GACPC,QAAU,KAHlB,mBAAOf,EAAP,KAA0B2B,GAA1B,KAMME,GAAgC,SAAA7V,GAElCwV,EAAmB,2BAAMzB,GAAN,mBAA0B/T,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,SAE7C,QAAtB2kB,EAAa/jB,QAAkBmP,EAAEC,OAAOhQ,MACvC6jB,GAAgB,EAKvB,EACKgC,GAAiC,SAAA9V,GAEnC2V,GAAoB,2BAAM3B,GAAN,mBAA2BhU,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,SAE7C,QAAxB+kB,EAAcD,SAAmB/U,EAAEC,OAAOhQ,MACzC6jB,GAAgB,EAKvB,EACD,GAA2C5lB,mBACvC,CACIymB,KAAM,GACN9jB,OAAS,KAHjB,qBAAOwjB,GAAP,MAAuBoB,GAAvB,MAMA,GAA6CvnB,mBACzC,CACI4mB,MAAO,GACPC,QAAU,KAHlB,qBAAOT,GAAP,MAAwBsB,GAAxB,MAMMG,GAAuB,SAAA/V,GAEzByV,GAAiB,2BAAMpB,IAAN,mBAAwBrU,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,SAErC,OAA1B8jB,EAAiBljB,QAAkC,QAAjBmP,EAAEC,OAAOhQ,MAC1C6jB,GAAgB,GACe,OAA1BC,EAAiBljB,QAAkC,OAAjBmP,EAAEC,OAAOhQ,MAChD6jB,GAAgB,GAEhBA,GAAgB,EAEvB,EACKkC,GAAwB,SAAAhW,GAE1B4V,GAAkB,2BAAMtB,IAAN,mBAAyBtU,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,SAErC,OAA5B+jB,EAAkBe,SAAmC,QAAjB/U,EAAEC,OAAOhQ,MAC5C6jB,GAAgB,GACiB,OAA5BE,EAAkBe,SAAmC,OAAjB/U,EAAEC,OAAOhQ,MAClD6jB,GAAgB,GAEhBA,GAAgB,EAEvB,EACD,GAA+B5lB,mBAC3B,CACI+nB,mBAAoB,KAF5B,qBAAOC,GAAP,MAAiBC,GAAjB,MAUA,GAAiCjoB,mBAC7B,CACIkoB,qBAAsB,GACtBC,qBAAuB,GACvBC,UAAU,GACVC,SAAS,GACTC,UAAW,KANnB,qBAAOC,GAAP,MAAkBC,GAAlB,MASMC,GAA6B,SAAA3W,GAE/B0W,GAAY,2BAAMD,IAAN,mBAAmBzW,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,QAC3D,EACD,GAA2B/B,mBACvB,CACIooB,UAAU,GACVC,SAAS,GACTC,UAAW,KAJnB,qBAAO/B,GAAP,MAAemC,GAAf,MAOAhoB,qBAAU,WAEHpD,EAAM+F,aACF/F,EAAM+F,WAAW0b,WAA0C,KAA7BzhB,EAAM+F,WAAW0b,UAC9C2G,EAAepoB,EAAM+F,WAAW0b,WAEhC2G,EAAe,IAEnBuB,EAAY3pB,EAAM+F,YAAsC,OAAvB/F,EAAM+F,WAAWmjB,IAAYlpB,EAAM+F,WAAWmjB,IAAM,CAAC,GACtFG,EAAerpB,EAAM+F,YAAwC,OAAzB/F,EAAM+F,WAAW4iB,MAAc3oB,EAAM+F,WAAW4iB,MAAQ,CAAC,GAC7FqB,EAAoBhqB,EAAM+F,YAAmD,OAApC/F,EAAM+F,WAAWwiB,iBAAyBvoB,EAAM+F,WAAWwiB,iBAAmB,CAAC,GACxH0B,GAAkBjqB,EAAM+F,YAAgD,OAAlC/F,EAAM+F,WAAW8iB,eAAwB7oB,EAAM+F,WAAW8iB,eAAiB,CAAC,GAClH8B,GAAY3qB,EAAM+F,YAAkD,OAAnC/F,EAAM+F,WAAWgjB,gBAAyB/oB,EAAM+F,WAAWgjB,gBAAkB,CAAC,GAC/GmC,GAAalrB,EAAM+F,YAAmD,OAApC/F,EAAM+F,WAAWijB,iBAA0BhpB,EAAM+F,WAAWijB,iBAAmB,CAAC,GAClHoC,GAAUprB,EAAM+F,YAAyC,OAA1B/F,EAAM+F,WAAWkjB,OAAgBjpB,EAAM+F,WAAWkjB,OAAS,CAAC,GAE3FQ,EAAgBzpB,EAAM+F,YAAwC,OAAzB/F,EAAM+F,WAAW6iB,MAAc5oB,EAAM+F,WAAW6iB,MAAQ,CAAC,GAC9FuB,GAAqBnqB,EAAM+F,YAAoD,OAArC/F,EAAM+F,WAAWyiB,kBAA0BxoB,EAAM+F,WAAWyiB,kBAAoB,CAAC,GAC3H4B,GAAmBpqB,EAAM+F,YAAiD,OAAnC/F,EAAM+F,WAAW+iB,gBAAyB9oB,EAAM+F,WAAW+iB,gBAAkB,CAAC,GAE5H,GAAE,CAAC9oB,EAAM+F,aAEV,IAAMslB,GAA0B,SAAA7W,GAE5B4W,GAAS,2BAAMnC,IAAN,mBAAgBzU,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,QACrD,EACKwe,GAAiB,SAAC7d,EAAM8d,GAC1BljB,EAAMijB,gBAAgB7d,GACnBpF,EAAMmjB,UAAU1G,SAASyG,IAGxBljB,EAAMojB,aAAN,uBAAuBpjB,EAAMmjB,WAA7B,CAAwCD,IAE/C,EAiFD,OACI,qCACI,eAAC,KAAD,CAAMlY,UAAW0D,EAAQtM,KAAzB,SACI,gBAAC6I,GAAA,EAAD,WAEA,qBAAIpE,MAAO,CAACtE,MAAM,QAAlB,qCACI,gCACI,uBAAKyI,UAAU,MAAf,UACA,eAAC4E,GAAA,EAAD,CAAamF,GAAG,IAAIxS,MAAM,OAAOsE,MAAO,CAACjF,MAAM,OAAQM,OAAO,QAAS8S,QAAM,EAA7E,SACA,qBAAInO,MAAO,CAACtE,MAAM,QAAlB,+BAEG,wBACA,sBAAKyI,UAAU,yBACd,sDACA,sBAAKA,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,CAAO4J,IAAI,GAAX,qBACA,eAAC3J,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,OACLK,GAAG,OACHrB,MAAO2kB,EAAaD,KACpB/T,SAAU2U,EACVtU,IAAmB,KAAd0S,GAAkC,OAAdA,EAAqBA,EAAc,GAC5D9S,IAAM7O,GAAO,IAAI/C,MAAQgD,OAAO,cAChCI,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,WAClDgJ,UAAQ,IAEI,KAAfrE,EAAOkY,KACJ,uBAAMne,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOkY,OACxC,QAGPC,EAAaD,MACd,sBAAKne,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,sBACA,0BACIjK,UAAU,eACVvF,KAAK,SACLK,GAAG,SACHrB,MAAO2kB,EAAa/jB,OACpB+P,SAAU2U,EACVljB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UAClDqJ,SAA+B,KAApByT,EAAaD,KAP5B,UASI,yBAAQ1kB,MAAO,KACf,yBAAQA,MAAM,MAAd,sBACA,yBAAQA,MAAM,KAAd,6BAGc,KAAjBwM,EAAO5L,OACR,uBAAM2F,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO5L,SACxC,QAIR,sBAAK2F,UAAU,yBACS,QAAvBoe,EAAa/jB,QACd,uCACA,qDACA,sBAAK2F,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,CAAO4J,IAAI,GAAX,qBACA,eAAC3J,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,OACLK,GAAG,OACHrB,MAAO8jB,EAAiBY,KACxB/T,SAAUiV,GACV5U,IAAK2T,EAAaD,KAClB9T,IAAM7O,GAAO,IAAI/C,MAAQgD,OAAO,cAChCI,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,WAClDgJ,UAAQ,IAEU,KAArBrE,EAAOqa,WACJ,uBAAMtgB,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOqa,aACxC,QAGP/C,EAAiBY,MAClB,sBAAKne,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,sBACA,0BACIjK,UAAU,eACVvF,KAAK,SACLK,GAAG,SACHrB,MAAO8jB,EAAiBljB,OACxB+P,SAAUiV,GACVxjB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UAClDqJ,SAAkC,KAAxB4S,EAAiBY,KAP/B,UASI,yBAAQ1kB,MAAO,KACf,yBAAQA,MAAM,MAAd,sBACA,yBAAQA,MAAM,KAAd,kCAOZ,sBAAKuG,UAAU,4BAGa,OAA3Bud,EAAiBljB,QAClB,uCACA,oDACA,sBAAK2F,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,CAAO4J,IAAI,GAAX,qBACA,eAAC3J,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,OACLK,GAAG,OACHrB,MAAOokB,GAAeM,KACtB/T,SAAUmV,GACV9U,IAAK8S,EAAiBY,KACtB9T,IAAM7O,GAAO,IAAI/C,MAAQgD,OAAO,cAChCI,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,WAClDgJ,UAAQ,SAKfuT,GAAeM,MAChB,sBAAKne,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,sBACA,0BACIjK,UAAU,eACVvF,KAAK,SACLK,GAAG,SACHrB,MAAOokB,GAAexjB,OACtB+P,SAAUmV,GACV1jB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UAClDqJ,SAAgC,KAAtBkT,GAAeM,KAP7B,UASI,yBAAQ1kB,MAAO,KACf,yBAAQA,MAAM,MAAd,sBACA,yBAAQA,MAAM,KAAd,kCAOZ,sBAAKuG,UAAU,4BAGf,sBAAKA,UAAU,MAAf,SACA,uBAAKA,UAAU,wBAAf,UAC2B,OAAtBoe,EAAa/jB,QACV,eAACuK,GAAA,EAAD,CAAarN,MAAM,QAAnB,sBAImB,OAAtB6mB,EAAa/jB,QAA2C,OAA1BkjB,EAAiBljB,QAC5C,eAACuK,GAAA,EAAD,CAAarN,MAAM,QAAnB,sBAKoB,QAAtB6mB,EAAa/jB,QAA4C,QAA1BkjB,EAAiBljB,QAC9C,uCACA,eAACuK,GAAA,EAAD,CAAarN,MAAM,MAAnB,sBAGA,wBACA,wBACA,uBAAKyI,UAAU,MAAf,UACI,sDACA,sBAAKA,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,CAAO4J,IAAI,GAAX,oBACA,eAAC3J,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,QACLK,GAAG,QACHrB,MAAO+kB,EAAcF,MACrBlU,SAAU8U,EACVzU,IAAK8S,EAAiBY,KACtB9T,IAAM7O,GAAO,IAAI/C,MAAQgD,OAAO,cAChCI,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,WAClDgJ,UAAQ,IAEK,KAAhBrE,EAAOqY,MACJ,uBAAMte,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOqY,QACxC,QAIR,sBAAKte,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,uBACA,0BACIjK,UAAU,eACVvF,KAAK,UACLK,GAAG,UACHrB,MAAO+kB,EAAcD,QACrBnU,SAAU8U,EACVrjB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UAClDqJ,SAAgC,KAAtB6T,EAAcF,MAP5B,UASI,yBAAQ7kB,MAAO,KACf,yBAAQA,MAAM,MAAd,sBACA,yBAAQA,MAAM,KAAd,6BAGe,KAAlBwM,EAAOsY,QACR,uBAAMve,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOsY,UACxC,QAIR,sBAAKve,UAAU,yBACW,QAAzBwe,EAAcD,SACf,uCACA,uDACA,sBAAKve,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,CAAO4J,IAAI,GAAX,qBACA,eAAC3J,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,QACLK,GAAG,QACHrB,MAAO+jB,EAAkBc,MACzBlU,SAAUkV,GACV7U,IAAK+T,EAAcF,MACnBjU,IAAM7O,GAAO,IAAI/C,MAAQgD,OAAO,cAChCI,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,WAClDgJ,UAAQ,SAKhB,sBAAKtK,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,sBACA,0BACIjK,UAAU,eACVvF,KAAK,UACLK,GAAG,UACHrB,MAAO+jB,EAAkBe,QACzBnU,SAAUkV,GACVzjB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UAClDqJ,SAAoC,KAA1B6S,EAAkBc,MAPhC,UASI,yBAAQ7kB,MAAO,KACf,yBAAQA,MAAM,MAAd,sBACA,yBAAQA,MAAM,KAAd,kCAMZ,sBAAKuG,UAAU,4BAGe,OAA7Bwd,EAAkBe,SACnB,uCACA,sDACA,sBAAKve,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,CAAO4J,IAAI,GAAX,qBACA,eAAC3J,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,QACLK,GAAG,QACHrB,MAAOqkB,GAAgBQ,MACvBlU,SAAUoV,GACV/U,IAAK+S,EAAkBc,MACvBjU,IAAM7O,GAAO,IAAI/C,MAAQgD,OAAO,cAChCI,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,WAClDgJ,UAAQ,SAKhB,sBAAKtK,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,sBACA,0BACIjK,UAAU,eACVvF,KAAK,UACLK,GAAG,UACHrB,MAAOqkB,GAAgBS,QACvBnU,SAAUoV,GACV3jB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UAClDqJ,SAAkC,KAAxBmT,GAAgBQ,MAP9B,UASI,yBAAQ7kB,MAAO,KACf,yBAAQA,MAAM,MAAd,sBACA,yBAAQA,MAAM,KAAd,kCAMZ,sBAAKuG,UAAU,kCAYK,OAA1Bud,EAAiBljB,QAAyC,QAAxBwjB,GAAexjB,QAAqB,uCACpE,eAACuK,GAAA,EAAD,CAAarN,MAAM,MAAnB,sBAGA,wBACA,wBAEA,uBAAKyI,UAAU,MAAf,UACI,sDACA,sBAAKA,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,CAAO4J,IAAI,GAAX,qBACA,eAAC3J,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,QACLK,GAAG,QACHrB,MAAO+kB,EAAcF,MACrBlU,SAAU8U,EACVzU,IAAMoT,GAAeM,KACrB9T,IAAM7O,GAAO,IAAI/C,MAAQgD,OAAO,cAChCI,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,WAClDgJ,UAAQ,IAEK,KAAhBrE,EAAOqY,MACJ,uBAAMte,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOqY,QACxC,QAGR,sBAAKte,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,uBACA,0BACIjK,UAAU,eACVvF,KAAK,UACLK,GAAG,UACHrB,MAAO+kB,EAAcD,QACrBnU,SAAU8U,EACVrjB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UAClDqJ,SAAgC,KAAtB6T,EAAcF,MAP5B,UASI,yBAAQ7kB,MAAO,KACf,yBAAQA,MAAM,MAAd,sBACA,yBAAQA,MAAM,KAAd,6BAGe,KAAlBwM,EAAOsY,QACR,uBAAMve,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOsY,UACxC,QAGR,sBAAKve,UAAU,yBACW,QAAzBwe,EAAcD,SACf,uCACA,uDACA,sBAAKve,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,CAAO4J,IAAI,GAAX,qBACA,eAAC3J,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,QACLK,GAAG,QACHrB,MAAO+jB,EAAkBc,MACzBlU,SAAUkV,GACV7U,IAAK+T,EAAcF,MACnBjU,IAAM7O,GAAO,IAAI/C,MAAQgD,OAAO,cAChCI,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,WAClDgJ,UAAQ,SAKhB,sBAAKtK,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,sBACA,0BACIjK,UAAU,eACVvF,KAAK,UACLK,GAAG,UACHrB,MAAO+jB,EAAkBe,QACzBnU,SAAUkV,GACVzjB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UAClDqJ,SAAoC,KAA1B6S,EAAkBc,MAPhC,UASI,yBAAQ7kB,MAAO,KACf,yBAAQA,MAAM,MAAd,sBACA,yBAAQA,MAAM,KAAd,kCAMZ,sBAAKuG,UAAU,4BAGe,OAA7Bwd,EAAkBe,SACnB,uCACA,sDACA,sBAAKve,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,CAAO4J,IAAI,GAAX,qBACA,eAAC3J,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,QACLK,GAAG,QACHrB,MAAOqkB,GAAgBQ,MACvBlU,SAAUoV,GACV/U,IAAK+S,EAAkBc,MACvBjU,IAAM7O,GAAO,IAAI/C,MAAQgD,OAAO,cAChCI,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,WAClDgJ,UAAQ,SAKhB,sBAAKtK,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,sBACA,0BACIjK,UAAU,eACVvF,KAAK,UACLK,GAAG,UACHrB,MAAOqkB,GAAgBS,QACvBnU,SAAUoV,GACV3jB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UAClDqJ,SAAkC,KAAxBmT,GAAgBQ,MAP9B,UASI,yBAAQ7kB,MAAO,KACf,yBAAQA,MAAM,MAAd,sBACA,yBAAQA,MAAM,KAAd,kCAMZ,sBAAKuG,UAAU,kCAMK,OAA1Bud,EAAiBljB,QAAyC,OAAxBwjB,GAAexjB,SAAwC,QAAtB+jB,EAAa/jB,QAAwC,QAAtB+jB,EAAa/jB,QAAwC,KAAtB+jB,EAAa/jB,SAC5I,eAACuK,GAAA,EAAD,CAAarN,MAAM,QAAnB,sBAMqB,OAAxBinB,EAAcD,SACX,eAAC3Z,GAAA,EAAD,CAAarN,MAAM,QAAnB,sBAIqB,OAAxBinB,EAAcD,SAA8C,OAA5Bf,EAAkBe,SAC/C,eAAC3Z,GAAA,EAAD,CAAarN,MAAM,QAAnB,sBAKsB,QAAxBinB,EAAcD,SAA+C,QAA5Bf,EAAkBe,SACjD,uCACA,eAAC3Z,GAAA,EAAD,CAAarN,MAAM,MAAnB,sBAGA,2BAQ0B,OAA5BimB,EAAkBe,SAA4C,QAA1BT,GAAgBS,SAClD,eAAC3Z,GAAA,EAAD,CAAarN,MAAM,MAAnB,sBAI0B,OAA5BimB,EAAkBe,SAA4C,OAA1BT,GAAgBS,UAA2C,QAAxBC,EAAcD,SAA2C,QAAxBC,EAAcD,SAA2C,KAAxBC,EAAcD,UACrJ,eAAC3Z,GAAA,EAAD,CAAarN,MAAM,QAAnB,2BAQP8lB,GAAiB,uCAClB,eAACzY,GAAA,EAAD,CAAamF,GAAG,IAAIxS,MAAM,OAAOsE,MAAO,CAACjF,MAAM,OAAQM,OAAO,QAAS8S,QAAM,EAA7E,SACI,qBAAInO,MAAO,CAACtE,MAAM,QAAlB,yBAEJ,wBAJkB,IAIZ,wBACN,sBAAKyI,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,yBACA,0BACIjK,UAAU,eACVvF,KAAK,WACLK,GAAG,WACHrB,MAAOmlB,EAASA,SAChBxU,SAAUsU,EACV7iB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,oBAAd,+BACA,yBAAQA,MAAM,kBAAd,qCAMU,sBAArBmlB,EAASA,UACV,sBAAK5e,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,8BACA,0BACIjK,UAAU,eACVvF,KAAK,sBACLK,GAAG,sBACHrB,MAAOmlB,EAASC,oBAChBzU,SAAUsU,EACV7iB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,oBAAd,SAAmC,SACnC,yBAAQA,MAAM,kBAAd,SAAiC,kBAOvB,oBAArBmlB,EAASA,UACV,sBAAK5e,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,CAAO4J,IAAI,GAAX,6BACA,eAAC3J,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,oBACLK,GAAG,oBACHrB,MAAOmlB,EAASE,kBAChB1U,SAAUsU,EACV7iB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,kBAO1D,sBAAKtB,UAAU,4BAGf,eAAC4E,GAAA,EAAD,CAAamF,GAAG,IAAIxS,MAAM,OAAOsE,MAAO,CAACjF,MAAM,OAAQM,OAAO,QAAS8S,QAAM,EAA7E,SACA,qBAAInO,MAAO,CAACtE,MAAM,QAAlB,gCAEJ,wBA7iBA,IA6iBM,wBACF,sBAAKyI,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,qCACA,0BACIjK,UAAU,eACVvF,KAAK,qBACLK,GAAG,qBACHrB,MAAOimB,GAASD,mBAChBrV,SAvsBF,SAAAZ,GAE9BmW,GAAW,2BAAMD,IAAN,mBAAkBlW,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,QACzD,EAqsBmCoC,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,MAAd,sBACA,yBAAQA,MAAM,KAAd,kCAOZ,eAACmL,GAAA,EAAD,CAAamF,GAAG,IAAIxS,MAAM,OAAOsE,MAAO,CAACjF,MAAM,OAAQM,OAAO,QAAS8S,QAAM,EAA7E,SACA,qBAAInO,MAAO,CAACtE,MAAM,QAAlB,iCAEA,wBArkBJ,IAqkBU,wBACN,sBAAKyI,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,8CACA,0BACIjK,UAAU,eACVvF,KAAK,uBACLK,GAAG,uBACHrB,MAAOwmB,GAAUJ,qBACjBzV,SAAU+V,GACVtkB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,MAAd,sBACA,yBAAQA,MAAM,KAAd,8BAMZ,sBAAKuG,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,8CACA,0BACIjK,UAAU,eACVvF,KAAK,uBACLK,GAAG,uBACHrB,MAAOwmB,GAAUL,qBACjBxV,SAAU+V,GACVtkB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQG,yBAAQ7H,MAAO,KACd,yBAAQA,MAAM,MAAd,sBACA,yBAAQA,MAAM,KAAd,8BAMZ,eAACmL,GAAA,EAAD,CAAamF,GAAG,IAAIxS,MAAM,OAAOsE,MAAO,CAACjF,MAAM,OAAQM,OAAO,QAAS8S,QAAM,EAA7E,SACA,qBAAInO,MAAO,CAACtE,MAAM,QAAlB,sBAEA,wBA/mBJ,IA+mBU,wBACN,sBAAKyI,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,CAAO4J,IAAI,GAAX,uBACA,eAAC3J,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,YACLK,GAAG,YACHrB,MAAOwkB,GAAO6B,UACd1V,SAAUiW,GACVxkB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,kBAM1D,sBAAKtB,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,CAAO4J,IAAI,GAAX,sBACA,eAAC3J,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,WACLK,GAAG,WACHrB,MAAOwkB,GAAO8B,SACd3V,SAAUiW,GACVxkB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,kBAM1D,sBAAKtB,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,CAAO4J,IAAI,GAAX,wBACA,eAAC3J,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,YACLK,GAAG,YACHrB,MAAOwkB,GAAO+B,UACd5V,SAAUiW,GACVxkB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,kBAOzD8E,EAAS,eAAC4G,GAAA,EAAD,IAAc,GACxB,wBACA,sBAAKhN,UAAU,MAAf,SACA,uBAAKA,UAAU,4BAAf,UACC4Y,GAAY,GACZ,qCACG,eAAC,KAAD,CAAQJ,QAAQ,OAAO1V,KAAK,aAAa2V,cAAc,OAAO5c,MAAO,CAACC,gBAAgB,UAAWvE,MAAM,QAASmO,QAAS,kBAAIuS,GAAgB,QAAS,QAA7B,MAG5H,qCACG,eAAC,KAAD,CAAQO,QAAQ,OAAO1V,KAAK,aAAa2V,cAAc,OAAO5c,MAAO,CAACC,gBAAgB,UAAWvE,MAAM,QAASmO,QAAS,kBAAIuS,GAAgB,mBAAoB,mBAAxC,MAI7H,eAAC,KAAD,CAAQO,QAAQ,kBAAkB1V,KAAK,cAAc2V,cAAc,QAAQ5c,MAAO,CAACC,gBAAgB,UAAWvE,MAAM,QAASmO,QA1vBjI,SAAC8D,GACjBA,EAAEoB,iBARkB,KAApBwT,EAAaD,OAAehY,EAAKgY,KAAOC,EAAa/jB,OAAS,GAAK,2BAI3D6L,EAAU,eAAKC,IAChB0E,OAAOC,OAAO3E,GAAM4E,OAAM,SAAAtK,GAAC,MAAS,IAALA,CAAJ,MAMP,OAAxB+d,EAAcD,QACb7V,EAAUgV,eAAe,WACI,QAAxBc,EAAcD,SAA+C,QAA5Bf,EAAkBe,SAMxB,OAA5Bf,EAAkBe,SAA4C,QAA1BT,GAAgBS,QALxD7V,EAAUgV,eAAe,WAOQ,OAA5BF,EAAkBe,SAA4C,OAA1BT,GAAgBS,QACzD7V,EAAUgV,eAAe,WAEzBhV,EAAUgV,eAAe,GAGJ,OAAtBU,EAAa/jB,OACZqO,EAAU+U,cAAc,WACG,QAAtBW,EAAa/jB,QAA4C,QAA1BkjB,EAAiBljB,QAMvB,OAA1BkjB,EAAiBljB,QAAyC,QAAxBwjB,GAAexjB,OALrDqO,EAAU+U,cAAc,WAOO,OAA1BF,EAAiBljB,QAAyC,OAAxBwjB,GAAexjB,OACtDqO,EAAU+U,cAAc,WAExB/U,EAAU+U,cAAc,GAExB/U,EAAU8Q,YAAaT,EACvBrQ,EAAU6U,iBAAkBA,EAC5B7U,EAAU8U,kBAAmBA,EAC7B9U,EAAUI,SAAU+P,EACpBnQ,EAAUiV,MAAOS,EACjB1V,EAAUkV,MAAOY,EACjB9V,EAAUmV,eAAeA,GACzBnV,EAAUoV,gBAAgBA,GAC1BpV,EAAUqV,gBAAgB2B,GAC1BhX,EAAUsV,iBAAiBiC,GAE3BvX,EAAUwV,IAAIU,EACdlW,EAAUuV,OAAOA,GACjBpmB,IAAMolB,IAAN,UAAanlB,EAAb,eAA2BihB,EAA3B,mBAAqDrQ,EACrD,CAAE3Q,QAAS,CAAC,+BAA4B5D,MACvC6D,MAAK,SAAAC,GACFoO,GAAU,GACVrR,EAAM2jB,cAAc1gB,EAASC,MAI7B+f,GAAgB,YAAa,WAChC,IACA9f,OAAM,SAAAb,GAEH,GADA+O,GAAU,GACP/O,EAAMW,UAAYX,EAAMW,SAASC,KAAK,CACrC,IAAImT,EAAe/T,EAAMW,SAASC,KAAKoT,UAAmD,KAAvChU,EAAMW,SAASC,KAAKoT,SAASC,QAAejU,EAAMW,SAASC,KAAKoT,SAASC,QAAW,yCACvIN,IAAM3T,MAAM+T,EACf,MAEGJ,IAAM3T,MAAM,4CAEnB,IAER,oBA8rBJ,ECnkCK+H,GAAYlJ,cAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAE1Ba,KAAM,CACF,QAAS,CACLd,OAAQF,EAAMG,QAAQ,IAE1B,gBAAgB,CACZgB,MAAM,OACN0E,WAAW,QAEf,kBAAkB,CACdqF,aAAa,UACbpK,OAAO,QAEX,6BAA8B,CAC1BoK,aAAc,+CAElB,4BAA6B,CACzB9K,QAAS,qBAEb,WAAW,CACP,qBAAsB,sBAE1B,MAAM,CACFe,MAAM,OAEV,UAAU,CACNC,SAAS,OACTD,MAAM,UACN0E,WAAW,SAGnB+Y,KAAM,CACFlZ,gBAAiB1F,EAAMwM,QAAQqS,WAAWC,SAE9CC,OAAQ,CACJ3e,QAAS,UAEbc,MAAM,CACFC,MAAO,UACPC,SAAU,UA9DW,IA+qBd+oB,GA5mBS,SAACvrB,GACrB,IAAM0O,EAAUrE,KAChB,EAA4B3H,oBAAS,GAArC,mBAAO0O,EAAP,KAAeC,EAAf,KACA,EAA4B3O,mBAAS,CAAC,GAAtC,mBAAOuO,EAAP,KACA,GADA,KACwBvO,mBAAS,KAAjC,mBAAO8oB,EAAP,KAAaC,EAAb,KACA,EAAsD/oB,mBAAS,IAA/D,mBAAOgpB,EAAP,KAA4BC,EAA5B,KACA,EAAsCjpB,oBAAS,GAA/C,mBAAOkpB,EAAP,KAAoBC,EAApB,KACA,EAAuCnpB,mBAAS,IAAhD,mBAAOse,EAAP,KAAqBC,EAArB,KACA,EAA6Bve,mBAAS,IAAtC,mBAAOopB,EAAP,KAAgBC,EAAhB,KACA,EAAsCrpB,mBAAS,IAA/C,mBAAOylB,EAAP,KAAoBC,EAApB,KAEA,EAA2C1lB,mBAAU,CACjD8hB,YAAa,KACbwH,qCAAsC,CAAC,EACvClY,SAAU,OAHd,mBAMA,GANA,UAMiCpR,mBAC7B,CACIsD,UAAW,GACXimB,WAAY,GACZC,SAAS,GACT3oB,IAAI,GACJ4oB,YAAY,GACZC,eAAgB,GAChBhmB,IAAK,GACLoe,YAAYxkB,GAAUA,EAAM+F,WAAa/F,EAAM+F,WAAWD,GAAK,GAC/DumB,aAAc,GACdC,eAAgB,GAChB9c,QAAS,GACT+c,aAAc,GACdC,sBAAuB,GACvBC,yBAA0B,GAC1BC,sBAAuB,GACvBC,sBAAuB,GACvBC,mBAAqB,GACrBC,0BAA2B,MAnBnC,mBAAOnZ,EAAP,KAAkBC,EAAlB,KAuBAvQ,qBAAU,WACN0pB,IACAC,IACAhK,IACAiK,IACGhtB,EAAM+F,aAEF/F,EAAM+F,WAAW0b,WAA0C,KAA7BzhB,EAAM+F,WAAW0b,UAC9C2G,EAAepoB,EAAM+F,WAAW0b,WAEhC2G,EAAe,IAG1B,GAAE,CAACpoB,EAAM+F,aAGV,IAAM+mB,EAAK,WACPjqB,IACCrD,IADD,UACQsD,EADR,+BAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEHwoB,EAAQxoB,EAASC,KAEpB,IACAC,OAAM,SAACb,GAEP,GACJ,EAEKygB,EAAc,WAChBlgB,IACCrD,IADD,UACQsD,EADR,yCAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACHge,EAAgBhe,EAASC,KAC5B,IACAC,OAAM,SAACb,GAEP,GACJ,EAEK0qB,EAAS,WACXnqB,IACCrD,IADD,UACQsD,EADR,mCAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACH8oB,EAAW9oB,EAASC,KACvB,IACAC,OAAM,SAACb,GAEP,GACJ,EACKyqB,EAAqB,WACvBlqB,IACCrD,IADD,UACQsD,EADR,gDAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEH0oB,EAAuB1oB,EAASC,KACnC,IACAC,OAAM,SAACb,GAEP,GACJ,EAUK2qB,EAAqB,SAAC7nB,GACxBpF,EAAMktB,iBAAiB9nB,EAC1B,EACKmP,EAAoB,SAAAC,GAEtB,GAAmB,cAAhBA,EAAEC,OAAOhP,MAAuC,KAAjB+O,EAAEC,OAAOhQ,MAAW,CAClD,IAAMgB,EAAO0nB,GAAa3Y,EAAEC,OAAOhQ,OACnCkP,EAAY,2BAAMD,GAAN,mBAAmBc,EAAEC,OAAOhP,KAAOA,IAClD,CACD,GAAmB,aAAhB+O,EAAEC,OAAOhP,MAAsC,KAAjB+O,EAAEC,OAAOhQ,MAAW,CACjD,IAAMgB,EAAO0nB,GAAa3Y,EAAEC,OAAOhQ,OACnCkP,EAAY,2BAAMD,GAAN,mBAAmBc,EAAEC,OAAOhP,KAAOA,IAClD,CACD,GAAmB,eAAhB+O,EAAEC,OAAOhP,MAAwC,KAAjB+O,EAAEC,OAAOhQ,MAAW,CACnD,IAAMgB,EAAO0nB,GAAa3Y,EAAEC,OAAOhQ,OACnCkP,EAAY,2BAAMD,GAAN,mBAAmBc,EAAEC,OAAOhP,KAAOA,IAClD,CAMDkO,EAAY,2BAAMD,GAAN,mBAAmBc,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,QAC3D,EAsBK2oB,EAA0B,SAAC5Y,GACP,UAAlBA,EAAEC,OAAOhQ,OACTiP,EAAU2Z,wBAAuB,EACjCxB,GAAe,IACU,aAAlBrX,EAAEC,OAAOhQ,QAChBiP,EAAU2Z,wBAAuB,EACjCxB,GAAe,GAEtB,EAeKyB,EAAsB,SAAC9Y,EAAG+Y,GAE5B5Z,EAAa,2BAAID,GAAL,mBAAkB6Z,EAAY/Y,EAAEgZ,MAAM,EADpC,MAEjB,EACKL,GAAa,SAAC1oB,GAEhB,OADeA,EAAMgpB,QAAQ,WAAY,GAE5C,EA2BD,OACI,qCACI,eAAC,KAAD,CAAMziB,UAAW0D,EAAQtM,KAAzB,SACI,gBAAC6I,GAAA,EAAD,WAEA,sBAAIpE,MAAO,CAACtE,MAAM,QAAlB,sDACA,eAAC,KAAD,CACIqE,QAAQ,YACRrE,MAAM,UACNyI,UAAU,wBACV0F,QAAS,kBAAIuc,EAAoB,OAAxB,EAJb,SAOI,uBAAMpmB,MAAO,CAAE8F,cAAe,cAA9B,6CAGJ,wBAAK,wBACD,gCACI,uBAAK3B,UAAU,MAAf,UACI,sBAAKA,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,CAAO4J,IAAI,GAAX,wBACA,eAAC3J,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,YACLK,GAAG,YACHrB,MAAOiP,EAAU1N,UACjBoP,SAAUb,EACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,kBAM1D,sBAAKtB,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,CAAO4J,IAAI,GAAX,yBACA,eAAC3J,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,aACLK,GAAG,aACHrB,MAAOiP,EAAUuY,WACjB7W,SAAUb,EACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,kBAM1D,sBAAKtB,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,CAAO4J,IAAI,GAAX,uBACA,eAAC3J,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,WACLK,GAAG,WACHrB,MAAOiP,EAAUwY,SACjB9W,SAAUb,EACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,kBAM1D,sBAAKtB,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,4BACA,sBAAKjK,UAAU,QAAf,SACI,mCACI,wBACIxG,KAAK,QACLC,MAAM,SACNgB,KAAK,cACLioB,gBAAc,EAEdtY,SAAU,SAACZ,GAAD,OAAO4Y,EAAwB5Y,EAA/B,EACV3N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,YAR1D,eAYJ,sBAAKtB,UAAU,QAAf,SACI,mCACI,wBACIxG,KAAK,QACLC,MAAM,YACNgB,KAAK,cAEL2P,SAAU,SAACZ,GAAD,OAAO4Y,EAAwB5Y,EAA/B,EACV3N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,YAP1D,uBAaZ,sBAAKtB,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,mBACA,wBACIjK,UAAU,eACVxG,KAAK,OACLiB,KAAK,MACLK,GAAG,MACHuP,IAAM7O,GAAO,IAAI/C,MAAQgD,OAAO,cAChChC,MAAOiP,EAAUnQ,IACjB6R,SArLZ,SAACZ,GACrB,GAAIA,EAAEC,OAAOhQ,MAAO,CAChB,IAAMjB,EAAQ,IAAIC,KACZI,EAAY,IAAIJ,KAAK+Q,EAAEC,OAAOhQ,OAChCX,EAAUN,EAAMO,cAAgBF,EAAUE,cACxCC,EAAIR,EAAMS,WAAaJ,EAAUI,YACnCD,EAAI,GAAY,IAANA,GAAWR,EAAMU,UAAYL,EAAUK,YACjDJ,IAEJ4P,EAAUrN,IAAIvC,CAGjB,MACG6P,EAAa,2BAAID,GAAL,IAAgBrN,IAAM,MAEtCsN,EAAY,2BAAMD,GAAN,mBAAmBc,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,SAExDkP,EAAa,2BAAID,GAAL,IAAgBnQ,IAAKiR,EAAEC,OAAOhQ,QAE7C,EAmKmCoC,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,iBAK9D,sBAAKtB,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,kBACA,wBACIjK,UAAU,eACVxG,KAAK,SACLiB,KAAK,MACLK,GAAG,MACHrB,MAAOiP,EAAUrN,IACjBsP,SAAUiW,EACVxW,SAxKZ,SAACZ,GACrB,IAAKoX,GAAepX,EAAEC,OAAOhQ,MAAO,CAChC,IAAMkpB,EAAc,IAAIlqB,KACxBkqB,EAAYC,QAAQ,IACpBD,EAAYE,SAAS,GACrB,IACMC,EADStnB,GAAOmnB,EAAYI,eACZC,KAAuB,EAAlBxZ,EAAEC,OAAOhQ,MAAa,SACjDkP,EAAa,2BAAID,GAAL,IAAgBnQ,IAAKiD,GAAOsnB,GAAQrnB,OAAO,iBACvDiN,EAAUnQ,IAAKiD,GAAOsnB,GAAQrnB,OAAO,aAExC,CACDkN,EAAa,2BAAID,GAAL,IAAgBrN,IAAKmO,EAAEC,OAAOhQ,QAC7C,EA6JmCoC,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,iBAI9D,sBAAKtB,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,CAAO4J,IAAI,GAAX,0BAEI,eAAC,KAAD,CACIoP,eAAgB,CAACrsB,MAAM,OAAOuT,OAAQ,qBACtC+Y,WAAY,CAACtsB,MAAM,OAAO0K,aAAa,OACvC6hB,QAAS,KACTC,YAAY,kBACZC,UAAW,GACX5oB,KAAK,cACLK,GAAG,cACHwoB,MAAO,CAACC,GAAI,eAAgBC,GAAI,mBAChC/pB,MAAOiP,EAAUyY,YACjB/W,SAAU,SAACZ,GAAK8Y,EAAsB9Y,EAAE,cAAe,IAGpC,KAAtBvD,EAAOkb,YACJ,uBAAMnhB,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOkb,cACpC,QAIhB,sBAAKnhB,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,CAAO4J,IAAI,GAAX,sCACA,eAAC,KAAD,CACQoP,eAAgB,CAACrsB,MAAM,OAAOuT,OAAQ,qBACtC+Y,WAAY,CAACtsB,MAAM,OAAO0K,aAAa,OACvC6hB,QAAS,KACTC,YAAY,kBACZC,UAAW,GACX5oB,KAAK,iBACLK,GAAG,iBACHwoB,MAAO,CAACC,GAAI,eAAgBC,GAAI,mBAChC/pB,MAAOiP,EAAU0Y,eACjBhX,SAAU,SAACZ,GAAK8Y,EAAsB9Y,EAAE,iBAAkB,SAMtE,sBAAKxJ,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,oBACA,0BACIjK,UAAU,eACVvF,KAAK,MACLK,GAAG,MACHrB,MAAOiP,EAAUtN,IACjBgP,SAAUb,EACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACd+mB,EAAKjmB,KAAI,SAACd,GAAD,OACN,yBAAuBA,MAAOA,EAAMqB,GAApC,SACKrB,EAAMjD,SADEiD,EAAMqB,GADb,YAStB,sBAAKkF,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,CAAO4J,IAAI,GAAX,qBACA,eAAC3J,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,UACLK,GAAG,UACHrB,MAAOiP,EAAUlE,QACjB4F,SAAUb,EACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,kBAI1D,sBAAKtB,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,CAAO4J,IAAI,GAAX,4BACA,eAAC3J,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,eACLK,GAAG,eACHrB,MAAOiP,EAAU6Y,aACjBnX,SAAUb,EACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,kBAK1D,sBAAKtB,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,6CACA,0BACIjK,UAAU,eACVvF,KAAK,wBACLK,GAAG,wBACHrB,MAAOiP,EAAU8Y,sBACjBpX,SAAUb,EACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACduc,EAAazb,KAAI,SAACd,GAAD,OACd,yBAAuBA,MAAOA,EAAMqB,GAApC,SACKrB,EAAMjD,SADEiD,EAAMqB,GADL,YAS9B,sBAAKkF,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,yDACA,0BACIjK,UAAU,eACVvF,KAAK,2BACLK,GAAG,2BACHrB,MAAOiP,EAAU+Y,yBACjBrX,SAAUb,EACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAO,OAAf,iBACA,yBAAQA,MAAO,QAAf,wBAKZ,sBAAKuG,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,iFACA,0BACIjK,UAAU,eACVvF,KAAK,wBACLK,GAAG,wBACHrB,MAAOiP,EAAUgZ,sBACjBtX,SAAUb,EACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACdqnB,EAAQvmB,KAAI,SAACd,GAAD,OACT,yBAAuBA,MAAOA,EAAMqB,GAApC,SACKrB,EAAMjD,SADEiD,EAAMqB,GADV,YAUzB,sBAAKkF,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,yFACA,0BACIjK,UAAU,eACVvF,KAAK,eACLK,GAAG,eACHrB,MAAOiP,EAAU2Y,aACjBjX,SAAUb,EACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQK,yBAAQ7H,MAAO,KACfqnB,EAAQvmB,KAAI,SAACd,GAAD,OACT,yBAAuBA,MAAOA,EAAMqB,GAApC,SACKrB,EAAMjD,SADEiD,EAAMqB,GADV,YAUzB,sBAAKkF,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,4DACA,0BACIjK,UAAU,eACVvF,KAAK,iBACLK,GAAG,iBACHrB,MAAOiP,EAAU4Y,eACjBlX,SAAUb,EACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACdqnB,EAAQvmB,KAAI,SAACd,GAAD,OACT,yBAAuBA,MAAOA,EAAMqB,GAApC,SACKrB,EAAMjD,SADEiD,EAAMqB,GADV,YAUzB,sBAAKkF,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,iHACA,0BACIjK,UAAU,eACVvF,KAAK,wBACLK,GAAG,wBACHrB,MAAOiP,EAAUiZ,sBACjBvX,SAAUb,EACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQK,yBAAQ7H,MAAO,KACfqnB,EAAQvmB,KAAI,SAACd,GAAD,OACT,yBAAuBA,MAAOA,EAAMqB,GAApC,SACKrB,EAAMjD,SADEiD,EAAMqB,GADV,YASzB,sBAAKkF,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,4CACA,0BACIjK,UAAU,eACVvF,KAAK,qBACLK,GAAG,qBACHrB,MAAOiP,EAAUkZ,mBACjBxX,SAAUb,EACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACdinB,EAAoBnmB,KAAI,SAACd,GAAD,OACrB,yBAAuBA,MAAOA,EAAMqB,GAApC,SACKrB,EAAMjD,SADEiD,EAAMqB,GADE,YAWrC,sBAAKkF,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,CAAO4J,IAAI,GAAX,sEACA,eAAC3J,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,4BACLK,GAAG,4BACHrB,MAAOiP,EAAUmZ,0BACjBzX,SAAUb,EACVkB,IAAK0S,EAELthB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,aAGjB,KAApC2E,EAAOwd,0BACJ,uBAAMzjB,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOwd,4BACxC,QAIPrd,EAAS,eAAC4G,GAAA,EAAD,IAAc,GACxB,wBACA,sBAAKhN,UAAU,MAAf,SACA,sBAAKA,UAAU,2BAAf,SAEA,eAAC,KAAD,CAAQwY,QAAQ,OAAO1V,KAAK,OAAO2V,cAAc,OAAO5c,MAAO,CAACC,gBAAgB,UAAWvE,MAAM,QAASmO,QA/Z9G,SAAC8D,GACjBA,EAAEoB,iBACFlC,EAAU2Z,uBAAyD,GAAlC3Z,EAAU2Z,uBAA+B,EAAI,EAC1ExqB,IAAMmT,KAAN,UAAclT,EAAd,qBAAyC4Q,EACzC,CAAE3Q,QAAS,CAAC,+BAA4B5D,MAGvC6D,MAAK,SAAAC,GACFoO,GAAU,GACV4E,IAAMxT,QAAQ,yBAA2B,CAACyT,SAAUD,IAAME,SAASC,gBACnE6W,EAAoB,OAEvB,IACA9pB,OAAM,SAAAb,GAEH,GADA+O,GAAU,GACP/O,EAAMW,UAAYX,EAAMW,SAASC,KAAK,CACrC,IAAImT,EAAe/T,EAAMW,SAASC,KAAKoT,UAAmD,KAAvChU,EAAMW,SAASC,KAAKoT,SAASC,QAAejU,EAAMW,SAASC,KAAKoT,SAASC,QAAW,yCACvIN,IAAM3T,MAAM+T,EAAe,CAACH,SAAUD,IAAME,SAASC,eACxD,MAEGH,IAAM3T,MAAM,4CAA8C,CAAC4T,SAAUD,IAAME,SAASC,eAE3F,GAER,mBAgZJ,ECrqBKvW,GAAa,CACnBC,IAAKC,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAYD,GAAZ,IAAmBC,IAAKA,IAAxC,IAChBC,MAAOH,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAWD,GAAX,IAAkBC,IAAKA,IAAvC,IAClBE,MAAOJ,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAWD,GAAX,IAAkBC,IAAKA,IAAvC,IAClBG,OAAQL,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAmBD,GAAnB,IAA0BC,IAAKA,IAA/C,IACnBI,YAAaN,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAkBD,GAAlB,IAAyBC,IAAKA,IAA9C,IACxBK,KAAMP,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAUD,GAAV,IAAiBC,IAAKA,IAAtC,IACjBM,OAAQR,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAaD,GAAb,IAAoBC,IAAKA,IAAzC,IACnBO,OAAQT,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAgBD,GAAhB,IAAuBC,IAAKA,IAA5C,IACnBQ,UAAWV,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAeD,GAAf,IAAsBC,IAAKA,IAA3C,IACtBS,SAAUX,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAcD,GAAd,IAAqBC,IAAKA,IAA1C,IACrBU,SAAUZ,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAkBD,GAAlB,IAAyBC,IAAKA,IAA9C,IACrBW,aAAcb,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAiBD,GAAjB,IAAwBC,IAAKA,IAA7C,IACzBY,YAAad,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAWD,GAAX,IAAkBC,IAAKA,IAAvC,IACxBa,OAAQf,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAYD,GAAZ,IAAmBC,IAAKA,IAAxC,IACnBc,UAAWhB,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAiBD,GAAjB,IAAwBC,IAAKA,IAA7C,IACtBe,gBAAiBjB,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,IAAD,2BAAYD,GAAZ,IAAmBC,IAAKA,IAAxC,IAC5BgB,WAAYlB,sBAAW,SAACC,EAAOC,GAAR,OAAgB,eAAC,KAAD,2BAAgBD,GAAhB,IAAuBC,IAAKA,IAA5C,KA4KRyuB,IAzKGvtB,cAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAG1Ba,KAAM,CACF,QAAS,CACLd,OAAQF,EAAMG,QAAQ,KAG9Bc,MAAO,CACHb,QAAS,QAEbc,MAAO,CACHC,MAAO,UACPC,SAAU,QAEdC,QAAS,CACLF,MAAO,WACPC,SAAU,QAvCgB,IA6CV,SAACxC,GAErB,MAA8C0C,mBAAS,IAAvD,mBAAOisB,EAAP,KAAwBC,EAAxB,KAEkB5uB,EAAM+F,YAAc/F,EAAM+F,WAAWD,IAAK9F,EAAM+F,WAAWD,GAJ9C,sDAW/B,wFACIjD,IACKrD,IADL,UACYsD,EADZ,eAC0B9C,EAAM+F,WAAWD,GAD3C,sBAEI,CAAE/C,QAAS,CAAC,+BAA4B5D,MAEvC6D,MAAK,SAACC,GACHkM,QAAQC,IAAInM,EAASC,MACrB0rB,EAAmB3rB,EAASC,KAC/B,IACAC,OAAM,SAACb,GACP,IAVT,4CAX+B,sBAO/Bc,qBAAU,YAPqB,mCAQ3BC,EACD,GAAE,IAcL,IAUMC,EAAgB,SAAAC,GAClB,IAAIC,EAAQ,IAAIC,KACZC,EAAYH,EAAII,MAAM,KACtBC,EAAa,IAAIH,MAAMC,EAAU,GAAIA,EAAU,GAAK,GAAIA,EAAU,IAClEG,EAAY,IAAIJ,KAAKG,GACrBE,EAAUN,EAAMO,cAAgBF,EAAUE,cAC1CC,EAAIR,EAAMS,WAAaJ,EAAUI,WAIjC,OAHID,EAAI,GAAY,IAANA,GAAWR,EAAMU,UAAYL,EAAUK,YAC7CJ,IAEQ,IAAZA,EACWE,EAAI,YAERF,EAAU,UAC1B,EAGL,OACE,iCACI,eAAC,KAAD,CACI8C,QAAQ,YACRrE,MAAM,UACNyI,UAAU,wBACV0F,QAAS,kBAjCWtL,EAiCa,WAhCrCpF,EAAMktB,iBAAiB9nB,GADA,IAACA,CAiCX,EAJb,SAOI,uBAAMyB,MAAO,CAAE8F,cAAe,cAA9B,iCAEJ,wBAAK,wBAAK,wBAAK,wBACX,eAAC,IAAD,CACAjI,MAAO7E,GACL8E,MAAM,wBACNC,QAAS,CACT,CAAED,MAAO,OAAQE,MAAO,QACxB,CAAEF,MAAO,MAAOE,MAAO,OACvB,CAAEF,MAAO,eAAgBE,MAAO,SAChC,CAACF,MAAO,SAASE,MAAO,WACxB,CAAEF,MAAO,UAAWE,MAAO,UAAWC,WAAW,IAEjD5B,KAAOyrB,EAAgBppB,KAAI,SAACC,GAAD,MAAU,CACnCC,KAAMD,EAAIQ,UAAY,IAAMR,EAAI0mB,SAChC7lB,IAAI/C,EAAckD,KAAOhB,EAAIjC,KAAKkD,OAAO,eACzCooB,MAAMrpB,EAAI2mB,YACV3c,QAAQhK,EAAIgK,QACZ9I,QACQ,+BANiB,IA8BjBU,QAAS,CACPC,YAAa,CAET9E,MAAO,QAEX+E,iBAAkB,CACd1F,MAAQ,OACR2F,YAAa,SAEjBzC,WAAW,EACX0C,cAAc,EACdC,qBAAsB,OACtBC,gBAAgB,CAAC,GAAG,GAAG,KACvBvC,SAAS,GACTwC,iBAAkB,SAM3C,GCjKcmnB,GA7CK,SAAC9uB,GAEjB,MAAmC0C,mBAAS,QAA5C,mBAAOqsB,EAAP,KAAmBC,EAAnB,KACM9B,EAAkB,SAAC3iB,GACrBykB,EAAczkB,EACjB,EAaH,OACE,eAAC,WAAD,UAEE,eAACqC,EAAA,EAAD,UACE,gBAACC,EAAA,EAAD,CAAKjC,GAAI,GAAT,UACkB,SAAbmkB,GAEO,eAACE,GAAD,CAAkBF,WAAYA,EAAYC,cAAeA,EAAe9B,iBAAkBA,EAAkBnnB,WAAY/F,EAAM+F,aAGxH,QAAbgpB,GACK,eAAC,GAAD,CAAiBA,WAAYA,EAAYC,cAAeA,EAAe9B,iBAAkBA,EAAkBnnB,WAAY/F,EAAM+F,aAEnI,wBACI,sBAAKiF,UAAU,MAAf,SACA,sBAAKA,UAAU,2BAAf,SACA,eAAC,KAAD,CAAQwY,QAAQ,OAAO1V,KAAK,OAAO2V,cAAc,OAAO5c,MAAO,CAACC,gBAAgB,UAAWvE,MAAM,QAASmO,QAAS,WAnB7H1Q,EAAMgvB,cAAN,2BAAwBhvB,EAAM+uB,YAA9B,IAA0CA,WAAW,mBAmBwE,cASlI,EC9BK1kB,GAAYlJ,cAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAE1Ba,KAAM,CACF,QAAS,CACLd,OAAQF,EAAMG,QAAQ,IAE1B,gBAAgB,CACZgB,MAAM,OACN0E,WAAW,QAEf,kBAAkB,CACdqF,aAAa,UACbpK,OAAO,QAEX,6BAA8B,CAC1BoK,aAAc,+CAElB,4BAA6B,CACzB9K,QAAS,qBAEb,WAAW,CACP,qBAAsB,sBAE1B,MAAM,CACFe,MAAM,OAEV,UAAU,CACNC,SAAS,OACTD,MAAM,UACN0E,WAAW,SAGnB+Y,KAAM,CACFlZ,gBAAiB1F,EAAMwM,QAAQqS,WAAWC,SAE9CC,OAAQ,CACJ3e,QAAS,UAEbc,MAAM,CACFC,MAAO,UACPC,SAAU,UA9DW,IAqQd4d,GAlMG,SAACpgB,GACf,IAAM0O,EAAUrE,KAChB,EAA4B3H,oBAAS,GAArC,mBAAO0O,EAAP,KACA,GADA,KAC4B1O,mBAAS,CAAC,IAAtC,6BAUA,OACI,qCACI,eAAC,KAAD,CAAMsI,UAAW0D,EAAQtM,KAAzB,SACI,gBAAC6I,GAAA,EAAD,WAEA,sDAAyB,KAAzB,mBACD,wBACC,wBACI,gCACI,uBAAKD,UAAU,MAAf,UACA,eAAC4E,GAAA,EAAD,CAAamF,GAAG,IAAIxS,MAAM,OAAOsE,MAAO,CAACjF,MAAM,OAAQM,OAAO,QAAS8S,QAAM,EAA7E,SACI,qBAAInO,MAAO,CAACtE,MAAM,QAAlB,gCAEA,sBAAKyI,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,qCACA,0BACIjK,UAAU,eACVvF,KAAK,qBACLK,GAAG,qBAEHe,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UALtD,UAOI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,MAAd,sBACA,yBAAQA,MAAM,KAAd,kCAMZ,wBACA,wBACA,eAACmL,GAAA,EAAD,CAAamF,GAAG,IAAIxS,MAAM,OAAOsE,MAAO,CAACjF,MAAM,OAAQM,OAAO,QAAS8S,QAAM,EAA7E,SACA,qBAAInO,MAAO,CAACtE,MAAM,QAAlB,mCAEA,sBAAKyI,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,8CACA,0BACIjK,UAAU,eACVvF,KAAK,uBACLK,GAAG,uBAEHe,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UALtD,UAOI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,MAAd,sBACA,yBAAQA,MAAM,KAAd,8BAMZ,sBAAKuG,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,8CACA,0BACIjK,UAAU,eACVvF,KAAK,uBACLK,GAAG,uBAEHe,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UALtD,UAOG,yBAAQ7H,MAAO,KACd,yBAAQA,MAAM,MAAd,sBACA,yBAAQA,MAAM,KAAd,8BAMZ,sBAAKuG,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,uEACA,0BACIjK,UAAU,eACVvF,KAAK,qBACLK,GAAG,qBAEHe,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UALtD,UAOI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,MAAd,iBACA,yBAAQA,MAAM,KAAd,wBAMZ,sBAAKuG,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,CAAO4J,IAAI,GAAX,0BACA,eAAC3J,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,cACLK,GAAG,cAGHe,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,kBAM1D,sBAAKtB,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,CAAO4J,IAAI,GAAX,uBACA,eAAC3J,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,YACLK,GAAG,YAGHe,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,kBAM1D,sBAAKtB,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,CAAO4J,IAAI,GAAX,sBACA,eAAC3J,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,WACLK,GAAG,WAGHe,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,kBAM1D,sBAAKtB,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,CAAO4J,IAAI,GAAX,wBACA,eAAC3J,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,YACLK,GAAG,YAGHe,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,kBAOzD8E,EAAS,eAAC4G,GAAA,EAAD,IAAc,GACxB,wBACA,sBAAKhN,UAAU,MAAf,SACA,sBAAKA,UAAU,2BAAf,SACA,eAAC,KAAD,CACAxG,KAAK,SACLoC,QAAQ,YACRrE,MAAM,UACNyI,UAAW0D,EAAQvM,OACnBuK,UAAW,eAAC,KAAD,IACXgE,QAAS,kBA1KTtL,EA0K6B,QA1KvB8d,EA0K+B,SAzKzDljB,EAAMijB,gBAAgB7d,QACnBpF,EAAMmjB,UAAU1G,SAASyG,IAGxBljB,EAAMojB,aAAN,uBAAuBpjB,EAAMmjB,WAA7B,CAAwCD,MALzB,IAAC9d,EAAM8d,CA0KG,EACTrc,MAAO,CAACC,gBAAgB,WAPxB,SAUEsK,EAGF,uBAAMvK,MAAO,CAAE8F,cAAe,cAA9B,uBAFA,uBAAM9F,MAAO,CAAE8F,cAAe,cAA9B,mCAa3B,ECzQKtC,GAAYlJ,cAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAE1Ba,KAAM,CACF,QAAS,CACLd,OAAQF,EAAMG,QAAQ,IAE1B,gBAAgB,CACZgB,MAAM,OACN0E,WAAW,QAEf,kBAAkB,CACdqF,aAAa,UACbpK,OAAO,QAEX,6BAA8B,CAC1BoK,aAAc,+CAElB,4BAA6B,CACzB9K,QAAS,qBAEb,WAAW,CACP,qBAAsB,sBAE1B,MAAM,CACFe,MAAM,OAEV,UAAU,CACNC,SAAS,OACTD,MAAM,UACN0E,WAAW,SAGnB+Y,KAAM,CACFlZ,gBAAiB1F,EAAMwM,QAAQqS,WAAWC,SAE9CC,OAAQ,CACJ3e,QAAS,UAEbc,MAAM,CACFC,MAAO,UACPC,SAAU,UA9DW,IA2iBd0sB,GAxeE,SAAClvB,GACd,IAAM0O,EAAUrE,KACVsQ,EAAU9D,cACVgN,EAAW7jB,EAAM+F,YAAc/F,EAAM+F,WAAW+d,kBAAoB9jB,EAAM+F,WAAW+d,kBAAkBhe,GAAK,GAC5Gie,EAAW/jB,EAAM+F,YAAc/F,EAAM+F,WAAa/F,EAAM+F,WAAWD,GAAK,GAC9E,EAA4BpD,oBAAS,GAArC,mBAAO0O,EAAP,KAAeC,EAAf,KACAlC,QAAQC,IAAIpP,EAAM+F,YAElB,MAAiCrD,mBAC7B,CACI8hB,YAAaT,EACboL,sCAAuC,CAAC,EACxCrb,SAAU+P,IAJlB,mBAAOnQ,EAAP,KAQA,GARA,KAQ+BhR,mBAC3B,CACI+lB,cAAc,GACd2G,cAAc,GACdC,iBAAiB,GACjBC,mBAAmB,GACnBC,4BAA4B,GAC5BC,mBAAmB,GACnBC,cAAc,GACdC,mBAAmB,GACnBC,uBAAuB,GACvBC,mBAAmB,GACnBC,cAAc,GACdC,oBAAoB,GACpBC,mBAAmB,GACnBC,iBAAiB,GACjBC,uBAAuB,GACvBC,2CAA2C,GAC3CC,mBAAmB,MAlB3B,mBAAOC,EAAP,KAAiBC,EAAjB,KAqBAjtB,qBAAU,WAEHpD,EAAM+F,YAAc/F,EAAM+F,WAAWopB,sCACpCkB,EAAYrwB,EAAM+F,WAAWopB,uCAGD,KAAzBiB,EAAS3H,eAAuD,KAAjCzoB,EAAM+F,WAAW0iB,eAAuD,OAAjCzoB,EAAM+F,WAAW0iB,eAA0D,aAAjCzoB,EAAM+F,WAAW0iB,eAAgE,aAAlCzoB,EAAM+F,WAAW2iB,eAGjJ,KAAzB0H,EAAS3H,eAAwD,KAAjCzoB,EAAM+F,WAAW0iB,eAAuD,OAAjCzoB,EAAM+F,WAAW0iB,eAA0D,aAAjCzoB,EAAM+F,WAAW0iB,eAAgE,aAAlCzoB,EAAM+F,WAAW2iB,iBACtL0H,EAAS3H,cAAc,QACvB4H,EAAY,2BAAID,GAAL,IAAe3H,cAAc,aAJxC2H,EAAS3H,cAAc,OACvB4H,EAAY,2BAAID,GAAL,IAAe3H,cAAc,UAMnD,GAAE,CAACzoB,EAAM+F,WAAWqqB,EAAS3H,gBAC9B,IAAM6H,EAA4B,SAAA9b,GAE9B6b,EAAW,2BAAMD,GAAN,mBAAkB5b,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,QACzD,EACKwe,EAAiB,SAAC7d,EAAM8d,GAC1BljB,EAAMijB,gBAAgB7d,GACnBpF,EAAMmjB,UAAU1G,SAASyG,IAGxBljB,EAAMojB,aAAN,uBAAuBpjB,EAAMmjB,WAA7B,CAAwCD,IAE/C,EACKqN,EAAc,SAAC/b,GACjBA,EAAEoB,iBAEGC,OAAOC,OAAOsa,GAAUra,OAAM,SAAAtK,GAAC,MAAU,KAANA,CAAJ,IA+BhCwK,IAAM3T,MAAM,sCA9BZoR,EAAU8Q,YAAcxkB,EAAM+F,WAAWD,GACzC4N,EAAUyb,sCAAuCiB,EACjD1c,EAAUI,SAAU9T,EAAM+F,WAAW+d,kBAAkBhe,GACvDjD,IAAMolB,IAAN,UAAanlB,EAAb,eAA4B9C,EAAM+F,WAAWD,GAA7C,yBAAuE4N,EACvE,CAAE3Q,QAAS,CAAC,+BAA4B5D,MAGvC6D,MAAK,SAAAC,GACFoO,GAAU,GACVrR,EAAM2jB,cAAc1gB,EAASC,MAED,SAAzBktB,EAAS3H,cACRxF,EAAgB,kBAAmB,aACL,UAAzBmN,EAAS3H,eACd9N,EAAQ6V,KAAK,IAIpB,IACArtB,OAAM,SAAAb,GAEH,GADA+O,GAAU,GACP/O,EAAMW,UAAYX,EAAMW,SAASC,KAAK,CACrC,IAAImT,EAAe/T,EAAMW,SAASC,KAAKoT,UAAmD,KAAvChU,EAAMW,SAASC,KAAKoT,SAASC,QAAejU,EAAMW,SAASC,KAAKoT,SAASC,QAAW,yCACvIN,IAAM3T,MAAM+T,EACf,MAEGJ,IAAM3T,MAAM,4CAEnB,IAMR,EAGD,OADA6M,QAAQC,IAAIghB,EAAS3H,eAEjB,qCACI,eAAC,KAAD,CAAMzd,UAAW0D,EAAQtM,KAAzB,SACI,gBAAC6I,GAAA,EAAD,WAEA,uDACI,gCACI,uBAAKD,UAAU,MAAf,UACA,eAAC4E,GAAA,EAAD,CAAamF,GAAG,IAAIxS,MAAM,OAAOsE,MAAO,CAACjF,MAAM,OAAQM,OAAO,QAAS8S,QAAM,IAGzE,sBAAKhK,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,gCACA,0BACIjK,UAAU,eACVvF,KAAK,gBACLK,GAAG,gBACHrB,MAAO2rB,EAAS3H,cAChBrT,SAAUkb,EACVzpB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,sBACA,yBAAQA,MAAM,QAAd,8BAMZ,sBAAKuG,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,sEACA,0BACIjK,UAAU,eACVvF,KAAK,gBACLK,GAAG,gBACHrB,MAAO2rB,EAAShB,cAChBha,SAAUkb,EACVzpB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,wBAAd,mCACA,yBAAQA,MAAM,6BAAd,wCACA,yBAAQA,MAAM,yCAAd,oDACA,yBAAQA,MAAM,6CAAd,gEAMZ,sBAAKuG,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,6DACA,0BACIjK,UAAU,eACVvF,KAAK,mBACLK,GAAG,mBACHrB,MAAO2rB,EAASf,iBAChBja,SAAUkb,EACVzpB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,wBAMZ,sBAAKuG,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,uEACA,0BACIjK,UAAU,eACVvF,KAAK,qBACLK,GAAG,qBACHrB,MAAO2rB,EAASd,mBAChBla,SAAUkb,EACVzpB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,wBAMZ,sBAAKuG,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,gDACA,0BACIjK,UAAU,eACVvF,KAAK,8BACLK,GAAG,8BACHrB,MAAO2rB,EAASb,4BAChBna,SAAUkb,EACVzpB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,wBAMZ,sBAAKuG,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,0CACA,0BACIjK,UAAU,eACVvF,KAAK,qBACLK,GAAG,qBACHrB,MAAO2rB,EAASZ,mBAChBpa,SAAUkb,EACVzpB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,wBAMZ,sBAAKuG,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,8CACA,0BACIjK,UAAU,eACVvF,KAAK,gBACLK,GAAG,gBACHrB,MAAO2rB,EAASX,cAChBra,SAAUkb,EACVzpB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,wBAOZ,sBAAKuG,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,oDACA,0BACIjK,UAAU,eACVvF,KAAK,qBACLK,GAAG,qBACHrB,MAAO2rB,EAASV,mBAChBta,SAAUkb,EACVzpB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,wBAMZ,sBAAKuG,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,sDACA,0BACIjK,UAAU,eACVvF,KAAK,yBACLK,GAAG,yBACHrB,MAAO2rB,EAAST,uBAChBva,SAAUkb,EACVzpB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,wBAMZ,sBAAKuG,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,gBAAC,KAAD,sCAAgC,KAAhC,8BACA,0BACIjK,UAAU,eACVvF,KAAK,qBACLK,GAAG,qBACHrB,MAAO2rB,EAASR,mBAChBxa,SAAUkb,EACVzpB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,wBAMZ,sBAAKuG,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,uEACA,0BACIjK,UAAU,eACVvF,KAAK,gBACLK,GAAG,gBACHrB,MAAO2rB,EAASP,cAChBza,SAAUkb,EACVzpB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,wBAMZ,sBAAKuG,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,iEACA,0BACIjK,UAAU,eACVvF,KAAK,sBACLK,GAAG,sBACHrB,MAAO2rB,EAASN,oBAChB1a,SAAUkb,EACVzpB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,wBAOZ,sBAAKuG,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,6DACA,0BACIjK,UAAU,eACVvF,KAAK,qBACLK,GAAG,qBACHrB,MAAO2rB,EAASL,mBAChB3a,SAAUkb,EACVzpB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,wBAMZ,sBAAKuG,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,gDACA,0BACIjK,UAAU,eACVvF,KAAK,mBACLK,GAAG,mBACHrB,MAAO2rB,EAASJ,iBAChB5a,SAAUkb,EACVzpB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,wBAMZ,sBAAKuG,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,2CACA,0BACIjK,UAAU,eACVvF,KAAK,yBACLK,GAAG,yBACHrB,MAAO2rB,EAASH,uBAChB7a,SAAUkb,EACVzpB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,wBA2CZ,sBAAKuG,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,kDACA,0BACIjK,UAAU,eACVvF,KAAK,qBACLK,GAAG,qBACHrB,MAAO2rB,EAASD,mBAChB/a,SAAUkb,EACVzpB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,wBAMZ,eAACqjB,GAAA,EAAD,CAASrlB,SAAO,EAAhB,SACI,+FAAiE,KAAjE,qFAKH2O,EAAS,eAAC4G,GAAA,EAAD,IAAc,GACxB,wBACA,sBAAKhN,UAAU,MAAf,SACA,uBAAKA,UAAU,4BAAf,UACI,eAAC,KAAD,CAAQwY,QAAQ,OAAO1V,KAAK,aAAa2V,cAAc,OAAO5c,MAAO,CAACC,gBAAgB,UAAWvE,MAAM,QAASmO,QAAS,kBAAIuS,EAAgB,WAAY,WAAhC,IAC/F,SAAzBmN,EAAS3H,eACN,eAAC,KAAD,CAAQjF,QAAQ,kBAAkB1V,KAAK,cAAc2V,cAAc,QAAQ5c,MAAO,CAACC,gBAAgB,UAAWvE,MAAM,QAASmO,QAAS6f,IAEhH,UAAzBH,EAAS3H,eACN,eAAC,KAAD,CAAQjF,QAAQ,gBAAgB1V,KAAK,cAAc2V,cAAc,QAAQ5c,MAAO,CAACC,gBAAgB,UAAWvE,MAAM,QAASmO,QAAS6f,oBAUvK,EC1iBKlmB,GAAYlJ,cAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAE1Ba,KAAM,CACF,QAAS,CACLd,OAAQF,EAAMG,QAAQ,IAE1B,gBAAgB,CACZgB,MAAM,OACN0E,WAAW,QAEf,kBAAkB,CACdqF,aAAa,UACbpK,OAAO,QAEX,6BAA8B,CAC1BoK,aAAc,+CAElB,4BAA6B,CACzB9K,QAAS,qBAEb,WAAW,CACP,qBAAsB,sBAE1B,MAAM,CACFe,MAAM,OAEV,UAAU,CACNC,SAAS,OACTD,MAAM,UACN0E,WAAW,SAGnB+Y,KAAM,CACFlZ,gBAAiB1F,EAAMwM,QAAQqS,WAAWC,SAE9CC,OAAQ,CACJ3e,QAAS,UAEbc,MAAM,CACFC,MAAO,UACPC,SAAU,UA9DW,IA+kBdiuB,GA7gBC,SAACzwB,GACb,IAAM0O,EAAUrE,KACVwZ,EAAW7jB,EAAM+F,YAAc/F,EAAM+F,WAAW+d,kBAAoB9jB,EAAM+F,WAAW+d,kBAAkBhe,GAAK,GAC5Gie,EAAW/jB,EAAM+F,YAAc/F,EAAM+F,WAAa/F,EAAM+F,WAAWD,GAAK,GAC9E,EAA4BpD,oBAAS,GAArC,mBAAO0O,EAAP,KAAeC,EAAf,KACA,EAA4B3O,mBAAS,CAAC,GAAtC,mBAAOuO,EAAP,KAAeC,EAAf,KACA,EAAsCxO,mBAAS,IAA/C,mBAAOylB,EAAP,KAAoBC,EAApB,KACIjX,EAAI,eAAQF,GACVgS,EAAiB,SAAC7d,EAAM8d,GAC1BljB,EAAMijB,gBAAgB7d,GACnBpF,EAAMmjB,UAAU1G,SAASyG,IAExBljB,EAAMojB,aAAN,uBAAuBpjB,EAAMmjB,WAA7B,CAAwCD,IAE/C,EAED,EAAiCxgB,mBAC7B,CACI8hB,YAAaT,EACb2M,QAAS,CAAC,EACV5c,SAAU+P,IAJlB,mBAAOnQ,EAAP,KAOA,GAPA,KAO6BhR,mBACzB,CACIiuB,WAAW,GACXC,mBAAmB,GACnBC,mBAAmB,GACnBC,WAAW,GACXC,YAAY,GACZC,kBAAkB,GAClBC,aAAa,GACbC,uBAAuB,GACvBC,aAAa,GACbC,oBAAoB,GACpBC,sBAAsB,GACtBC,uBAAuB,GACvBC,eAAe,GACfC,WAAW,GACXC,gBAAgB,GAChBC,8BAA8B,GAC9BC,cAAc,GACdC,mBAAmB,MAnB3B,mBAAOlB,EAAP,KAAgBmB,EAAhB,KAuBAzuB,qBAAU,WACHpD,EAAM+F,aACL8rB,EAAW7xB,EAAM+F,YAAyC,OAA3B/F,EAAM+F,WAAW2qB,QAAiB1wB,EAAM+F,WAAW2qB,QAAU,CAAC,GAC1F1wB,EAAM+F,WAAWwiB,kBAA6D,KAAzCvoB,EAAM+F,WAAWwiB,iBAAiBY,KACtEf,EAAepoB,EAAM+F,WAAWwiB,iBAAiBY,MAC5CnpB,EAAM+F,WAAWyiB,mBAAgE,KAA3CxoB,EAAM+F,WAAWyiB,kBAAkBc,MAC9ElB,EAAepoB,EAAM+F,WAAWyiB,kBAAkBc,OAElDlB,EAAe,KAGG,SAAvBsI,EAAQO,cAAqD,SAA5BP,EAAQM,mBAAoD,SAAtBN,EAAQK,aAC9EL,EAAQQ,uBAAuB,YAC/BW,EAAU,2BAAMnB,GAAN,mBAAiB,yBAA2B,gBAE1B,UAAvBA,EAAQO,cAAsD,SAA5BP,EAAQM,mBAAoD,SAAtBN,EAAQK,aACrFL,EAAQQ,uBAAuB,SAC/BW,EAAU,2BAAMnB,GAAN,mBAAiB,yBAA2B,aAG1B,UAAvBA,EAAQO,cAAsD,UAA5BP,EAAQM,mBAAqD,SAAtBN,EAAQK,aACtFL,EAAQQ,uBAAuB,WAC/BW,EAAU,2BAAMnB,GAAN,mBAAiB,yBAA2B,eAE1B,SAAvBA,EAAQO,cAAqD,SAA5BP,EAAQM,mBAAoD,UAAtBN,EAAQK,aAIxD,SAAvBL,EAAQO,cAAqD,UAA5BP,EAAQM,mBAAqD,SAAtBN,EAAQK,aAHrFL,EAAQQ,uBAAuB,UAC/BW,EAAU,2BAAMnB,GAAN,mBAAiB,yBAA2B,cAQtDmB,EAAU,2BAAMnB,GAAN,mBAAiB,yBAA2B,KAE7D,GAAC,CAACA,EAAQO,aAAaP,EAAQM,kBAAmBN,EAAQK,YAAa/wB,EAAM+F,aAC9EoJ,QAAQC,IAAIpP,EAAM+F,YAClB,IAAM+rB,EAA2B,SAAAtd,GAE7B,GADAtD,EAAU,2BAAIC,GAAL,mBAAYqD,EAAEC,OAAOhP,KAAM,MAChB,kCAAjB+O,EAAEC,OAAOhP,KAEa,WAAlB+O,EAAEC,OAAOhQ,OACRisB,EAAQkB,mBAAmB,cAC3BC,EAAU,2BAAMnB,GAAN,mBAAiBlc,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,UAE7B,UAAlB+P,EAAEC,OAAOhQ,OACdisB,EAAQkB,mBAAmB,iBAC3BC,EAAU,2BAAMnB,GAAN,mBAAiBlc,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,UAC7B,eAAlB+P,EAAEC,OAAOhQ,OAGS,8BAAlB+P,EAAEC,OAAOhQ,OAFdisB,EAAQkB,mBAAmB,oBAC3BC,EAAU,2BAAMnB,GAAN,mBAAiBlc,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,UAKpDotB,EAAU,2BAAMnB,GAAN,mBAAiBlc,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,cAEtD,GAAmB,eAAhB+P,EAAEC,OAAOhP,MAAwC,KAAjB+O,EAAEC,OAAOhQ,MAAW,CACzD,IAAMstB,EAAuBC,EAAkBxd,EAAEC,OAAOhQ,OACxDotB,EAAU,2BAAMnB,GAAN,mBAAiBlc,EAAEC,OAAOhP,KAAOssB,IAC9C,MACGF,EAAU,2BAAMnB,GAAN,mBAAiBlc,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,QAG3D,EACKutB,EAAkB,SAACxd,GAGrB,OADsBA,EAAEgZ,MAAM,EADhB,GAGjB,EA6CD,OACI,qCACI,eAAC,KAAD,CAAMxiB,UAAW0D,EAAQtM,KAAzB,SACI,gBAAC6I,GAAA,EAAD,WACA,+CACI,gCACI,uBAAKD,UAAU,MAAf,UACA,eAAC4E,GAAA,EAAD,CAAamF,GAAG,IAAIxS,MAAM,OAAOsE,MAAO,CAACjF,MAAM,OAAQM,OAAO,QAAS8S,QAAM,EAA7E,SACI,qBAAInO,MAAO,CAACtE,MAAM,QAAlB,wBAEJ,wBAAK,wBAAK,wBACN,sBAAKyI,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,gCACA,0BACIjK,UAAU,eACVvF,KAAK,aACLK,GAAG,aACHrB,MAAOisB,EAAQC,WACfvb,SAAU0c,EACVjrB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,wBAMZ,sBAAKuG,UAAU,yBACO,UAArB0lB,EAAQC,YACT,uCACA,sBAAK3lB,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,0BACA,0BACIjK,UAAU,eACVvF,KAAK,qBACLK,GAAG,qBACHrB,MAAOisB,EAAQE,mBACfxb,SAAU0c,EACVjrB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,SAAd,oBACA,yBAAQA,MAAM,SAAd,4BAMZ,sBAAKuG,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,0BACA,eAACC,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,qBACLK,GAAG,qBACHrB,MAAOisB,EAAQG,mBACfzb,SAAU0c,EACVrc,IAAmB,KAAd0S,GAAkC,OAAdA,EAAqBA,EAAa,GAC3D9S,IAAM7O,GAAO,IAAI/C,MAAQgD,OAAO,cAChCI,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,kBAM9D,sBAAKtB,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,2BACA,eAACC,GAAA,EAAD,CACIlK,UAAU,eACVvF,KAAK,aACLK,GAAG,aACHtB,KAAK,OACLC,MAAOisB,EAAQI,WACf1b,SAAU0c,EACVjrB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,iBAM9D,sBAAKtB,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,6BACA,0BACIjK,UAAU,eACVvF,KAAK,cACLK,GAAG,cACHrB,MAAOisB,EAAQK,YACf3b,SAAU0c,EACVjrB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,wBAMZ,sBAAKuG,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,kCACA,0BACIjK,UAAU,eACVvF,KAAK,oBACLK,GAAG,oBACHrB,MAAOisB,EAAQM,kBACf5b,SAAU0c,EACVjrB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,wBAMZ,sBAAKuG,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,+BACA,0BACIjK,UAAU,eACVvF,KAAK,eACLK,GAAG,eACHrB,MAAOisB,EAAQO,aACf7b,SAAU0c,EACVjrB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,wBAOZ,sBAAKuG,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,uCACA,eAACC,GAAA,EAAD,CACIlK,UAAU,eACVvF,KAAK,yBACLK,GAAG,yBACHtB,KAAK,OACLC,MAAOisB,EAAQQ,uBACfvb,UAAQ,EACR9O,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,iBAM5B,WAAjCokB,EAAQQ,wBACT,sBAAKlmB,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,kDACA,0BACIjK,UAAU,eACVvF,KAAK,eACLK,GAAG,eACHrB,MAAOisB,EAAQS,aACf/b,SAAU0c,EACVjrB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,wBAOY,SAAvBisB,EAAQS,cACT,qCACI,uBAAKnmB,UAAU,MAAf,UACI,8DACA,wBACJ,sBAAKA,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,oCACA,eAACC,GAAA,EAAD,CACIlK,UAAU,eACVvF,KAAK,sBACLK,GAAG,sBACHtB,KAAK,OACLC,MAAOisB,EAAQU,oBACf3b,IAAKib,EAAQG,mBACbxb,IAAM7O,GAAO,IAAI/C,MAAQgD,OAAO,cAChC2O,SAAU0c,EACVjrB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,iBAK9D,sBAAKtB,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,qCACA,eAACC,GAAA,EAAD,CACIlK,UAAU,eACVvF,KAAK,wBACLK,GAAG,wBACHtB,KAAK,OACLC,MAAOisB,EAAQW,sBACfjc,SAAU0c,EACVjrB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,YAErB,KAAhC2E,EAAOogB,sBACR,uBAAMrmB,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOogB,wBACpC,QAGZ,sBAAKrmB,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,0BACA,0BACIjK,UAAU,eACVvF,KAAK,aACLK,GAAG,aACHrB,MAAOisB,EAAQc,WACfpc,SAAU0c,EACVjrB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,MAAd,iBACA,yBAAQA,MAAM,SAAd,uBAGkB,KAArBwM,EAAOugB,WACR,uBAAMxmB,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOugB,aACpC,QAGZ,sBAAKxmB,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,0CACA,eAACC,GAAA,EAAD,CACIlK,UAAU,eACVvF,KAAK,yBACLK,GAAG,yBACHtB,KAAK,OACLiR,IAAKib,EAAQG,mBACbpsB,MAAOisB,EAAQY,uBACfjc,IAAM7O,GAAO,IAAI/C,MAAQgD,OAAO,cAChC2O,SAAU0c,EACVjrB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,YAEnB,KAAjC2E,EAAOqgB,uBACT,uBAAMtmB,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOqgB,yBACpC,QAGZ,sBAAKtmB,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,+BACA,eAACC,GAAA,EAAD,CACIlK,UAAU,eACVvF,KAAK,iBACLK,GAAG,iBACHtB,KAAK,OACLiR,IAAKib,EAAQG,mBACbxb,IAAM7O,GAAO,IAAI/C,MAAQgD,OAAO,cAChChC,MAAOisB,EAAQa,eACfnc,SAAU0c,EACVjrB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,iBAK9D,sBAAKtB,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,gCACA,eAACC,GAAA,EAAD,CACIlK,UAAU,eACVvF,KAAK,kBACLK,GAAG,kBACHtB,KAAK,OACLC,MAAOisB,EAAQe,gBACfrc,SAAU0c,EACVjrB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,iBAK9D,sBAAKtB,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,sEACA,0BACIjK,UAAU,eACVvF,KAAK,gCACLK,GAAG,gCACHrB,MAAOisB,EAAQgB,8BACftc,SAAU0c,EACVjrB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,GAAf,oBACA,0BAAQA,MAAM,SAAd,UAAwB,MAAxB,WACA,0BAAQA,MAAM,QAAd,UAAuB,KAAvB,WACA,yBAAQA,MAAM,aAAd,wBACA,yBAAQA,MAAM,4BAAd,+CAqBZ,sBAAKuG,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,mCACA,eAACC,GAAA,EAAD,CACIlK,UAAU,eACVvF,KAAK,qBACLK,GAAG,qBACHtB,KAAK,OACLmR,UAAQ,EACRlR,MAAOisB,EAAQkB,mBACfxc,SAAU0c,EACVjrB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,yBAUjE8E,EAAS,eAAC4G,GAAA,EAAD,IAAc,GACxB,wBACA,sBAAKhN,UAAU,MAAf,SACA,uBAAKA,UAAU,4BAAf,UACA,eAAC,KAAD,CAAQwY,QAAQ,OAAO1V,KAAK,aAAa2V,cAAc,OAAO5c,MAAO,CAACC,gBAAgB,UAAWvE,MAAM,QAASmO,QAAS,kBAAIuS,EAAgB,YAAY,YAAhC,IACzH,eAAC,KAAD,CAAQO,QAAQ,kBAAkB1V,KAAK,cAAc2V,cAAc,QAAQ5c,MAAO,CAACC,gBAAgB,UAAWvE,MAAM,QAASmO,QApYjI,SAAC8D,GACjBA,EAAEoB,iBAGElC,EAAU8Q,YAAaT,EACvBrQ,EAAUgd,QAASA,EACnBhd,EAAUI,SAAU+P,EACpB1U,QAAQC,IAAIshB,GACZ7tB,IAAMolB,IAAN,UAAanlB,EAAb,eAA2BihB,EAA3B,YAA8CrQ,EAC9C,CAAE3Q,QAAS,CAAC,+BAA4B5D,MAGvC6D,MAAK,SAAAC,GACFoO,GAAU,GACVrR,EAAM2jB,cAAc1gB,EAASC,MAE7B+f,EAAgB,WAAY,kBAE/B,IACA9f,OAAM,SAAAb,GAEH,GADA+O,GAAU,GACP/O,EAAMW,UAAYX,EAAMW,SAASC,KAAK,CACrC,IAAImT,EAAe/T,EAAMW,SAASC,KAAKoT,UAAmD,KAAvChU,EAAMW,SAASC,KAAKoT,SAASC,QAAejU,EAAMW,SAASC,KAAKoT,SAASC,QAAW,yCACvIN,IAAM3T,MAAM+T,EACf,MAEGJ,IAAM3T,MAAM,4CAEnB,GAGR,oBA8WJ,E,WCzkBK+H,GAAYlJ,cAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAE1Ba,KAAM,CACF,QAAS,CACLd,OAAQF,EAAMG,QAAQ,IAE1B,gBAAgB,CACZgB,MAAM,OACN0E,WAAW,QAEf,kBAAkB,CACdqF,aAAa,UACbpK,OAAO,QAEX,6BAA8B,CAC1BoK,aAAc,+CAElB,4BAA6B,CACzB9K,QAAS,qBAEb,WAAW,CACP,qBAAsB,sBAE1B,MAAM,CACFe,MAAM,OAEV,UAAU,CACNC,SAAS,OACTD,MAAM,UACN0E,WAAW,SAGnB+Y,KAAM,CACFlZ,gBAAiB1F,EAAMwM,QAAQqS,WAAWC,SAE9CC,OAAQ,CACJ3e,QAAS,UAEbc,MAAM,CACFC,MAAO,UACPC,SAAU,UAEdC,QAAQ,CACJF,MAAO,QACPC,SAAU,SACVyE,WAAW,QAnEU,IAgnCdgrB,GAxiCY,SAACjyB,GACxB,IAAM0O,EAAUrE,KACAwM,cAChB1H,QAAQC,IAAIpP,GACZ,IACIkyB,EADJ,EAA0CxvB,mBAAS,IAAnD,mBAAO6d,EAAP,KAAsBC,EAAtB,KAEA,EAAoB9d,mBAAS,IAA7B,mBAAO2d,EAAP,KAAWC,EAAX,KACA,EAA4B5d,mBAAS,CAAC,GAAtC,mBAAOuO,EAAP,KAAeC,EAAf,KACA,EAA4BxO,oBAAS,GAArC,mBAAe2O,GAAf,WACIF,EAAI,eAAQF,GAChB,EAAwBzG,IAAM9H,UAAS,GAAvC,mBAAOyvB,EAAP,KAAaC,EAAb,KACMC,EAAS,kBAAMD,GAASD,EAAf,EACf,EAA8BzvB,mBAAS,IAAvC,mBAAO4vB,EAAP,KAAgBC,EAAhB,KACA,EAAkC7vB,mBAAS,GAA3C,mBAAO2kB,EAAP,KAAkBmL,EAAlB,KACA,EAAiC9vB,mBAC7B,CACI2D,IAAIrG,EAAM4jB,WACVrgB,IAAI,GACJkvB,UAAW,GACXnsB,YAAa,GACb+c,mBAAoB,GACpBgK,uBAAwB,GACxBjL,YAAY,GACZC,eAAe,GACfqQ,SAAW,GACXnd,KAAK,GACLzB,SAAU9T,EAAM+F,WAAW+N,SAC3BmO,eAAgB,CAAC,EACjBjQ,WAAW,KAdnB,mBAAO0B,EAAP,KAAkBC,EAAlB,KAkBA,EAA2CjR,mBACvC,CACI4iB,yBAAyB,GACzBC,4BAA4B,GAC5BC,uCAAuC,GACvCC,+CAA+C,GAC/CC,sBAAsB,GACtBrB,kBAAkB,GAClBsB,mBAAmB,GACnBC,kBAAmB,GACnBC,qCAAqC,GACrCC,eAAe,GACfC,qBAAqB,GACrBC,UAAU,GACVC,iBAAiB,GACjBC,gCAAgC,GAChCC,mBAAmB,GAEnBwM,0BAA0B,GAC1BC,mBAAmB,GACnBC,yBAAyB,GACzBC,iBAAiB,GACjBC,gBAAgB,GAChBC,gBAAgB,GAChBC,4BAA4B,GAC5BC,4BAA4B,GAC5BC,uBAAuB,GACvBC,0BAA0B,KA3BlC,mBAAOnR,EAAP,KAAuBmE,EAAvB,KA8BAhjB,qBAAU,WACNqf,IACAC,GACH,GAAE,CAAC1iB,EAAM+F,aAEV,IAAM2c,EAAmB,WACrB7f,IACCrD,IADD,UACQsD,EADR,wCAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEHud,EAAiBvd,EAASC,KAC7B,IACAC,OAAM,SAACb,GAEP,GACJ,EAEKmgB,EAAI,WACN5f,IACCrD,IADD,UACQsD,EADR,wCAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACHqd,EAAMrd,EAASC,KAClB,IACAC,OAAM,SAACb,GAEP,GACJ,EACKiS,EAAoB,SAAAC,GACtBtD,EAAU,2BAAIC,GAAL,mBAAYqD,EAAEC,OAAOhP,KAAM,MACjB,mBAAhB+O,EAAEC,OAAOhP,MAA4C,KAAjB+O,EAAEC,OAAOhQ,SAwDpD,SAA0B4uB,GACtB,IAAMf,EAAUe,EAChBxwB,IACIrD,IADJ,UACWsD,EADX,mCAC6CwvB,GACtC,CAAEvvB,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACHsvB,EAAWtvB,EAASC,KACvB,IACAC,OAAM,SAACb,GAEP,GAEP,CApEOgxB,CAAgB9e,EAAEC,OAAOhQ,OACzBkP,EAAY,2BAAMD,GAAN,mBAAmBc,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,UAEzC,aAAhB+P,EAAEC,OAAOhP,MAAsC,KAAjB+O,EAAEC,OAAOhQ,QAElB,kDAAjB+P,EAAEC,OAAOhQ,OACR+tB,EAAa,GACb7e,EAAY,2BAAMD,GAAN,mBAAmBc,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,UAClC,0CAAjB+P,EAAEC,OAAOhQ,MAEdkP,EAAY,2BAAMD,GAAN,mBAAmBc,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,SAClC,sCAAjB+P,EAAEC,OAAOhQ,OAGQ,kEAAjB+P,EAAEC,OAAOhQ,OAGQ,oCAAjB+P,EAAEC,OAAOhQ,OAGQ,mCAAjB+P,EAAEC,OAAOhQ,OAGQ,wBAAjB+P,EAAEC,OAAOhQ,OAGQ,0BAAjB+P,EAAEC,OAAOhQ,OAGQ,uBAAjB+P,EAAEC,OAAOhQ,OAGQ,uBAAjB+P,EAAEC,OAAOhQ,OAGQ,yBAAjB+P,EAAEC,OAAOhQ,OAvBd+tB,EAAa,GACb7e,EAAY,2BAAMD,GAAN,mBAAmBc,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,UAyBlC,yBAAjB+P,EAAEC,OAAOhQ,MAEdkP,EAAY,2BAAMD,GAAN,mBAAmBc,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,SAClC,gCAAjB+P,EAAEC,OAAOhQ,OACd+tB,EAAa,GACb7e,EAAY,2BAAMD,GAAN,mBAAmBc,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,WAExD+tB,EAAa,GACb7e,EAAY,2BAAMD,GAAN,mBAAmBc,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,WAKhEkP,EAAY,2BAAMD,GAAN,mBAAmBc,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,QAC3D,EAmBD,IAAMwT,EAAW,WAQb,OANI9G,EAAKsQ,UAAY/N,EAAU+e,UAAY,GAAK,0BAC5CthB,EAAKkR,eAAiB3O,EAAU2O,eAAiB,GAAK,0BACtDlR,EAAKuhB,SAAWhf,EAAUgf,SAAW,GAAK,0BAC1C1yB,EAAM+F,WAAWM,IAAI,KAAO8K,EAAKiR,YAAc1O,EAAU0O,YAAc,GAAK,2BAExElR,EAAU,eAAKC,IAChB0E,OAAOC,OAAO3E,GAAM4E,OAAM,SAAAtK,GAAC,MAAS,IAALA,CAAJ,GACrC,EACKwX,EAAiB,SAAC7d,EAAM8d,GAC1BljB,EAAMijB,gBAAgB7d,GACnBpF,EAAMmjB,UAAU1G,SAASyG,IAGxBljB,EAAMojB,aAAN,uBAAuBpjB,EAAMmjB,WAA7B,CAAwCD,IAE/C,EAEKqQ,GAAoB1d,OAAOC,OAAOmM,GACxCiQ,EAAkBqB,GAAoBnjB,QAAO,SAAC3E,GAAD,MAAU,SAAJA,CAAN,IAC7C,IAAM2b,GAAkC,SAAA5S,GAEpC4R,EAAiB,2BAAMnE,GAAN,mBAAwBzN,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,QAErE,EAqID,OACI,uCAEI,eAAC,KAAD,CAAMuG,UAAW0D,EAAQtM,KAAzB,SACI,gBAAC6I,GAAA,EAAD,WACA,qBAAIpE,MAAO,CAACtE,MAAM,QAAlB,iCACA,wBACI,gCACI,uBAAKyI,UAAU,MAAf,UACA,sBAAKA,UAAU,8CAA8CnE,MAAO,CAACC,gBAAgB,UAAWlF,MAAM,OAAQM,OAAO,OAAQK,MAAM,OAAQ0E,WAAW,QAAtJ,sBACI,uBAAK+D,UAAU,MAAf,UACA,sBAAKA,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,2BACA,0BACIjK,UAAU,eACVvF,KAAK,aACLK,GAAG,aACHrB,MAAOiP,EAAU1B,WACjBoD,SAAUb,EACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,GAAf,oBACA,yBAAQA,MAAM,WAAd,sBACA,yBAAQA,MAAM,YAAd,0BAEkB,KAArBwM,EAAOe,WACR,uBAAMhH,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOe,aACpC,QAGZ,sBAAKhH,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,CAAO4J,IAAI,GAAX,2BACA,eAAC3J,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,YACLK,GAAG,YACHrB,MAAOiP,EAAU+e,UACjBrd,SAAUb,EACVkB,IAAI,aACJJ,IAAM7O,GAAO,IAAI/C,MAAQgD,OAAO,cAChCI,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,aAGjC,KAApB2E,EAAOwQ,UACJ,uBAAMzW,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOwQ,YACxC,QAGR,sBAAKzW,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,sBACA,0BACIjK,UAAU,eACVvF,KAAK,iBACLK,GAAG,iBACHrB,MAAOiP,EAAU2O,eACjBjN,SAAUb,EACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,GAAf,oBACC8b,EAAchb,KAAI,SAACd,GAAD,OACf,yBAAuBA,MAAOA,EAAM8Q,KAApC,SACK9Q,EAAMjD,SADEiD,EAAMqB,GADJ,OAiBG,KAAzBmL,EAAOoR,eACR,uBAAMrX,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOoR,iBACpC,QAGZ,sBAAKrX,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,uBACA,0BACIjK,UAAU,eACVvF,KAAK,WACLK,GAAG,WACHrB,MAAOiP,EAAUgf,SACjBtd,SAAUb,EACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,GAAf,oBACC6tB,EAAQ/sB,KAAI,SAACd,GAAD,OACT,yBAAyBA,MAAOA,EAAM8Q,KAAtC,SACK9Q,EAAMjD,SADEiD,EAAM8Q,KADV,OAOG,KAAnBtE,EAAOyhB,SACR,uBAAM1nB,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOyhB,WACpC,WAKZ,wBAEA,sBAAK1nB,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,6BACA,0BACIjK,UAAU,eACVvF,KAAK,cACLK,GAAG,cACHsP,SAAUb,EACV9P,MAAOiP,EAAU0O,YACjBvb,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACd4b,EAAG9a,KAAI,SAACd,GAAD,OACJ,yBAAuBA,MAAOA,EAAM8Q,KAApC,SACK9Q,EAAMjD,SADEiD,EAAMqB,GADf,OAMW,KAAtBmL,EAAOmR,YACJ,uBAAMpX,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOmR,cACxC,QAKZ,wBAECpiB,EAAM4jB,WAAW,IAAQ,uCAmMA,KAAxBlQ,EAAU0O,aAA4C,yBAAxB1O,EAAU0O,aAA4C,uCACtF,sBAAKpX,UAAU,8CAA8CnE,MAAO,CAACC,gBAAgB,UAAWlF,MAAM,OAAQM,OAAO,OAAQK,MAAM,OAAQ0E,WAAW,QAAtJ,kDACA,sBAAK+D,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,mGACA,0BACIjK,UAAU,eACVvF,KAAK,4BACLK,GAAG,4BACHrB,MAAOwd,EAAemR,0BACtBhe,SAAUgS,GACVvgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGiC,KAApCwM,EAAOmiB,0BACR,uBAAMpoB,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOmiB,4BACpC,QAGZ,sBAAKpoB,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,mDACA,0BACIjK,UAAU,eACVvF,KAAK,kBACLK,GAAG,kBACHrB,MAAOwd,EAAe8Q,gBACtB3d,SAAUgS,GACVvgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGuB,KAA1BwM,EAAO8hB,gBACR,uBAAM/nB,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO8hB,kBACpC,QAGZ,sBAAK/nB,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,qCACA,0BACIjK,UAAU,eACVvF,KAAK,mBACLK,GAAG,mBACHrB,MAAOwd,EAAe6Q,iBACtB1d,SAAUgS,GACVvgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGwB,KAA3BwM,EAAO6hB,iBACR,uBAAM9nB,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO6hB,mBACpC,QAGZ,sBAAK9nB,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,sKACA,0BACIjK,UAAU,eACVvF,KAAK,yBACLK,GAAG,yBACHrB,MAAOwd,EAAekR,uBACtB/d,SAAUgS,GACVvgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAG8B,KAAjCwM,EAAOkiB,uBACR,uBAAMnoB,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOkiB,yBACpC,QAGZ,sBAAKnoB,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,6FACA,0BACIjK,UAAU,eACVvF,KAAK,8BACLK,GAAG,8BACHrB,MAAOwd,EAAeiR,4BACtB9d,SAAUgS,GACVvgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGmC,KAAtCwM,EAAOiiB,4BACR,uBAAMloB,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOiiB,8BACpC,QAGZ,sBAAKloB,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,4RACA,0BACIjK,UAAU,eACVvF,KAAK,8BACLK,GAAG,8BACHrB,MAAOwd,EAAegR,4BACtB7d,SAAUgS,GACVvgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGmC,KAAtCwM,EAAOgiB,4BACR,uBAAMjoB,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOgiB,8BACpC,QAGZ,sBAAKjoB,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,2IACA,0BACIjK,UAAU,eACVvF,KAAK,kBACLK,GAAG,kBACHrB,MAAOwd,EAAe+Q,gBACtB5d,SAAUgS,GACVvgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGuB,KAA1BwM,EAAO+hB,gBACR,uBAAMhoB,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO+hB,kBACpC,QAGZ,sBAAKhoB,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,kMACA,0BACIjK,UAAU,eACVvF,KAAK,2BACLK,GAAG,oBACHrB,MAAOwd,EAAe4Q,yBACtBzd,SAAUgS,GACVvgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGgC,KAAnCwM,EAAO4hB,yBACR,uBAAM7nB,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO4hB,2BACpC,QAGZ,sBAAK7nB,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,0HACA,0BACIjK,UAAU,eACVvF,KAAK,qBACLK,GAAG,qBACHrB,MAAOwd,EAAe2Q,mBACtBxd,SAAUgS,GACVvgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAG0B,KAA7BwM,EAAO2hB,mBACR,uBAAM5nB,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO2hB,qBACpC,QAGZ,sBAAK5nB,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,4EACA,0BACIjK,UAAU,eACVvF,KAAK,4BACLK,GAAG,uCACHrB,MAAOwd,EAAe0Q,0BACtBvd,SAAUgS,GACVvgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGiC,KAApCwM,EAAO0hB,0BACR,uBAAM3nB,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO0hB,4BACpC,QAGZ,2BAE0B,KAAxBjf,EAAU0O,aAA4C,yBAAxB1O,EAAU0O,aAA4C,uCACtF,sBAAKpX,UAAU,8CAA8CnE,MAAO,CAACC,gBAAgB,UAAWlF,MAAM,OAAQM,OAAO,OAAQK,MAAM,OAAQ0E,WAAW,QAAtJ,kDACA,sBAAK+D,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,4JACA,0BACIjK,UAAU,eACVvF,KAAK,iBACLK,GAAG,iBACHrB,MAAOwd,EAAe6D,eACtB1Q,SAAUgS,GACVvgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGsB,KAAzBwM,EAAO6U,eACR,uBAAM9a,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO6U,iBACpC,QAGZ,sBAAK9a,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,sJACA,0BACIjK,UAAU,eACVvF,KAAK,uBACLK,GAAG,uBACHrB,MAAOwd,EAAe8D,qBACtB3Q,SAAUgS,GACVvgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAG4B,KAA/BwM,EAAO8U,qBACR,uBAAM/a,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO8U,uBACpC,QAGZ,sBAAK/a,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,0FACA,0BACIjK,UAAU,eACVvF,KAAK,kBACLK,GAAG,kBACHrB,MAAOwd,EAAe+F,gBACtB5S,SAAUgS,GACVvgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGuB,KAA1BwM,EAAO+W,gBACR,uBAAMhd,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO+W,kBACpC,QAGZ,sBAAKhd,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,oHACA,0BACIjK,UAAU,eACVvF,KAAK,YACLK,GAAG,YACHrB,MAAOwd,EAAe+D,UACtB5Q,SAAUgS,GACVvgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGiB,KAApBwM,EAAO+U,UACR,uBAAMhb,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO+U,YACpC,QAGZ,sBAAKhb,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,2EACA,0BACIjK,UAAU,eACVvF,KAAK,mBACLK,GAAG,mBACHrB,MAAOwd,EAAegE,iBACtB7Q,SAAUgS,GACVvgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGwB,KAA3BwM,EAAOgV,iBACR,uBAAMjb,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOgV,mBACpC,QAGZ,sBAAKjb,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,oGACA,0BACIjK,UAAU,eACVvF,KAAK,kCACLK,GAAG,kCACHrB,MAAOwd,EAAeiE,gCACtB9Q,SAAUgS,GACVvgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAGuC,KAA1CwM,EAAOiV,gCACR,uBAAMlb,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOiV,kCACpC,QAGZ,sBAAKlb,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,yEACA,0BACIjK,UAAU,eACVvF,KAAK,qBACLK,GAAG,qBACHrB,MAAOwd,EAAekE,mBACtB/Q,SAAUgS,GACVvgB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,KACf,yBAAQA,MAAM,OAAd,iBACA,yBAAQA,MAAM,QAAd,mBAG0B,KAA7BwM,EAAOkV,mBACR,uBAAMnb,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOkV,qBACpC,QAIZ,8BAGA,wBACA,gBAAC2B,GAAA,EAAD,CAASC,SAAO,EAAhB,UACI,sEACA,yCAAWV,GAAarnB,EAAM4jB,WAAW,GAAIsO,EAAkB5hB,OAAS,SAE5E,wBACA,wBACA,sBAAKtF,UAAU,MAAf,SACA,sBAAKA,UAAU,2BAAf,SAEA,eAAC,KAAD,CAAQwY,QAAQ,OAAOhf,KAAK,SAASsJ,KAAK,cAAc2V,cAAc,QAAQ5c,MAAO,CAACC,gBAAgB,UAAWvE,MAAM,QAASmO,QA30BpI,SAAC8D,GACjBA,EAAEoB,iBAEE5V,EAAM+F,WAAWqc,YAAc1O,EAAU0O,YACzCpiB,EAAM+F,WAAWsc,eAAiB3O,EAAU2O,eAC5CriB,EAAM+F,WAAW0b,UAAW/N,EAAU+e,UACtCzyB,EAAM+F,WAAWkc,eAAgBA,EAEjCvO,EAAUuO,eAAeA,GACrBoF,EAAU,GAAK6K,EAAkB5hB,OAAO,IAAMtQ,EAAM4jB,WAAW,KAC5D3L,IACCpV,IAAMmT,KAAN,UAAclT,EAAd,uBAA2C4Q,EAC3C,CAAE3Q,QAAS,CAAC,+BAA4B5D,MAGvC6D,MAAK,SAAAC,GACFoO,GAAU,GACVqC,EAAU6B,KAAKtS,EAASC,KAAKqS,KAC7BvV,EAAMwzB,SAAS9f,GACfuP,EAAgB,QAAS,QACzBjjB,EAAMyzB,kBAAiB,EAE1B,IACAtwB,OAAM,SAAAb,GAEH,GADA+O,GAAU,GACP/O,EAAMW,UAAYX,EAAMW,SAASC,KAAK,CACrC,IAAImT,EAAe/T,EAAMW,SAASC,KAAKoT,UAAmD,KAAvChU,EAAMW,SAASC,KAAKoT,SAASC,QAAejU,EAAMW,SAASC,KAAKoT,SAASC,QAAW,yCACvIN,IAAM3T,MAAM+T,EAAe,CAACH,SAAUD,IAAME,SAASC,eACxD,MAEGH,IAAM3T,MAAM,4CAA8C,CAAC4T,SAAUD,IAAME,SAASC,eAE3F,IAEDH,IAAM3T,MAAM,0BAA4B,CAAC4T,SAAUD,IAAME,SAASC,iBAsCvEpW,EAAM4jB,WAAW,GACb3L,IACCpV,IAAMmT,KAAN,UAAclT,EAAd,uBAA2C4Q,EAC3C,CAAE3Q,QAAS,CAAC,+BAA4B5D,MAGvC6D,MAAK,SAAAC,GACFoO,GAAU,GACVrR,EAAM+F,WAAWkhB,8BAA8BhkB,EAASC,KACxDwQ,EAAU6B,KAAKtS,EAASC,KAAKqS,KAC7BvV,EAAMwzB,SAAS9f,GACf1T,EAAMyzB,kBAAiB,GACvBxQ,EAAgB,QAAS,OAE5B,IACA9f,OAAM,SAAAb,GAEH,GADA+O,GAAU,GACP/O,EAAMW,UAAYX,EAAMW,SAASC,KAAK,CACrC,IAAImT,EAAe/T,EAAMW,SAASC,KAAKoT,UAAmD,KAAvChU,EAAMW,SAASC,KAAKoT,SAASC,QAAejU,EAAMW,SAASC,KAAKoT,SAASC,QAAW,yCACvIN,IAAM3T,MAAM+T,EAAe,CAACH,SAAUD,IAAME,SAASC,eACxD,MAEGH,IAAM3T,MAAM,4CAEnB,IAED2T,IAAM3T,MAAM,0BAA4B,CAAC4T,SAAUD,IAAME,SAASC,iBAItEpW,EAAMwzB,SAAS9f,GACZuE,IACCpV,IAAMmT,KAAN,UAAclT,EAAd,uBAA2C4Q,EAC3C,CAAE3Q,QAAS,CAAC,+BAA4B5D,MAGvC6D,MAAK,SAAAC,GACFoO,GAAU,GACVrR,EAAM+F,WAAWkhB,8BAA8BhkB,EAASC,KACxDwQ,EAAU6B,KAAKtS,EAASC,KAAKqS,KAC7BvV,EAAMwzB,SAAS9f,EAElB,IACAvQ,OAAM,SAAAb,GAEH,GADA+O,GAAU,GACP/O,EAAMW,UAAYX,EAAMW,SAASC,KAAK,CACrC,IAAImT,EAAe/T,EAAMW,SAASC,KAAKoT,UAAmD,KAAvChU,EAAMW,SAASC,KAAKoT,SAASC,QAAejU,EAAMW,SAASC,KAAKoT,SAASC,QAAW,yCACvIN,IAAM3T,MAAM+T,EAAe,CAACH,SAAUD,IAAME,SAASC,eACxD,MAEGH,IAAM3T,MAAM,4CAA8C,CAAC4T,SAAUD,IAAME,SAASC,eAE3F,IAEDH,IAAM3T,MAAM,0BAA4B,CAAC4T,SAAUD,IAAME,SAASC,gBAIjF,kBAitBO,gBAAC,KAAD,CAAOsd,KAAMvB,EAAME,OAAQA,EAAQrnB,UAAU,OAAOjE,KAAK,KACrD,kBAAgB,gCAChB4sB,UAAQ,EAFZ,UAGC,eAAC,KAAMhU,OAAP,UACD,eAAC,KAAMiU,MAAP,CAAa9tB,GAAG,gCAAhB,6BAII,eAAC,KAAMkH,KAAP,UACI,qEAGR,eAAC,KAAM6mB,OAAP,UACI,eAAC,KAAD,CAAQnjB,QAAS2hB,EAAQxrB,MAAO,CAACC,gBAAgB,UAAWvE,MAAM,QAAlE,wBAKf,EC9mCK8H,GAAYlJ,cAAW,SAACC,GAAD,MAAY,CAErCkB,MAAM,CACFC,MAAO,UACPC,SAAU,UAEdC,QAAS,CACLF,MAAO,WACPC,SAAU,QARW,IAwXdsxB,GA3WE,SAAC9zB,GACEqK,KACAwM,cACCkd,cACcnuB,MAH/B,IAIA,EAA4BlD,oBAAS,GAArC,mBACA,GADA,UACoCA,mBAAS,SAA7C,mBAAO6H,EAAP,KAAmBypB,EAAnB,KACA,EAAkCtxB,mBAAS,IAA3C,mBAAOygB,EAAP,KAAkBC,EAAlB,KACA,EAA0C1gB,oBAAS,GAAnD,mBAAOuxB,EAAP,KAAsBR,EAAtB,KACA,EAAoC/wB,mBAAS,CACzC8e,cAAe,GACf0S,WAAY,GACZhL,IAAK,CAAC,EACN3H,WAAY,GACZW,uBAAuB,GACvBqG,iBAAkB,CAAC,EACnB9G,UAAW,GACXU,MAAO,CAAC,EACRT,eAAgB,GAChBsH,iBAAkB,CAAC,EACnBP,cAAe,GACf3iB,GAAI,GACJ6b,YAAa,GACba,gBAAiB,GACjB2R,iBAAkB,CAChB,CACE3kB,QAAS,GACT4c,eAAgB,GAChBgI,SAAU,EACV3H,0BAA0B,EAC1BI,0BAA2B,GAC3BtpB,IAAK,GACL4e,MAAO,CAAC,EACRtO,WAAY,EACZ7N,UAAW,GACXumB,aAAc,GACd8H,UAAW,CACTD,SAAU,EACV5S,cAAe,EACf0S,WAAY,GACZhL,IAAK,CAAC,EACN3H,WAAY,GACZgH,iBAAkB,CAAC,EACnB9G,UAAW,GACXU,MAAO,CAAC,EACRtO,WAAY,EACZ6N,gBAAgB,EAChBsH,iBAAkB,CAAC,EACnBP,cAAe,GACf3iB,GAAI,EACJ6b,aAAa,EACba,gBAAiB,GACjBwJ,qCAAsC,CAAC,EACvCvH,oBAAqB,CAAC,EACtB7C,YAAa,EACbC,SAAU,EACVoH,OAAQ,CAAC,EACTqL,OAAQ,CACNhT,OAAQ,GACR9R,QAAS,CAAC,EACV4kB,SAAU,EACVG,QAAS,CAAC,EACVC,aAAc,CAAC,EACfC,YAAa,GACbnuB,YAAa,GACb+c,mBAAoB,GACpBqR,UAAU,EACVC,iBAAkB,GAClBC,UAAW,CAAC,EACZC,iBAAkB,CAAC,EACnBC,MAAO,GACPjhB,WAAY,EACZ7N,UAAW,SACXG,OAAQ,CAAC,EACT9B,eAAgB,GAChByB,GAAI,GACJ1B,WAAY,CAAC,EACbipB,wBAAwB,EACxBpQ,iBAAkB,GAClB8X,cAAe,CAAC,EAChBC,KAAK,EACLC,UAAW,GACXC,aAAc,CAAC,EACfC,UAAW,GACX/uB,IAAK,GACLH,QAAS,GACTmvB,KAAM,IAER/hB,WAAY,GACZ8b,sCAAuC,CAAC,EACxCrN,SAAU,GACVC,kBAAkB,EAClB2O,QAAS,CAAC,EACV1O,aAAc,GACdqT,wBAAyB,GACzBpT,eAAgB,CAAC,EACjB2C,yBAA0B,CAAC,EAC3BF,aAAc,CAAC,EACfqE,gBAAiB,CAAC,EAClB3G,YAAa,EACbuC,YAAa,CAAC,EACdgE,MAAO,CAAC,EACRtG,eAAgB,GAChBwG,eAAgB,CAAC,EACjBvG,eAAgB,GAChB8S,KAAM,IAERE,cAAe,GACfxvB,GAAI,GACJunB,wBAAwB,EACxBnB,SAAU,GACVD,WAAY,GACZW,mBAAoB,GACpBF,sBAAuB,GACvBP,YAAa,GACbE,aAAc,GACdkJ,0BAA2B,GAC3BnvB,IAAK,GACLumB,sBAAuB,GACvBL,eAAgB,GAChB8I,KAAM,KAGVpJ,qCAAsC,CAAC,EACvCvH,oBAAqB,CAAC,EACtB7C,YAAa,GACbC,SAAU,GACVoH,OAAQ,CAAC,EACTnV,SAAU9T,EAAM+F,WAAW+N,SAC3BgQ,kBAAmB,CACjBxC,QAAQ,EAEV9R,QAAS,CACLA,QAAS,CACP,CACEC,KAAM,GACN+lB,KAAM,CACJ,IAEFC,QAAS,GACTC,SAAU,GACVC,UAAW,EACXC,WAAY,GACZC,mBAAoB,KAI1BhnB,iBAAiB,EACjBinB,YAAa,GACbvB,QAAS,CAAC,EACVC,aAAa,CAACA,aAAa,CACzB,CACIhwB,KAAM,QACNC,MAAO,MAGb6B,YAAa,GACb+c,mBAAoB,GACpBqR,UAAU,EACVC,iBAAkB,GAClBC,UAAW,CAAC,EACZC,iBAAkB,CAAC,EACnBC,MAAO,GACPlhB,cAAe,GACfC,WAAY,GACZ7N,UAAW,GACXG,OAAQ,CAAC,EACTL,GAAI,GACJ1B,WAAY,CAAC,EACbipB,wBAAwB,EACxB0H,cAAe,CAAC,EAChBE,UAAW,GACXC,aAAc,CAAC,EACfC,UAAW,GACX/uB,IAAK,GACLH,QAAS,GACTkS,QAAS,IAEXgX,sCAAuC,CAAC,EACxCrN,SAAU,GACVC,iBAAkB,GAClB2O,QAAS,CAAC,EACV1O,aAAc,GACdqT,wBAAyB,GACzBpT,eAAgB,CAAC,EACjB2C,yBAA0B,CAAC,EAC3BF,aAAc,CAAC,EACfqE,gBAAiB,CAAC,EAClB3G,YAAa,GACbuC,YAAa,CAAC,EACdgE,MAAO,CAAC,EACRtG,eAAgB,GAChBwG,eAAgB,CAAC,EACjBvG,eAAgB,GAChB2E,8BAA8B,OAzLlC,mBAAOlhB,EAAP,KAAmB4d,EAAnB,KA4LA,EAA0BjhB,mBAAS,CACnCqzB,KAAK,GACLhe,MAAM,GACNie,IAAI,GACJhgB,KAAK,GACL0a,QAAQ,GACRuF,YAAY,KANZ,mBAAO9T,EAAP,KAAcqR,EAAd,KAQMvQ,EAAiB,SAAC1Y,GACpBypB,EAAczpB,EAEjB,EAQD,OAPAnH,qBAAU,WAIT,GAAE,IAIC,uCACI,eAAC,IAAD,CAAgB8yB,UAAW,IAAMC,iBAAe,IAEhD,eAAC,KAAD,UACI,eAAClrB,GAAA,EAAD,UACA,gCACI,uBAAKD,UAAU,MAAf,UACA,8DAEI,wBACA,wBAEA,sBAAKA,UAAU,6BAAf,SACA,gBAACuF,GAAA,EAAD,CAAOxJ,KAAK,QAASqvB,UAAQ,EAAEvvB,MAAO,CAACC,gBAAgB,WAAvD,UACA,eAACyJ,GAAA,EAAKE,KAAN,CACQhL,KAAK,QACL6b,OAAuB,SAAf/W,EACRmG,QAAS,kBAAIuS,EAAgB,OAApB,EACTpc,MAAO,CAACC,gBAA+B,SAAfyD,EAAwB,OAAQ,IAJhE,SAMQ,wBAAM1D,MAAO,CAACtE,MAAM,QAApB,iCACC4gB,EAAU1G,SAAS,SAChB,eAACoD,GAAA,EAAD,CAAMpa,KAAK,QAAQlD,MAAM,gBAKhB,IAAhB0xB,GAA0B,uCACvB,eAAC1jB,GAAA,EAAKE,KAAN,CACIhL,KAAK,QACL6b,OAAuB,UAAf/W,EACRmG,QAAS,kBAAIuS,EAAgB,QAApB,EACTpc,MAAO,CAACC,gBAA+B,UAAfyD,EAAyB,OAAQ,IACzDoL,SAAyB,UAAfpL,EALd,SAOI,wBAAM1D,MAAO,CAACtE,MAAM,QAApB,+BACC4gB,EAAU1G,SAAS,UAChB,eAACoD,GAAA,EAAD,CAAMpa,KAAK,QAAQlD,MAAM,eAKpCvC,EAAM+F,WAAWM,KAAK,IACnB,eAACkK,GAAA,EAAKE,KAAN,CACIhL,KAAK,OACL6b,OAAuB,qBAAf/W,EACRmG,QAAS,kBAAIuS,EAAgB,mBAApB,EACTpc,MAAO,CAACC,gBAA+B,qBAAfyD,EAAoC,OAAQ,IACpEoL,SAAyB,qBAAfpL,EALd,SAQA,wBAAM1D,MAAO,CAACtE,MAAM,QAApB,gCACC4gB,EAAU1G,SAAS,qBAChB,eAACoD,GAAA,EAAD,CAAMpa,KAAK,QAAQlD,MAAM,eAKjC,eAACgO,GAAA,EAAKE,KAAN,CACIhL,KAAK,QACL6b,OAAuB,aAAf/W,EACRmG,QAAS,kBAAIuS,EAAgB,WAApB,EACTpc,MAAO,CAACC,gBAA+B,aAAfyD,EAA4B,OAAQ,IAJhE,SAOI,wBAAM1D,MAAO,CAACtE,MAAM,QAApB,qBAAsC,IAAtC,eACC4gB,EAAU1G,SAAS,aAChB,eAACoD,GAAA,EAAD,CAAMpa,KAAK,QAAQlD,MAAM,eAMjC,eAACgO,GAAA,EAAKE,KAAN,CACIhL,KAAK,OACL6b,OAAuB,cAAf/W,EACRmG,QAAS,kBAAIuS,EAAgB,YAApB,EACTpc,MAAO,CAACC,gBAA+B,cAAfyD,EAA6B,OAAQ,IAC7DoL,SAAyB,cAAfpL,EALd,SAQA,wBAAM1D,MAAO,CAACtE,MAAM,QAApB,iCACC4gB,EAAU1G,SAAS,cAChB,eAACoD,GAAA,EAAD,CAAMpa,KAAK,QAAQlD,MAAM,eAM7B,eAACgO,GAAA,EAAKE,KAAN,CACIhL,KAAK,OACL6b,OAAuB,oBAAf/W,EACRmG,QAAS,kBAAIuS,EAAgB,kBAApB,EACTpc,MAAO,CAACC,gBAA+B,oBAAfyD,EAAmC,OAAQ,IACnEoL,SAAyB,oBAAfpL,EALd,SAQA,wBAAM1D,MAAO,CAACtE,MAAM,QAApB,gCACK4gB,EAAU1G,SAAS,oBAChB,eAACoD,GAAA,EAAD,CAAMpa,KAAK,QAAQlD,MAAM,eAMjC,eAACgO,GAAA,EAAKE,KAAN,CACIhL,KAAK,OACL6b,OAAuB,aAAf/W,EACRmG,QAAS,kBAAIuS,EAAgB,WAApB,EACTpc,MAAO,CAACC,gBAA+B,aAAfyD,EAA4B,OAAQ,IAC5DoL,SAAyB,aAAfpL,EALd,SAQA,wBAAM1D,MAAO,CAACtE,MAAM,QAApB,sDACC4gB,EAAU1G,SAAS,aAChB,eAACoD,GAAA,EAAD,CAAMpa,KAAK,QAAQlD,MAAM,uBAUjC,uBAAKyI,UAAU,8BAA8BnE,MAAO,CAAEC,gBAAgB,OAAQS,YAAY,QAASqY,YAAY,SAA/G,UACkB,SAAbrV,GAAwB,eAAC,GAAD,CAAoB0Y,gBAAiBA,EAAiBG,aAAcA,EAAcD,UAAWA,EAAWQ,cAAeA,EAAe5d,WAAYA,EAAa0tB,iBAAkBA,EAAkB7P,WAAY5jB,EAAM+F,WAAWM,IAAKmtB,SAAUA,EAAUrR,MAAOA,EAAO4M,WAAY/uB,EAAM+uB,WAAYC,cAAehvB,EAAMgvB,gBACrU,UAAbzkB,GAAyB,eAAC,GAAD,CAAW0Y,gBAAiBA,EAAiBG,aAAcA,EAAcD,UAAWA,EAAWQ,cAAeA,EAAe5d,WAAYA,EAAYwb,WAAYvhB,EAAMuhB,WAAYqC,WAAY5jB,EAAM+F,WAAWM,IAAKmtB,SAAUA,EAAUrR,MAAOA,IAC5P,qBAAb5X,GAAoC,eAAC8rB,GAAD,CAASpT,gBAAiBA,EAAiBG,aAAcA,EAAcD,UAAWA,EAAWQ,cAAeA,EAAe5d,WAAYA,EAAYwb,WAAYvhB,EAAMuhB,WAAYqC,WAAY5jB,EAAM+F,WAAWM,MACrO,aAAbkE,GAA4B,eAAC,GAAD,CAAe0Y,gBAAiBA,EAAiBG,aAAcA,EAAcD,UAAWA,EAAWQ,cAAeA,EAAe5d,WAAYA,EAAYwb,WAAYvhB,EAAMuhB,WAAYqC,WAAY5jB,EAAM+F,WAAWM,MACnO,cAAbkE,GAA6B,eAAC,GAAD,CAAU0Y,gBAAiBA,EAAiBG,aAAcA,EAAcD,UAAWA,EAAWQ,cAAeA,EAAe5d,WAAYA,EAAYwb,WAAYvhB,EAAMuhB,WAAYqC,WAAY5jB,EAAM+F,WAAWM,IAAKiwB,gBAAiBt2B,EAAMqD,WAC3P,aAAbkH,GAA4B,eAAC,GAAD,CAAwB0Y,gBAAiBA,EAAiBG,aAAcA,EAAcD,UAAWA,EAAWQ,cAAeA,EAAe5d,WAAYA,EAAYwb,WAAYvhB,EAAMuhB,WAAYqC,WAAY5jB,EAAM+F,WAAWM,MAC5O,oBAAbkE,GAAmC,eAACgsB,GAAD,CAAiBtT,gBAAiBA,EAAiBG,aAAcA,EAAcD,UAAWA,EAAWQ,cAAeA,EAAe5d,WAAYA,EAAYwb,WAAYvhB,EAAMuhB,WAAYqC,WAAY5jB,EAAM+F,WAAWM,MAC5O,WAAbkE,GAA0B,eAACisB,GAAD,CAAQvT,gBAAiBA,EAAiBG,aAAcA,EAAcD,UAAWA,EAAWQ,cAAeA,EAAe5d,WAAYA,EAAYwb,WAAYvhB,EAAMuhB,WAAYqC,WAAY5jB,EAAM+F,WAAWM,oBAWnQ,EC9SckH,qBA3EA,SAAAnM,GAAK,MAAK,CACvBgB,KAAM,CACJR,MAAO,QAET4L,QAAS,CACPhL,SAAUpB,EAAMqM,WAAWC,QAAQ,KAErCC,iBAAkB,CAChBnL,SAAUpB,EAAMqM,WAAWC,QAAQ,IACnCnL,MAAOnB,EAAMwM,QAAQhF,KAAKiF,WAE5BC,KAAM,CACJ/D,cAAe,SACf7H,OAAQ,GACRN,MAAO,IAETmM,QAAS,CACPrM,WAAY,UAEdsM,OAAQ,CACNC,UAAW,UAEbC,OAAQ,CACNC,WAAW,aAAD,OAAe/M,EAAMwM,QAAQQ,SACvCzD,QAAQ,GAAD,OAAKvJ,EAAMG,QAAQ8M,KAAnB,cAAkD,EAArBjN,EAAMG,QAAQ8M,KAA3C,OAETC,KAAM,CACJ/L,MAAOnB,EAAMwM,QAAQW,QAAQC,KAC7BC,eAAgB,OAChB,UAAW,CACTA,eAAgB,cA9BF,GA2ELlB,EAvCf,SAAqBvN,GACjB,IAAI2a,EAAU9D,cACd,EAAsBnU,oBAAS,GAA/B,mBAAO+zB,EAAP,KAAYC,EAAZ,KACA,EAA0Ch0B,mBAAS,CAACmO,MAAM,iBAAkB/K,GAAG,GAAI4Q,UAAU,OAAQigB,WAAW,SAAUpyB,IAAI,CAAC,IAA/H,mBAAOqM,EAAP,KAAsBD,EAAtB,KACQjC,EAAY1O,EAAZ0O,QACF3I,EAAa4U,EAAQrb,UAAYqb,EAAQrb,SAASsG,MAAQ+U,EAAQrb,SAASsG,MAAMG,WAAa,CAAC,EAGvG,OACE,uBAAKiF,UAAW0D,EAAQtM,KAAxB,UACE,sBAAK4I,UAAU,uBAAuBnE,MAAO,CAAChF,UAAU,MAAOG,aAAa,SAA5E,SACH,qBAAIgJ,UAAU,aAAd,SACC,qBAAIA,UAAU,yBAAd,SAAuC,oCAAK,eAAC,IAAD,CAAMtF,GAAI,IAAV,qBAAL,8BAGrC,eAAC,KAAD,UACE,gBAACkxB,GAAA,EAAD,WACI,eAAC,GAAD,CAAmB7wB,WAAYA,EAAY2wB,OAAQA,EAAQ/lB,iBAAkBA,IAC7E,eAAC,GAAD,CAAS5K,WAAYA,EAAY0wB,IAAKA,EAAK9lB,iBAAkBA,IAC7D,wBAEqB,eAAtBC,EAAcC,OAAwB,eAACgmB,GAAD,CAAY9wB,WAAYA,EAAY4K,iBAAkBA,EAAkBC,cAAeA,IACvG,iBAAtBA,EAAcC,OAA2B,eAAC,GAAD,CAAa9K,WAAYA,EAAY4K,iBAAkBA,EAAkBC,cAAeA,IAC3G,YAAtBA,EAAcC,OAAsB,eAACimB,GAAD,CAAiB/wB,WAAYA,EAAY4K,iBAAkBA,EAAkBC,cAAeA,IAC1G,mBAAtBA,EAAcC,OAA6B,eAAC,GAAD,CAAgB9K,WAAYA,EAAY4K,iBAAkBA,EAAkBC,cAAeA,IAChH,oBAAtBA,EAAcC,OAA8B,eAAC,GAAD,CAAgB9K,WAAYA,EAAY4K,iBAAkBA,EAAkBC,cAAeA,IACjH,cAAtBA,EAAcC,OAAwB,eAAC,GAAD,CAAU9K,WAAYA,EAAY6d,WAAY7d,EAAWM,IAAKsK,iBAAkBA,EAAkBC,cAAeA,WAOjK,I,4EC5DDmmB,KAAQ/I,IAAIgJ,KAAeC,KAAUC,KAAQC,MAE7C,IAAM9sB,GAAYlJ,cAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAE1Ba,KAAM,CACF,QAAS,CACLd,OAAQF,EAAMG,QAAQ,IAE1B,gBAAgB,CACZgB,MAAM,OACN0E,WAAW,QAEf,kBAAkB,CACdqF,aAAa,UACbpK,OAAO,QAEX,6BAA8B,CAC1BoK,aAAc,+CAElB,4BAA6B,CACzB9K,QAAS,qBAEb,WAAW,CACP,qBAAsB,sBAE1B,MAAM,CACFe,MAAM,OAEV,UAAU,CACNC,SAAS,OACTD,MAAM,UACN0E,WAAW,SAGnB+Y,KAAM,CACFlZ,gBAAiB1F,EAAMwM,QAAQqS,WAAWC,SAE9CC,OAAQ,CACJ3e,QAAS,UAEbc,MAAM,CACFC,MAAO,UACPC,SAAU,UAEdC,QAAS,CACLF,MAAO,WACPC,SAAU,QAlEW,IA+pDd40B,GAxlDU,SAACp3B,GACtB,IAuGI6F,EAvGJ,EAAiCnD,mBACzB,CACI4e,QAAQ,EACR9R,QAAS,GACT+kB,QAAS,GACTC,aAAc,GACdluB,YAAa,GACbouB,UAAU,EACVC,iBAAkB,KAClB3uB,UAAW,GACXqxB,SAAU,GACVjzB,WAAY,GACZ+wB,UAAW,GACXmC,gBAAiB,GACjBC,YAAa,GACbC,mBAAmB,GACnBnU,mBAAoB,GACpBgK,uBAAwB,KACxBhnB,IAAI,GACJ8lB,YAAY,GACZsL,eAAe,GACfl0B,IAAI,GACJoyB,UAAU,GACVF,QAAQ,GACRC,SAAS,GACTpS,MAAM,GACN2R,UAAU,KA1BtB,mBAAOyC,EAAP,KAAkBC,EAAlB,KA8BA,EAAiCj1B,mBACrB,CACI8M,QAAQ,GACRqf,MAAM,GACN7oB,UAAW,GACX4xB,MAAO,GACPC,eAAgB,GAChB3L,SAAU,GACVD,WAAY,KAR5B,mBAAO6L,EAAP,KAAkBC,EAAlB,KAaA,EAA0Br1B,oBAAS,IAAIe,MAAOsqB,cAAciK,OAAO,EAAG,IAAIvK,QAAQ,IAAK,MAAvF,mBACA,GADA,UACgC/qB,mBAAS,KAAzC,mBAAOu1B,EAAP,KAAiBC,EAAjB,KACA,EAA4Bx1B,oBAAS,GAArC,mBAAO0O,EAAP,KACA,GADA,KACwD1O,oBAAS,IAAjE,mBAAOy1B,EAAP,KAA6BC,EAA7B,KACA,EAAsC11B,oBAAS,GAA/C,mBAAOkpB,EAAP,KAAoBC,EAApB,KACA,EAAwCnpB,oBAAS,GAAjD,mBAAO21B,EAAP,KAAqBC,EAArB,KACA,EAAwC51B,mBAAS,MAAjD,mBACA,GADA,UAC6BA,mBAAS,KAAtC,mBAAO61B,EAAP,KAAgBC,EAAhB,KACA,EAAuD91B,mBAAS,IAAhE,mBAAO+1B,EAAP,KAA6BC,EAA7B,KACA,EAA+Ch2B,mBAAS,IAAxD,oBAAOi2B,GAAP,MAAyBC,GAAzB,MACA,GAAiDl2B,mBAAS,IAA1D,qBAAOm2B,GAAP,MAA0BC,GAA1B,MACA,GAAqDp2B,mBAAS,IAA9D,qBAAOq2B,GAAP,MAA4BC,GAA5B,MACA,GAAkCt2B,mBAAS,IAA3C,qBAAOu2B,GAAP,MAAkBC,GAAlB,MACA,GAA4Bx2B,mBAAS,IAArC,qBAAOy2B,GAAP,MAAeC,GAAf,MACA,GAAkC12B,mBAAS,IAA3C,qBAAO22B,GAAP,MAAkBC,GAAlB,MACA,GAA4B52B,mBAAS,CAAC,GAAtC,qBAAOuO,GAAP,MAAeC,GAAf,MACA,GAAmExO,mBAAS,IAA5E,qBAAmC62B,IAAnC,aACA,GAAmC72B,mBAAS,CAAC,OAAS,GAAI,cAAgB,KAA1E,qBACM82B,IADN,YACmBx5B,EAAMV,UAAYU,EAAMV,SAASsG,MAAQ5F,EAAMV,SAASsG,MAAM6zB,KAAO,MAClF/qB,GAAUrE,KACVsQ,GAAU9D,cACVvX,GAAWy0B,cAEhB,GAAuCrxB,oBAAS,GAAhD,qBAAqBg3B,IAArB,aAEA,GAAkCh3B,mBAC/B,CAAI8P,MAAM,GACN8E,QAAS,GACTC,QAAS,GACToiB,qBAAqB,GACrBC,IAAK,GACLC,OAAQ,GACRC,iBAAiB,GACjBC,0BAA2B,GAC3BC,mBAAoB,GACpBC,eAAgB,GAChBC,gBAAiB,GACjBC,UAAU,CAAC,EACXC,aAAa,CAAC,EACdC,aAAa,CAAC,EACdC,oBAAoB,CAAC,IAf5B,qBAAO5mB,GAAP,MAAkBC,GAAlB,MAiBA,GAAoCjR,mBAAS,IAA7C,qBAAmB63B,IAAnB,aACA,GAA4C73B,mBAAS,IAArD,qBAAO+d,GAAP,MAAuBC,GAAvB,MACA,GAAkChe,mBAAS,IAA3C,qBACA,IADA,YAC0CA,mBAAS,KAAnD,qBACA,IADA,YACgCA,mBAAS,KAAzC,qBACA,IADA,YACoBA,mBAAS,KAA7B,qBACA,IADA,YAC8CA,mBAAS,KAAvD,qBAAwBqe,IAAxB,aAEA,GAA4Cre,oBAAS,GAArD,qBAAO83B,GAAP,MAAuBC,GAAvB,MAEA,GAAsC/3B,oBAAS,GAA/C,qBAGA,IAHA,YAGiDA,oBAAS,IAA1D,qBAAOg4B,GAAP,MACA,IADA,MACmDh4B,oBAAS,IAA5D,qBACA,IADA,YACwB8H,IAAM9H,UAAS,IAAvC,qBAAOyvB,GAAP,MAAaC,GAAb,MACMC,GAAS,kBAAMD,IAASD,GAAf,EACVwI,GAAgBr7B,GAASsG,MAE/BC,EAAY80B,GAAgBA,GAAc90B,UAAY,KACtD,IAAIsL,GAAI,eAAQF,IAEhB7N,qBAAU,WACNw3B,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAvY,KACAG,KACAqY,KAEGzD,EAAUrU,mBAAqBqU,EAAUn0B,KACxC63B,MAAM,6DAGb,GAAE,CAAC1D,EAAUrU,qBAEd,IAAMuX,GAAcS,sBAAW,gCAAC,uHAEDx4B,IAAMrD,IAAN,UAAasD,EAAb,+BAAmD,CAAEC,QAAS,CAAC,+BAA4B5D,MAF1F,OAElB8D,EAFkB,OAGxBu1B,EAAWv1B,EAASC,MAHI,uGAO7B,IACG23B,GAAoBQ,sBAAW,gCAAC,uHAEPx4B,IAAMrD,IAAN,UAAasD,EAAb,0CAA8D,CAAEC,QAAS,CAAC,+BAA4B5D,MAF/F,OAExB8D,EAFwB,OAG9By1B,EAAwBz1B,EAASC,MAHH,uGAMnC,IACG43B,GAAgBO,sBAAW,gCAAC,uHAEHx4B,IAAMrD,IAAN,UAAasD,EAAb,qCAAyD,CAAEC,QAAS,CAAC,+BAA4B5D,MAF9F,OAEpB8D,EAFoB,OAG1B21B,GAAoB31B,EAASC,MAHH,uGAO/B,IACG63B,GAAiBM,sBAAW,gCAAC,uHAEJx4B,IAAMrD,IAAN,UAAasD,EAAb,sCAA0D,CAAEC,QAAS,CAAC,+BAA4B5D,MAF9F,OAErB8D,EAFqB,OAG3B61B,GAAqB71B,EAASC,MAHH,uGAOhC,IACG83B,GAAoBK,sBAAW,gCAAC,uHAETx4B,IAAMrD,IAAN,UAAasD,EAAb,wCAA4D,CAAEC,QAAS,CAAC,+BAA4B5D,MAF3F,OAE1B8D,EAF0B,OAGhC+1B,GAAuB/1B,EAASC,MAHA,uGAMnC,IACG+3B,GAAsBI,sBAAW,gCAAC,8GACbx4B,IAAMrD,IAAN,UAAasD,EAAb,kDAAsE,CAAEC,QAAS,CAAC,+BAA4B5D,MADjG,OAC9B8D,EAD8B,OAEpCs2B,GAA8Bt2B,EAASC,MAFH,2CAGrC,IAOKi4B,GAAY,WAChBt4B,IACCrD,IADD,UACQsD,EADR,kDAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEHi2B,GAAaj2B,EAASC,KACzB,IACAC,OAAM,SAACb,GAEP,GACJ,EAuBA,IAyCK8qB,GAA0B,SAAC5Y,GACP,UAAlBA,EAAEC,OAAOhQ,MACTonB,GAAe,GACU,aAAlBrX,EAAEC,OAAOhQ,OAChBonB,GAAe,EAEtB,EAwBKyP,GAAyB,SAAA9mB,GAO3B,GANAtD,GAAU,2BAAIC,IAAL,mBAAYqD,EAAEC,OAAOhP,KAAM,MACpCkyB,EAAY,2BAAMD,GAAN,mBAAmBljB,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,SAErC,UAAhB+P,EAAEC,OAAOhP,MAAmC,QAAjB+O,EAAEC,OAAOhQ,OACnCi1B,IAAgB,GAED,cAAhBllB,EAAEC,OAAOhP,MAAuC,KAAjB+O,EAAEC,OAAOhQ,MAAW,CAClD,IAAMgB,EAAO0nB,GAAa3Y,EAAEC,OAAOhQ,OACnCkzB,EAAY,2BAAMD,GAAN,mBAAmBljB,EAAEC,OAAOhP,KAAOA,IAClD,CACD,GAAmB,aAAhB+O,EAAEC,OAAOhP,MAAsC,KAAjB+O,EAAEC,OAAOhQ,MAAW,CACjD,IAAMgB,EAAO0nB,GAAa3Y,EAAEC,OAAOhQ,OACnCkzB,EAAY,2BAAMD,GAAN,mBAAmBljB,EAAEC,OAAOhP,KAAOA,IAClD,CACD,GAAmB,eAAhB+O,EAAEC,OAAOhP,MAAwC,KAAjB+O,EAAEC,OAAOhQ,MAAW,CACnD,IAAMgB,EAAO0nB,GAAa3Y,EAAEC,OAAOhQ,OACnCkzB,EAAY,2BAAMD,GAAN,mBAAmBljB,EAAEC,OAAOhP,KAAOA,IAClD,CACD,GAAmB,cAAhB+O,EAAEC,OAAOhP,MAAuC,KAAjB+O,EAAEC,OAAOhQ,MAAW,CAClD,IAAM82B,EAAiBC,GAAchnB,EAAEC,OAAOhQ,OAC9CkzB,EAAY,2BAAMD,GAAN,mBAAmBljB,EAAEC,OAAOhP,KAAO81B,IAClD,CACD,GAAmB,UAAhB/mB,EAAEC,OAAOhP,MAAmC,KAAjB+O,EAAEC,OAAOhQ,MAAW,CAAC,IAEpCg3B,EAFmC,iDAElD,uGACUC,EAAUlnB,EAAEC,OAAOhQ,MAD7B,SAE2B5B,IAAMrD,IAAN,UAAasD,EAAb,sCAAkD44B,GACjE,CAAE34B,QAAS,CAAC,+BAA4B5D,GAAS,eAAgB,gBAH7E,QAKuB,KAHb8D,EAFV,QAKgBC,MACRiM,QAAQC,IAAInM,EAASC,MAErB+S,IAAM3T,MAAM,4BACZm4B,GAAkBx3B,EAASC,OAE3Bu3B,IAAkB,GAX1B,2CAFkD,qDAgBlDgB,GACC,CAEJ,EA4CKE,GAAkB,SAAC9D,GACrB,IAAM+D,EAAe7C,GAAoBz0B,MAAK,SAAAC,GAAG,OAAIA,EAAIuB,IAAM+xB,CAAd,IACjD,OAAO+D,EAAeA,EAAap6B,QAAU,EAChD,EACKq6B,GAA6B,SAAArnB,GAC/BujB,EAAY,2BAAMD,GAAN,mBAAmBtjB,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,QAC3D,EAmCK8rB,GAAY,iDAAG,WAAO/b,GAAP,8FACjBA,EAAEoB,iBA/BEzE,GAAKnL,UAAY0xB,EAAU1xB,UAAY,GAAK,yBAC5CmL,GAAK9M,eAAiBqzB,EAAUrzB,eAAiB,GAAK,gCAGtD8M,GAAK+a,SAAWwL,EAAUxL,SAAW,GAAK,0BAC1C/a,GAAKmS,MAAQoU,EAAUpU,MAAQ,GAAK,sBACpCnS,GAAKkS,mBAAqBqU,EAAUrU,mBAAqB,GAAK,oCAC9DlS,GAAKomB,YAAcG,EAAUH,YAAc,GAAK,yBAChDpmB,GAAK3B,QAAUkoB,EAAUloB,QAAU,GAAK,uBACxC2B,GAAKgb,YAAcuL,EAAUvL,YAAc,GAAK,6BAChDhb,GAAKwkB,UAAY+B,EAAU/B,UAAY,GAAK,uBAC5CxkB,GAAKskB,QAAUiC,EAAUjC,QAAU,GAAK,qBACxCtkB,GAAKukB,SAAWgC,EAAUhC,SAAW,GAAK,4BAE1CvkB,GAAKmG,QAAU5D,GAAU4D,QAAU,GAAK,yBACxCnG,GAAKoG,QAAU7D,GAAU6D,QAAU,GAAK,yBACxCpG,GAAK4oB,0BAA4BrmB,GAAUqmB,0BAA4B,GAAK,yBAC5E5oB,GAAKyoB,IAAMlmB,GAAUkmB,IAAM,GAAK,yBAChCzoB,GAAK0oB,OAASnmB,GAAUmmB,OAAS,GAAK,yBACtC1oB,GAAK8oB,eAAiBvmB,GAAUumB,eAAiB,GAAK,yBACtD9oB,GAAK+oB,gBAAkBxmB,GAAUwmB,gBAAkB,GAAK,yBACxD/oB,GAAK2qB,iBAAmBpoB,GAAUooB,iBAAmB,GAAK,yBAC1D3qB,GAAK6oB,mBAAqBtmB,GAAUsmB,mBAAqB,GAAK,yBAC9D7oB,GAAKqB,MAAQkB,GAAUlB,MAAQ,GAAK,yBAEhCtB,GAAU,eAAKC,MAChB0E,OAAOC,OAAO3E,IAAM4E,OAAM,SAAAtK,GAAC,MAAS,IAALA,CAAJ,IAIjB,wBAGTswB,EAAgB,GAEC9D,GAAYA,EAAS3nB,OAAO,GAAK2nB,EAAS1yB,KAAI,SAACkG,GAEhE,IAAMuwB,EAAc,CACpBxsB,QAAS,CACLgmB,KAAM,CACF/pB,EAAE+D,UAGVglB,aAAc,CACVhwB,KAAM,QACNC,MAAOgH,EAAEojB,OAEb7oB,UAAWyF,EAAEzF,UACbi2B,SAAUxwB,EAAEzF,UAAY,IAAMyF,EAAEwgB,WAAa,IAAMxgB,EAAEygB,SACrD2L,eAAgBpsB,EAAEosB,eAClB5xB,QAASwF,EAAEygB,SACXiJ,UAAW1pB,EAAEwgB,YAGjB8P,EAAgBvL,KAAKwL,EACpB,IAzBY,SA2BHtY,EAAc,CAChBpC,QAAQ,EACR9R,QAAS,CACL,CACI,KAAQkoB,EAAUloB,QAClB,UAAakoB,EAAU/B,UACvB,SAAY+B,EAAUhC,SACtB,KAAQ,CACJgC,EAAUwE,UAEd,mBAAsB,EACtB,WAAc,GACd,QAAWxE,EAAUjC,UAG7BlB,QAASwH,EACTvH,aAAc,GACdluB,YAAaoxB,EAAUn0B,IACvBmxB,UAAU,EACVC,iBAAkB,KAClB3uB,UAAW0xB,EAAU1xB,UACrBqxB,SAAUK,EAAUpU,MACpBA,MAAOoU,EAAUpU,MACjBlf,WAAY,CACR,CACI,WAAc,EACd,KAAQ,iBACR,MAASszB,EAAUrzB,iBAG3B8wB,UAAWuC,EAAUzL,WACrBqL,gBAAiBI,EAAUJ,gBAC3BrxB,QAASyxB,EAAUxL,SACnBqL,YAAaG,EAAUH,YACvBC,mBAAoBE,EAAUF,mBAC9BnU,mBAAoBqU,EAAUrU,mBAC9BgK,uBAAiD,UAAzBqK,EAAUpxB,YAClC2uB,UAAUyC,EAAUzC,WAElBpG,EAAQ,CACV,KAAQ,QACR,MAAS6I,EAAUvL,aAEnBuL,EAAUE,QACJA,EAAQ,CACV,KAAQ,QACR,MAASF,EAAUE,OAEvBlU,EAAY8Q,aAAahE,KAAKoH,IAE9BF,EAAUD,iBACJA,EAAiB,CACnB,KAAQ,WACR,MAASC,EAAUD,gBAEvB/T,EAAY8Q,aAAahE,KAAKiH,IAElC/T,EAAY8Q,aAAahE,KAAK3B,GAC9BnL,EAAY5d,GAAKD,EACjB6N,GAAUymB,UAAUzW,EAtFX,UAyFc7gB,IAAMmT,KAAN,UAAclT,EAAd,kCAAuD4Q,GAAW,CAAE3Q,QAAS,CAAC,+BAA4B5D,MAzFxH,eA0FT8W,IAAMxT,QAAQ,8BAA+B,CAACyT,SAAUD,IAAME,SAASC,gBACvEuE,GAAQ6V,KAAK,KA3FJ,kDA6FN,KAAMvtB,UAAY,KAAMA,SAASC,MAC5BmT,EAAe,KAAMpT,SAASC,KAAKoT,UAAmD,KAAvC,KAAMrT,SAASC,KAAKoT,SAASC,QAAe,KAAMtT,SAASC,KAAKoT,SAASC,QAAW,yCACpI,KAAMtT,SAASC,KAAKoT,UAAmD,KAAvC,KAAMrT,SAASC,KAAKoT,SAASC,SAAgB,KAAMtT,SAASC,KAAKoT,UAAgE,KAApD,KAAMrT,SAASC,KAAKoT,SAAS6lB,UAAU,GAAG5lB,QACtJN,IAAM3T,MAAM,KAAMW,SAASC,KAAKoT,SAASC,QAAU,MAAQ,KAAMtT,SAASC,KAAKoT,SAAS6lB,UAAU,GAAGt3B,MAAQ,IAAM,KAAM5B,SAASC,KAAKoT,SAAS6lB,UAAU,GAAG5lB,QAAS,CAACL,SAAUD,IAAME,SAASC,gBAEhMH,IAAM3T,MAAM+T,EAAc,CAACH,SAAUD,IAAME,SAASC,iBAIxDH,IAAM3T,MAAM,4CAA6C,CAAC4T,SAAUD,IAAME,SAASC,gBAtG9E,0DAAH,sDA4GZ+W,GAAa,SAAC1oB,GAEhB,OADeA,EAAMgpB,QAAQ,WAAY,GAE5C,EAEKyN,GAAgB,WACdr4B,IACKrD,IADL,UACYsD,EADZ,uCAEQ,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEHs3B,GAAct3B,EAASC,KAC1B,IACAC,OAAM,SAACb,GAEP,GACZ,EAEKqgB,GAAgB,WACd9f,IACCrD,IADD,UACQsD,EADR,iDAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEHyd,GAAkBzd,EAASC,KAC9B,IACAC,OAAM,SAACb,GAEP,GACR,EAEKwgB,GAAiB,WACnBjgB,IACCrD,IADD,UACQsD,EADR,4CAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEH8d,GAAmB9d,EAASC,KAC/B,IACAC,OAAM,SAACb,GAEP,GACJ,EACKiS,GAAoB,SAAAC,GACtBtD,GAAU,2BAAIC,IAAL,mBAAYqD,EAAEC,OAAOhP,KAAM,MACpCkO,GAAY,2BAAMD,IAAN,mBAAmBc,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,QAC3D,EAKK6oB,GAAsB,SAAC9Y,EAAG+Y,GAExBoK,EAAa,2BAAID,GAAL,mBAAkBnK,EAAY/Y,EAAEgZ,MAAM,EADxC,MAEjB,EACKgO,GAAc,SAAChnB,GAGjB,OADsBA,EAAEgZ,MAAM,EADhB,GAGjB,EAaD,OACI,uCACA,eAAC,IAAD,CAAgB0I,UAAW,IAAMC,iBAAe,IAChD,sBAAKnrB,UAAU,uBAAuBnE,MAAO,CAAChF,UAAU,MAAOG,aAAa,SAA5E,SACL,qBAAIgJ,UAAU,aAAd,SACC,qBAAIA,UAAU,yBAAd,SAAuC,oCAAK,eAAC,IAAD,CAAMtF,GAAI,IAAV,qBAAL,iCAGjC,eAAC,IAAD,CACMA,GAAI,CACAC,SAAU,IACVC,MAAO,SAHjB,SAKM,eAACoB,GAAA,EAAD,CACIJ,QAAQ,YACRrE,MAAM,UACNyI,UAAU,yBACVnE,MAAO,CAACC,gBAAgB,UAAUG,WAAW,SAAUm1B,aAAa,SACpE1vB,UAAW,eAAC,KAAD,IALf,SAOI,uBAAM7F,MAAO,CAAE8F,cAAe,aAAcpK,MAAM,QAAlD,uBAGR,wBAAM,wBAEN,eAAC,KAAD,CAAMyI,UAAW0D,GAAQtM,KAAzB,SACI,eAAC,KAAD,UAEI,sBAAK4I,UAAU,sBAAf,SACI,gBAACqxB,GAAA,EAAD,WACI,uBAAKrxB,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAcnE,MAAO,CAACC,gBAAgB,UAAUvE,MAAM,OAAO0E,WAAW,SAAWqF,aAAa,UAA/G,SACI,qBAAItB,UAAU,aAAanE,MAAO,CAACtE,MAAM,QAAzC,SAAgE,OAAbi3B,GAAoB,oBAAsB,4BAGjG,sBAAKxuB,UAAU,YAAf,SACI,uBAAKA,UAAU,aAAf,UACI,uBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,CAAO4J,IAAI,qBAAX,oCACA,eAAC3J,GAAA,EAAD,CACIlK,UAAU,eACVxG,KAAK,OACLiB,KAAK,qBACLK,GAAG,qBACH2P,IAAI,aACJJ,IAAM7O,GAAO,IAAI/C,MAAQgD,OAAO,cAChChC,MAAOizB,EAAUrU,mBACjBjO,SAAUkmB,GACVz0B,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,YAEzB,KAA7B2E,GAAOoS,mBACP,uBAAMrY,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAOoS,qBACpC,QAIZ,sBAAKrY,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,CAAO4J,IAAI,YAAX,+BACA,wBACI7T,UAAU,eACVxG,KAAK,OACLiB,KAAK,iBACLK,GAAG,iBACHrB,MAAOizB,EAAUrzB,eACjB+Q,SAAUkmB,GACVz0B,MAAO,CAACsO,OAAQ,oBAAoB7I,aAAa,YAE5B,KAAzB2E,GAAO5M,eACP,uBAAM2G,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAO5M,iBACpC,IACiB,IAApBq2B,GACG,uBAAM1vB,UAAW0D,GAAQpM,MAAzB,SAAiC,kCACjC,QAMZ,sBAAK0I,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,CAAO4J,IAAI,YAAX,0BACA,wBACI7T,UAAU,eACVxG,KAAK,OACLiB,KAAK,YACLK,GAAG,YACH6P,SAAS,OACTlR,MAAO,QAEPoC,MAAO,CAACsO,OAAQ,oBAAoB7I,aAAa,oBAQjE,uBAAKtB,UAAU,MAAf,UACI,sBAAKA,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,CAAO4J,IAAI,YAAX,2BACA,eAAC3J,GAAA,EAAD,CACIlK,UAAU,eACVxG,KAAK,OACLiB,KAAK,YACLK,GAAG,YACHrB,MAAOizB,EAAU1xB,UACjBoP,SAAUkmB,GACVz0B,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,YAEjC,KAApB2E,GAAOjL,UACR,uBAAMgF,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAOjL,YACpC,QAIZ,sBAAKgF,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,0BACA,eAACC,GAAA,EAAD,CACIlK,UAAU,eACVxG,KAAK,OACLiB,KAAK,aACLK,GAAG,aACHrB,MAAOizB,EAAUzL,WACjB7W,SAAUkmB,GACVz0B,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,iBAK9D,sBAAKtB,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,0BACA,wBACIjK,UAAU,eACVxG,KAAK,OACLiB,KAAK,WACLK,GAAG,WACHrB,MAAOizB,EAAUxL,SACjB9W,SAAUkmB,GACVz0B,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,YAEnC,KAAnB2E,GAAOib,SACP,uBAAMlhB,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAOib,WACpC,WAKhB,uBAAKlhB,UAAU,MAAf,UACI,sBAAKA,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,oBACA,0BACQjK,UAAU,eACVvF,KAAK,QACLK,GAAG,QACHsP,SAAUkmB,GACV72B,MAAOizB,EAAUpU,MACjBzc,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UAN1D,UAQQ,yBAAQ7H,MAAO,GAAf,oBACC8zB,EAAQhzB,KAAI,SAACY,EAAQ4R,GAAT,OACb,yBAAwBtT,MAAO0B,EAAOL,GAAtC,SAA2CK,EAAO3E,SAArC2E,EAAOL,GADP,OAIA,KAAhBmL,GAAOqS,MACZ,uBAAMtY,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAOqS,QACpC,QAGZ,sBAAKtY,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,4BACA,sBAAKjK,UAAU,QAAf,SACI,mCACI,wBACIxG,KAAK,QACLC,MAAM,SACNgB,KAAK,cACLioB,gBAAc,EAEdtY,SAAU,SAACZ,GAAD,OAAO4Y,GAAwB5Y,EAA/B,EACV3N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,YAR1D,eAYJ,sBAAKtB,UAAU,QAAf,SACI,mCACI,wBACIxG,KAAK,QACLC,MAAM,YACNgB,KAAK,cAEL2P,SAAU,SAACZ,GAAD,OAAO4Y,GAAwB5Y,EAA/B,EACV3N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,YAP1D,uBAcZ,sBAAKtB,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,oBACA,wBACIjK,UAAU,eACVxG,KAAK,OACLiB,KAAK,MACLgQ,IAAI,aACJ3P,GAAG,MACHuP,IAAKqiB,EAAUrU,mBACf5e,MAAOizB,EAAUn0B,IACjB6R,SAvkB5B,SAACZ,GACrB,GAAIA,EAAEC,OAAOhQ,MAAO,CAChB,IAAMjB,EAAQ,IAAIC,KACZI,EAAY,IAAIJ,KAAK+Q,EAAEC,OAAOhQ,OAChCX,EAAUN,EAAMO,cAAgBF,EAAUE,cACxCC,EAAIR,EAAMS,WAAaJ,EAAUI,WAChCD,EAAE,IACDo3B,MAAM,mCACNhD,GAAwB,IAExBA,GAAwB,IAExBp0B,EAAI,GAAY,IAANA,GAAWR,EAAMU,UAAYL,EAAUK,YACjDJ,IAEJ4zB,EAAUrxB,IAAIvC,CAEb,MACG6zB,EAAa,2BAAID,GAAL,IAAgBrxB,IAAM,MAEtCsxB,EAAa,2BAAID,GAAL,IAAgBn0B,IAAKiR,EAAEC,OAAOhQ,SACvB,KAAhBizB,EAAUrxB,KAAYqxB,EAAUrxB,KAAK,IACpCgsB,IAGf,EA+iBmDxrB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,iBAM9D,sBAAKtB,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,kBACA,wBAEIzQ,KAAK,SACLiB,KAAK,MACLuF,UAAU,eACVlF,GAAG,MACH2P,IAAI,IACJhR,MAAOizB,EAAUrxB,IACjBsP,SAAUiW,EACVxW,SAzjB5B,SAACZ,GACrB,IAAKoX,GAAepX,EAAEC,OAAOhQ,MAAO,CACZ,KAAjB+P,EAAEC,OAAOhQ,OAAc+P,EAAEC,OAAOhQ,OAAO,IACtC4tB,KAED7d,EAAEC,OAAOhQ,OAAQ,EAChB2zB,GAAwB,GAExBA,GAAwB,GAE5B,IAAMzK,EAAc,IAAIlqB,KACxBkqB,EAAYC,QAAQ,IACpBD,EAAYE,SAAS,GACrB,IACMC,EADStnB,GAAOmnB,EAAYI,eACZC,KAAuB,EAAlBxZ,EAAEC,OAAOhQ,MAAa,SAEjDizB,EAAUn0B,IAAKiD,GAAOsnB,GAAQrnB,OAAO,aAExC,CACDkxB,EAAa,2BAAID,GAAL,IAAgBrxB,IAAKi2B,KAAKC,IAAI/nB,EAAEC,OAAOhQ,SACtD,EAsiBmDoC,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,oBAMlE,uBAAKtB,UAAW,MAAhB,UAGQ,sBAAKA,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,6BACA,0BACIjK,UAAU,eACVvF,KAAK,kBACLK,GAAG,kBACHsP,SAAUkmB,GACV72B,MAAOizB,EAAUJ,gBACjBzwB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,GAAf,oBACCg0B,EAAqBlzB,KAAI,SAACi3B,EAAqBzkB,GAAtB,OACtB,yBAAqCtT,MAAO+3B,EAAoB12B,GAAhE,SAAqE02B,EAAoBh7B,SAA5Eg7B,EAAoB12B,GADX,YAQtC,sBAAKkF,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,kCACA,0BACIjK,UAAU,eACVvF,KAAK,qBACLK,GAAG,qBACHsP,SAAUkmB,GACV72B,MAAOizB,EAAUF,mBACjB3wB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,GAAf,oBACCo0B,GAAkBtzB,KAAI,SAACk3B,EAAkB1kB,GAAnB,OACnB,yBAAkCtT,MAAOg4B,EAAiB32B,GAA1D,SAA+D22B,EAAiBj7B,SAAnEi7B,EAAiB32B,GADX,OAIG,KAA7BmL,GAAOumB,mBACR,uBAAMxsB,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAOumB,qBACpC,QAIhB,sBAAKxsB,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,gCACA,0BACIjK,UAAU,eACVvF,KAAK,cACLK,GAAG,cACHsP,SAAUkmB,GACV72B,MAAOizB,EAAUH,YACjB1wB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAQI,yBAAQ7H,MAAO,GAAf,oBACCk0B,GAAiBpzB,KAAI,SAACm3B,EAAiB3kB,GAAlB,OAClB,yBAAiCtT,MAAOi4B,EAAgB52B,GAAxD,SAA6D42B,EAAgBl7B,SAAhEk7B,EAAgB52B,GADX,OAIH,KAAtBmL,GAAOsmB,YACR,uBAAMvsB,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAOsmB,cACpC,QAGZ,sBAAKvsB,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,CAAO4J,IAAI,YAAX,8CACA,wBACI7T,UAAU,eACVxG,KAAK,SACLiB,KAAK,YACLhB,MAAOizB,EAAUzC,UACjBnvB,GAAG,YACHsP,SAAUkmB,GACVz0B,MAAO,CAACsO,OAAQ,oBAAoB7I,aAAa,4BAW7E,uBAAKtB,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAcnE,MAAO,CAACC,gBAAgB,UAAUvE,MAAM,OAAO0E,WAAW,SAAWqF,aAAa,UAA/G,SACI,qBAAItB,UAAU,aAAanE,MAAO,CAACtE,MAAM,QAAzC,+BAGJ,uBAAKyI,UAAU,YAAf,UACI,uBAAKA,UAAW,MAAhB,UACI,sBAAKA,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,6BACA,eAAC,KAAD,CACIgZ,eAAgB,CAACrsB,MAAM,OAAOuT,OAAQ,qBACtC+Y,WAAY,CAACtsB,MAAM,OAAO0K,aAAa,OACvC6hB,QAAS,KACTC,YAAY,kBACZuO,UAAW,EACXl3B,KAAK,cACLK,GAAG,cACHwoB,MAAO,CAACC,GAAI,eAAgBC,GAAI,mBAChC/pB,MAAOizB,EAAUvL,YAClB/W,SAAU,SAACZ,GAAK8Y,GAAsB9Y,EAAE,cAAe,IAGnC,KAAtBvD,GAAOkb,YACJ,uBAAMnhB,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAOkb,cACpC,QAOhB,sBAAKnhB,UAAU,sBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,gCACA,eAAC,KAAD,CACIgZ,eAAgB,CAACrsB,MAAM,OAAOuT,OAAQ,qBACtC+Y,WAAY,CAACtsB,MAAM,OAAO0K,aAAa,OACvC6hB,QAAS,KACTC,YAAY,kBACZ3pB,MAAOizB,EAAUD,eACjBnJ,MAAO,CAACC,GAAI,eAAgBC,GAAI,mBAChCpZ,SAAU,SAACZ,GAAK8Y,GAAsB9Y,EAAE,iBAAkB,SAStE,sBAAKxJ,UAAU,sBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,oBACA,wBACIjK,UAAU,eACVxG,KAAK,QACLiB,KAAK,QACLK,GAAG,QACHsP,SAAUkmB,GACV72B,MAAOizB,EAAUE,MACjB/wB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UAClDgJ,UAAQ,YAOxB,uBAAKtK,UAAU,MAAf,UACI,sBAAKA,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,wBACA,0BACIjK,UAAU,eACVxG,KAAK,OACLiB,KAAK,YACLK,GAAG,YACHe,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UAClD7H,MAAOizB,EAAU/B,UACjBvgB,SA5yB7B,SAAAZ,GACf,IAAMooB,EAAcpoB,EAAEC,OAAOhQ,OAMjC,SAA6Bm4B,GACzB/5B,IACCrD,IADD,UACQsD,EADR,wDAC+D85B,GAC3D,CAAE75B,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACHkM,QAAQC,IAAInM,EAASC,MACrBk2B,GAAUn2B,EAASC,KACtB,IACAC,OAAM,SAACb,GAEP,GACJ,CAhBOu6B,CAAoBD,GACpBjF,EAAa,2BAAKD,GAAN,IAAiB/B,UAAWiH,IAC/C,EAgyB2C,UASI,yBAAQn4B,MAAO,GAAf,oBACCw0B,GAAU1zB,KAAI,SAACd,EAAOsT,GAAR,OACX,yBAAoBtT,MAAOA,EAAMqB,GAAjC,SACKrB,EAAMgB,MADEsS,EADF,OAME,KAApB9G,GAAO0kB,UACJ,uBAAM3qB,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAO0kB,YACpC,QAIhB,sBAAK3qB,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,sBACA,0BACIjK,UAAU,eACVxG,KAAK,OACLiB,KAAK,UACLK,GAAG,UACHrB,MAAOizB,EAAUjC,QACjB5uB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UAClD8I,SAhzB1B,SAAAZ,GACd,IAAMihB,EAAUjhB,EAAEC,OAAOhQ,MACzBkzB,EAAa,2BAAKD,GAAN,IAAiBjC,QAASjhB,EAAEC,OAAOhQ,SAC/C5B,IACCrD,IADD,UACQsD,EADR,wDAC+D2yB,GAC3D,CAAE1yB,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACHq2B,GAAar2B,EAASC,KACzB,IACAC,OAAM,SAACb,GAEP,GACR,EA4xB2C,UASI,yBAAQmC,MAAM,GAAd,oBACC00B,GAAO5zB,KAAI,SAACd,EAAOsT,GAAR,OACR,yBAAoBtT,MAAOA,EAAMqB,GAAjC,SACKrB,EAAMgB,MADEsS,EADL,OAMG,KAAlB9G,GAAOwkB,QACJ,uBAAMzqB,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAOwkB,UACpC,QAIhB,sBAAKzqB,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,sCACA,0BACIjK,UAAU,eACVxG,KAAK,OACLiB,KAAK,WACLK,GAAG,WACHrB,MAAOizB,EAAUhC,SACjB7uB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UAClD8I,SAAUkmB,GAPd,UASI,yBAAQ72B,MAAM,GAAd,oBACC40B,GAAU9zB,KAAI,SAACd,EAAOsT,GAAR,OACX,yBAAoBtT,MAAOA,EAAMqB,GAAjC,SACKrB,EAAMgB,MADEsS,EADF,OAMC,KAAnB9G,GAAOykB,SACJ,uBAAM1qB,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAOykB,WACpC,WAKpB,uBAAK1qB,UAAW,MAAhB,UACI,sBAAKA,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,8BACA,wBACIjK,UAAU,eACVxG,KAAK,OACLiB,KAAK,UACLK,GAAG,UACHsP,SAAUkmB,GACVz0B,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,YAGpC,KAAlB2E,GAAOzB,QACH,uBAAMxE,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAOzB,UACpC,QAIhB,sBAAKxE,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,uBACA,wBACIjK,UAAU,eACVxG,KAAK,OACLiB,KAAK,WACLK,GAAG,WACHsP,SAAUkmB,GACVz0B,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,0BAU1E,uBAAKtB,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAcnE,MAAO,CAACC,gBAAgB,UAAUvE,MAAM,OAAO0E,WAAW,SAAWqF,aAAa,UAA/G,SACI,qBAAItB,UAAU,aAAanE,MAAO,CAACtE,MAAM,QAAzC,0CAEJ,uBAAKyI,UAAU,YAAf,UACI,uBAAKA,UAAU,MAAf,UAEQitB,GAAYA,EAAS3nB,OAAS,GAC1B,sBAAKtF,UAAU,sBAAf,SACI,yBAAOnE,MAAO,CAAEjF,MAAO,QAAUoJ,UAAU,OAA3C,UACI,wBAAOA,UAAU,OAAjB,SACA,gCACI,oDACA,uCACA,wCACA,0CACA,+CAGJ,wBAAOA,UAAU,OAAjB,SACCitB,EAAS1yB,KAAI,SAAC+W,EAAMvE,GACjB,OACI,sBAAqB/M,UAAU,OAA/B,UACI,8BACI2wB,GAAgBrf,EAAKub,kBAEzB,8BACIvb,EAAKtW,UAAY,IAAOsW,EAAK2P,WAAa,IAAM3P,EAAK4P,WAEzD,8BACQ5P,EAAKuS,QAEb,8BACQvS,EAAK9M,UAEb,gCACI,yBAAQhL,KAAK,SACLwG,UAAU,2CACV0F,QAAS,kBA7wB1D,SAACosB,EAAU/kB,GAClCggB,EAAa+E,GACbxE,GAAgB,GAChBL,EAAS8E,OAAOhlB,EAAO,EAC1B,CAywB0FilB,CAAmB1gB,EAAMvE,EAA/B,EAFjB,SAII,eAAC,KAAD,CAAiBjK,KAAK,WAL9B,WAQI,yBACItJ,KAAK,SACLwG,UAAU,kCACV0F,QAAS,SAAC8D,GAAD,OAzxBpD,SAACuD,GAC1BkgB,EAAS8E,OAAOhlB,EAAO,GACvBmgB,EAAY,aAAID,GACnB,CAsxBuFgF,CAAqBllB,EAA5B,EAHb,SAKI,eAAC,KAAD,CAAiBjK,KAAK,iBA1BzBwO,EAAKvE,MA+BrB,WAMjB,sBAAK/M,UAAU,sBAAf,SAEQqtB,GACI,sBAAKrtB,UAAU,OAAf,SACI,uBAAKA,UAAU,YAAf,UACI,uBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,CAAO4J,IAAI,mBAAX,iCACA,0BACI7T,UAAU,eACVvF,KAAK,iBACLK,GAAG,iBACHrB,MAAOqzB,EAAUD,eACjBhxB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UAClD8I,SAAUymB,GANd,UAQI,yBAAQp3B,MAAO,GAAf,oBACCs0B,GAAoBxzB,KAAI,SAACu3B,EAAU/kB,GAAX,OACrB,yBAA0BtT,MAAOq4B,EAASh3B,GAA1C,SAA+Cg3B,EAASt7B,SAA3Cs7B,EAASh3B,GADD,OAIH,KAAzBmL,GAAO4mB,eACR,uBAAM7sB,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAO4mB,iBACpC,QAIZ,sBAAK7sB,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,CAAO4J,IAAI,aAAX,0BACA,wBACI7T,UAAU,eACVxG,KAAK,OACLiB,KAAK,YACLhB,MAAOqzB,EAAU9xB,UACjBF,GAAG,YACHe,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UAClD8I,SAAUymB,KAEO,KAApB5qB,GAAOjL,UACR,uBAAMgF,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAOjL,YACpC,QAIZ,sBAAKgF,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,0BACA,wBACIjK,UAAU,eACVxG,KAAK,OACLiB,KAAK,aACLK,GAAG,aACHrB,MAAOqzB,EAAU7L,WACjBplB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UAClD8I,SAAUymB,UAMtB,sBAAK7wB,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,0BACA,wBACIjK,UAAU,eACVxG,KAAK,OACLiB,KAAK,WACLK,GAAG,WACHrB,MAAOqzB,EAAU5L,SACjBrlB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UAClD8I,SAAUymB,KAEM,KAAnB5qB,GAAOib,SACR,uBAAMlhB,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAOib,WACpC,WAKhB,uBAAKlhB,UAAU,MAAf,UACI,sBAAKA,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,CAAO4J,IAAI,qBAAX,0BACA,eAAC,KAAD,CACIoP,eAAgB,CAACrsB,MAAM,OAAOuT,OAAQ,qBACtC+Y,WAAY,CAACtsB,MAAM,OAAO0K,aAAa,OACvC6hB,QAAS,KACTC,YAAY,kBACZ3oB,KAAK,QACLhB,MAAOqzB,EAAUjJ,MACjBP,MAAO,CAACC,GAAI,eAAgBC,GAAI,mBAChC1oB,GAAG,QAEHsP,SAAU,SAACZ,IArrB5D,SAACA,EAAG+Y,GAEnBwK,EAAa,2BAAID,GAAL,mBAAkBvK,EAAY/Y,EAAEgZ,MAAM,EADxC,MAEjB,CAkrBuF0P,CAAiB1oB,EAAE,QAAS,IAEnC,KAAhBvD,GAAO4d,MACJ,uBAAM7jB,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAO4d,QACpC,QAIZ,sBAAK7jB,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,CAAO4J,IAAI,eAAX,mBACA,wBACI7T,UAAU,eACVxG,KAAK,QACLiB,KAAK,QACLK,GAAG,QACHrB,MAAOqzB,EAAUF,MACjB/wB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UAClD8I,SAAUymB,GACVvmB,UAAQ,SAMpB,sBAAKtK,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,CAAO4J,IAAI,iBAAX,qBACA,wBACI7T,UAAU,eACVxG,KAAK,OACLiB,KAAK,UACLK,GAAG,UAEHrB,MAAOqzB,EAAUtoB,QACjB3I,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UAClD8I,SAAUymB,aAO1B,uBAAK7wB,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,SACI,eAAC,KAAD,CACIxG,KAAK,SACLoC,QAAQ,YACRrE,MAAM,UACNyI,UAAW0D,GAAQvM,OACnBuO,QAt8BrC,SAAC8D,IAVN,WACtB,IAAIrD,EAAI,eAAQF,IAMhB,OALIE,EAAKnL,UAAY8xB,EAAU9xB,UAAY,GAAK,yBAC5CmL,EAAK+a,SAAW4L,EAAU5L,SAAW,GAAK,0BAC1C/a,EAAK0d,MAAQiJ,EAAUjJ,MAAQ,GAAK,6BACpC1d,EAAK0mB,eAAiBC,EAAUD,eAAiB,GAAK,iCAClD3mB,GAAU,eAAKC,IAChB0E,OAAOC,OAAO3E,GAAM4E,OAAM,SAAAtK,GAAC,MAAS,IAALA,CAAJ,GACrC,EAGM0xB,KACCjF,EAAY,GAAD,oBAAKD,GAAL,CAAeH,KAC1BC,EAAa,CACTvoB,QAAQ,GACRqf,MAAM,GACN7oB,UAAW,GACX4xB,MAAO,GACPC,eAAgB,GAChB3L,SAAU,GACVD,WAAY,KAIvB,EAm7B+D,mBAWJ,sBAAKjhB,UAAU,QAAf,SACI,eAAC,KAAD,CACIxG,KAAK,SACLoC,QAAQ,YACRrE,MAAM,YACNyI,UAAW0D,GAAQvM,OACnBuO,QAh+B/B,WACjC4nB,GAAgB,EACnB,EAy9B+D,mCAkBhC,sBAAKttB,UAAU,QACX,eAAC,KAAD,CACIxG,KAAK,SACLoC,QAAQ,YACRrE,MAAM,UACNyI,UAAW0D,GAAQvM,OACnBuK,UAAW,eAAC,KAAD,IACXgE,QAx/Bd,WACtB4nB,GAAgB,EACnB,EAu/BuCzxB,MAAO,CAACC,gBAAgB,UAAUG,WAAW,UAPjD,8CAeZ,uBAAK+D,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAcnE,MAAO,CAACC,gBAAgB,UAAUvE,MAAM,OAAO0E,WAAW,SAAUqF,aAAa,UAA9G,SACI,qBAAItB,UAAU,aAAcnE,MAAO,CAACtE,MAAM,QAA1C,+BAGR,sBAAKyI,UAAU,YAAf,SACA,uBAAKA,UAAU,MAAf,UAEI,sBAAKA,UAAU,2BAAf,SACY,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,uBACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,QACLK,GAAG,QACHsP,SAAUb,GACV9P,MAAOiP,GAAUlB,UAIR,KAAhBvB,GAAOuB,MACA,uBAAMxH,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAOuB,QAC5C,IACc,IAAjBgoB,GACW,uBAAMxvB,UAAW0D,GAAQpM,MAAzB,SAAiC,6BACjC,QAIpB,sBAAK0I,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,wBACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,UACLK,GAAG,UACHsP,SAAUb,GACV9P,MAAOiP,GAAU6D,YAIN,KAAlBtG,GAAOsG,QACA,uBAAMvM,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAOsG,UAC5C,QAGZ,sBAAKvM,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,uBACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,SACLK,GAAG,SACHsP,SAAUb,GACV9P,MAAOiP,GAAUmmB,WAIP,KAAjB5oB,GAAO4oB,OACA,uBAAM7uB,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAO4oB,SAC5C,QAGZ,sBAAK7uB,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,8CACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,MACLK,GAAG,MACHsP,SAAUb,GACV9P,MAAOiP,GAAUkmB,IACjBvkB,IAAM7O,GAAO,IAAI/C,MAAQgD,OAAO,kBAIzB,KAAdwK,GAAO2oB,IACA,uBAAM5uB,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAO2oB,MAC5C,QAIZ,sBAAK5uB,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,uCACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,UACLK,GAAG,UACHsP,SAAUb,GACV9P,MAAOiP,GAAU4D,YAIN,KAAlBrG,GAAOqG,QACA,uBAAMtM,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAOqG,UAC5C,QAIZ,sBAAKtM,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,kCACA,eAAC6C,GAAA,EAAD,UACI,gBAAC5C,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,mBACLK,GAAG,mBACHsP,SAAUb,GACV9P,MAAOiP,GAAUooB,iBALrB,UAQA,yBAAQr3B,MAAM,GAAd,oBACCgc,GAAelb,KAAI,SAACd,EAAOsT,GAAR,OAChB,yBAAoBtT,MAAOA,EAAM8Q,KAAjC,SACK9Q,EAAMjD,SADEuW,EADG,SAOI,KAA3B9G,GAAO6qB,iBACA,uBAAM9wB,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAO6qB,mBAC5C,QAGZ,sBAAK9wB,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,oCACA,eAAC6C,GAAA,EAAD,UACI,gBAAC5C,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,iBACLK,GAAG,iBACHsP,SAAUb,GACV9P,MAAOiP,GAAUumB,eALrB,UAOK,yBAAQx1B,MAAM,GAAd,oBACD,yBAAQA,MAAM,MAAd,iBACA,yBAAQA,MAAM,KAAd,qBAGkB,KAAzBwM,GAAOgpB,eACA,uBAAMjvB,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAOgpB,iBAC5C,QAIZ,sBAAKjvB,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,qCACA,eAAC6C,GAAA,EAAD,UACI,gBAAC5C,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,qBACLK,GAAG,qBACHsP,SAAUb,GACV9P,MAAOiP,GAAUsmB,mBALrB,UAOI,yBAAQv1B,MAAM,GAAd,oBACA,yBAAQA,MAAM,WAAd,sBACA,yBAAQA,MAAM,WAAd,2BAGsB,KAA7BwM,GAAO+oB,mBACA,uBAAMhvB,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAO+oB,qBAC5C,QAGZ,sBAAKhvB,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,kDACA,eAAC6C,GAAA,EAAD,UACI,gBAAC5C,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,kBACLK,GAAG,kBACHsP,SAAUb,GACV9P,MAAOiP,GAAUE,cALrB,UAOI,yBAAQnP,MAAM,GAAd,oBACA,yBAAQA,MAAM,MAAd,iBACA,yBAAQA,MAAM,KAAd,qBAGmB,KAA1BwM,GAAOipB,gBACA,uBAAMlvB,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAOipB,kBAC5C,QAGZ,sBAAKlvB,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,6CACA,eAAC6C,GAAA,EAAD,UACI,gBAAC5C,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,4BACLK,GAAG,4BACHsP,SAAUb,GACV9P,MAAOiP,GAAUqmB,0BALrB,UAOI,yBAAQt1B,MAAM,GAAd,oBACA,yBAAQA,MAAM,MAAd,iBACA,yBAAQA,MAAM,KAAd,qBAG6B,KAApCwM,GAAO8oB,0BACA,uBAAM/uB,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAO8oB,4BAC5C,gBAQnB3oB,EAAS,eAAC4G,GAAA,EAAD,IAAc,GAExB,wBAGA,eAAC,KAAD,CACIxT,KAAK,SACLoC,QAAQ,YACRrE,MAAM,UACNyI,UAAW0D,GAAQvM,OACnBuK,UAAW,eAAC,KAAD,IACXgE,QAAS6f,GACT5a,SAAUwiB,EACVtxB,MAAO,CAACC,gBAAgB,UAAUG,WAAW,UARjD,SAUMmK,EAGE,uBAAMvK,MAAO,CAAE8F,cAAe,cAA9B,uBAFA,uBAAM9F,MAAO,CAAE8F,cAAe,cAA9B,oBAMR,eAAC,KAAD,CACI/F,QAAQ,YACRoE,UAAW0D,GAAQvM,OACnBuK,UAAW,eAAC,KAAD,IACX7F,MAAO,CAACC,gBAAgB,WACxB4J,QAl/BR,WAChBiK,GAAQ6V,KAAK,CAAE7qB,SAAU,KAC5B,EA2+BuB,SAOI,uBAAMkB,MAAO,CAAE8F,cAAe,aAAcpK,MAAM,QAAlD,+BAMpB,gBAAC,KAAD,CAAOmxB,KAAMvB,GAAME,OAAQA,GAAQrnB,UAAU,OAAOjE,KAAK,KACrD,kBAAgB,gCAChB4sB,UAAQ,EAACyJ,SAAS,SAFtB,UAGC,eAAC,KAAMzd,OAAP,UACD,eAAC,KAAMiU,MAAP,CAAa9tB,GAAG,gCAAhB,6BAII,eAAC,KAAMkH,KAAP,UACI,qEAGR,eAAC,KAAM6mB,OAAP,UACI,eAAC7sB,GAAA,EAAD,CAAQ0J,QAAS2hB,GAAQxrB,MAAO,CAACC,gBAAgB,UAAWvE,MAAM,QAAlE,wBAKf,EChqDDw0B,KAAQ/I,IAAIgJ,KAAeC,KAAUC,KAAQC,MAE7C,IAAM9sB,GAAYlJ,cAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAE1Ba,KAAM,CACFuU,SAAU,EACV,gBAAgB,CACZpU,MAAM,OACN0E,WAAW,QAEf,kBAAkB,CACdqF,aAAa,UACbpK,OAAO,QAEX,6BAA8B,CAC1BoK,aAAc,+CAElB,4BAA6B,CACzB9K,QAAS,qBAEb,WAAW,CACP,qBAAsB,sBAE1B,MAAM,CACFe,MAAM,OAEV,UAAU,CACNC,SAAS,OACTD,MAAM,UACN0E,WAAW,SAGnB+Y,KAAM,CACFlZ,gBAAiB1F,EAAMwM,QAAQqS,WAAWC,SAE9CC,OAAQ,CACJ3e,QAAS,UAEbc,MAAM,CACFC,MAAO,UACPC,SAAU,UA5DW,IAktBd40B,GAjpBU,SAACp3B,GACtB,IAmEI6F,EACAE,EApEJ,EAAiCrD,mBACzB,CACI4e,QAAQ,EACR9R,QAAS,GACT+kB,QAAS,GACTC,aAAc,GACdluB,YAAa,GACbouB,UAAU,EACVC,iBAAkB,KAClB3uB,UAAW,GACXqxB,SAAU,GACVjzB,WAAY,GACZ+wB,UAAW,GACXmC,gBAAiB,GACjBC,YAAa,GACbC,mBAAmB,GACnBnU,mBAAoB,GACpBgK,uBAAwB,KACxBhnB,IAAI,GACJ8lB,YAAY,GACZsL,eAAe,GACfl0B,IAAI,GACJoyB,UAAU,GACVF,QAAQ,GACRC,SAAS,GACTwG,SAAS,GACT5Y,MAAM,GACN2R,UAAU,KA3BtB,mBAAOyC,EAAP,KAAkBC,EAAlB,KA+BA,EAA4Bj1B,oBAAS,GAArC,mBAAO0O,EAAP,KACA,GADA,KACwD1O,oBAAS,IAAjE,mBAAOy1B,EAAP,KAA6BC,EAA7B,KACA,EAAsC11B,oBAAS,GAA/C,mBAAOkpB,EAAP,KACA,GADA,KAC6BlpB,mBAAS,KAAtC,mBAAgB81B,GAAhB,WACA,EAA4C91B,oBAAS,GAArD,mBAAO83B,EAAP,KAAuBC,EAAvB,KACA,EAA4B/3B,mBAAS,CAAC,GAAtC,mBAAOuO,EAAP,KAAeC,EAAf,KACMsoB,EAAax5B,EAAMV,UAAYU,EAAMV,SAASsG,MAAQ5F,EAAMV,SAASsG,MAAM6zB,KAAO,KAClF/qB,EAAUrE,KACVsQ,EAAU9D,cACVvX,EAAWy0B,cAGhB,EAAkCrxB,mBAAS,CAAI8P,MAAM,GAC9C8E,QAAS,GACTC,QAAS,GACToiB,qBAAqB,GACrBC,IAAK,GACLC,OAAQ,GACRvmB,YAAY,GACZwmB,iBAAiB,GACjBC,0BAA2B,GAC3BC,mBAAoB,GACpBC,eAAgB,GAChBC,gBAAiB,GACjBC,UAAU,CAAC,EACXC,aAAa,CAAC,EACdC,aAAa,CAAC,EACdC,oBAAoB,CAAC,EACrBwB,iBAAiB,KAhBxB,mBAAOpoB,EAAP,KAAkBC,EAAlB,KAkBA,EAA8CjR,mBAAS,IAAvD,mBAAwBqe,GAAxB,WAGA,EAAwBvW,IAAM9H,UAAS,GAAvC,mBAAOyvB,EAAP,KAAaC,GAAb,KACMC,GAAS,kBAAMD,IAASD,EAAf,EACVwI,GAAgBr7B,EAASsG,MAG/BC,EAAY80B,GAAgBA,GAAc90B,UAAY,KACtDE,EAAa40B,GAAgBA,GAAc50B,WAAa,CAAC,EACzD,OAAgDrD,mBAAS,IAAzD,qBAAOo5B,GAAP,MAAyBuB,GAAzB,MACAj6B,qBAAU,WAIN,GAHAw3B,KACA0C,KACAxa,KACG/c,EAAW,CACV,IACM1B,EADc0B,EAAW3B,WACIA,WAAWE,MAAK,SAAAC,GAAG,MAAiB,mBAAbA,EAAIC,IAAR,IACtDkzB,EAAUn0B,IAAIwC,EAAWO,YACzBoxB,EAAU1xB,UAAUD,EAAWC,UAC/B0xB,EAAUrU,mBAAmBtd,EAAWsd,mBACxCqU,EAAUzL,WAAWlmB,EAAWovB,UAChCuC,EAAUxL,SAASnmB,EAAWE,QAC9ByxB,EAAUrU,mBAAmBtd,EAAWsd,mBACxCqU,EAAUrzB,eAAeA,GAAkBA,EAAiBA,EAAeI,MAAQ,GACnFkP,EAAY,2BAAMD,GAAN,IAAkB6pB,SAAUl5B,EAAiBA,EAAeI,MAAQ,MAChFizB,EAAUL,SAAStxB,GAAcA,EAAWI,OAASJ,EAAWI,OAAOL,GAAK,KAC5E,IAAM8d,EAAWtgB,GAAckD,GAAOT,EAAWO,aAAaG,OAAO,eACrEixB,EAAUrxB,IAAIud,EACdlQ,EAAUI,SAAS/N,EAAWD,GAC9B4xB,EAAUzC,UAAUlvB,EAAWkvB,SAElC,CACEyC,EAAUrU,mBAAqBqU,EAAUn0B,KACxC63B,MAAM,8DAEVoC,IACH,GAAE,CAACz3B,EAAYF,EAAW6xB,EAAUrU,qBAErC,IAAMma,GAAuB,WACzB36B,IACCrD,IADD,UACQsD,EADR,iDAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACHo6B,GAAoBp6B,EAASC,KAChC,IACAC,OAAM,SAACb,GAEP,GACJ,EACKg7B,GAAQ,WACVz6B,IACCrD,IADD,UACQsD,EADR,+BAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACH,IAAIw6B,EAAW,GACK,WAAjB13B,EAAWK,KAAmC,WAAjBL,EAAWK,KAAmC,WAAjBL,EAAWK,MACnEq3B,EAAY,UAEG,SAAjB13B,EAAWK,KAAiC,SAAjBL,EAAWK,KAAiC,SAAjBL,EAAWK,MAC/Dq3B,EAAY,QAEjB,IAAMC,EAAWz6B,EAASC,KAAKoB,MAAK,SAACmH,GAAD,OAAMA,EAAEjK,UAAUi8B,CAAlB,IACpC/F,EAAUpU,MAAMoa,EAASl8B,OAC5B,IACA2B,OAAM,SAACb,GAEP,GACJ,EACKs4B,GAAcS,sBAAW,gCAAC,uHAEDx4B,IAAMrD,IAAN,UAAasD,EAAb,+BAAmD,CAAEC,QAAS,CAAC,+BAA4B5D,MAF1F,OAElB8D,EAFkB,OAGxBu1B,EAAWv1B,EAASC,MAHI,uGAO7B,IAEGI,GAAgB,SAAAC,GAClB,IAAIC,EAAQ,IAAIC,KACZC,EAAYH,EAAII,MAAM,KACtBC,EAAa,IAAIH,MAAMC,EAAU,GAAIA,EAAU,GAAK,GAAIA,EAAU,IAClEG,EAAY,IAAIJ,KAAKG,GACrBE,EAAUN,EAAMO,cAAgBF,EAAUE,cAC1CC,EAAIR,EAAMS,WAAaJ,EAAUI,WAIjC,OAHID,EAAI,GAAY,IAANA,GAAWR,EAAMU,UAAYL,EAAUK,YAC7CJ,IAEQ,IAAZA,EACWE,EAAI,YAERF,CAClB,EA0BMmU,GAAW,WACd,IAAI9G,EAAI,eAAQF,GAYhB,OAXIE,EAAKmG,QAAU5D,EAAU4D,QAAU,GAAK,yBACxCnG,EAAKoG,QAAU7D,EAAU6D,QAAU,GAAK,yBACxCpG,EAAK4oB,0BAA4BrmB,EAAUqmB,0BAA4B,GAAK,yBAC5E5oB,EAAKyoB,IAAMlmB,EAAUkmB,IAAM,GAAK,yBAChCzoB,EAAK0oB,OAASnmB,EAAUmmB,OAAS,GAAK,yBACtC1oB,EAAK8oB,eAAiBvmB,EAAUumB,eAAiB,GAAK,yBACtD9oB,EAAK+oB,gBAAkBxmB,EAAUwmB,gBAAkB,GAAK,yBACxD/oB,EAAK2qB,iBAAmBpoB,EAAUooB,iBAAmB,GAAK,yBAC1D3qB,EAAK6oB,mBAAqBtmB,EAAUsmB,mBAAqB,GAAK,yBAE1D9oB,EAAU,eAAKC,IAChB0E,OAAOC,OAAO3E,GAAM4E,OAAM,SAAAtK,GAAC,MAAS,IAALA,CAAJ,GACrC,EAEK6vB,GAAyB,SAAA9mB,GAE3BtD,EAAU,2BAAID,GAAL,mBAAcuD,EAAEC,OAAOhP,KAAO,MACvCkyB,EAAY,2BAAMD,GAAN,mBAAmBljB,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,QAC3D,EAGKqe,GAAiB,WACnBjgB,IACCrD,IADD,UACQsD,EADR,4CAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEH8d,EAAmB9d,EAASC,KAC/B,IACAC,OAAM,SAACb,GAEP,GACJ,EACKiS,GAAoB,SAAAC,GAEtB,GADAtD,EAAU,2BAAID,GAAL,mBAAcuD,EAAEC,OAAOhP,KAAO,MACpB,UAAhB+O,EAAEC,OAAOhP,MAAmC,KAAjB+O,EAAEC,OAAOhQ,MAAW,CAAC,IAEhCg3B,EAF+B,iDAE9C,yGACUC,EAAUlnB,EAAEC,OAAOhQ,MACnB+N,EAAO,CACTA,MAAMkpB,GAHd,SAK2B74B,IAAMmT,KAAN,UAAclT,EAAd,sCAAmD44B,GAAYlpB,EAC9E,CAAEzP,QAAS,CAAC,+BAA4B5D,GAAS,eAAgB,gBAN7E,QAQuB,KAHb8D,EALV,QAQgBC,MAER+S,IAAM3T,MAAM,4BACZm4B,EAAkBx3B,EAASC,OAE3Bu3B,GAAkB,GAb1B,2CAF8C,qDAkB9CgB,GACC,CACL9nB,EAAY,2BAAMD,GAAN,mBAAmBc,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,QAC3D,EAOK8rB,GAAY,iDAAG,WAAO/b,GAAP,oFACjBA,EAAEoB,kBAEEqC,KAHa,iCAMTvE,EAAUJ,YAAcvN,EAAWqvB,KACnCjmB,QAAQC,IAAIsE,GAPH,SAQc7Q,IAAMmT,KAAN,UAAclT,EAAd,6BAAkD4Q,EAAW,CAAE3Q,QAAS,CAAC,+BAA4B5D,MARnH,cAST8W,IAAMxT,QAAQ,8BAA+B,CAACyT,SAAUD,IAAME,SAASC,gBACvEuE,EAAQ6V,KAAK,KAVJ,kDAYN,KAAMvtB,UAAY,KAAMA,SAASC,MAC5BmT,EAAe,KAAMpT,SAASC,KAAKoT,UAAmD,KAAvC,KAAMrT,SAASC,KAAKoT,SAASC,QAAe,KAAMtT,SAASC,KAAKoT,SAASC,QAAW,yCACpI,KAAMtT,SAASC,KAAKoT,UAAmD,KAAvC,KAAMrT,SAASC,KAAKoT,SAASC,SAAgB,KAAMtT,SAASC,KAAKoT,UAAgE,KAApD,KAAMrT,SAASC,KAAKoT,SAAS6lB,UAAU,GAAG5lB,QACtJN,IAAM3T,MAAM,KAAMW,SAASC,KAAKoT,SAASC,QAAU,MAAQ,KAAMtT,SAASC,KAAKoT,SAAS6lB,UAAU,GAAGt3B,MAAQ,IAAM,KAAM5B,SAASC,KAAKoT,SAAS6lB,UAAU,GAAG5lB,QAAS,CAACL,SAAUD,IAAME,SAASC,gBAEhMH,IAAM3T,MAAM+T,EAAc,CAACH,SAAUD,IAAME,SAASC,iBAIxDH,IAAM3T,MAAM,4CAA6C,CAAC4T,SAAUD,IAAME,SAASC,gBArB9E,0DAAH,sDA4BlB,OADJjH,QAAQC,IAAI6B,GAEJ,uCACA,sBAAKjG,UAAU,uBAAuBnE,MAAO,CAAChF,UAAU,MAAOG,aAAa,SAA5E,SACL,qBAAIgJ,UAAU,aAAd,SACC,qBAAIA,UAAU,yBAAd,SAAuC,oCAAK,eAAC,IAAD,CAAMtF,GAAI,IAAV,mBAAL,+BAG/B,eAAC,IAAD,CAAgBwwB,UAAW,IAAMC,iBAAe,IAChD,eAAC,KAAD,CAAMnrB,UAAW0D,EAAQtM,KAAzB,SACI,gBAAC,KAAD,WACI,eAAC,IAAD,CACIsD,GAAI,CACAC,SAAU,IACVC,MAAO,SAHf,SAKI,eAACoB,GAAA,EAAD,CACIJ,QAAQ,YACRrE,MAAM,UACNyI,UAAU,kBACVnE,MAAO,CAACC,gBAAgB,UAAUG,WAAW,UAC7CyF,UAAW,eAAC,KAAD,IALf,SAOI,uBAAM7F,MAAO,CAAE8F,cAAe,aAAcpK,MAAM,QAAlD,uBAGR,wBACA,wBACA,sBAAKyI,UAAU,sBAAf,SACI,gBAACqxB,GAAA,EAAD,WACI,uBAAKrxB,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAcnE,MAAO,CAACC,gBAAgB,UAAUvE,MAAM,OAAO0E,WAAW,SAAWqF,aAAa,UAA/G,SACI,qBAAItB,UAAU,aAAanE,MAAO,CAACtE,MAAM,QAAzC,SAAgE,OAAbi3B,EAAoB,oBAAsB,4BAGjG,sBAAKxuB,UAAU,YAAf,SACI,sBAAKA,UAAU,aAAf,SACI,uBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,CAAO4J,IAAI,YAAX,kBACA,eAAC3J,GAAA,EAAD,CACIlK,UAAU,eACVxG,KAAK,OACLiB,KAAK,YACLK,GAAG,YACHrB,MAAOizB,EAAU1xB,UAAY,IAAK0xB,EAAUxL,SAC5C9W,SAAUkmB,GACVz0B,MAAO,CAACsO,OAAQ,OAAQrO,gBAAiB,cAAe62B,QAAQ,UAG/C,KAApB1sB,EAAOjL,UACR,uBAAMgF,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOjL,YACpC,QAGZ,sBAAKgF,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,CAAO4J,IAAI,YAAX,8BACA,wBACI7T,UAAU,eACVxG,KAAK,OACLiB,KAAK,iBACLK,GAAG,iBACHrB,MAAOizB,EAAUrzB,eACjB+Q,SAAUkmB,GACVz0B,MAAO,CAACsO,OAAQ,OAAQrO,gBAAiB,cAAe62B,QAAQ,eAO5E,sBAAK3yB,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,mBACA,eAACC,GAAA,EAAD,CACQlK,UAAU,eACVvF,KAAK,QACLK,GAAG,QACHsP,SAAUkmB,GACV72B,MAAOizB,EAAUpU,MACjBzc,MAAO,CAACsO,OAAQ,OAAQrO,gBAAiB,cAAe62B,QAAQ,eAKhF,sBAAK3yB,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,kBACA,wBACIjK,UAAU,eACVxG,KAAK,OACLiB,KAAK,MACLK,GAAG,MACHrB,MAAOizB,EAAUrxB,IACjBsP,SAAUiW,EACVxW,SAtN5B,SAACZ,GACrB,IAAMopB,EAAYppB,EAAEC,OAAOhQ,MAAMgpB,QAAQ,MAAO,IAChD,IAAK7B,GAAegS,EAAW,CACZ,KAAZA,GAAkBA,GAAW,IAC5BvL,KAGA+F,EADDwF,GAAY,GAKf,IAAMjQ,EAAc,IAAIlqB,KACxBkqB,EAAYC,QAAQ,IACpBD,EAAYE,SAAS,GACrB,IACMC,EADStnB,GAAOmnB,EAAYI,eACZC,KAAkB,EAAb4P,EAAiB,SAE5ClG,EAAUn0B,IAAKiD,GAAOsnB,GAAQrnB,OAAO,aAExC,CACDkxB,EAAa,2BAAID,GAAL,IAAgBrxB,IAAKu3B,IACpC,EAkMmD/2B,MAAO,CAACsO,OAAQ,OAAQrO,gBAAiB,cAAe62B,QAAQ,yBAW5F,uBAAK3yB,UAAU,OAAf,UACA,sBAAKA,UAAU,cAAcnE,MAAO,CAACC,gBAAgB,UAAUvE,MAAM,OAAO0E,WAAW,SAAUqF,aAAa,UAA9G,SACI,qBAAItB,UAAU,aAAcnE,MAAO,CAACtE,MAAM,QAA1C,+BAEJ,sBAAKyI,UAAU,YAAf,SACA,uBAAKA,UAAU,MAAf,UAEI,sBAAKA,UAAU,2BAAf,SACY,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,uBACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,QACLK,GAAG,QACHsP,SAAUb,GACV9P,MAAOiP,EAAUlB,UAIR,KAAhBvB,EAAOuB,MACA,uBAAMxH,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOuB,QAC5C,IACc,IAAjBgoB,EACW,uBAAMxvB,UAAW0D,EAAQpM,MAAzB,SAAiC,6BACjC,QAIpB,sBAAK0I,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,wBACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,UACLK,GAAG,UACHsP,SAAUb,GACV9P,MAAOiP,EAAU6D,YAIN,KAAlBtG,EAAOsG,QACA,uBAAMvM,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOsG,UAC5C,QAGZ,sBAAKvM,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,uBACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,SACLK,GAAG,SACHsP,SAAUb,GACV9P,MAAOiP,EAAUmmB,WAIP,KAAjB5oB,EAAO4oB,OACA,uBAAM7uB,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO4oB,SAC5C,QAGZ,sBAAK7uB,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,+CACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,MACLK,GAAG,MACHsP,SAAUb,GACV9P,MAAOiP,EAAUkmB,IACjBvkB,IAAM7O,GAAO,IAAI/C,MAAQgD,OAAO,kBAIzB,KAAdwK,EAAO2oB,IACA,uBAAM5uB,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO2oB,MAC5C,QAIZ,sBAAK5uB,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,wCACA,eAAC6C,GAAA,EAAD,UACI,eAAC5C,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,UACLK,GAAG,UACHsP,SAAUb,GACV9P,MAAOiP,EAAU4D,YAIN,KAAlBrG,EAAOqG,QACA,uBAAMtM,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOqG,UAC5C,QAIZ,sBAAKtM,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,mCACA,eAAC6C,GAAA,EAAD,UACI,gBAAC5C,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,mBACLK,GAAG,mBACHsP,SAAUb,GACV9P,MAAOiP,EAAUooB,iBALrB,UAOK,yBAAQr3B,MAAM,GAAd,oBACAq3B,GAAiBv2B,KAAI,SAACd,EAAOsT,GAAR,OAClB,yBAAoBtT,MAAOA,EAAM8Q,KAAjC,SACK9Q,EAAMjD,SADEuW,EADK,SAQF,KAA3B9G,EAAO6qB,iBACA,uBAAM9wB,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO6qB,mBAC5C,QAGZ,sBAAK9wB,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,oCACA,eAAC6C,GAAA,EAAD,UACI,gBAAC5C,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,iBACLK,GAAG,iBACHsP,SAAUb,GACV9P,MAAOiP,EAAUumB,eALrB,UAOK,yBAAQx1B,MAAM,GAAd,oBACD,yBAAQA,MAAM,MAAd,iBACA,yBAAQA,MAAM,KAAd,qBAGkB,KAAzBwM,EAAOgpB,eACA,uBAAMjvB,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOgpB,iBAC5C,QAIZ,sBAAKjvB,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,qCACA,eAAC6C,GAAA,EAAD,UACI,gBAAC5C,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,qBACLK,GAAG,qBACHsP,SAAUb,GACV9P,MAAOiP,EAAUsmB,mBALrB,UAOI,yBAAQv1B,MAAM,GAAd,oBACA,yBAAQA,MAAM,WAAd,sBACA,yBAAQA,MAAM,WAAd,2BAGsB,KAA7BwM,EAAO+oB,mBACA,uBAAMhvB,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO+oB,qBAC5C,QAGZ,sBAAKhvB,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,kDACA,eAAC6C,GAAA,EAAD,UACI,gBAAC5C,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,kBACLK,GAAG,kBACHsP,SAAUb,GACV9P,MAAOiP,EAAUE,cALrB,UAOI,yBAAQnP,MAAM,GAAd,oBACA,yBAAQA,MAAM,MAAd,iBACA,yBAAQA,MAAM,KAAd,qBAGmB,KAA1BwM,EAAOipB,gBACA,uBAAMlvB,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAOipB,kBAC5C,QAGZ,sBAAKlvB,UAAU,2BAAf,SACQ,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,6CACA,eAAC6C,GAAA,EAAD,UACI,gBAAC5C,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,4BACLK,GAAG,4BACHsP,SAAUb,GACV9P,MAAOiP,EAAUqmB,0BALrB,UAOI,yBAAQt1B,MAAM,GAAd,oBACA,yBAAQA,MAAM,MAAd,iBACA,yBAAQA,MAAM,KAAd,qBAG6B,KAApCwM,EAAO8oB,0BACA,uBAAM/uB,UAAW0D,EAAQpM,MAAzB,SAAiC2O,EAAO8oB,4BAC5C,gBAQnB3oB,EAAS,eAAC4G,GAAA,EAAD,IAAc,GAExB,wBAGA,eAAC,KAAD,CACIxT,KAAK,SACLoC,QAAQ,YACRrE,MAAM,UACNyI,UAAW0D,EAAQvM,OACnBuK,UAAW,eAAC,KAAD,IACXiJ,SAAUwiB,EACVznB,QAAS6f,GAPb,SASMnf,EAGE,uBAAMvK,MAAO,CAAE8F,cAAe,cAA9B,uBAFA,uBAAM9F,MAAO,CAAE8F,cAAe,cAA9B,oBAMR,eAAC,KAAD,CACI/F,QAAQ,YACRoE,UAAW0D,EAAQvM,OACnBuK,UAAW,eAAC,KAAD,IACXgE,QA/XR,WAChBiK,EAAQ6V,KAAK,CAAE7qB,SAAU,KAC5B,EA8X2BkB,MAAO,CAACC,gBAAgB,WAL5B,SAOI,uBAAMD,MAAO,CAAE8F,cAAe,aAAcpK,MAAM,QAAlD,gCAMpB,gBAAC,KAAD,CAAOmxB,KAAMvB,EAAME,OAAQA,GAAQrnB,UAAU,OAAOjE,KAAK,KACrD,kBAAgB,gCAChB4sB,UAAQ,EAACyJ,SAAS,SAFtB,UAGC,eAAC,KAAMzd,OAAP,UACD,eAAC,KAAMiU,MAAP,CAAa9tB,GAAG,gCAAhB,6BAII,eAAC,KAAMkH,KAAP,UACI,qEAGR,eAAC,KAAM6mB,OAAP,UACI,eAAC7sB,GAAA,EAAD,CAAQ0J,QAAS2hB,GAAQxrB,MAAO,CAACC,gBAAgB,UAAWvE,MAAM,QAAlE,wBAKf,E,qBC7sBDw0B,KAAQ/I,IAAIgJ,KAAeC,KAAUC,KAAQC,MAE7C,IAAM9sB,GAAYlJ,cAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPC,UAAWT,EAAMG,QAAQ,IAE7BO,OAAQ,CACJR,OAAQF,EAAMG,QAAQ,EAAG,EAAG,IAEhCQ,WAAY,CACRC,aAAc,IAElBC,OAAQ,CACJC,OAAQ,GACRN,MAAO,KAEXO,OAAQ,CACJb,OAAQF,EAAMG,QAAQ,IAE1Ba,KAAM,CACFuU,SAAU,EACV5K,SAAU,KAEdiU,KAAM,CACFlZ,gBAAiB1F,EAAMwM,QAAQqS,WAAWC,SAE9CC,OAAQ,CACJ3e,QAAS,UAEbc,MAAM,CACFC,MAAO,UACPC,SAAU,UApCW,IA87Dd40B,GAr5DU,SAACp3B,GACtBmP,QAAQC,IAAIpP,GACZ,IAsFI6F,EACAE,EAvFJ,EAAiCrD,mBACzB,CACI4e,QAAQ,EACR9R,QAAS,GACT+kB,QAAS,GACTC,aAAc,GACdluB,YAAa,GACbouB,UAAU,EACVC,iBAAkB,KAClB3uB,UAAW,GACXqxB,SAAU,GACVjzB,WAAY,GACZ+wB,UAAW,GACXmC,gBAAiB,GACjBC,YAAa,GACbC,mBAAmB,GACnBnU,mBAAoB,GACpBgK,uBAAwB,KACxBhnB,IAAI,GACJ8lB,YAAY,GACZsL,eAAe,GACfl0B,IAAI,GACJoyB,UAAU,GACVF,QAAQ,GACRC,SAAS,GACTwG,SAAS,GACT5Y,MAAM,GACN2R,UAAU,KA3BtB,mBAAOyC,EAAP,KAAkBC,EAAlB,KA+BA,EAAiCj1B,mBACrB,CACI8M,QAAQ,GACRqf,MAAM,GACN7oB,UAAW,GACX4xB,MAAO,GACPC,eAAgB,GAChB3L,SAAU,GACVD,WAAY,KAR5B,mBAAO6L,EAAP,KAAkBC,EAAlB,KAYA,EAA0Br1B,oBAAS,IAAIe,MAAOsqB,cAAciK,OAAO,EAAG,IAAIvK,QAAQ,IAAK,MAAvF,mBAAOjqB,EAAP,KACA,GADA,KACgCd,mBAAS,KAAzC,mBAAOu1B,EAAP,KAAiBC,EAAjB,KACA,EAA4Bx1B,oBAAS,GAArC,mBAAO0O,EAAP,KACA,GADA,KACsC1O,oBAAS,IAA/C,mBAAOkpB,EAAP,KAAoBC,EAApB,KACA,EAAwCnpB,oBAAS,GAAjD,mBAAO21B,EAAP,KAAqBC,EAArB,KACA,EAAwC51B,mBAAS,MAAjD,mBACA,GADA,UAC6BA,mBAAS,KAAtC,mBAAO61B,EAAP,KAAgBC,EAAhB,KACA,EAAuD91B,mBAAS,IAAhE,mBAAO+1B,EAAP,KAA6BC,EAA7B,KACA,EAA+Ch2B,mBAAS,IAAxD,mBAAOi2B,EAAP,KAAyBC,EAAzB,KACA,GAAiDl2B,mBAAS,IAA1D,qBAAOm2B,GAAP,MAA0BC,GAA1B,MACA,GAAqDp2B,mBAAS,IAA9D,qBAAOq2B,GAAP,MAA4BC,GAA5B,MACA,GAAkCt2B,mBAAS,IAA3C,qBAAOu2B,GAAP,MAAkBC,GAAlB,MACA,GAA4Bx2B,mBAAS,IAArC,qBAAOy2B,GAAP,MAAeC,GAAf,MACA,GAAkC12B,mBAAS,IAA3C,qBAAO22B,GAAP,MAAkBC,GAAlB,MACA,GAA4B52B,mBAAS,CAAC,GAAtC,qBAAOuO,GAAP,MAAeC,GAAf,MACA,GAAmExO,mBAAS,IAA5E,qBAAmC62B,IAAnC,aACA,GAAmC72B,mBAAS,CAAC,OAAS,GAAI,cAAgB,KAA1E,qBAAOm7B,GAAP,MAEMnvB,IAFN,MACmB1O,EAAMV,UAAYU,EAAMV,SAASsG,OAAQ5F,EAAMV,SAASsG,MAAM6zB,KACjEpvB,MACVsQ,GAAU9D,cACVvX,GAAWy0B,cAEhB,GAAuCrxB,oBAAS,GAAhD,qBAAOo7B,GAAP,MAAqBpE,GAArB,MAEA,GAAkCh3B,mBAAS,CAACoD,GAAG,GAAIy3B,SAAU,GAAGla,mBAAmB,GAAG0a,aAAa,GAAIC,aAAa,GAAGC,uBAAuB,GAAGC,iBAAiB,GAAGC,mBAAmB,GAAGC,oBAAoB,GAAGC,kBAAkB,GAAGC,UAAU,GAAGC,WAAW,GAAGC,cAAc,GAAGC,aAAa,GAAGC,UAAU,GAC7SC,gBAAgB,GAAIC,qBAAqB,GAAIC,yBAAyB,GACtEC,uBAAuB,GAAIC,2BAA2B,GACtDC,oBAAoB,KAHpB,qBAAOtrB,GAAP,MAAkBC,GAAlB,MAIA,GAAoCjR,mBAAS,IAA7C,qBAAOu8B,GAAP,MAAmB1E,GAAnB,MACA,GAA4C73B,mBAAS,IAArD,qBAAO+d,GAAP,MAAuBC,GAAvB,MACA,GAAkChe,mBAAS,IAA3C,qBAAOoO,GAAP,MAAkB9B,GAAlB,MACA,GAA0CtM,mBAAS,IAAnD,qBAAO6d,GAAP,MAAsBC,GAAtB,MACA,GAAgC9d,mBAAS,IAAzC,qBAAOsU,GAAP,MAAiBC,GAAjB,MACA,GAAoBvU,mBAAS,IAA7B,qBAAO2d,GAAP,MAAWC,GAAX,MACA,GAA8C5d,mBAAS,IAAvD,qBAAOoe,GAAP,MAAwBC,GAAxB,MAEA,GAAoCre,oBAAS,GAA7C,qBAAOw8B,GAAP,MAAmBC,GAAnB,MAEA,GAAsCz8B,oBAAS,GAA/C,qBAAO08B,GAAP,MAAoBC,GAApB,MAEA,GAA6C38B,mBAAS,SAAtD,qBAAO48B,GAAP,MAEK3E,IAFL,MAEqBr7B,GAASsG,OAG/BC,EAAY80B,GAAgBA,GAAc90B,UAAY,KACtDE,EAAa40B,GAAgBA,GAAc50B,WAAa,CAAC,EAEzD,OAAiDrD,oBAAS,GAA1D,qBAAOg4B,GAAP,MAA0B6E,GAA1B,MACA,GAAmD78B,oBAAS,GAA5D,qBAAO88B,GAAP,MAA2BC,GAA3B,MAEAr8B,qBAAU,WAeN,GAdAw3B,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAvY,KACA+c,KACAhd,KACAid,KACAld,KACAK,KACAqY,KACGp1B,EAAW,CACV,IAAMkyB,EAAWlyB,EAAWwuB,QAAUxuB,EAAWwuB,QAAU,GAEvDwH,EAAgB,GAEC9D,EAAS1D,SAAW0D,EAAS1D,QAAQjkB,OAAO,GAAK2nB,EAAS1D,QAAQhvB,KAAI,SAACkG,GACxF,IAAMuwB,EACF,CACIxsB,QAAQ/D,EAAE+D,QAAQgmB,KAAK,GACvB3G,MAAMpjB,EAAE+oB,aAAa/vB,MACrBuB,UAAUyF,EAAEzF,UACZ4xB,MAAO,GACPC,eAAgBpsB,EAAEosB,eAClB3L,SAAUzgB,EAAExF,QACZgmB,WAAYxgB,EAAE0pB,WAEtB4G,EAAgBvL,KAAKwL,EACxB,IACD9D,EAAY6D,GACZ,IAAM6D,EAAc75B,EAAW3B,WACzBoL,EAAUzJ,EAAWyJ,QACrBglB,EAAezuB,EAAWyuB,aAC1BnwB,EAAiBu7B,EAAYx7B,WAAWE,MAAK,SAAAC,GAAG,MAAgB,kBAAZA,EAAIC,IAAR,IAChDqqB,EAAQ2F,EAAaA,aAAalwB,MAAK,SAAAC,GAAG,MAAgB,SAAZA,EAAIC,IAAR,IAC1CozB,EAAQpD,EAAaA,aAAalwB,MAAK,SAAAC,GAAG,MAAgB,SAAZA,EAAIC,IAAR,IAC1Cq7B,EAAWrL,EAAaA,aAAalwB,MAAK,SAAAC,GAAG,MAAgB,YAAZA,EAAIC,IAAR,IAC7C2pB,EAAU3e,GAAWA,EAAQA,SAAWA,EAAQA,QAAQc,OAAS,EAAId,EAAQA,QAAQ,GAAK,KAEhGkoB,EAAUn0B,IAAIwC,EAAWO,YACzBoxB,EAAU1xB,UAAUD,EAAWC,UAC/B0xB,EAAUrU,mBAAmBtd,EAAWsd,mBACxCqU,EAAUzL,WAAWlmB,EAAWovB,UAChCuC,EAAUxL,SAASnmB,EAAWE,QAC9ByxB,EAAUrzB,eAAeA,EAAiBA,EAAeI,MAAQ,GACjEizB,EAAUJ,gBAAgBvxB,EAAWgvB,cAAcjvB,GACnD4xB,EAAUF,mBAAmBzxB,EAAW8uB,iBAAiB/uB,GACzD4xB,EAAUL,SAAStxB,EAAWI,OAASJ,EAAWI,OAAOL,GAAK,KAC9D4xB,EAAUpU,MAAMvd,EAAWK,IAC3BsxB,EAAUH,YAAYxxB,EAAW6uB,UAAU9uB,GAC3C4xB,EAAUvL,YAAY0C,GAASA,EAAMpqB,MAAQoqB,EAAMpqB,MAAQ,GAC3DizB,EAAUD,eAAgBoI,GAAYA,EAASp7B,MAAQo7B,EAASp7B,MAAQ,GACxEizB,EAAUE,MAAMA,GAASA,EAAMnzB,MAAQmzB,EAAMnzB,MAAQ,GACrDizB,EAAUloB,QAAQ2e,GAAWA,EAAQ1e,KAAO0e,EAAQ1e,KAAO,GAC3DioB,EAAUwE,SAAS/N,EAAQqH,KAAK,GAChCkC,EAAU/B,UAAUxH,EAAQwH,UAC5BkH,GAAoB1O,EAAQwH,WAiIZmK,EAhID3R,EAAQsH,QAiI3B5yB,IACCrD,IADD,UACQsD,EADR,wDAC+Dg9B,GAC3D,CAAE/8B,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACHq2B,GAAar2B,EAASC,KACzB,IACAC,OAAM,SAACb,GAEP,IAzIGo1B,EAAUjC,QAAQtH,EAAQsH,QAC1BiC,EAAUhC,SAASvH,EAAQuH,SAC3B/hB,GAAa5N,EAAWg6B,YACxB,IAAMnc,EAAWtgB,GAAckD,GAAOT,EAAWO,aAAaG,OAAO,eACrEixB,EAAUrxB,IAAIud,EACd8V,GAAiC,WAAjB3zB,EAAWK,KAC3BsxB,EAAUzC,UAAUlvB,EAAWkvB,SAElC,CAuHL,IAAwB6K,EAtHjBpI,EAAUrU,mBAAqBqU,EAAUn0B,KACxC63B,MAAM,6DAGb,GAAE,CAACr1B,EAAYF,EAAW6xB,EAAUrU,qBAErC,IAAMuX,GAAcS,sBAAW,gCAAC,uHAEDx4B,IAAMrD,IAAN,UAAasD,EAAb,+BAAmD,CAAEC,QAAS,CAAC,+BAA4B5D,MAF1F,OAElB8D,EAFkB,OAGxBu1B,EAAWv1B,EAASC,MAHI,uGAO7B,IACG23B,GAAoBQ,sBAAW,gCAAC,uHAEPx4B,IAAMrD,IAAN,UAAasD,EAAb,0CAA8D,CAAEC,QAAS,CAAC,+BAA4B5D,MAF/F,OAExB8D,EAFwB,OAG9By1B,EAAwBz1B,EAASC,MAHH,uGAMnC,IACG43B,GAAgBO,sBAAW,gCAAC,uHAEHx4B,IAAMrD,IAAN,UAAasD,EAAb,qCAAyD,CAAEC,QAAS,CAAC,+BAA4B5D,MAF9F,OAEpB8D,EAFoB,OAG1B21B,EAAoB31B,EAASC,MAHH,uGAO/B,IACG63B,GAAiBM,sBAAW,gCAAC,uHAEJx4B,IAAMrD,IAAN,UAAasD,EAAb,sCAA0D,CAAEC,QAAS,CAAC,+BAA4B5D,MAF9F,OAErB8D,EAFqB,OAG3B61B,GAAqB71B,EAASC,MAHH,uGAOhC,IACG83B,GAAoBK,sBAAW,gCAAC,uHAETx4B,IAAMrD,IAAN,UAAasD,EAAb,wCAA4D,CAAEC,QAAS,CAAC,+BAA4B5D,MAF3F,OAE1B8D,EAF0B,OAGhC+1B,GAAuB/1B,EAASC,MAHA,uGAMnC,IACG+3B,GAAsBI,sBAAW,gCAAC,8GACbx4B,IAAMrD,IAAN,UAAasD,EAAb,kDAAsE,CAAEC,QAAS,CAAC,+BAA4B5D,MADjG,OAC9B8D,EAD8B,OAEpCs2B,GAA8Bt2B,EAASC,MAFH,2CAGrC,IAOKi4B,GAAY,WAChBt4B,IACCrD,IADD,UACQsD,EADR,kDAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACHi2B,GAAaj2B,EAASC,KACzB,IACAC,OAAM,SAACb,GAEP,GACJ,EAEKgB,GAAgB,SAAAC,GAClB,IAAIC,EAAQ,IAAIC,KACZC,EAAYH,EAAII,MAAM,KACtBC,EAAa,IAAIH,MAAMC,EAAU,GAAIA,EAAU,GAAK,GAAIA,EAAU,IAClEG,EAAY,IAAIJ,KAAKG,GACrBE,EAAUN,EAAMO,cAAgBF,EAAUE,cAC1CC,EAAIR,EAAMS,WAAaJ,EAAUI,WAIjC,OAHID,EAAI,GAAY,IAANA,GAAWR,EAAMU,UAAYL,EAAUK,YAC7CJ,IAEQ,IAAZA,EACWE,EAAI,YAERF,CAChB,EASH,SAAS+4B,GAAoBD,GACzB/5B,IACCrD,IADD,UACQsD,EADR,wDAC+D85B,GAC3D,CAAE75B,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACHm2B,GAAUn2B,EAASC,KACtB,IACAC,OAAM,SAACb,GAEP,GACJ,CA8BD,IAiBM8qB,GAA0B,SAAC5Y,GACP,UAAlBA,EAAEC,OAAOhQ,MACTonB,GAAe,GACU,aAAlBrX,EAAEC,OAAOhQ,OAChBonB,GAAe,EAEtB,EAiBKyP,GAAyB,SAAA9mB,GAM3B,GALAmjB,EAAY,2BAAMD,GAAN,mBAAmBljB,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,SAErC,UAAhB+P,EAAEC,OAAOhP,MAAmC,WAAjB+O,EAAEC,OAAOhQ,OACnCi1B,IAAgB,GAED,cAAhBllB,EAAEC,OAAOhP,MAAuC,KAAjB+O,EAAEC,OAAOhQ,MAAW,CAClD,IAAMgB,EAAO0nB,GAAa3Y,EAAEC,OAAOhQ,OACnCkzB,EAAY,2BAAMD,GAAN,mBAAmBljB,EAAEC,OAAOhP,KAAOA,IAClD,CACD,GAAmB,aAAhB+O,EAAEC,OAAOhP,MAAsC,KAAjB+O,EAAEC,OAAOhQ,MAAW,CACjD,IAAMgB,EAAO0nB,GAAa3Y,EAAEC,OAAOhQ,OACnCkzB,EAAY,2BAAMD,GAAN,mBAAmBljB,EAAEC,OAAOhP,KAAOA,IAClD,CACD,GAAmB,eAAhB+O,EAAEC,OAAOhP,MAAwC,KAAjB+O,EAAEC,OAAOhQ,MAAW,CACnD,IAAMgB,EAAO0nB,GAAa3Y,EAAEC,OAAOhQ,OACnCkzB,EAAY,2BAAMD,GAAN,mBAAmBljB,EAAEC,OAAOhP,KAAOA,IAClD,CACD,GAAmB,mBAAhB+O,EAAEC,OAAOhP,MAA4C,KAAjB+O,EAAEC,OAAOhQ,MAAW,CAAC,IACzCu7B,EADwC,iDACvD,qGACUC,EAAezrB,EAAEC,OAAOhQ,MADlC,SAE2B5B,IAAMmT,KAAN,UAAclT,EAAd,iCAAsDm9B,EACrE,CAAEl9B,QAAS,CAAC,+BAA4B5D,GAAS,eAAgB,gBAH7E,QAKuB,IALvB,OAKgB+D,MACRq8B,IAAqB,GACrB5rB,GAAY,2BAAMD,IAAN,IAAkB6pB,SAAU/oB,EAAEC,OAAOhQ,SACjDg7B,IAAsB,KAEtBF,IAAqB,GACrBE,IAAsB,IAX9B,2CADuD,qDAevDO,GACC,CAER,EAqCKrE,GAAkB,SAAC9D,GACrB,IAAM+D,EAAe7C,GAAoBz0B,MAAK,SAAAC,GAAG,OAAIA,EAAIuB,IAAM+xB,CAAd,IACjD,OAAO+D,EAAeA,EAAap6B,QAAU,EAChD,EACKq6B,GAA6B,SAAArnB,GAC/BujB,EAAY,2BAAMD,GAAN,mBAAmBtjB,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,QAC3D,EAEKwT,GAAW,WACb,IAAI9G,EAAI,eAAQF,IA0BhB,OAzBIE,EAAKnL,UAAY0xB,EAAU1xB,UAAY,GAAK,yBAC5CmL,EAAK9M,eAAiBqzB,EAAUrzB,eAAiB,GAAK,gCAGtD8M,EAAK+a,SAAWwL,EAAUxL,SAAW,GAAK,0BAC1C/a,EAAKmS,MAAQoU,EAAUpU,MAAQ,GAAK,mBACpCnS,EAAK+uB,oBAAsBxI,EAAUrU,mBAAqB,GAAK,oCAC/DlS,EAAKomB,YAAcG,EAAUH,YAAc,GAAK,yBAChDpmB,EAAK3B,QAAUkoB,EAAUloB,QAAU,GAAK,uBACxC2B,EAAKgb,YAAcuL,EAAUvL,YAAc,GAAK,6BAChDhb,EAAKwkB,UAAY+B,EAAU/B,UAAY,GAAK,uBAC5CxkB,EAAKskB,QAAUiC,EAAUjC,QAAU,GAAK,qBACxCtkB,EAAKukB,SAAWgC,EAAUhC,SAAW,GAAK,4BAE1CvkB,EAAKqtB,cAAgB9qB,GAAU8qB,cAAgB,GAAK,4BACpDrtB,EAAK+sB,iBAAmBxqB,GAAUwqB,iBAAmB,GAAK,gCAC1D/sB,EAAKgtB,mBAAqBzqB,GAAUyqB,mBAAqB,GAAK,kCAC9DhtB,EAAKitB,oBAAsB1qB,GAAU0qB,oBAAsB,GAAK,0CAChEjtB,EAAKotB,WAAa7qB,GAAU6qB,WAAa,GAAK,yBAC9CptB,EAAK8sB,uBAAyBvqB,GAAUuqB,uBAAyB,GAAK,sCACtE9sB,EAAK4sB,aAAerqB,GAAUqqB,aAAe,GAAK,gCAClD5sB,EAAKkS,mBAAqB3P,GAAU2P,mBAAqB,GAAK,oCAC9DlS,EAAKosB,SAAW7pB,GAAU6pB,SAAW,GAAK,yBAEtCrsB,GAAU,eAAKC,IAChB0E,OAAOC,OAAO3E,GAAM4E,OAAM,SAAAtK,GAAC,MAAS,IAALA,CAAJ,GACrC,EAEK8kB,GAAY,iDAAG,WAAO/b,GAAP,gGACjBA,EAAEoB,iBACI8nB,EAAWnF,EAAQj0B,MAAK,SAACmH,GAAD,OAAMA,EAAEjK,UAAUk2B,EAAUpU,KAA5B,IAC9BoU,EAAUpU,MAAMoa,EAAS53B,IACrBmS,KAJa,wBAKT8jB,EAAgB,GAEC9D,GAAYA,EAAS3nB,OAAO,GAAK2nB,EAAS1yB,KAAI,SAACkG,GAEhE,IAAMuwB,EAAc,CACpBxsB,QAAS,CACLgmB,KAAM,CACF/pB,EAAE+D,UAGVglB,aAAc,CACVhwB,KAAM,QACNC,MAAOgH,EAAEojB,OAEb7oB,UAAWyF,EAAEzF,UACbi2B,SAAUxwB,EAAEzF,UAAY,IAAMyF,EAAEwgB,WAAa,IAAMxgB,EAAEygB,SACrD2L,eAAgBpsB,EAAEosB,eAClB5xB,QAASwF,EAAEygB,SACXiJ,UAAW1pB,EAAEwgB,YAGjB8P,EAAgBvL,KAAKwL,EACpB,IA3BY,SA6BHtY,EAAc,CAChBpC,QAAQ,EACR9R,QAAS,CACL,CACI,KAAQkoB,EAAUloB,QAClB,UAAakoB,EAAU/B,UACvB,SAAY+B,EAAUhC,SACtB,KAAQ,CACJgC,EAAUwE,UAEd,mBAAsB,EACtB,WAAc,GACd,QAAWxE,EAAUjC,UAG7BlB,QAASwH,EACTvH,aAAc,GACdluB,YAAaoxB,EAAUn0B,IACvBmxB,UAAU,EACVC,iBAAkB,KAClB3uB,UAAW0xB,EAAU1xB,UACrBqxB,SAAUK,EAAUL,SACpB/T,MAAMoU,EAAUpU,MAChBlf,WAAY,CACR,CACI,WAAc,EACd,KAAQ,iBACR,MAASszB,EAAUrzB,iBAG3B8wB,UAAWuC,EAAUzL,WACrBqL,gBAAiBI,EAAUJ,gBAC3BrxB,QAASyxB,EAAUxL,SACnBqL,YAAaG,EAAUH,YACvBC,mBAAoBE,EAAUF,mBAC9BnU,mBAAoBqU,EAAUrU,mBAC9BgK,uBAAiD,UAAzBqK,EAAUpxB,YAClC2uB,UAAWyC,EAAUzC,WAEnBpG,EAAQ,CACV,KAAQ,QACR,MAAS6I,EAAUvL,aAEnBuL,EAAUE,QACJA,EAAQ,CACV,KAAQ,QACR,MAASF,EAAUE,OAEvBlU,EAAY8Q,aAAahE,KAAKoH,IAE9BF,EAAUD,iBACJA,EAAiB,CACnB,KAAQ,WACR,MAASC,EAAUD,gBAEvB/T,EAAY8Q,aAAahE,KAAKiH,IAElC/T,EAAY8Q,aAAahE,KAAK3B,GAC9BnL,EAAY5d,GAAKD,EACjBg4B,GAAWvJ,OAAO5Q,EAClBma,GAAWsC,cAAczsB,GAzFhB,UA0Fc7Q,IAAMolB,IAAN,UAAanlB,EAAb,uBAAmCiD,EAAWD,IAAM+3B,GAAY,CAAE96B,QAAS,CAAC,+BAA4B5D,MA1FtH,eA2FT8W,IAAMxT,QAAQ,8BACdkY,GAAQ6V,KAAK,KA5FJ,kDA8FN,KAAMvtB,UAAY,KAAMA,SAASC,OAC5BmT,EAAe,KAAMpT,SAASC,MAA+C,KAAvC,KAAMD,SAASC,KAAKoT,SAASC,QAAe,KAAMtT,SAASC,KAAKoT,SAASC,QAAW,yCAC9HN,IAAM3T,MAAM+T,IAhGP,0DAAH,sDAsGZ8W,GAAa,SAAC1oB,GAEhB,OADeA,EAAMgpB,QAAQ,WAAY,GAE5C,EAEKyN,GAAgB,WACdr4B,IACKrD,IADL,UACYsD,EADZ,uCAEQ,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEHs3B,GAAct3B,EAASC,KAC1B,IACAC,OAAM,SAACb,GAEP,GACZ,EAEKqgB,GAAgB,WACd9f,IACCrD,IADD,UACQsD,EADR,2CAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEHyd,GAAkBzd,EAASC,KAC9B,IACAC,OAAM,SAACb,GAEP,GACR,EAEKo9B,GAAW,WACb78B,IACCrD,IADD,UACQsD,EADR,4CAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEH+L,GAAa/L,EAASC,KACzB,IACAC,OAAM,SAACb,GAEP,GACJ,EAEKogB,GAAmB,WACrB7f,IACCrD,IADD,UACQsD,EADR,8CAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEHud,GAAiBvd,EAASC,KAC7B,IACAC,OAAM,SAACb,GAEP,GACJ,EAEKq9B,GAAU,WACZ98B,IACCrD,IADD,UACQsD,EADR,qCAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEHgU,GAAYhU,EAASC,KACxB,IACAC,OAAM,SAACb,GAEP,GACJ,EAEKmgB,GAAI,WACN5f,IACCrD,IADD,UACQsD,EADR,wCAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEHqd,GAAMrd,EAASC,KAClB,IACAC,OAAM,SAACb,GAEP,GACJ,EAEKwgB,GAAiB,WACnBjgB,IACCrD,IADD,UACQsD,EADR,4CAEI,CAAEC,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GAEH8d,GAAmB9d,EAASC,KAC/B,IACAC,OAAM,SAACb,GAEP,GACJ,EACKiS,GAAoB,SAAAC,GACtBb,GAAY,2BAAMD,IAAN,mBAAmBc,EAAEC,OAAOhP,KAAO+O,EAAEC,OAAOhQ,SACpC,iBAAjB+P,EAAEC,OAAOhP,OACY,OAAjB+O,EAAEC,OAAOhQ,MACR06B,IAAc,GAEdA,IAAc,IAGF,sBAAjB3qB,EAAEC,OAAOhP,OACR0J,QAAQC,IAAIoF,EAAEC,OAAOhQ,OACD,OAAjB+P,EAAEC,OAAOhQ,MACR06B,IAAc,GAEdA,IAAc,GAGzB,EAMK7R,GAAsB,SAAC9Y,EAAG+Y,GAGxBoK,EAAa,2BAAID,GAAL,mBAAkBnK,EAAY/Y,EAAEgZ,MAAM,EAFxC,MAGjB,EAEK4S,GAAgB,SAAA5rB,GACfA,EAAEC,OAAOe,QACR6pB,IAAe,GAEfA,IAAe,EAEtB,EAGD,OACI,uCACI,eAAC,IAAD,CAAgBnJ,UAAW,IAAMC,iBAAe,IAChD,eAAC,KAAD,CAAMnrB,UAAW0D,GAAQ3M,WAAzB,SACI,gBAAC,KAAD,WACA,eAAC,IAAD,CACI2D,GAAI,CACAC,SAAU,mBACVC,MAAO,CAAEG,WAAYA,IAH7B,SAMQ,eAACiB,GAAA,EAAD,CACIJ,QAAQ,YACRrE,MAAM,UACNyI,UAAU,kBACVnE,MAAO,CAACC,gBAAgB,UAAUG,WAAW,UAC7CyF,UAAW,eAAC,KAAD,IALf,SAOI,uBAAM7F,MAAO,CAAE8F,cAAe,aAAcpK,MAAM,QAAlD,uBAGR,wBACA,wBACA,sBAAKyI,UAAU,sBAAf,SACI,gBAACqxB,GAAA,EAAD,WACI,uBAAKrxB,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAcnE,MAAO,CAACC,gBAAgB,UAAUvE,MAAM,OAAO0E,WAAW,SAAWqF,aAAa,UAA/G,SACI,qBAAItB,UAAU,aAAanE,MAAO,CAACtE,MAAM,QAAzC,qCAGJ,sBAAKyI,UAAU,YAAf,SACI,uBAAKA,UAAU,aAAf,UACI,uBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,CAAO4J,IAAI,qBAAX,oCACA,eAAC3J,GAAA,EAAD,CACIlK,UAAU,eACVxG,KAAK,OACLiB,KAAK,qBACLK,GAAG,qBACHrB,MAAOizB,EAAUrU,mBACjBjO,SAAUkmB,GACVz0B,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,YAGxB,KAA9B2E,GAAOivB,oBACP,uBAAMl1B,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAOivB,sBACpC,QAIZ,sBAAKl1B,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,CAAO4J,IAAI,YAAX,+BACA,wBACI7T,UAAU,eACVxG,KAAK,OACLiB,KAAK,iBACLK,GAAG,iBACHrB,MAAOizB,EAAUrzB,eACjB+Q,SAAUkmB,GACVz0B,MAAO,CAACsO,OAAQ,oBAAoB7I,aAAa,UACjDqJ,SAAqC,WAA3BglB,GAAchE,aAEH,KAAzB1lB,GAAO5M,eACP,uBAAM2G,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAO5M,iBACpC,GACsB,KAAzB4M,GAAO5M,eACR,uBAAM2G,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAO5M,iBACpC,IACiB,IAApBq2B,GACG,uBAAM1vB,UAAW0D,GAAQpM,MAAzB,SAAiC,kCACjC,IACkB,IAArBk9B,GACG,uBAAMx0B,UAAW0D,GAAQjM,QAAzB,SAAmC,2BACpC,QAGX,sBAAKuI,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,CAAO4J,IAAI,YAAX,0BACA,wBACI7T,UAAU,eACVxG,KAAK,OACLiB,KAAK,YACLK,GAAG,YACH6P,SAAS,OACTlR,MAAO63B,KAAK+D,MAAsB,QAAhB/D,KAAKgE,UAEvBz5B,MAAO,CAACsO,OAAQ,oBAAoB7I,aAAa,oBAQjE,uBAAKtB,UAAU,MAAf,UACI,sBAAKA,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,CAAO4J,IAAI,YAAX,2BACA,eAAC3J,GAAA,EAAD,CACIlK,UAAU,eACVxG,KAAK,OACLiB,KAAK,YACLK,GAAG,YACHrB,MAAOizB,EAAU1xB,UACjBoP,SAAUkmB,GACVz0B,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,YAGjC,KAApB2E,GAAOjL,UACR,uBAAMgF,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAOjL,YACpC,QAIZ,sBAAKgF,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,0BACA,eAACC,GAAA,EAAD,CACIlK,UAAU,eACVxG,KAAK,OACLiB,KAAK,aACLK,GAAG,aACHrB,MAAOizB,EAAUzL,WACjB7W,SAAUkmB,GACVz0B,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,iBAM9D,sBAAKtB,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,0BACA,wBACIjK,UAAU,eACVxG,KAAK,OACLiB,KAAK,WACLK,GAAG,WACHrB,MAAOizB,EAAUxL,SACjB9W,SAAUkmB,GACVz0B,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,YAGnC,KAAnB2E,GAAOib,SACP,uBAAMlhB,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAOib,WACpC,WAKhB,uBAAKlhB,UAAU,MAAf,UACI,sBAAKA,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,oBACA,0BACQjK,UAAU,eACVvF,KAAK,QACLK,GAAG,QACHsP,SAAUkmB,GACV72B,MAAOizB,EAAUpU,MACjBzc,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UAN1D,UAUQ,yBAAQ7H,MAAO,GAAf,oBACC8zB,EAAQhzB,KAAI,SAACY,EAAQ4R,GAAT,OACb,yBAAwBtT,MAAO0B,EAAO3E,QAAtC,SAAgD2E,EAAO3E,SAA1C2E,EAAOL,GADP,OAIA,KAAhBmL,GAAOqS,MACZ,uBAAMtY,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAOqS,QACpC,QAGZ,sBAAKtY,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,4BACA,sBAAKjK,UAAU,QAAf,SACI,mCACI,wBACIxG,KAAK,QACLC,MAAM,SACNgB,KAAK,cACLioB,gBAAc,EAEdtY,SAAU,SAACZ,GAAD,OAAO4Y,GAAwB5Y,EAA/B,EACV3N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,YAR1D,eAYJ,sBAAKtB,UAAU,QAAf,SACI,mCACI,wBACIxG,KAAK,QACLC,MAAM,YACNgB,KAAK,cAEL2P,SAAU,SAACZ,GAAD,OAAO4Y,GAAwB5Y,EAA/B,EACV3N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,YAP1D,uBAcZ,sBAAKtB,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,mBACA,wBACIjK,UAAU,eACVxG,KAAK,OACLiB,KAAK,MACLK,GAAG,MACHuP,IAAK7R,EACLiB,MAAOizB,EAAUn0B,IACjB6R,SApmB5B,SAACZ,GACrB,GAAIA,EAAEC,OAAOhQ,MAAO,CAChB,IAAMjB,EAAQ,IAAIC,KACZI,EAAY,IAAIJ,KAAK+Q,EAAEC,OAAOhQ,OAChCX,EAAUN,EAAMO,cAAgBF,EAAUE,cACxCC,EAAIR,EAAMS,WAAaJ,EAAUI,YACnCD,EAAI,GAAY,IAANA,GAAWR,EAAMU,UAAYL,EAAUK,YACjDJ,IAEJ4zB,EAAUrxB,IAAIvC,CAEjB,MACG6zB,EAAa,2BAAID,GAAL,IAAgBrxB,IAAM,MAEtCsxB,EAAa,2BAAID,GAAL,IAAgBn0B,IAAKiR,EAAEC,OAAOhQ,QAE7C,EAqlBmDoC,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,iBAO9D,sBAAKtB,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,kBACA,wBACIjK,UAAU,eACVxG,KAAK,SACLiB,KAAK,MACLK,GAAG,MACHrB,MAAOizB,EAAUrxB,IACjBsP,SAAUiW,EACVxW,SA9lB5B,SAACZ,GACrB,IAAKoX,GAAepX,EAAEC,OAAOhQ,MAAO,CAEhC,IAAMkpB,EAAc,IAAIlqB,KACxBkqB,EAAYC,QAAQ,IACpBD,EAAYE,SAAS,GACrB,IACMC,EADStnB,GAAOmnB,EAAYI,eACZC,KAAuB,EAAlBxZ,EAAEC,OAAOhQ,MAAa,SAEjDizB,EAAUn0B,IAAKiD,GAAOsnB,GAAQrnB,OAAO,aAExC,CACDkxB,EAAa,2BAAID,GAAL,IAAgBrxB,IAAKmO,EAAEC,OAAOhQ,QAC7C,EAklBmDoC,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,oBAMlE,uBAAKtB,UAAW,MAAhB,UAGQ,sBAAKA,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,6BACA,0BACIjK,UAAU,eACVvF,KAAK,kBACLK,GAAG,kBACHsP,SAAUkmB,GACV72B,MAAOizB,EAAUJ,gBACjBzwB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UASI,yBAAQ7H,MAAO,GAAf,oBACCg0B,EAAqBlzB,KAAI,SAACi3B,EAAqBzkB,GAAtB,OACtB,yBAAqCtT,MAAO+3B,EAAoB12B,GAAhE,SAAqE02B,EAAoBh7B,SAA5Eg7B,EAAoB12B,GADX,YAQtC,sBAAKkF,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,kCACA,0BACIjK,UAAU,eACVvF,KAAK,qBACLK,GAAG,qBACHsP,SAAUkmB,GACV72B,MAAOizB,EAAUF,mBACjB3wB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UASI,yBAAQ7H,MAAO,GAAf,oBACCo0B,GAAkBtzB,KAAI,SAACk3B,EAAkB1kB,GAAnB,OACnB,yBAAkCtT,MAAOg4B,EAAiB32B,GAA1D,SAA+D22B,EAAiBj7B,SAAnEi7B,EAAiB32B,GADX,OAIG,KAA7BmL,GAAOumB,mBACR,uBAAMxsB,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAOumB,qBACpC,QAIhB,sBAAKxsB,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,gCACA,0BACIjK,UAAU,eACVvF,KAAK,cACLK,GAAG,cACHsP,SAAUkmB,GACV72B,MAAOizB,EAAUH,YACjB1wB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UASI,yBAAQ7H,MAAO,GAAf,oBACCk0B,EAAiBpzB,KAAI,SAACm3B,EAAiB3kB,GAAlB,OAClB,yBAAiCtT,MAAOi4B,EAAgB52B,GAAxD,SAA6D42B,EAAgBl7B,SAAhEk7B,EAAgB52B,GADX,OAIH,KAAtBmL,GAAOsmB,YACR,uBAAMvsB,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAOsmB,cACpC,QAGZ,sBAAKvsB,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,CAAO4J,IAAI,YAAX,8CACA,wBACI7T,UAAU,eACVxG,KAAK,OACLiB,KAAK,MACLK,GAAG,MACHrB,MAAOizB,EAAUzC,UAEjBpuB,MAAO,CAACsO,OAAQ,oBAAoB7I,aAAa,4BAW7E,uBAAKtB,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAcnE,MAAO,CAACC,gBAAgB,UAAUvE,MAAM,OAAO0E,WAAW,SAAWqF,aAAa,UAA/G,SACI,qBAAItB,UAAU,aAAanE,MAAO,CAACtE,MAAM,QAAzC,+BAGJ,uBAAKyI,UAAU,YAAf,UACI,uBAAKA,UAAW,MAAhB,UACI,sBAAKA,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,6BACA,eAAC,KAAD,CACIgZ,eAAgB,CAACrsB,MAAM,OAAOuT,OAAQ,qBACtC+Y,WAAY,CAACtsB,MAAM,OAAO0K,aAAa,OACvC6hB,QAAS,KACTC,YAAY,kBACZuO,UAAW,EACXl3B,KAAK,cACLK,GAAG,cACHrB,MAAOizB,EAAUvL,YACjB/W,SAAU,SAACZ,GAAK8Y,GAAsB9Y,EAAE,cAAe,IAIpC,KAAtBvD,GAAOkb,YACJ,uBAAMnhB,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAOkb,cACpC,QAIhB,sBAAKnhB,UAAU,sBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,gCACA,eAAC,KAAD,CACIgZ,eAAgB,CAACrsB,MAAM,OAAOuT,OAAQ,qBACtC+Y,WAAY,CAACtsB,MAAM,OAAO0K,aAAa,OACvC6hB,QAAS,KACTC,YAAY,kBACZ3pB,MAAOizB,EAAUD,eACjBriB,SAAU,SAACZ,GAAK8Y,GAAsB9Y,EAAE,iBAAkB,SAOtE,sBAAKxJ,UAAU,sBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,oBACA,wBACIjK,UAAU,eACVxG,KAAK,QACLiB,KAAK,QACLK,GAAG,QACHsP,SAAUkmB,GACV72B,MAAOizB,EAAUE,MACjB/wB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,oBAQlE,uBAAKtB,UAAU,MAAf,UACI,sBAAKA,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,wBACA,0BACIjK,UAAU,eACVxG,KAAK,OACLiB,KAAK,YACLK,GAAG,YACHe,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UAClD7H,MAAOizB,EAAU/B,UACjBvgB,SAj1B7B,SAAAZ,GACf,IAAMooB,EAAcpoB,EAAEC,OAAOhQ,MAEzBo4B,GAAoBD,GACpBjF,EAAa,2BAAKD,GAAN,IAAiB/B,UAAWiH,IAC/C,EAq0B2C,UAUI,yBAAQn4B,MAAO,GAAf,oBACCw0B,GAAU1zB,KAAI,SAACd,EAAOsT,GAAR,OACX,yBAAoBtT,MAAOA,EAAMqB,GAAjC,SACKrB,EAAMgB,MADEsS,EADF,OAME,KAApB9G,GAAO0kB,UACJ,uBAAM3qB,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAO0kB,YACpC,QAIhB,sBAAK3qB,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,sBACA,0BACIjK,UAAU,eACVxG,KAAK,OACLiB,KAAK,UACLK,GAAG,UACHrB,MAAOizB,EAAUjC,QACjB5uB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UAClD8I,SAt1B1B,SAAAZ,GACd,IAAMihB,EAAUjhB,EAAEC,OAAOhQ,MACzBkzB,EAAa,2BAAKD,GAAN,IAAiBjC,QAASjhB,EAAEC,OAAOhQ,SAC/C5B,IACCrD,IADD,UACQsD,EADR,wDAC+D2yB,GAC3D,CAAE1yB,QAAS,CAAC,+BAA4B5D,MAE3C6D,MAAK,SAACC,GACHq2B,GAAar2B,EAASC,KACzB,IACAC,OAAM,SAACb,GAEP,GACR,EAk0B2C,UAUI,yBAAQmC,MAAM,GAAd,oBACC00B,GAAO5zB,KAAI,SAACd,EAAOsT,GAAR,OACR,yBAAoBtT,MAAOA,EAAMqB,GAAjC,SACKrB,EAAMgB,MADEsS,EADL,OAMG,KAAlB9G,GAAOwkB,QACJ,uBAAMzqB,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAOwkB,UACpC,QAIhB,sBAAKzqB,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,sCACA,0BACIjK,UAAU,eACVxG,KAAK,OACLiB,KAAK,WACLK,GAAG,WACHrB,MAAOizB,EAAUhC,SACjB7uB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UAClD8I,SAAUkmB,GAPd,UAUI,yBAAQ72B,MAAM,GAAd,oBACC40B,GAAU9zB,KAAI,SAACd,EAAOsT,GAAR,OACX,yBAAoBtT,MAAOA,EAAMqB,GAAjC,SACKrB,EAAMgB,MADEsS,EADF,OAMC,KAAnB9G,GAAOykB,SACJ,uBAAM1qB,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAOykB,WACpC,WAKpB,uBAAK1qB,UAAW,MAAhB,UACI,sBAAKA,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,8BACA,wBACIjK,UAAU,eACVxG,KAAK,OACLiB,KAAK,UACLK,GAAG,UACHrB,MAAOizB,EAAUloB,QACjB4F,SAAUkmB,GACVz0B,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,YAIpC,KAAlB2E,GAAOzB,QACH,uBAAMxE,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAOzB,UACpC,QAIhB,sBAAKxE,UAAU,uBAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,uBACA,wBACIjK,UAAU,eACVxG,KAAK,OACLiB,KAAK,WACLK,GAAG,WACHrB,MAAOizB,EAAUwE,SACjB9mB,SAAUkmB,GACVz0B,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,0BAW1E,uBAAKtB,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAcnE,MAAO,CAACC,gBAAgB,UAAUvE,MAAM,OAAO0E,WAAW,SAAWqF,aAAa,UAA/G,SACI,qBAAItB,UAAU,aAAanE,MAAO,CAACtE,MAAM,QAAzC,0CAEJ,uBAAKyI,UAAU,YAAf,UACI,uBAAKA,UAAU,MAAf,UAEQitB,GAAYA,EAAS3nB,OAAS,GAC1B,sBAAKtF,UAAU,sBAAf,SACI,yBAAOnE,MAAO,CAAEjF,MAAO,QAAUoJ,UAAU,OAA3C,UACI,wBAAOA,UAAU,OAAjB,SACA,gCACI,oDACA,uCACA,wCACA,0CACA,+CAGJ,wBAAOA,UAAU,OAAjB,SACCitB,EAAS1yB,KAAI,SAAC+W,EAAMvE,GACjB,OACI,sBAAqB/M,UAAU,OAA/B,UACI,8BACI2wB,GAAgBrf,EAAKub,kBAEzB,8BACIvb,EAAKtW,UAAY,IAAOsW,EAAK2P,WAAa,IAAM3P,EAAK4P,WAEzD,8BACQ5P,EAAKuS,QAEb,8BACQvS,EAAK9M,UAEb,gCACI,yBAAQhL,KAAK,SACLwG,UAAU,2CACV0F,QAAS,kBA10B1D,SAACosB,EAAU/kB,GAClCggB,EAAa+E,GACbxE,GAAgB,GAChBL,EAAS8E,OAAOhlB,EAAO,EAC1B,CAs0B0FilB,CAAmB1gB,EAAMvE,EAA/B,EAFjB,SAII,eAAC,KAAD,CAAiBjK,KAAK,WAL9B,WAQI,yBACItJ,KAAK,SACLwG,UAAU,kCACV0F,QAAS,SAAC8D,GAAD,OAt1BpD,SAACuD,GAC1BkgB,EAAS8E,OAAOhlB,EAAO,GACvBmgB,EAAY,aAAID,GACnB,CAm1BuFgF,CAAqBllB,EAA5B,EAHb,SAKI,eAAC,KAAD,CAAiBjK,KAAK,iBA1BzBwO,EAAKvE,MA+BrB,WAMjB,sBAAK/M,UAAU,sBAAf,SAEQqtB,GACI,sBAAKrtB,UAAU,OAAf,SACI,uBAAKA,UAAU,YAAf,UACI,uBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,CAAO4J,IAAI,mBAAX,iCACA,0BACI7T,UAAU,eACVvF,KAAK,iBACLK,GAAG,iBACHrB,MAAOqzB,EAAUD,eACjBhxB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UAClD8I,SAAUymB,GANd,UASI,yBAAQp3B,MAAO,GAAf,oBACCs0B,GAAoBxzB,KAAI,SAACu3B,EAAU/kB,GAAX,OACrB,yBAA0BtT,MAAOq4B,EAASh3B,GAA1C,SAA+Cg3B,EAASt7B,SAA3Cs7B,EAASh3B,GADD,OAIH,KAAzBmL,GAAO4mB,eACR,uBAAM7sB,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAO4mB,iBACpC,QAIZ,sBAAK7sB,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,CAAO4J,IAAI,aAAX,0BACA,wBACI7T,UAAU,eACVxG,KAAK,OACLiB,KAAK,YACLhB,MAAOqzB,EAAU9xB,UACjBF,GAAG,YACHe,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UAClD8I,SAAUymB,KAGM,KAApB5qB,GAAOjL,UACP,uBAAMgF,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAOjL,YACpC,QAIZ,sBAAKgF,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,0BACA,wBACIjK,UAAU,eACVxG,KAAK,OACLiB,KAAK,aACLK,GAAG,aACHrB,MAAOqzB,EAAU7L,WACjBplB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UAClD8I,SAAUymB,UAOtB,sBAAK7wB,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,0BACA,wBACIjK,UAAU,eACVxG,KAAK,OACLiB,KAAK,WACLK,GAAG,WACHrB,MAAOqzB,EAAU5L,SACjBrlB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UAClD8I,SAAUymB,KAGK,KAAnB5qB,GAAOib,SACP,uBAAMlhB,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAOib,WACpC,WAKhB,uBAAKlhB,UAAU,MAAf,UACI,sBAAKA,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,CAAO4J,IAAI,qBAAX,0BACA,eAAC,KAAD,CACIoP,eAAgB,CAACrsB,MAAM,OAAOuT,OAAQ,qBACtC+Y,WAAY,CAACtsB,MAAM,OAAO0K,aAAa,OACvC6hB,QAAS,KACTC,YAAY,kBACZ3oB,KAAK,QACLhB,MAAOqzB,EAAUjJ,MACjB/oB,GAAG,QAEHsP,SAAU,SAACZ,IAvrB5D,SAACA,EAAG+Y,GAEnBwK,EAAa,2BAAID,GAAL,mBAAkBvK,EAAY/Y,EAAEgZ,MAAM,EADxC,MAEjB,CAorBuF0P,CAAiB1oB,EAAEgZ,MAAM,EAAG,IAAI,QAAS,SAMrE,sBAAKxiB,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,CAAO4J,IAAI,eAAX,mBACA,wBACI7T,UAAU,eACVxG,KAAK,OACLiB,KAAK,QACLK,GAAG,QACHrB,MAAOqzB,EAAUF,MACjB/wB,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UAClD8I,SAAUymB,UAOtB,sBAAK7wB,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACI,eAAC,KAAD,CAAO4J,IAAI,iBAAX,qBACA,wBACI7T,UAAU,eACVxG,KAAK,OACLiB,KAAK,UACLK,GAAG,UACHrB,MAAOqzB,EAAUtoB,QACjB3I,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UAClD8I,SAAUymB,aAQ1B,uBAAK7wB,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,SACI,eAAC,KAAD,CACIxG,KAAK,SACLoC,QAAQ,YACRrE,MAAM,UACNyI,UAAW0D,GAAQvM,OACnBuO,QA3/BrC,SAAC8D,IATN,WACtB,IAAIrD,EAAI,eAAQF,IAKhB,OAJIE,EAAKnL,UAAY8xB,EAAU9xB,UAAY,GAAK,yBAC5CmL,EAAK+a,SAAW4L,EAAU5L,SAAW,GAAK,0BAC1C/a,EAAK0mB,eAAiBC,EAAUD,eAAiB,GAAK,iCAClD3mB,GAAU,eAAKC,IAChB0E,OAAOC,OAAO3E,GAAM4E,OAAM,SAAAtK,GAAC,MAAS,IAALA,CAAJ,GACrC,EAGM0xB,IACCjF,EAAY,GAAD,oBAAKD,GAAL,CAAeH,IAGjC,EAi/B+D,mBAWJ,sBAAK9sB,UAAU,QAAf,SACI,eAAC,KAAD,CACIxG,KAAK,SACLoC,QAAQ,YACRrE,MAAM,YACNyI,UAAW0D,GAAQvM,OACnBuO,QAvhC/B,WACjC4nB,GAAgB,EACnB,EAghC+D,mCAkBhC,sBAAKttB,UAAU,QACX,eAAC,KAAD,CACIxG,KAAK,SACLoC,QAAQ,YACRrE,MAAM,UACNyI,UAAW0D,GAAQvM,OACnBuK,UAAW,eAAC,KAAD,IACXgE,QA/iCd,WACtB4nB,GAAgB,EACnB,EA8iCuCzxB,MAAO,CAACC,gBAAgB,UAAUG,WAAW,UAPjD,8CAeZ,uBAAK+D,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAcnE,MAAO,CAACC,gBAAgB,UAAUvE,MAAM,OAAO0E,WAAW,SAAUqF,aAAa,UAA9G,SACI,qBAAItB,UAAU,aAAcnE,MAAO,CAACtE,MAAM,QAA1C,8BAGJ,uBAAKyI,UAAU,YAAf,UACA,uBAAKA,UAAU,MAAf,UAEA,sBAAKA,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,CAAO4J,IAAI,WAAX,8BACA,eAAC3J,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,WACLK,GAAG,WACHsP,SAAUb,GACV9P,MAAOiP,GAAU6pB,SACjB12B,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UAClDqJ,UAAQ,IAGQ,KAAnB1E,GAAOssB,SACR,uBAAMvyB,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAOssB,WACpC,QAGR,sBAAKvyB,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,CAAO4J,IAAI,qBAAX,mCACA,eAAC3J,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,qBACLK,GAAG,qBACH2P,IAAKiiB,EAAUrU,mBACfhO,IAAM7O,GAAO,IAAI/C,MAAQgD,OAAO,cAChC2O,SAAUb,GACV9P,MAAOiP,GAAU2P,mBACjBxc,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,YAIxB,KAA7B2E,GAAOoS,mBACR,uBAAMrY,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAOoS,qBACpC,WAIZ,uBAAKrY,UAAU,MAAf,UACI,sBAAKA,UAAU,2BAAf,SACA,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,CAAO4J,IAAI,eAAX,iCACA,gBAAC3J,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,eACLK,GAAG,eACHsP,SAAUb,GACV9P,MAAOiP,GAAUqqB,aACjBl3B,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAUA,yBAAQ7H,MAAM,GAAd,eACCw6B,GAAW15B,KAAI,SAACd,GAAD,OACZ,yBAAuBA,MAAOA,EAAMqB,GAApC,SACKrB,EAAMjD,SADEiD,EAAMqB,GADP,OAMQ,KAAvBmL,GAAO8sB,aACJ,uBAAM/yB,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAO8sB,eACpC,QAIR,sBAAK/yB,UAAU,2BAAf,UACc,IAAbk0B,GAEO,gBAACjqB,GAAA,EAAD,WACA,eAAC,KAAD,4BACA,eAACC,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,eACLK,GAAG,eACHsP,SAAUb,GACV9P,MAAOiP,GAAUsqB,aACjBn3B,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,eAIxD,KAGN,sBAAKtB,UAAU,2BAAf,SACA,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,2CACA,gBAACC,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,yBACLK,GAAG,yBACHsP,SAAUb,GACV9P,MAAOiP,GAAUuqB,uBACjBp3B,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAUA,yBAAQ7H,MAAM,GAAd,qBACCqM,GAAUvL,KAAI,SAACd,GAAD,OACX,yBAAuBA,MAAOA,EAAMqB,GAApC,SACKrB,EAAMjD,SADEiD,EAAMqB,GADR,OAMmB,KAAjCmL,GAAOgtB,uBACJ,uBAAMjzB,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAOgtB,yBACpC,QAIR,sBAAKjzB,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,2CACA,eAACC,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,mBACLK,GAAG,mBACH2P,IAAKiiB,EAAUn0B,IACf8R,IAAK3B,GAAU2P,mBACfjO,SAAUb,GACV9P,MAAOiP,GAAUwqB,iBACjBr3B,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,YAI1B,KAA3B2E,GAAOitB,iBACJ,uBAAMlzB,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAOitB,mBACpC,QAGZ,sBAAKlzB,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,mCACA,gBAACC,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,qBACLK,GAAG,qBACHrB,MAAOiP,GAAUyqB,mBACjB/oB,SAAUb,GACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UAUI,yBAAQ7H,MAAM,GAAd,qBACKgc,GAAelb,KAAI,SAACd,GAAD,OAChB,yBAAuBA,MAAOA,EAAMqB,GAApC,SACKrB,EAAMjD,SADEiD,EAAMqB,GADH,OAME,KAA7BmL,GAAOktB,mBACJ,uBAAMnzB,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAOktB,qBACpC,QAIZ,sBAAKnzB,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,mCACA,gBAACC,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,sBACLK,GAAG,sBACHrB,MAAOiP,GAAU0qB,oBACjBv3B,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UAClD8I,SAAUb,GANd,UASI,yBAAQ9P,MAAM,GAAd,qBAEK8b,GAAchb,KAAI,SAACd,GAAD,OACf,yBAAuBA,MAAOA,EAAMqB,GAApC,SACKrB,EAAMjD,SADEiD,EAAMqB,GADJ,OAMI,KAA9BmL,GAAOmtB,oBACJ,uBAAMpzB,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAOmtB,sBACpC,QAGVN,IAAgBpG,EAAUrxB,IAAM,GAC9B,uCAEA,sBAAK2E,UAAY,2BAAjB,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,0BACA,gBAACC,GAAA,EAAD,CACI1Q,KAAO,SACPiB,KAAO,oBACPK,GAAK,oBACLrB,MAASiP,GAAU2qB,kBACnBx3B,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UAClD8I,SAAYb,GANhB,UASA,yBAAS9P,MAAQ,GAAjB,qBACCqc,GAAgBvb,KAAI,SAACd,GAAD,OACT,yBAAuBA,MAAOA,EAAMqB,GAApC,SACKrB,EAAMjD,SADEiD,EAAMqB,GADV,YAQM,OAA9B4N,GAAU2qB,mBACX,qCACA,sBAAKrzB,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,2BACA,eAACC,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,YACLK,GAAG,YACHuP,IAAK7R,EACL4R,SAAUb,GACV9P,MAAOiP,GAAU4qB,UACjBz3B,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,sBAU9D,sBAAKtB,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,2BACA,gBAACC,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,aACLK,GAAG,aACHrB,MAAOiP,GAAU6qB,WACjBnpB,SAAUb,GACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UASI,yBAAQ7H,MAAM,GAAd,qBACKuS,GAASzR,KAAI,SAACd,GAAD,OACV,yBAAuBA,MAAOA,EAAMqB,GAApC,SACKrB,EAAMjD,SADEiD,EAAMqB,GADT,OAOA,KAArBmL,GAAOstB,WACJ,uBAAMvzB,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAOstB,aACpC,QAGO,UAAlBe,GACD,sBAAKt0B,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,6BACA,gBAACC,GAAA,EAAD,CACI1Q,KAAK,SACLiB,KAAK,gBACLK,GAAG,gBACHrB,MAAOiP,GAAU8qB,cACjBppB,SAAUb,GACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UANtD,UASI,yBAAQ7H,MAAM,GAAd,qBACS4b,GAAG9a,KAAI,SAACd,GAAD,OACJ,yBAAuBA,MAAOA,EAAMqB,GAApC,SACKrB,EAAMjD,SADEiD,EAAMqB,GADf,OAMK,KAAxBmL,GAAOutB,cACJ,uBAAMxzB,UAAW0D,GAAQpM,MAAzB,SAAiC2O,GAAOutB,gBACpC,QAGR,GACJ,sBAAKxzB,UAAU,2BAAf,SAEI,uBAAKA,UAAU,mCAAf,UACI,wBACAxG,KAAK,WACLwG,UAAU,mBACVvF,KAAK,eACLK,GAAG,eACHsP,SAAUgrB,KAGV,wBACAp1B,UAAU,mBACVu1B,QAAQ,mBAFR,qCAQP7I,EAAUrxB,KAAM,IACjB,sBAAK2E,UAAU,2BAAf,SAEI,uBAAKA,UAAU,mCAAf,UACI,wBACAxG,KAAK,WACLwG,UAAU,mBACVvF,KAAK,eACLK,GAAG,eACHsP,SAAUgrB,KAEV,wBACAp1B,UAAU,mBACVu1B,QAAQ,mBAFR,sCA+BO,IAAdnB,IAED,qCACA,uBAAKp0B,UAAU,MAAf,UACI,sBAAKA,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,sCACA,eAACC,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,kBACLK,GAAG,kBACHwP,SAAU8pB,GACVhqB,SAAUb,GACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UAClD7H,MAAOiP,GAAUirB,uBAKzB,sBAAK3zB,UAAU,6BACf,sBAAKA,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,sCACA,eAACC,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,uBACLK,GAAG,uBACHwP,SAAU8pB,GACVhqB,SAAUb,GACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UAClD7H,MAAOiP,GAAUkrB,4BAKzB,sBAAK5zB,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,2CACA,eAACC,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,2BACLK,GAAG,2BACH2P,IAAKiiB,EAAUn0B,IACf8R,IAAK3B,GAAU2P,mBACfjO,SAAUb,GACV9P,MAAOiP,GAAUmrB,yBACjBh4B,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,iBAQ1D,sBAAKtB,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,wCACA,eAACC,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,yBACLK,GAAG,yBACHwP,SAAU8pB,GACVhqB,SAAUb,GACV1N,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,UAClD7H,MAAOiP,GAAUorB,8BAKzB,sBAAK9zB,UAAU,2BAAf,SACI,gBAACiK,GAAA,EAAD,WACA,eAAC,KAAD,6CACA,eAACC,GAAA,EAAD,CACI1Q,KAAK,OACLiB,KAAK,6BACLK,GAAG,6BACH2P,IAAKiiB,EAAUn0B,IACf8R,IAAK3B,GAAU2P,mBACfjO,SAAUb,GACV9P,MAAOiP,GAAUqrB,2BACjBl4B,MAAO,CAACsO,OAAQ,oBAAqB7I,aAAa,+BAgBjE8E,EAAS,eAAC4G,GAAA,EAAD,IAAc,GAExB,wBAE6B,WAA5B2iB,GAAchE,WAEX,uCACI,eAAC,KAAD,CACInyB,KAAK,SACLoC,QAAQ,YACRrE,MAAM,UACNyI,UAAW0D,GAAQvM,OACnBuK,UAAW,eAAC,KAAD,IACXgE,QAAS6f,GACT1pB,MAAO,CAACC,gBAAgB,UAAUG,WAAW,UAPjD,SASMmK,EAGE,uBAAMvK,MAAO,CAAE8F,cAAe,cAA9B,yBAFA,uBAAM9F,MAAO,CAAE8F,cAAe,cAA9B,sBAMR,eAAC,KAAD,CACI/F,QAAQ,YACRoE,UAAW0D,GAAQvM,OACnBuK,UAAW,eAAC,KAAD,IACXgE,QAvgDhB,WAChBiK,GAAQ6V,KAAK,CAAE7qB,SAAU,KAC5B,EAsgDmCkB,MAAO,CAACC,gBAAgB,WAL5B,SAOI,uBAAMD,MAAO,CAAE8F,cAAe,aAAcpK,MAAM,QAAlD,yBAGV,eAO7B,EC58Dc,SAASi+B,KACtB,OACE,eAAC,IAAD,UACE,iCACA,eAAC,IAAD,IAGE,gBAAC,IAAD,WACE,eAAC,IAAD,CAAOC,KAAK,mBAAZ,SACE,eAACC,GAAD,MAEF,eAAC,IAAD,CAAOD,KAAK,oBAAZ,SACE,eAACE,GAAD,MAEF,eAAC,IAAD,CAAOF,KAAK,kBAAZ,SACE,eAACG,GAAD,MAEF,eAAC,IAAD,CAAOH,KAAK,kBAAZ,SACE,eAACI,GAAD,MAGF,eAAC,IAAD,CAAOJ,KAAK,IAAZ,SACE,eAAC,GAAD,aAOX,CC/CD,IAYeK,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBh+B,MAAK,YAAkD,IAA/Ci+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EACT,GAEJ,E,UCVGO,GAAY,MAEHC,GAAc,CAC1B,CACC9zB,WAAY,UACZiQ,QAAS,QACTrS,OAAQ,WACRm2B,SAAU,UACVC,YAAa,UACbC,UAAW,UACXC,aAAc,OACdC,gBAAiB,QACjBC,eAAgB,QAChBC,gBAAiB,OACjBR,UAAWA,IAEZ,CACC7zB,WAAY,UACZiQ,QAAS,QACTrS,OAAQ,WACRkD,QAAS,UACTizB,SAAU,UACVC,YAAa,UACbC,UAAW,UACXC,aAAc,OACdC,gBAAiB,QACjBC,eAAgB,QAChBC,gBAAiB,OACjBR,UAAWA,IAEX,CACA7zB,WAAY,UACZiQ,QAAS,QACTrS,OAAQ,WACRo2B,YAAa,WACbD,SAAU,UACVE,UAAW,WACXC,aAAc,OACdC,gBAAiB,QACjBC,eAAgB,QAChBC,gBAAiB,OACjBvzB,QAAS,WACT+yB,UAAWA,IAEZ,CAEC7zB,WAAY,UACZiQ,QAAS,OACTrS,OAAQ,WACRm2B,SAAU,UACVC,YAAa,UACbC,UAAW,UACXC,aAAc,OACdC,gBAAiB,QACjBC,eAAgB,QAChBC,gBAAiB,OACjBvzB,QAAS,UACT+yB,UAAWA,IAEZ,CAEC7zB,WAAY,UACZiQ,QAAS,QACTrS,OAAQ,WACRo2B,YAAa,WACbD,SAAU,UACVG,aAAc,OACdD,UAAW,UACXE,gBAAiB,QACjBC,eAAgB,QAChBC,gBAAiB,OACjBvzB,QAAS,WACT+yB,UAAWA,IAGZ,CAEC7zB,WAAY,UACZiQ,QAAS,QACTrS,OAAQ,aACRo2B,YAAa,UACbD,SAAU,UACVE,UAAW,UACXC,aAAc,SACdC,gBAAiB,SACjBC,eAAgB,QAChBC,gBAAiB,OACjBvzB,QAAS,UACT+yB,UAAWA,KCrFAS,GAAeC,0BA0RbC,GAxRc,SAACjiC,GAC7B,MAAwC0C,mBAAS,CAAE+B,MAAO,OAAQy9B,MAAO,SAAzE,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA8C1/B,mBAAS,CAAE+B,MAAO,QAASy9B,MAAO,UAAhF,mBAAOG,EAAP,KAAwBC,EAAxB,KACG,EAA4C5/B,mBAAS,CAAE+B,MAAO,QAASy9B,MAAO,UAA9E,mBAAOK,EAAP,KAAuBC,EAAvB,KACA,EAA0C9/B,mBAAS,CAAE+B,MAAO,WAAYy9B,MAAO,aAA/E,mBAAOO,EAAP,KAAsBC,EAAtB,KACH,EAAkChgC,mBAAS,CAAE+B,MAAO,MAAOy9B,MAAO,QAAlE,mBAAOZ,EAAP,KAAkBqB,EAAlB,KACA,EAAwCjgC,mBAAS,WAAjD,mBAAOkgC,EAAP,KAAqBC,EAArB,KACA,EAA8CngC,mBAAS,WAAvD,mBAAOogC,EAAP,KAAwBC,EAAxB,KACA,EAAoCrgC,mBAAS,WAA7C,mBAAOsgC,EAAP,KAAmBC,EAAnB,KACA,EAAwCvgC,mBAAS,WAAjD,mBAAOwgC,EAAP,KAAqBC,EAArB,KACA,EAAkCzgC,oBAAS,GAA3C,mBAAO0gC,EAAP,KAAkBC,EAAlB,KACA,EAAoC3gC,oBAAS,GAA7C,mBAAO4gC,EAAP,KAAmBC,EAAnB,KACA,EAAoC7gC,mBAAS,CAAE+B,MAAO,QAASy9B,MAAO,UAAtE,mBAAOjiB,EAAP,KAAmBujB,EAAnB,KACA,EAAoD9gC,mBAAS,CAAC+B,MAAO,aAAcy9B,MAAO,eAA1F,mBAAOuB,EAAP,KAA2BC,GAA3B,KACSC,GAAOC,SAASC,cAAc,QACpC,GAAsCnhC,mBAAS,GAA/C,qBAAOohC,GAAP,MAAoBC,GAApB,MACA,GAAwCrhC,mBAAS,GAAjD,qBAAOshC,GAAP,MAAqBC,GAArB,MA4DIC,GAAqB,SAACz+B,GAC7Bo9B,EAAgBp9B,GACbk+B,GAAKQ,aAAa,eAAgB1+B,EACnC,EACK2+B,GAAwB,SAAC3+B,GAC7Bs9B,EAAmBt9B,GACnBk+B,GAAKQ,aAAa,oBAAqB1+B,EACxC,EACK4+B,GAAmB,SAAC5+B,GACxBw9B,EAAcx9B,GACdk+B,GAAKQ,aAAa,gBAAiB1+B,EACpC,EACK6+B,GAAqB,SAAC7+B,GAC1B09B,EAAgB19B,GAChBk+B,GAAKQ,aAAa,iBAAkB1+B,EACrC,EACK8+B,GAAuB,SAAC9+B,GAC5B68B,EAAmB78B,GACnBk+B,GAAKQ,aAAa,wBAAyB1+B,EAAKhB,MACjD,EACK+/B,GAAwB,SAAC/+B,GAC7Bk9B,EAAal9B,GACbk+B,GAAKQ,aAAa,YAAa1+B,EAAKhB,OACpC,IAAIggC,EAAOb,SAASC,cAAc,QAClCY,EAAKN,aAAa,MAAO1+B,EAAKhB,OAC9BggC,EAAKz5B,UAAYvF,EAAKhB,KACvB,EACKigC,GAAsB,SAACj/B,GACR,eAAfA,EAAKhB,OACoB,YAAvB09B,EAAa19B,OACfi+B,EAAiBj9B,GACjBk+B,GAAKQ,aAAa,cAAe1+B,EAAKhB,OACtC29B,EAAgB,CAAE39B,MAAO,OAAQy9B,MAAO,SACxCyB,GAAKQ,aAAa,qBAAsB,UAM1CzB,EAAiBj9B,GACjBk+B,GAAKQ,aAAa,cAAe1+B,EAAKhB,OAEzC,EACKkgC,GAAqB,SAACl/B,GACE,eAAxBg9B,EAAch+B,OACG,YAAfgB,EAAKhB,MACP22B,MAAM,yDAORgH,EAAgB38B,GAChB49B,EAA4B,eAAf59B,EAAKhB,MAAyB,WAAa,IACxDk/B,GAAKQ,aAAa,qBAAsB1+B,EAAKhB,OAEhD,EAEKmgC,GAAsB,SAACn/B,GAC3B+8B,EAAkB/8B,GAClBk+B,GAAKQ,aAAa,uBAAwB1+B,EAAKhB,MAChD,EAQKogC,GAAmB,SAACp/B,GACxBk+B,GAAKQ,aAAa,qBAAsB1+B,EAAKhB,OAC7C++B,EAAc/9B,EACf,EAEKq/B,GAA0B,SAACr/B,GAC/Bi+B,GAAsBj+B,GACtBk+B,GAAKQ,aAAa,iBAAkB1+B,EAAKhB,OAC1B,UAAfgB,EAAKhB,OACHkgC,GAAmB,CAAElgC,MAAO,UAAWy9B,MAAO,WACjD,EA4ED,OA7BA9+B,qBAAU,WACX,IAAMugC,EAAOC,SAASC,cAAc,QACjCF,EAAKQ,aAAa,kBAAmB,WACrCR,EAAKQ,aAAa,qBAAsB,SACxCR,EAAKQ,aAAa,cAAe,YACjCR,EAAKQ,aAAa,eAAgB,WAClCR,EAAKQ,aAAa,oBAAqB,WACvCR,EAAKQ,aAAa,gBAAiB,WACnCR,EAAKQ,aAAa,qBAAsB,WACxCR,EAAKQ,aAAa,iBAAkB,WACpCR,EAAKQ,aAAa,eAAgB,WAClCR,EAAKQ,aAAa,wBAAyB,SAC3CR,EAAKQ,aAAa,uBAAwB,SAC1CR,EAAKQ,aAAa,iBAAkB,QACpCR,EAAKQ,aAAa,YAAa,OACjC,IAAIY,EAAe,WAClBhB,GAAe1kC,OAAO2lC,YACtBf,GAAgB5kC,OAAO4lC,aACvB5lC,OAAO2lC,YAAc,KAAO3lC,OAAO2lC,WAAa,KAC9CrB,EAAKQ,aAAa,qBAAsB,QACxC9kC,OAAO2lC,YAAc,IACrBrB,EAAKQ,aAAa,qBAAsB,WACxCR,EAAKQ,aAAa,qBAAsB,OAC1C,EAGC,OAFAY,IACA1lC,OAAO6lC,iBAAiB,SAAUH,GAC3B,kBAAM1lC,OAAO8lC,oBAAoB,SAAUJ,EAA3C,CACR,GAAE,IAGD,eAAChD,GAAaqD,SAAd,CACE3gC,MAAO,CACLk/B,QACA0B,cArNgB,CACpB,CAAE5gC,MAAO,UAAWy9B,MAAO,WAC3B,CAAEz9B,MAAO,OAAQy9B,MAAO,QACxB,CAAEz9B,MAAO,OAAQy9B,MAAO,QACxB,CAAEz9B,MAAO,SAAUy9B,MAAO,UAC1B,CAAEz9B,MAAO,UAAWy9B,MAAO,WAC3B,CAAEz9B,MAAO,aAAcy9B,MAAO,eAgN1BoD,aA1Ne,CACnB,CAAE7gC,MAAO,WAAYy9B,MAAO,YAC5B,CAAEz9B,MAAO,aAAcy9B,MAAO,eAyN1BqD,iBA/MmB,CACvB,CAAE9gC,MAAO,QAASy9B,MAAO,SACzB,CAAEz9B,MAAO,OAAQy9B,MAAO,SA8MpBG,kBACAmD,gBAzMkB,CACtB,CAAE/gC,MAAO,QAASy9B,MAAO,SACzB,CAAEz9B,MAAO,SAAUy9B,MAAO,WAwMtBuD,kBAtMoB,CACxB,CAAEhhC,MAAO,aAAcy9B,MAAO,cAC9B,CAAEz9B,MAAO,QAASy9B,MAAO,SACzB,CAAEz9B,MAAO,OAAQy9B,MAAO,SAoMpBwD,kBAjLoB,CACxB,CAAEjhC,MAAO,MAAOy9B,MAAO,OACvB,CAAEz9B,MAAO,MAAOy9B,MAAO,QAgLnB5nB,WA9Ka,CACjB,CAAE7V,MAAO,UAAWy9B,MAAO,WAC3B,CAAEz9B,MAAO,SAAUy9B,MAAO,UAC1B,CAAEz9B,MAAO,QAASy9B,MAAO,SACzB,CAAEz9B,MAAO,WAAYy9B,MAAO,aAC5B,CAAEz9B,MAAO,gBAAiBy9B,MAAO,kBA0KnCU,eACME,kBACNgB,eACAE,gBACME,sBACAE,yBACAO,sBACAxC,eACAoC,wBACAoB,iBA1NmB,CACvB,CAAElhC,MAAO,QAASy9B,MAAO,SACzB,CAAEz9B,MAAO,SAAUy9B,MAAO,WAyNtB0C,uBACArC,iBACAmC,uBACAjC,gBACA+B,yBACAM,2BACAxD,YACAv5B,OArNS,CACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,YAuMIi7B,aACAqB,oBACAC,sBACApB,eACAE,YACAE,aACAsC,eAhIiB,WACE,WAAvBzD,EAAa19B,MACT8+B,GAAc,GACdA,GAAc,EACnB,EA6HKsB,oBACA5kB,aACAwjB,qBACNoC,aAlHqB,SAACzkC,EAAMkgC,GAE7B,IAAIwE,EAAU,CAAC,EAGXC,EAAgBxE,GAAYngC,GAEhCuiC,GAAKQ,aAAa,kBAAmB4B,EAAct4B,YAEnDq4B,EAAQrhC,MAAQshC,EAAcroB,QAC9BmnB,GAAiBiB,GAEjBA,EAAQrhC,MAAQshC,EAAc16B,OAC9Bq5B,GAAoBoB,GAGpB5B,GAAmB6B,EAAcx3B,SAGjC61B,GAAsB2B,EAActE,aAGpC4C,GAAiB0B,EAAcvE,UAE/BsE,EAAQrhC,MAAQshC,EAAcpE,aAC9BgD,GAAmBmB,GAGnBxB,GAAmByB,EAAcrE,WAEjCoE,EAAQrhC,MAAQshC,EAAcnE,gBAC9B2C,GAAqBuB,GAErBA,EAAQrhC,MAAQshC,EAAclE,eAC9B+C,GAAoBkB,GAEpBA,EAAQrhC,MAAQshC,EAAcjE,gBAC9BgD,GAAwBgB,GAGxBA,EAAQrhC,MAAQ68B,EAChBkD,GAAsBsB,EAErB,GAgCE,SA0CG9lC,EAAMgmC,UAGZ,EClRDC,IAASC,OACR,eAAC,IAAMC,WAAP,UAEW,eAAC,KAAD,UACI,eAAC,IAAD,CAAeC,SAAS,IAAxB,SACI,eAAC,GAAD,UACI,eAAC5F,GAAD,YAMtBoD,SAASyC,eAAe,SAE1BvF,I","file":"static/js/main.519e4ffd.chunk.js","sourcesContent":["export const  token = (new URLSearchParams(window.location.search)).get(\"jwt\")\r\nexport const url = '/api/v1/'\r\n// export const url =  'http://localhost:8282/api/v1/';\r\n// export const  token = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNjcwNjc4Mzk0fQ.9_Ra1qg-8EjrS27PPdXX_2wVnSOWbOG1vJK1hMUlHc3UutZdwXBmk20xQIgs2vOua33tSd8TKvXHZWNMSy6N0g';\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n//import { FaUserPlus } from \"react-icons/fa\";\r\nimport {TiArrowForward} from 'react-icons/ti'\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n    const [patientList, setPatientList] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            setLoading(true)\r\n            axios\r\n                .get(`${baseUrl}pmtct/pmtct-from-person`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    setLoading(false)\r\n                    setPatientList(response.data);\r\n                   \r\n                })\r\n                .catch((error) => {  \r\n                    setLoading(false)  \r\n                });        \r\n        }\r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now + \" year(s)\";\r\n        };\r\n    \r\n    const getHospitalNumber = (identifier) => {     \r\n        const identifiers = identifier;\r\n        const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');       \r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n    \r\n  return (\r\n    <div>\r\n\r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Find Patient \"\r\n              columns={[\r\n              // { title: \" ID\", field: \"Id\" },\r\n                {\r\n                  title: \"Patient Name\",\r\n                  field: \"name\",\r\n                },\r\n                { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n                { title: \"Sex\", field: \"gender\", filtering: false },\r\n                { title: \"Age\", field: \"age\", filtering: false },\r\n                //{ title: \"Enrollment Status\", field: \"v_status\", filtering: false },\r\n                //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n                // { title: \"ART Status\", field: \"status\", filtering: false },\r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              //isLoading={loading}\r\n                  data={query =>\r\n                    new Promise((resolve, reject) =>\r\n                        axios.get(`${baseUrl}pmtct/anc/pmtct-from-person?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                            .then(response => response)\r\n                            .then(result => {\r\n                                //console.log(result.data.records)\r\n                                resolve({\r\n                                    data: result.data.records.map((row) => ({\r\n                                        \r\n                                        name:<Link\r\n                                                to={{\r\n                                                    pathname: \"/enroll-patient\",\r\n                                                    state: { patientId : row.id, patientObj: row }\r\n                                                }}\r\n                 \r\n                                             title={\"Enroll Patient\"}\r\n                                             > {row.firstName + \" \" + row.surname}\r\n                                             </Link>\r\n                                           ,\r\n                                    hospital_number: getHospitalNumber(row.identifier),\r\n                                    gender:row && row.sex ? row.sex : \"\",\r\n                                    age: (row.dateOfBirth === 0 ||\r\n                                        row.dateOfBirth === undefined ||\r\n                                        row.dateOfBirth === null ||\r\n                                        row.dateOfBirth === \"\" )\r\n                                          ? 0\r\n                                          : calculate_age(moment(row.dateOfBirth).format(\"DD-MM-YYYY\")),\r\n                                    \r\n                                    //status: (<Label color=\"blue\" size=\"mini\">{row.currentStatus}</Label>),\r\n                                 //enroll-patient\r\n                                    actions:<div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/enroll-patient\",\r\n                                                    state: { patientId : row.id, patientObj: row }\r\n                                                }}\r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <TiArrowForward />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Enroll Patient</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link>\r\n\r\n                                            </div>\r\n                                        })),\r\n                                    page: query.page,\r\n                                    totalCount: result.data.totalRecords,\r\n                                    \r\n                                })\r\n                            })\r\n                            \r\n                    )}\r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n//import { FaUserPlus } from \"react-icons/fa\";\r\nimport {TiArrowForward} from 'react-icons/ti'\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n    const [patientList, setPatientList] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            setLoading(true)\r\n            axios\r\n                .get(`${baseUrl}pmtct/pmtct-from-person`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    setLoading(false)\r\n                    setPatientList(response.data);\r\n                   \r\n                })\r\n                .catch((error) => {  \r\n                    setLoading(false)  \r\n                });        \r\n        }\r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now + \" year(s)\";\r\n        };\r\n    \r\n    const getHospitalNumber = (identifier) => { \r\n        console.log(identifier)    \r\n        const identifiers = identifier;\r\n        const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');       \r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n    \r\n  return (\r\n    <div>\r\n\r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Find Patient \"\r\n              columns={[\r\n              // { title: \" ID\", field: \"Id\" },\r\n                {\r\n                  title: \"Patient Name\",\r\n                  field: \"name\",\r\n                },\r\n                { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n                { title: \"Sex\", field: \"gender\", filtering: false },\r\n                { title: \"Age\", field: \"age\", filtering: false },\r\n                //{ title: \"Enrollment Status\", field: \"v_status\", filtering: false },\r\n                //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n                // { title: \"ART Status\", field: \"status\", filtering: false },\r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              //isLoading={loading}\r\n                data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}pmtct/anc/all-active-anc?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            \r\n                            resolve({\r\n                                data: result.data.records.map((row) => ({\r\n                                    name:\r\n                                        <Link\r\n                                        to ={{\r\n                                            pathname: \"/patient-history\",\r\n                                            state: { patientObj: row  }\r\n                                        }}\r\n            \r\n                                        title={\"Click to view patient dashboard\"}\r\n                                        > {row.fullname}\r\n                                        </Link>,\r\n                                        \r\n                                hospital_number: row.hospitalNumber,\r\n                                gender:row && row.sex ? row.sex : \"Female\",\r\n                                age: row.age,\r\n                                actions:<div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: { patientObj: row  }\r\n                                                }}\r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Patient Dashboard</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link>\r\n                                                        \r\n                                        </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                                \r\n                            })\r\n                        })\r\n                        \r\n                )}\r\n                options={{\r\n                    headerStyle: {\r\n                        backgroundColor: \"#014d88\",\r\n                        color: \"#fff\",\r\n                    },\r\n                    searchFieldStyle: {\r\n                        width : '200%',\r\n                        margingLeft: '250px',\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    searchFieldAlignment: 'left',\r\n                    pageSizeOptions:[10,20,100],\r\n                    pageSize:10,\r\n                    debounceInterval: 400\r\n                }}\r\n            />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import Highcharts from 'highcharts';\r\n\r\n// Radialize the colors\r\nHighcharts.setOptions({\r\n    colors: Highcharts.map(Highcharts.getOptions().colors, function (color) {\r\n        return {\r\n            radialGradient: {\r\n                cx: 0.5,\r\n                cy: 0.3,\r\n                r: 0.7\r\n            },\r\n            stops: [\r\n                [0, color],\r\n                [1, Highcharts.color(color).brighten(-0.3).get('rgb')] // darken\r\n            ]\r\n        };\r\n    })\r\n});\r\n\r\nexport const ReceivingArtByAge = {\r\n    chart: {\r\n        \r\n        plotBackgroundColor: null,\r\n        plotBorderWidth: null,\r\n        plotShadow: false,\r\n        type: 'pie'\r\n    },\r\n    title: {\r\n        text: 'Number of Adults and Children currently receiving ART by Age'\r\n    },\r\n    tooltip: {\r\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n    },\r\n    accessibility: {\r\n        point: {\r\n            valueSuffix: '%'\r\n        }\r\n    },\r\n    plotOptions: {\r\n        pie: {\r\n            allowPointSelect: true,\r\n            cursor: 'pointer',\r\n            dataLabels: {\r\n                enabled: true,\r\n                format: '<b>{point.name}</b>: {point.percentage:.1f} %',\r\n                connectorColor: 'black'\r\n            },\r\n            showInLegend: true\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'Currently Receiving ART By Age',\r\n        data: [\r\n            { name: '25 + ',  sliced: true, y: 61.41 },\r\n            { name: '20-24 ', y: 11.84 },\r\n            { name: '10-19 ', y: 10.85 },\r\n            { name: '≤ 9 ', y: 4.67 },\r\n           \r\n        ]\r\n    }]\r\n};","export const ReceivingArtBySex = {\r\n    chart: {\r\n        plotBackgroundColor: null,\r\n        plotBorderWidth: 0,\r\n        plotShadow: false\r\n    },\r\n    title: {\r\n        text: 'Number of Adults and Children newly enrolled on ART by Sex',\r\n        align: 'center',\r\n        verticalAlign: 'middle',\r\n        y: -160\r\n    },\r\n    tooltip: {\r\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n    },\r\n    accessibility: {\r\n        point: {\r\n            valueSuffix: '%'\r\n        }\r\n    },\r\n    plotOptions: {\r\n        pie: {\r\n            \r\n            dataLabels: {\r\n                enabled: true,\r\n                distance: -50,\r\n                format: '<b>{point.name}</b>: {point.percentage:.1f} %',\r\n                style: {\r\n                    fontWeight: 'bold',\r\n                    color: 'white'\r\n                }\r\n            },\r\n            startAngle: -90,\r\n            endAngle: 90,\r\n            center: ['50%', '75%'],\r\n            size: '110%',\r\n            showInLegend: true\r\n        }\r\n    },\r\n    series: [{\r\n        type: 'pie',\r\n        name: 'Newly Enrolled on ART ',\r\n        innerSize: '50%',\r\n        data: [\r\n            ['Male', 58.9],\r\n            ['Female', 13.29],\r\n            \r\n        ]\r\n    }]\r\n};","import React, { useState } from 'react';\r\n\r\nimport { Col, Form,CardBody,  Row,CardTitle, CardText,\r\n   } from \"reactstrap\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Highcharts from 'highcharts';\r\n import HighchartsReact from 'highcharts-react-official';\r\nimport {NewlyEnrolledArtBySex} from './Highcharts/NewlyEnrolledArtBySex';\r\nimport {NewlyEnrolledArtByAge} from './Highcharts/NewlyEnrolledArtByAge';\r\nimport {ReceivingArtByAge}  from './Highcharts/ReceivingArtByAge';\r\nimport {ReceivingArtBySex} from './Highcharts/ReceivingArtBySex';\r\nimport { Progress } from 'reactstrap';\r\n\r\n\r\n// Load Highcharts modules\r\n//require(\"highcharts/modules/exporting\")(Highcharts);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n},\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst SummaryView = (props) => {\r\n  const classes = useStyles();\r\n  const [chartValue, setChartValue] = useState(\"\");\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const toggle = () => setDropdownOpen(!dropdownOpen);\r\n  const [state, setState] = useState({ activeItem: 'gamepad' })\r\n\r\n  const handleItemClick = (e, { name }) => setState({ activeItem: name })\r\n  const { activeItem } = state\r\n  const chartPage  = e => {\r\n\r\n    setChartValue(e)\r\n  }\r\n\r\n  //Menu Icon \r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div  spacing={5} style={{ padding: 20 }} >\r\n      <Row>\r\n        <Col md={12}>\r\n          {/* The second Column Card Layout  */}\r\n        <Row>\r\n                 \r\n                  <Col  lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\r\n                  <Card><CardBody>\r\n                    <HighchartsReact highcharts={Highcharts} options={ReceivingArtBySex} />\r\n                  </CardBody></Card>\r\n                  </Col>\r\n                  <Col  lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\r\n                  <Card><CardBody>\r\n                    <HighchartsReact highcharts={Highcharts} options={ReceivingArtByAge} />\r\n                  </CardBody></Card>\r\n                  </Col>\r\n              </Row>\r\n\r\n           \r\n        </Col>\r\n      </Row>\r\n\r\n      \r\n\r\n      \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SummaryView;\r\n","import React, { Fragment } from \"react\";\r\n// BS\r\nimport { Dropdown, Nav, Tab } from \"react-bootstrap\";\r\n/// Scroll\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { Link } from \"react-router-dom\";\r\n// images\r\nimport SummaryView from './DashboardAnalytics/SummaryView/Index';\r\nimport Highcharts from 'highcharts'\r\nimport HighchartsReact from 'highcharts-react-official'\r\nimport {NewlyEnrolledArtBySex} from './DashboardAnalytics/SummaryView/Highcharts/NewlyEnrolledArtBySex';\r\n\r\nconst options = {\r\n  chart: {\r\n    type: 'column'\r\n},\r\n\r\ntitle: {\r\n    text: 'Viral Load Cascade among new patients eligible after 6 months'\r\n},\r\n\r\nsubtitle: {\r\n    text: ''\r\n},\r\n\r\nlegend: {\r\n    align: 'right',\r\n    verticalAlign: 'middle',\r\n    layout: 'vertical'\r\n},\r\n\r\nxAxis: {\r\n    categories: ['Number Eligble', 'Number of Sample Collected', 'Number Tested', 'Number Suppressed'],\r\n    labels: {\r\n        x: -10\r\n    }\r\n},\r\n\r\nyAxis: {\r\n    allowDecimals: false,\r\n    title: {\r\n        text: 'Amount'\r\n    }\r\n},\r\n\r\nseries: [{\r\n    name: 'Number Eligble',\r\n    data: [20, 40, 30, 3]\r\n}, {\r\n    name: 'Number of Sample Collected',\r\n    data: [62, 41, 22, 22]\r\n}, {\r\n    name: 'Number Tested',\r\n    data: [200, 45, 30,20]\r\n}, {\r\n  name: 'Number Suppressed',\r\n  data: [40, 40, 10, 90]\r\n}],\r\n\r\nresponsive: {\r\n    rules: [{\r\n        condition: {\r\n            maxWidth: 500\r\n        },\r\n        chartOptions: {\r\n            legend: {\r\n                align: 'center',\r\n                verticalAlign: 'bottom',\r\n                layout: 'horizontal'\r\n            },\r\n            yAxis: {\r\n                labels: {\r\n                    align: 'left',\r\n                    x: 0,\r\n                    y: -5\r\n                },\r\n                title: {\r\n                    text: null\r\n                }\r\n            },\r\n            subtitle: {\r\n                text: null\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            }\r\n        }\r\n    }]\r\n}\r\n}\r\nconst options2 = {\r\n  chart: {\r\n    type: 'column'\r\n},\r\n\r\ntitle: {\r\n    text: 'Viral Load Cascade among patients currently on ART eligible after 12 months of last VL result'\r\n},\r\n\r\nsubtitle: {\r\n    text: ''\r\n},\r\n\r\nlegend: {\r\n    align: 'right',\r\n    verticalAlign: 'middle',\r\n    layout: 'vertical'\r\n},\r\n\r\nxAxis: {\r\n    categories: ['Number Eligble', 'Number of Sample Collected', 'Number Tested', 'Number Suppressed'],\r\n    labels: {\r\n        x: -10\r\n    }\r\n},\r\n\r\nyAxis: {\r\n    allowDecimals: false,\r\n    title: {\r\n        text: 'Amount'\r\n    }\r\n},\r\n\r\nseries: [{\r\n    name: 'Number Eligble',\r\n    data: [200, 40, 30, 3]\r\n}, {\r\n    name: 'Number of Sample Collected',\r\n    data: [62, 41, 22, 22]\r\n}, {\r\n    name: 'Number Tested',\r\n    data: [2000, 450, 300,200]\r\n}, {\r\n  name: 'Number Suppressed',\r\n  data: [40, 40, 100, 90]\r\n}],\r\n\r\nresponsive: {\r\n    rules: [{\r\n        condition: {\r\n            maxWidth: 500\r\n        },\r\n        chartOptions: {\r\n            legend: {\r\n                align: 'center',\r\n                verticalAlign: 'bottom',\r\n                layout: 'horizontal'\r\n            },\r\n            yAxis: {\r\n                labels: {\r\n                    align: 'left',\r\n                    x: 0,\r\n                    y: -5\r\n                },\r\n                title: {\r\n                    text: null\r\n                }\r\n            },\r\n            subtitle: {\r\n                text: null\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            }\r\n        }\r\n    }]\r\n}\r\n}\r\nconst Widget = () => {\r\n  return (\r\n    <Fragment>     \r\n      <div className=\"row\">\r\n       <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-primary text-danger\">\r\n                <i class=\"fa fa-user-plus\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">NEWLY DIAGNOSED HIV+</p>\r\n                  <h4 className=\"mb-0\">3280</h4>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-warning text-warning\">\r\n                <i class=\"fa fa-heartbeat\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">CURRENT ON ART</p>\r\n                  <h4 className=\"mb-0\">2570</h4>\r\n                  {/* <span className=\"badge badge-warning\">+3.5%</span> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body  p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-danger text-danger\">\r\n                <i class=\"fa fa-compress\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">VIRALLY SUPPRESSED</p>\r\n                  <h4 className=\"mb-0\">50</h4>\r\n                  {/* <span className=\"badge badge-danger\">-3.5%</span> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-success text-success\">\r\n                <i class=\"fa fa-users\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">CURRENTLY ACTIVE</p>\r\n                  <h4 className=\"mb-0\">2340</h4>\r\n                  {/* <span className=\"badge badge-success\">-3.5%</span> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <SummaryView />\r\n        <div className=\"col-xl-6 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <HighchartsReact\r\n            highcharts={Highcharts}\r\n            options={options}\r\n          />\r\n        </div>\r\n        <div className=\"col-xl-6 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <HighchartsReact\r\n            highcharts={Highcharts}\r\n            options={options2}\r\n          />\r\n        </div>\r\n        \r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Widget;\r\n","import React, {useState, Fragment } from \"react\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport NotEnrollPatients from './Patient/PatientList'\r\nimport ActiveANCPatients from './Patient/ActiveANCPatientList'\r\nimport VisualisationHome from './Visualisation/Index'\r\nimport { Link } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button';\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\n//import PageTitle from \"./../layouts/PageTitle\";\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n    const [key, setKey] = useState('home');\r\n\r\n\r\n  return (\r\n    <Fragment>  \r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4>PMTCT</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Link to={\"register-patient\"}>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end mb-10\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n                style={{backgroundColor:'#014d88'}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\r\n            </Button>\r\n        </Link>\r\n        <br/><br/>\r\n      <Row>       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n                  \r\n                  <Tab eventKey=\"home\" title=\"Find Patients\">                   \r\n                    <NotEnrollPatients />\r\n                  </Tab>\r\n                  <Tab eventKey=\"anc\" title=\"Active ANC Patients\">                   \r\n                    <ActiveANCPatients />\r\n                  </Tab>\r\n                  <Tab eventKey=\"visualization\" title=\"Data Visualisation\">                   \r\n                    <VisualisationHome />\r\n                  </Tab>                    \r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n        Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n        } from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nconst CaptureBiometric = (props) => {\r\n    const classes = useStyles()\r\n    const biometricDevices = props.biometricDevices\r\n    const patientID= props && props.patientId ? props.patientId : \"\"\r\n    \r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:patientID, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState(props.biometricDevices);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n   // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([])\r\n     console.log(biometricDevices)\r\n    const buttonSx = {\r\n      ...(success && {\r\n        bgcolor: green[500],\r\n        '&:hover': {\r\n          bgcolor: green[700],\r\n        },\r\n      }),\r\n    };\r\n\r\n\r\n    useEffect(() => {      \r\n        TemplateType();\r\n        if(objValues.device===\"\"){\r\n            setshowCapture(false)\r\n        }\r\n        \r\n      }, []);\r\n     //Get list of Finger index\r\n     const TemplateType =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setFingerType(response.data);\r\n           })\r\n           .catch((error) => {\r\n           });\r\n       \r\n     }\r\n\r\n     //check if device is plugged or not \r\n     const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        console.log(checkUrl)\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n           .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n            if(response.data.errorType ===\"ERROR\"){\r\n                toast.error(response.data.errorName + \" is not plug\");\r\n                //setshowCapture(true)\r\n            }else{\r\n                setshowCapture(true)\r\n            }\r\n           })\r\n           .catch((error) => {\r\n           });\r\n     }\r\n     // handle the input changes \r\n\r\n     const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //to capture  selected index finger \r\n    const captureFinger = (e) => {        \r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                  setLoading(true);\r\n                  if(response.data.type ===\"ERROR\"){                   \r\n                    setLoading(false);\r\n                    setTryAgain(true);\r\n                    window.setTimeout(() => {\r\n                        setTryAgain(false);\r\n                      }, 5000);\r\n                    toast.error(response.data.message.ERROR);\r\n                  }else{\r\n                    const templateType= response.data.templateType\r\n                    setTryAgain(false);\r\n                    setSuccess(true)\r\n                    window.setTimeout(() => {\r\n                        setSuccess(false)\r\n                        setLoading(false);                        \r\n                      }, 5000);\r\n                                        \r\n                    setCapturedFingered([...capturedFingered, response.data])\r\n                    fingerType.splice(templateType, 1);\r\n                    setFingerType([...fingerType]);\r\n                  }\r\n                  //toast.success(\"Record save successful\");\r\n              })\r\n              .catch(error => {                 \r\n              });\r\n        }\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {        \r\n        e.preventDefault();\r\n        if(capturedFingered.length > 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1]\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                toast.success(\"Biometric save successful\");\r\n                setCapturedFingered([])\r\n                props.setPatientBiometricStatus(true)\r\n                props.togglestatus()\r\n            })\r\n            .catch(error => {\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }else{\r\n            \r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n  }  \r\n    \r\n // console.log(capturedFingered)\r\n\r\n    return (\r\n        <div >\r\n            <Card >\r\n                <CardBody>\r\n                    <Modal isOpen={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"lg\">\r\n                        <Form >\r\n                            <ModalHeader toggle={props.togglestatus}>capture Biometric</ModalHeader>\r\n                            <ModalBody>\r\n                                <Card>\r\n                                {/* <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader> */}\r\n                                    <CardBody>\r\n                                    <Row form>\r\n                                    <ToastContainer />\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Device </Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"device\"\r\n                                                    id=\"device\"\r\n                                                    onChange={checkDevice}\r\n                                                    value={objValues.device}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Device </option>\r\n                                                {biometricDevices.map(({ id, name }) => (\r\n                                                    <option key={id} value={name}>\r\n                                                        {name}\r\n                                                    </option>\r\n                                                ))}\r\n                                              \r\n                                            </Input>\r\n                                            {errors.device !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.device}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Finger </option>\r\n\r\n                                                {fingerType.map((value) => (\r\n                                                    <option key={value.id} value={value.display}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                            {errors.templateType !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.templateType}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        \r\n\r\n                                        <Col md={4}>\r\n                                        \r\n                                        <MatButton\r\n                                            type='button'\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={captureFinger}\r\n                                            className={'mt-4'}\r\n                                            startIcon={<FingerprintIcon />}\r\n                                        >\r\n                                            Capture Finger\r\n                                        </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n                                        \r\n                                        </>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                        }\r\n                                        {/* <img width='500' height='200' src={responseImage}/> */}\r\n                                        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                                       \r\n                                     {loading && (\r\n                                        <>\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                </Fab>\r\n                                                {loading && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: green[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {tryAgain && (\r\n                                        <>\r\n                                        \r\n\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                 <FingerprintIcon />\r\n                                                </Fab>\r\n                                                {tryAgain && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: red[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            Click to Recapture Again\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {/*  */}\r\n                                        </Col>\r\n                                       \r\n                                            \r\n                                        </Row>\r\n\r\n                                    <Row>\r\n                                 {capturedFingered.length >=1 ? (  \r\n                                     <>                               \r\n                                    <Col md={12} >\r\n                                        <h3>Captured Fingerprints</h3>\r\n                                    </Col>\r\n                                    <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {capturedFingered.map((x) => (\r\n                                                <List.Item>\r\n                                                    {/* <List.Header><Icon name='cancel'  color='red' /> </List.Header> */}\r\n                                                    <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                    {/* <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col> */}\r\n                                    <br/><br/><br/><br/><br/><br/>\r\n                                        <Col md={12} >\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={saveBiometrics}\r\n                                                // className={classes.button}\r\n                                                startIcon={<SaveIcon/>}\r\n                                            >\r\n                                                Save Capture\r\n                                            </MatButton>\r\n                                        </Col>\r\n                                    </> \r\n                                    )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                    </Row>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </ModalBody>\r\n                        </Form>\r\n\r\n                    </Modal>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CaptureBiometric;\r\n","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Link } from 'react-router-dom'\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\n//import Chip from '@material-ui/core/Chip';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Button } from 'semantic-ui-react';\r\nimport {Label,} from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CaptureBiometric from './CaptureBiometric';\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  //const patientCurrentStatus=props.patientObj && props.patientObj.currentStatus===\"Died (Confirmed)\" ? true : false ;\r\n  const patientObjs = props.patientObj ? props.patientObj : {}\r\n  const permissions= props.permissions ? props.permissions : [];\r\n  const [patientObj, setpatientObj] = useState(patientObjs)\r\n  const [patientBiometricStatus, setPatientBiometricStatus]= useState(props.patientObj.biometricStatus);\r\n  const [biometricStatus, setBiometricStatus] = useState(false);\r\n  const [devices, setDevices] = useState([]);\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  const [biometricModal, setBiometricModal] = useState(false);\r\n  const BiometricModalToggle = () => setBiometricModal(!biometricModal);\r\n  const [hivStatus, setHivStatus] = useState();\r\n  const [artModal, setArtModal] = useState(false);\r\n  const Arttoggle = () => setArtModal(!artModal);\r\n  useEffect(() => {\r\n    PatientCurrentStatus();\r\n    CheckBiometric();\r\n  }, [props.patientObj]);\r\n\r\n  //Get list of KP\r\n  const CheckBiometric =()=>{\r\n      axios\r\n        .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setBiometricStatus(response.data);\r\n            if(response.data===true){\r\n              axios\r\n                  .get(`${baseUrl}biometrics/devices`,\r\n                      { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                  )\r\n                  .then((response) => {\r\n                      setDevices(response.data);\r\n                      \r\n                  })\r\n                  .catch((error) => {\r\n                      console.log(error)\r\n                  });\r\n            \r\n              }\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    \r\n  }\r\n    ///GET LIST OF Patients\r\n    async function PatientCurrentStatus() {\r\n        axios\r\n            .get(`${baseUrl}hiv/status/patient-current/${patientObj.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n\r\n              setHivStatus(response.data);\r\n            })\r\n            .catch((error) => {    \r\n            });        \r\n    }\r\n    const get_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now ;\r\n    }\r\n    const calculate_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now + \" year(s)\";\r\n    };\r\n\r\n    const loadChildEvaluation =(row)=> {\r\n      props.setActiveContent('child-evaluation')\r\n    }\r\n    const capturePatientBiometric =(row)=> {\r\n      //props.setActiveContent('biometrics')\r\n      props.setActiveContent({...props.activeContent, route:'biometrics', obj:row})\r\n    }\r\n    const loadArtCommencement =(row)=> {\r\n      props.setActiveContent('art-commencement')\r\n    }\r\n    \r\n    const loadArt =(row)=> {\r\n        setpatientObj({...patientObj, ...row});\r\n            setArtModal(!artModal)\r\n    }\r\n    \r\n    const CurrentStatus = ()=>{\r\n\r\n          return (  <Label color=\"blue\" size=\"mini\">{hivStatus}</Label>);\r\n  }\r\n    const getHospitalNumber = (identifier) => {     \r\n      const identifiers = identifier;\r\n      const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');       \r\n      return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n    const getPhoneNumber = (identifier) => {     \r\n      const identifiers = identifier;\r\n      const phoneNumber = identifiers.contactPoint.find(obj => obj.type == 'phone');       \r\n      return phoneNumber ? phoneNumber.value : '';\r\n    };\r\n    const getAddress = (identifier) => {     \r\n      const identifiers = identifier;\r\n      const address = identifiers.address.find(obj => obj.city);      \r\n      return address ? address.city : '';\r\n    };\r\n    const handleBiometricCapture = (id) => { \r\n      let patientObjID= id\r\n      setBiometricModal(!biometricModal);\r\n    }\r\n\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n       <ExpansionPanel >\r\n\r\n                <ExpansionPanelSummary >\r\n                \r\n                <Row>\r\n                \r\n                    <Col md={12}>\r\n                    <Row className={\"mt-1\"}>\r\n                    <Col md={12} className={classes.root2}>\r\n                        <b style={{fontSize: \"25px\"}}>\r\n                        {patientObj.fullname}\r\n                        </b>\r\n                        <Link to={\"/\"} >\r\n                        <ButtonMui\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-2 mr-2 mt-2\"\r\n                            //startIcon={<FaUserPlus size=\"10\"/>}\r\n                            startIcon={<TiArrowBack  />}\r\n                            style={{backgroundColor:\"rgb(153, 46, 98)\", color:'#fff', height:'35px'}}\r\n\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                        </ButtonMui>\r\n                      </Link>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Patient ID : <b>{patientObj.hospitalNumber }</b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {/* Date Of Birth : <b>{patientObj.dateOfBirth }</b> */}\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Age : <b>{patientObj.age}</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Gender :{\" \"}\r\n                        <b>{patientObj.sex && patientObj.sex!==null ?  patientObj.sex : 'Female' }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        {/* Phone Number : <b>{getPhoneNumber(patientObj.contactPoint)}</b> */}\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Address : <b>{getAddress(patientObj.address)} </b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    <Col md={12}>\r\n                    {biometricStatus===true ? (\r\n                          <>\r\n                              <div >\r\n                                  <Typography variant=\"caption\">\r\n                                      <Label color={props.patientObj.biometricStatus===true? \"green\" : \"red\"} size={\"mini\"}>\r\n                                          Biometric Status\r\n                                          <Label.Detail>{props.patientObj.biometricStatus===true? \"Captured\" : \"Not Capture\"}</Label.Detail>\r\n                                      </Label>\r\n                                     \r\n                                      \r\n                                  </Typography>\r\n                              </div>\r\n                          </>\r\n                          )\r\n                          :\r\n                          <>\r\n                              \r\n                          </>\r\n                      }\r\n                    </Col>\r\n                    </Row>\r\n                    </Col>\r\n                </Row>\r\n            \r\n                </ExpansionPanelSummary>\r\n               \r\n                \r\n                    {/* <Button\r\n                      color='red'\r\n                      content='BloodType'\r\n                      //icon='heart'\r\n                      label={{ basic: true, color: 'red', pointing: 'left', content: 'AB+' }}\r\n                    /> */}                                  \r\n                    {/* <Button\r\n                        basic\r\n                        color='blue'\r\n                        content='Height'\r\n                        icon='fork'\r\n                        label={{\r\n                            as: 'a',\r\n                            basic: true,\r\n                            color: 'blue',\r\n                            pointing: 'left',\r\n                            content: '74.5 in',\r\n                        }}\r\n                      />               */}\r\n                      {/* <Button\r\n                        basic\r\n                        color='blue'\r\n                        content='Weight'\r\n                        icon='fork'\r\n                        label={{\r\n                            as: 'a',\r\n                            basic: true,\r\n                            color: 'blue',\r\n                            pointing: 'left',\r\n                            content: '74.5 in',\r\n                        }}\r\n                      /> */}\r\n                               \r\n                {/* <div className={classes.column}>\r\n                  <Button primary  floated='left' onClick={() => get_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\")) > 5 ? loadAdultEvaluation(patientObj) :loadChildEvaluation(patientObj) }><span style={{fontSize:\"11px\"}}>Initial Clinic Evaluation</span></Button>\r\n                </div> */}\r\n                {/* {patientCurrentStatus !==true && props.patientObj.enrollment.targetGroupId !==\"456\" ?                   \r\n                  (\r\n                    <>\r\n                      <div className={classes.column}>\r\n                        <Button primary  floated='left' onClick={() => loadMentalHealthScreening(patientObj) }><span style={{fontSize:\"11px\"}}>Mental Health Screening</span></Button>\r\n                      </div>\r\n                    </>\r\n                  ) :\"\"           \r\n                } */}\r\n               {/* {patientObj.commenced!==true && (\r\n                <div className={classes.column} style={{paddingLeft:\"20px\"}}>\r\n                {\" \"}<Button primary onClick={() => loadArt(patientObj)} ><span style={{fontSize:\"11px\"}}>ART Commencement </span></Button>\r\n                </div>\r\n                )\r\n               }\r\n                     */}\r\n              \r\n            </ExpansionPanel>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {Dropdown, Menu } from \"semantic-ui-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navItemText: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction SubMenu(props) {\r\n    const classes = useStyles();\r\n    let gender=\"\"\r\n    const patientObjs = props.patientObj ? props.patientObj : {}\r\n    //const patientCurrentStatus=props.patientObj && props.patientObj.currentStatus===\"Died (Confirmed)\" ? true : false ;\r\n    const [patientObj, setpatientObj] = useState(patientObjs)\r\n    const [genderType, setGenderType] = useState()\r\n    let mentalStatus=false\r\n    let initialEvaluationStatus=false\r\n    useEffect(() => {\r\n        Observation();\r\n        gender =props.patientObj && props.patientObj.sex ? props.patientObj.sex : null\r\n        setGenderType(gender===\"Female\" ? true : false)\r\n    }, [props.patientObj]);\r\n     //Get list of RegimenLine\r\n     const Observation =()=>{\r\n        axios\r\n            .get(`${baseUrl}observation/person/${props.patientObj.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                const observation = response.data\r\n                const mental= observation.filter((x)=> x.type==='mental health')\r\n                const evaluation= observation.filter((x)=> x.type==='initial evaluation')\r\n                if(mental.length > 1){\r\n                    mentalStatus=true\r\n                }\r\n                if(evaluation.length > 1){\r\n                    initialEvaluationStatus=true\r\n                }\r\n\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });\r\n        \r\n        }\r\n    const loadAncPnc =(row)=> {\r\n        props.setActiveContent({...props.activeContent, route:'anc-pnc'})\r\n    }\r\n    const loadLabourDelivery =(row)=> {\r\n        props.setActiveContent({...props.activeContent, route:'labour-delivery'})\r\n    }\r\n    const onClickConsultation = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'consultation'})\r\n    }\r\n    const onClickHome = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n    }\r\n    const loadPmtctHts = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'pmtct-hts'})\r\n    }\r\n    //\r\n\r\n    return (\r\n         <div>\r\n            <Menu size=\"mini\" color={\"black\"} inverted >\r\n                <Menu.Item onClick={() => onClickHome()} > Home</Menu.Item> \r\n                {patientObj.hivStatus!==null && patientObj.hivStatus==='Positive' && (<>\r\n                    {patientObj.pmtctRegStatus!==true ? (\r\n                        <>\r\n                        <Menu.Item onClick={() => loadAncPnc()} >PMTCT Enrollment</Menu.Item> \r\n                        \r\n                        </>\r\n                        )\r\n                        :\r\n                        (\r\n                            <>\r\n                            <Menu.Item onClick={() => onClickConsultation()} >Follow Up Visit</Menu.Item>                \r\n                            <Menu.Item onClick={() => loadLabourDelivery()} >Labour and Delivery</Menu.Item>\r\n                            </>\r\n                        )\r\n                    }               \r\n                    \r\n                </>)}\r\n                {patientObj.hivStatus!==null && patientObj.hivStatus==='Negative' && (<>\r\n                    <Menu.Item onClick={() => loadPmtctHts()} >PMTCT-HTS</Menu.Item>\r\n                </>)}                  \r\n            </Menu>             \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default SubMenu;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Segment, Label, Icon, List, Button, Card,Feed } from 'semantic-ui-react'\r\n// Page titie\r\nimport { FormGroup, Label as FormLabelName, \r\n          Input,\r\n        } from \"reactstrap\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1)\r\n    }\r\n  },\r\n  input: {\r\n    display: 'none'\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\nconst ClinicVisit = (props) => {\r\n  let patientObj = props.patientObj ? props.patientObj : {}\r\n  //console.log(patientObj.pmtctEnrollmentRespondDto.pmtctEnrollmentDate)\r\n  const [errors, setErrors] = useState({});\r\n  //const [loading, setLoading] = useState(true)\r\n  let temp = { ...errors }\r\n  const classes = useStyles()\r\n  const [saving, setSaving] = useState(false);\r\n  const [clinicalStage, setClinicalStage] = useState([]);\r\n  const [dsdModelType, setDsdModelType] = useState([]);\r\n  const [currentVitalSigns, setcurrentVitalSigns] = useState({})\r\n  const [showCurrentVitalSigns, setShowCurrentVitalSigns] = useState(false)\r\n  const [visitStatus, setVisitStatus] = useState([]);\r\n  const [maternalCome, setMaternalCome] = useState([]);\r\n  const [fp, setFp] = useState([]);\r\n  const [entryPoint, setEntryPoint] = useState([]);\r\n  //Vital signs clinical decision support \r\n  const [vitalClinicalSupport, setVitalClinicalSupport] = useState(\r\n          {\r\n            bodyWeight: \"\",\r\n            diastolic: \"\",\r\n            height: \"\",\r\n            systolic: \"\",\r\n            pulse:\"\",\r\n            temperature:\"\",\r\n            respiratoryRate:\"\" \r\n          })\r\n  const [objValues, setObjValues] = useState({\r\n    ancNo: patientObj.ancNo,\r\n    dateOfViralLoad: \"\",\r\n    dateOfVisit: \"\",\r\n    dateOfmeternalOutcome: \"\",\r\n    dsd: \"\",\r\n    dsdModel: \"\",\r\n    dsdOption: \"\",\r\n    enteryPoint: \"\",\r\n    fpCounseling: \"\",\r\n    fpMethod: \"\",\r\n    gaOfViralLoad: \"\",\r\n    id: \"\",\r\n    maternalOutcome: \"\",\r\n    nextAppointmentDate: \"\",\r\n    personUuid: patientObj.person_uuid,\r\n    resultOfViralLoad: \"\",\r\n    transferTo: \"\",\r\n    visitStatus: \"\",\r\n    timeOfViralLoad: \"\",\r\n  }\r\n  );\r\n  const [vital, setVitalSignDto] = useState({\r\n    bodyWeight: \"\",\r\n    diastolic: \"\",\r\n    encounterDate: \"\",\r\n    facilityId: 1,\r\n    height: \"\",\r\n    personId: props.patientObj.id,\r\n    serviceTypeId: 1,\r\n    systolic: \"\",\r\n    pulse:\"\",\r\n    temperature:\"\",\r\n    respiratoryRate:\"\" \r\n  })\r\n  useEffect(() => {\r\n    VitalSigns();\r\n    VISIT_STATUS_PMTCT()\r\n    MATERNAL_OUTCOME();\r\n    FAMILY_PLANNING_METHOD();\r\n    POINT_ENTRY_PMTCT();\r\n  }, []);\r\n\r\n    //Check for the last Vital Signs\r\n    const VitalSigns = () => {\r\n    axios\r\n      .get(`${baseUrl}patient/vital-sign/person/${props.patientObj.id}`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n\r\n        const lastVitalSigns = response.data[response.data.length - 1]\r\n        if (lastVitalSigns.encounterDate === moment(new Date()).format(\"YYYY-MM-DD\") === true) {\r\n          setcurrentVitalSigns(lastVitalSigns)\r\n          setShowCurrentVitalSigns(true)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n    }\r\n    const VISIT_STATUS_PMTCT = () => {\r\n      axios\r\n        .get(`${baseUrl}application-codesets/v2/VISIT_STATUS_PMTCT`,\r\n          { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n          //console.log(response.data);\r\n          setVisitStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n          //console.log(error);\r\n        });\r\n  \r\n    }\r\n    const POINT_ENTRY_PMTCT = () => {\r\n      axios\r\n        .get(`${baseUrl}application-codesets/v2/POINT_ENTRY_PMTCT`,\r\n          { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n          //console.log(response.data);\r\n          setEntryPoint(response.data);\r\n        })\r\n        .catch((error) => {\r\n          //console.log(error);\r\n        });\r\n  \r\n    }\r\n    \r\n    const FAMILY_PLANNING_METHOD = () => {\r\n      axios\r\n        .get(`${baseUrl}application-codesets/v2/FAMILY_PLANNING_METHOD`,\r\n          { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n          //console.log(response.data);\r\n          setFp(response.data);\r\n        })\r\n        .catch((error) => {\r\n          //console.log(error);\r\n        });\r\n  \r\n    }\r\n    const MATERNAL_OUTCOME = () => {\r\n      axios\r\n        .get(`${baseUrl}application-codesets/v2/MATERNAL_OUTCOME`,\r\n          { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n          //console.log(response.data);\r\n          setMaternalCome(response.data);\r\n        })\r\n        .catch((error) => {\r\n          //console.log(error);\r\n        });\r\n  \r\n    }\r\n\r\n  const handleInputChange = e => {\r\n    setErrors({...temp, [e.target.name]:\"\"}) \r\n    if(e.target.name ==='dsdModel'){\r\n      DsdModelType(e.target.value)\r\n    }\r\n    //console.log(e.target.name)\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    \r\n  }\r\n  const handleInputChangeVitalSignDto = e => {\r\n    setVitalSignDto({ ...vital, [e.target.name]: e.target.value });\r\n  } \r\n  //Handle CheckBox \r\n  // const handleCheckBox = e => {\r\n  //   if (e.target.checked) {\r\n  //     //currentVitalSigns.personId === null ? props.patientObj.id : currentVitalSigns.personId\r\n  //     setVitalSignDto({ ...currentVitalSigns })\r\n  //   } else {\r\n  //     setVitalSignDto({\r\n  //       bodyWeight: \"\",\r\n  //       diastolic: \"\",\r\n  //       encounterDate: \"\",\r\n  //       facilityId: \"\",\r\n  //       height: \"\",\r\n  //       personId: props.patientObj.id,\r\n  //       serviceTypeId: \"\",\r\n  //       systolic: \"\",\r\n  //       pulse:\"\",\r\n  //       temperature:\"\",\r\n  //       respiratoryRate:\"\" \r\n  //     })\r\n  //   }\r\n  // }\r\n  //to check the input value for clinical decision \r\n  // const handleInputValueCheckHeight =(e)=>{\r\n  //   if(e.target.name===\"height\" && (e.target.value < 48.26 || e.target.value>216.408)){\r\n  //     const message =\"Height cannot be greater than 216.408 and less than 48.26\"\r\n  //     setVitalClinicalSupport({...vitalClinicalSupport, height:message})\r\n  //   }else{\r\n  //     setVitalClinicalSupport({...vitalClinicalSupport, height:\"\"})\r\n  //   }\r\n  // }\r\n  // const handleInputValueCheckBodyWeight =(e)=>{\r\n  //   if(e.target.name===\"bodyWeight\" && (e.target.value < 3 || e.target.value>150)){      \r\n  //     const message =\"Body weight must not be greater than 150 and less than 3\"\r\n  //     setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:message})\r\n  //   }else{\r\n  //     setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:\"\"})\r\n  //   }\r\n  // }\r\n//   const handleInputValueCheckSystolic =(e)=>{\r\n//     if(e.target.name===\"systolic\" && (e.target.value < 90 || e.target.value>240)){      \r\n//       const message =\"Blood Pressure systolic must not be greater than 240 and less than 90\"\r\n//       setVitalClinicalSupport({...vitalClinicalSupport, systolic:message})\r\n//     }else{\r\n//       setVitalClinicalSupport({...vitalClinicalSupport, systolic:\"\"})\r\n//     }\r\n//   }\r\n//   const handleInputValueCheckDiastolic =(e)=>{\r\n//     if(e.target.name===\"diastolic\" && (e.target.value < 60 || e.target.value>140)){      \r\n//       const message =\"Blood Pressure diastolic must not be greater than 140 and less than 60\"\r\n//       setVitalClinicalSupport({...vitalClinicalSupport, diastolic:message})\r\n//     }else{\r\n//       setVitalClinicalSupport({...vitalClinicalSupport, diastolic:\"\"})\r\n//     }\r\n//   }\r\n//   const handleInputValueCheckPulse =(e)=>{\r\n//     if(e.target.name===\"pulse\" && (e.target.value < 40 || e.target.value>120)){      \r\n//     const message =\"Pulse must not be greater than 120 and less than 40\"\r\n//     setVitalClinicalSupport({...vitalClinicalSupport, pulse:message})\r\n//     }else{\r\n//     setVitalClinicalSupport({...vitalClinicalSupport, pulse:\"\"})\r\n//     }\r\n// }\r\n// const handleInputValueCheckRespiratoryRate =(e)=>{\r\n//     if(e.target.name===\"respiratoryRate\" && (e.target.value < 10 || e.target.value>70)){      \r\n//     const message =\"Respiratory Rate must not be greater than 70 and less than 10\"\r\n//     setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:message})\r\n//     }else{\r\n//     setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:\"\"})\r\n//     }\r\n// }\r\n// const handleInputValueCheckTemperature =(e)=>{\r\n//     if(e.target.name===\"temperature\" && (e.target.value < 35 || e.target.value>47)){      \r\n//     const message =\"Temperature must not be greater than 47 and less than 35\"\r\n//     setVitalClinicalSupport({...vitalClinicalSupport, temperature:message})\r\n//     }else{\r\n//     setVitalClinicalSupport({...vitalClinicalSupport, temperature:\"\"})\r\n//     }\r\n// }\r\n//Get list of DSD Model Type\r\nfunction DsdModelType (dsdmodel) {\r\n  const dsd = dsdmodel ==='Facility' ? 'DSD_MODEL_FACILITY' : 'DSD_MODEL_COMMUNITY'\r\n  axios\r\n     .get(`${baseUrl}application-codesets/v2/${dsd}`,\r\n         { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n     )\r\n     .then((response) => {\r\n         //console.log(response.data);\r\n         setDsdModelType(response.data);\r\n     })\r\n     .catch((error) => {\r\n     //console.log(error);\r\n     });\r\n \r\n}\r\n  //Validations of the forms\r\n  const validate = () => {       \r\n    temp.visitStatus = objValues.visitStatus ? \"\" : \"This field is required\"\r\n    temp.dateOfVisit = objValues.dateOfVisit ? \"\" : \"This field is required\"\r\n    temp.dsd = objValues.dsd ? \"\" : \"This field is required\"\r\n    temp.enteryPoint = objValues.enteryPoint ? \"\" : \"This field is required\"\r\n    temp.fpCounseling = objValues.fpCounseling ? \"\" : \"This field is required\"\r\n    temp.fpMethod = objValues.fpMethod ? \"\" : \"This field is required\"\r\n    temp.dateOfmeternalOutcome = objValues.dateOfmeternalOutcome ? \"\" : \"This field is required\"\r\n    temp.maternalOutcome = objValues.maternalOutcome ? \"\" : \"This field is required\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n\r\n\r\n  /**** Submit Button Processing  */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(validate()){\r\n    setSaving(true)\r\n    axios.post(`${baseUrl}pmtct/anc/pmtct-visit`, objValues,\r\n      { headers: { \"Authorization\": `Bearer ${token}` } },\r\n\r\n    )\r\n      .then(response => {\r\n        setSaving(false);\r\n        toast.success(\"Clinic Visit save successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n      })\r\n      .catch(error => {\r\n        setSaving(false);\r\n        if(error.response && error.response.data){\r\n          let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n          toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n        }\r\n        else{\r\n          toast.error(\"Something went wrong. Please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n        }\r\n       \r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n    <div className=\"row\">\r\n\r\n      <div className=\"col-md-8 \">\r\n        <h2>Mother Follow-up Visit</h2>\r\n        </div>\r\n        \r\n      </div>\r\n      <Grid >\r\n\r\n        <Grid.Column >\r\n          <Segment>\r\n            <Label as='a' color='blue'  style={{width:'106%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}>VITAL  SIGNS</h4>\r\n            </Label>\r\n            <br /><br />\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Date of Visit *</FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"dateOfVisit\"\r\n                    id=\"dateOfVisit\"\r\n                    value={objValues.dateOfVisit}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    onChange={handleInputChange}\r\n                    //={props.patientObj && props.patientObj.artCommence ? props.patientObj.artCommence.visitDate : null}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    //min={patientObj.pmtctEnrollmentRespondDto.pmtctEnrollmentDate}\r\n                    required\r\n                  />\r\n                 {errors.dateOfVisit !==\"\" ? (\r\n                      <span className={classes.error}>{errors.dateOfVisit}</span>\r\n                  ) : \"\" }\r\n\r\n                </FormGroup>\r\n              </div>\r\n              {/* <div className=\"form-group mb-3 col-md-6\">\r\n                {showCurrentVitalSigns && (\r\n                  <div className=\"form-check custom-checkbox ml-1 \">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className=\"form-check-input\"\r\n                      name=\"currentVitalSigns\"\r\n                      id=\"currentVitalSigns\"\r\n                      onChange={handleCheckBox} \r\n                                          \r\n                    />\r\n                    <label\r\n                      className=\"form-check-label\"\r\n                      htmlFor=\"basic_checkbox_1\"\r\n                    >\r\n                      use current Vital Signs\r\n                    </label>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"row\">\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Pulse</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"pulse\"\r\n                                id=\"pulse\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"40\"\r\n                                max=\"120\"\r\n                                value={vital.pulse}\r\n                                onKeyUp={handleInputValueCheckPulse} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.pulse !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.pulse}</span>\r\n                        ) : \"\"}\r\n                        {errors.pulse !==\"\" ? (\r\n                            <span className={classes.error}>{errors.pulse}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Respiratory Rate </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"respiratoryRate\"\r\n                                id=\"respiratoryRate\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"10\"\r\n                                max=\"70\"\r\n                                value={vital.respiratoryRate}\r\n                                onKeyUp={handleInputValueCheckRespiratoryRate} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.respiratoryRate !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.respiratoryRate}</span>\r\n                        ) : \"\"}\r\n                        {errors.respiratoryRate !==\"\" ? (\r\n                            <span className={classes.error}>{errors.respiratoryRate}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Temperature </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"temperature\"\r\n                                id=\"temperature\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"35\"\r\n                                max=\"47\"\r\n                                value={vital.temperature}\r\n                                onKeyUp={handleInputValueCheckTemperature} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                <sup>o</sup>c\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.temperature !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.temperature}</span>\r\n                        ) : \"\"}\r\n                        {errors.temperature !==\"\" ? (\r\n                            <span className={classes.error}>{errors.temperature}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Body Weight</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"bodyWeight\"\r\n                                id=\"bodyWeight\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"3\"\r\n                                max=\"150\"\r\n                                value={vital.bodyWeight}\r\n                                onKeyUp={handleInputValueCheckBodyWeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                kg\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.bodyWeight !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.bodyWeight}</span>\r\n                        ) : \"\"}\r\n                        {errors.bodyWeight !==\"\" ? (\r\n                            <span className={classes.error}>{errors.bodyWeight}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>                                   \r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Height</FormLabelName>\r\n                        <InputGroup> \r\n                        <InputGroupText\r\n                                addonType=\"append\"\r\n                                style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                cm\r\n                        </InputGroupText>\r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"height\"\r\n                                id=\"height\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                value={vital.height}\r\n                                min=\"48.26\"\r\n                                max=\"216.408\"\r\n                                onKeyUp={handleInputValueCheckHeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                                <InputGroupText\r\n                                addonType=\"append\"\r\n                              \r\n                                style={{ backgroundColor:\"#992E62\", color:\"#fff\", border: \"1px solid #992E62\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                {vital.height!=='' ? (vital.height/100).toFixed(2) + \"m\" : \"m\"}\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.height !==\"\" ? (\r\n                            <span className={classes.error}>{vitalClinicalSupport.height}</span>\r\n                        ) : \"\"}\r\n                        {errors.height !==\"\" ? (\r\n                            <span className={classes.error}>{errors.height}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 mt-2 col-md-4\">\r\n                        {vital.bodyWeight!==\"\" && vital.height!=='' && (\r\n                            <FormGroup>\r\n                            <Label > {\" \"}</Label>\r\n                            <InputGroup> \r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                BMI : {Math.round(vital.bodyWeight/((vital.height * vital.height)/100))}\r\n                            </InputGroupText>                   \r\n                           \r\n                            </InputGroup>                \r\n                            </FormGroup>\r\n                        )}\r\n                    </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-12\">\r\n                    <FormGroup>\r\n                    <FormLabelName >Blood Pressure</FormLabelName>\r\n                    <InputGroup>\r\n                    <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                            systolic(mmHg)\r\n                    </InputGroupText> \r\n                        <Input \r\n                            type=\"number\"\r\n                            name=\"systolic\"\r\n                            id=\"systolic\"\r\n                            min=\"90\"\r\n                            max=\"240\"\r\n                            onChange={handleInputChangeVitalSignDto}\r\n                            value={vital.systolic}\r\n                            onKeyUp={handleInputValueCheckSystolic}\r\n                            style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}} \r\n                        />\r\n                        <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                        diastolic(mmHg)\r\n                        </InputGroupText>\r\n                            <Input \r\n                            type=\"number\"\r\n                            name=\"diastolic\"\r\n                            id=\"diastolic\"\r\n                            min={0}\r\n                            max={140}\r\n                            onChange={handleInputChangeVitalSignDto}\r\n                            value={vital.diastolic}\r\n                            onKeyUp={handleInputValueCheckDiastolic} \r\n                            style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                        \r\n                        \r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.systolic !==\"\" ? (\r\n                    <span className={classes.error}>{vitalClinicalSupport.systolic}</span>\r\n                    ) : \"\"}\r\n                    {errors.systolic !==\"\" ? (\r\n                        <span className={classes.error}>{errors.systolic}</span>\r\n                    ) : \"\" }  \r\n                    {vitalClinicalSupport.diastolic !==\"\" ? (\r\n                    <span className={classes.error}>{vitalClinicalSupport.diastolic}</span>\r\n                    ) : \"\"}\r\n                    {errors.diastolic !==\"\" ? (\r\n                        <span className={classes.error}>{errors.diastolic}</span>\r\n                    ) : \"\" }          \r\n                    </FormGroup>\r\n                </div>\r\n              </div> */}\r\n            </div>\r\n            <div className=\"row\">\r\n              \r\n              <div className=\" mb-3 col-md-3\">\r\n                <FormGroup>\r\n                  <FormLabelName >Point of Entry*</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"enteryPoint\"\r\n                    id=\"enteryPoint\"\r\n                    value={objValues.enteryPoint}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"select\">Select </option>\r\n\r\n                    {entryPoint.map((value) => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.enteryPoint !==\"\" ? (\r\n                      <span className={classes.error}>{errors.enteryPoint}</span>\r\n                  ) : \"\" }\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-3\">\r\n                <FormGroup>\r\n                  <FormLabelName >FP Counselling *</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"fpCounseling\"\r\n                    id=\"fpCounseling\"\r\n                    value={objValues.fpCounseling}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"YES\">YES </option>\r\n                    <option value=\"NO\">NO </option>\r\n                   \r\n                  </Input>\r\n                  {errors.fpCounseling !==\"\" ? (\r\n                      <span className={classes.error}>{errors.fpCounseling}</span>\r\n                  ) : \"\" }\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-3\">\r\n                <FormGroup>\r\n                  <FormLabelName >FP Method *</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"fpMethod\"\r\n                    id=\"fpMethod\"\r\n                    value={objValues.fpMethod}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"select\">Select </option>\r\n                    {fp.map((value) => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.fpMethod !==\"\" ? (\r\n                      <span className={classes.error}>{errors.fpMethod}</span>\r\n                  ) : \"\" }\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n            <br />\r\n            <Label as='a' color='teal' style={{width:'106%', height:'35px'}} ribbon>\r\n            <h4 style={{color:'#fff'}}><input type=\"radio\" name=\"timeOfViralLoad\" value=\"viralLoadAt32\" onChange={handleInputChange} checked={objValues.timeOfViralLoad==='viralLoadAt32' ? true : false}/> VIRAL LOAD AT 32-36 {\"  \"} {\"  \"} <input type=\"radio\" name=\"timeOfViralLoad\" value=\"viralLoadAtAnyTime\" onChange={handleInputChange} checked={objValues.timeOfViralLoad==='viralLoadAtAnyTime' ? true : false}/> VIRAL LOAD AT Other Time </h4>\r\n            </Label>\r\n            <br /><br />\r\n            {/* TB Screening Form */}\r\n            <div className=\"row\">\r\n            \r\n              <div className=\" mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <FormLabelName >Viral Load Collection Date*</FormLabelName>\r\n              <Input\r\n                type=\"date\"\r\n                name=\"dateOfViralLoad\"\r\n                id=\"dateOfViralLoad\"\r\n                value={objValues.dateOfViralLoad}\r\n                onChange={handleInputChange}\r\n                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                //min={patientObj.pmtctEnrollmentRespondDto.pmtctEnrollmentDate}\r\n                max={moment(new Date()).format(\"YYYY-MM-DD\")}  \r\n              />\r\n              {errors.dateOfViralLoad !==\"\" ? (\r\n                      <span className={classes.error}>{errors.dateOfViralLoad}</span>\r\n                  ) : \"\" }\r\n            </FormGroup>   \r\n              </div>\r\n              <div className=\" mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <FormLabelName >GA at VL Collection*</FormLabelName>\r\n                <Input\r\n                  type=\"number\"\r\n                  name=\"gaOfViralLoad\"\r\n                  id=\"gaOfViralLoad\"\r\n                  value={objValues.gaOfViralLoad}\r\n                  onChange={handleInputChange}\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  min={vital.encounterDate}   \r\n                />\r\n              {errors.gaOfViralLoad !==\"\" ? (\r\n                  <span className={classes.error}>{errors.gaOfViralLoad}</span>\r\n              ) : \"\" }\r\n            </FormGroup>   \r\n              </div>\r\n              <div className=\" mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <FormLabelName >Result *</FormLabelName>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"resultOfViralLoad\"\r\n                    id=\"resultOfViralLoad\"\r\n                    value={vital.nextAppointment}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}} \r\n                  />\r\n                {errors.resultOfViralLoad !==\"\" ? (\r\n                    <span className={classes.error}>{errors.resultOfViralLoad}</span>\r\n                ) : \"\" }\r\n              </FormGroup>   \r\n              </div>\r\n           </div>\r\n            <br />\r\n           \r\n            <br />\r\n            <Label as='a' color='black' style={{width:'106%', height:'35px'}} ribbon>\r\n            <h4 style={{color:'#fff'}}> DSD MODEL & OUTCOME</h4>\r\n            </Label>\r\n            <br /><br />\r\n            {/*  */}\r\n            <div className=\"row\">\r\n            <div className=\" mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <FormLabelName >DSD *</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"dsd\"\r\n                    id=\"dsd\"\r\n                    value={objValues.dsd}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"YES\">YES </option>\r\n                    <option value=\"NO\">NO </option>\r\n                   \r\n                  </Input>\r\n                  {errors.dsd !==\"\" ? (\r\n                      <span className={classes.error}>{errors.dsd}</span>\r\n                  ) : \"\" }\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.dsd==='YES' && (<>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                      <FormLabelName >DSD Model</FormLabelName>\r\n                      <Input\r\n                          type=\"select\"\r\n                          name=\"dsdModel\"\r\n                          id=\"dsdModel\"\r\n                          value={objValues.dsdModel}\r\n                          onChange={handleInputChange} \r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}                   \r\n                          >\r\n                          <option value=\"\">Select </option>\r\n                          <option value=\"Facility\">Facility </option>\r\n                          <option value=\"Community\">Community </option>\r\n                          \r\n                      </Input>\r\n                      \r\n                  </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                      <FormLabelName >DSD Model Type</FormLabelName>\r\n                      <Input\r\n                          type=\"select\"\r\n                          name=\"dsdOption\"\r\n                          id=\"dsdOption\"\r\n                          value={objValues.dsdOption}\r\n                          onChange={handleInputChange} \r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}                   \r\n                          >\r\n                          <option value=\"\">Select </option>\r\n                          {dsdModelType.map((value) => (\r\n                              <option key={value.code} value={value.code}>\r\n                                  {value.display}\r\n                              </option>\r\n                          ))}\r\n                          \r\n                      </Input>\r\n                      \r\n                  </FormGroup>\r\n              </div>\r\n              </>)}\r\n              <div className=\"form-group mb-3 col-md-3\">\r\n                  <FormGroup>\r\n                      <FormLabelName >Maternal Outcome *</FormLabelName>\r\n                      <Input\r\n                          type=\"select\"\r\n                          name=\"maternalOutcome\"\r\n                          id=\"maternalOutcome\"\r\n                          value={objValues.maternalOutcome}\r\n                          onChange={handleInputChange} \r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}                   \r\n                          >\r\n                          <option value=\"\">Select </option>\r\n                          {maternalCome.map((value) => (\r\n                              <option key={value.code} value={value.code}>\r\n                                  {value.display}\r\n                              </option>\r\n                          ))}\r\n                          \r\n                      </Input>\r\n                      \r\n                  </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-3\">\r\n              <FormGroup>\r\n                <FormLabelName >Date of Outcome *</FormLabelName>\r\n                <Input\r\n                  type=\"date\"\r\n                  name=\"dateOfmeternalOutcome\"\r\n                  id=\"dateOfmeternalOutcome\"\r\n                  value={vital.dateOfmeternalOutcome}\r\n                  onChange={handleInputChange}\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  //min={patientObj.pmtctEnrollmentRespondDto.pmtctEnrollmentDate}\r\n                  max={moment(new Date()).format(\"YYYY-MM-DD\")} \r\n                />\r\n                {errors.dateOfmeternalOutcome !==\"\" ? (\r\n                    <span className={classes.error}>{errors.dateOfmeternalOutcome}</span>\r\n                ) : \"\" }\r\n              </FormGroup>   \r\n              </div>\r\n              \r\n              <div className=\"form-group mb-3 col-md-3\">\r\n                  <FormGroup>\r\n                      <FormLabelName >Client Visit Status *</FormLabelName>\r\n                      <Input\r\n                          type=\"select\"\r\n                          name=\"visitStatus\"\r\n                          id=\"visitStatus\"\r\n                          value={objValues.visitStatus}\r\n                          onChange={handleInputChange} \r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}                   \r\n                          >\r\n                          <option value=\"\">Select </option>\r\n                          {visitStatus.map((value) => (\r\n                              <option key={value.code} value={value.code}>\r\n                                  {value.display}\r\n                              </option>\r\n                          ))}\r\n                          \r\n                      </Input>\r\n                      {errors.visitStatus !==\"\" ? (\r\n                          <span className={classes.error}>{errors.visitStatus}</span>\r\n                      ) : \"\" }\r\n                  </FormGroup>\r\n              </div>\r\n              {objValues.visitStatus==='VISIT_STATUS_PMTCT_TRANSFER_OUT' && (\r\n              <div className=\"form-group mb-3 col-md-3\">\r\n                  <FormGroup>\r\n                      <FormLabelName >Name of ART Facility </FormLabelName>\r\n                      <Input\r\n                      type=\"text\"\r\n                      name=\"transferTo\"\r\n                      id=\"transferTo\"\r\n                      value={objValues.transferTo}\r\n                      onChange={handleInputChange}\r\n                      style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                      \r\n                    />\r\n                  {errors.transferTo !==\"\" ? (\r\n                          <span className={classes.error}>{errors.transferTo}</span>\r\n                      ) : \"\" }\r\n                      \r\n                  </FormGroup>\r\n              </div>\r\n              )}\r\n            </div>  \r\n            <br />\r\n            <MatButton\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              disabled={saving}\r\n              startIcon={<SaveIcon />}\r\n              style={{backgroundColor:\"#014d88\"}}\r\n              onClick={handleSubmit}\r\n            >\r\n              {!saving ? (\r\n                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n              ) : (\r\n                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n              )}\r\n            </MatButton>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClinicVisit;\r\n","import React, {useState, useEffect } from \"react\";\r\n// import { Link } from 'react-router-dom';\r\nimport { Table  } from \"react-bootstrap\";\r\nimport { Input, Label, FormGroup, } from \"reactstrap\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {Icon, List, Label as LabelSui} from 'semantic-ui-react'\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { url as baseUrl,token } from \"./../../../../../api\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\nconst ADR = (props) => {\r\n  const [errors, setErrors] = useState({});\r\n  const classes = useStyles()\r\n  let temp = { ...errors }\r\n  const [prepSideEffect, setPrepSideEffect] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    PrepSideEffect();\r\n  }, []);\r\n       //Get list of PrepSideEffect\r\n       const PrepSideEffect =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/PREP_SIDE_EFFECTS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               //console.log(response.data);\r\n               setPrepSideEffect(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });\r\n       \r\n        }\r\n  const handAdrleInputChange = e => {\r\n    props.setAdrObj ({...props.adrObj,  [e.target.name]: e.target.value});\r\n  }\r\n   //Validations of the forms\r\n   const validate = () => {        \r\n    temp.adr = props.adrObj.adr ? \"\" : \"This field is required\"\r\n    temp.adrOnsetDate = props.adrObj.adrOnsetDate ? \"\" : \"This field is required\"\r\n\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n  const addADR = e => { \r\n    if(validate()){\r\n        props.setAdrList([...props.adrList, props.adrObj])\r\n    }else{\r\n      toast.error(\" Field are required \");\r\n    }\r\n  }\r\n  /* Remove ADR  function **/\r\n  const removeRelativeLocation = index => {       \r\n      props.adrList.splice(index, 1);\r\n      props.setAdrList([...props.adrList]);\r\n     \r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n        <div className=\"row\">\r\n        {props.enableUpdate && (\r\n        <>\r\n        <div className=\"form-group mb-3 col-md-5\">\r\n\r\n            <FormGroup>\r\n            <Label >ADR </Label>\r\n            \r\n              <Input\r\n                  type=\"select\"\r\n                  name=\"adr\"\r\n                  id=\"adr\"\r\n                  value={props.adrObj.adr}\r\n                  onChange={handAdrleInputChange}\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  required\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n                      {prepSideEffect.map((value) => (\r\n                          <option key={value.id} value={value.display}>\r\n                              {value.display}\r\n                          </option>\r\n                      ))}\r\n              </Input>\r\n                {errors.adr !==\"\" ? (\r\n                    <span className={classes.error}>{errors.adr}</span>\r\n                ) : \"\" }\r\n            </FormGroup>\r\n        </div>\r\n        <div className=\"form-group mb-3 col-md-5\">        \r\n        <FormGroup>\r\n            <Label > Onset Date</Label>\r\n            <Input\r\n                type=\"date\"\r\n                name=\"adrOnsetDate\"\r\n                id=\"adrOnsetDate\"\r\n                value={props.adrObj.adrOnsetDate}\r\n                min={props.artStartDate}\r\n                onChange={handAdrleInputChange}\r\n                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                required\r\n                > \r\n            </Input>\r\n            {errors.adrOnsetDate !==\"\" ? (\r\n                <span className={classes.error}>{errors.adrOnsetDate}</span>\r\n            ) : \"\" }\r\n            </FormGroup>\r\n        </div>\r\n        \r\n        <div className=\"form-group mb-3 col-md-2\">\r\n          <LabelSui as='a' color='black'  onClick={addADR}  size='tiny' style={{ marginTop:35}}>\r\n              <Icon name='plus' /> Add\r\n          </LabelSui>\r\n        </div>\r\n        </>)}\r\n        {props.adrList.length >0 \r\n          ?\r\n            <List>\r\n            <Table  striped responsive>\r\n                  <thead >\r\n                      <tr>\r\n                          <th>ADR</th>\r\n                          <th>OnSetDate</th>\r\n                          <th ></th>\r\n                      </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                {props.adrList.map((relative, index) => (\r\n\r\n                  <RelativeList\r\n                      key={index}\r\n                      index={index}\r\n                      relative={relative}\r\n                      removeRelativeLocation={removeRelativeLocation}\r\n                  />\r\n                  ))}\r\n                  </tbody>\r\n                  </Table>\r\n            </List>\r\n            :\r\n            \"\"\r\n        }       \r\n    </div>\r\n    </div>\r\n     \r\n  );\r\n};\r\n\r\nfunction RelativeList({\r\n  relative,\r\n  index,\r\n  removeRelativeLocation,\r\n}) {\r\n\r\n\r\n  return (\r\n          <tr>\r\n              <th>{relative.adr}</th>\r\n              <th>{relative.adrOnsetDate}</th>\r\n              <th></th>\r\n              <th >\r\n                  <IconButton aria-label=\"delete\" size=\"small\" color=\"error\" onClick={() =>removeRelativeLocation(index)}>\r\n                      <DeleteIcon fontSize=\"inherit\" />\r\n                  </IconButton>\r\n                  \r\n              </th>\r\n          </tr> \r\n  );\r\n}\r\n\r\n\r\nexport default ADR;\r\n","import React, { useState } from \"react\";\r\nimport {  Table  } from \"react-bootstrap\";\r\nimport { Input, Label, FormGroup, } from \"reactstrap\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport moment from \"moment\";\r\nimport {Icon, List, Label as LabelSui} from 'semantic-ui-react'\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\nconst ADR = (props) => {\r\n  const [errors, setErrors] = useState({});\r\n  const classes = useStyles()\r\n  let temp = { ...errors }\r\n  const handleInfectionInputChange = e => {\r\n  props.setInfection ({...props.infection,  [e.target.name]: e.target.value});\r\n  }\r\n  //Validations of the forms\r\n  const validate = () => {        \r\n    temp.ondateInfection = props.infection.ondateInfection ? \"\" : \"This field is required\"\r\n    temp.illnessInfection = props.infection.illnessInfection ? \"\" : \"This field is required\"\r\n\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n    const addInfection = e => { \r\n      if(validate()){\r\n        props.setInfectionList([...props.infectionList, props.infection])\r\n      }else{\r\n        toast.error(\" Field are required \");\r\n      }\r\n    \r\n    }\r\n    /* Remove ADR  function **/\r\n    const removeInfection = index => {       \r\n    props.infectionList.splice(index, 1);\r\n    props.setInfectionList([...props.infectionList]);\r\n        \r\n    };\r\n                                            \r\n\r\n  return (\r\n    <div>\r\n       <div className=\"row\">\r\n       {props.enableUpdate && (\r\n        <>\r\n          <div className=\"form-group mb-3 col-md-5\">\r\n              <FormGroup>\r\n              <Label >Onset Date </Label>\r\n              <Input\r\n                  type=\"date\"\r\n                  name=\"ondateInfection\"\r\n                  id=\"ondateInfection\"\r\n                  value={props.infection.ondateInfection}\r\n                  onChange={handleInfectionInputChange}\r\n                  max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  required\r\n                  > \r\n              </Input>\r\n              {errors.ondateInfection !==\"\" ? (\r\n                  <span className={classes.error}>{errors.ondateInfection}</span>\r\n              ) : \"\" }\r\n              </FormGroup>\r\n          </div>\r\n          <div className=\"form-group mb-3 col-md-5\">        \r\n          <FormGroup>\r\n              <Label > Illness</Label>\r\n              <Input\r\n                  type=\"text\"\r\n                  name=\"illnessInfection\"\r\n                  id=\"illnessInfection\"\r\n                  value={props.infection.illnessInfection}\r\n                  onChange={handleInfectionInputChange}\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  required\r\n                  > \r\n              </Input>\r\n              {errors.illnessInfection !==\"\" ? (\r\n                  <span className={classes.error}>{errors.illnessInfection}</span>\r\n              ) : \"\" }\r\n              </FormGroup>\r\n          </div>\r\n          <div className=\"form-group mb-3 col-md-2\">\r\n          <LabelSui as='a' color='black'  onClick={addInfection}  size='tiny' style={{ marginTop:35}}>\r\n              <Icon name='plus' /> Add\r\n          </LabelSui>\r\n          </div>\r\n        </>\r\n        )}\r\n        {props.infectionList.length >0 \r\n          ?\r\n            <List>\r\n            <div style={{padding:'3px 0px'}} >\r\n            <Table  striped responsive size=\"sm\" >\r\n                  <thead  >\r\n                      <tr >\r\n                          <th>Illness</th>\r\n                          <th>OnSetDate</th>\r\n                          <th ></th>\r\n                      </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                {props.infectionList.map((relative, index) => (\r\n\r\n                  <InfectionList\r\n                      key={index}\r\n                      index={index}\r\n                      relative={relative}\r\n                      removeInfection={removeInfection}\r\n                  />\r\n                  ))}\r\n                  </tbody>\r\n                  </Table>\r\n                  </div>\r\n                </List>\r\n                :\r\n                \"\"\r\n            } \r\n    </div>\r\n    </div>\r\n     \r\n  );\r\n};\r\n\r\nfunction InfectionList({\r\n    relative,\r\n    index,\r\n    removeInfection,\r\n  }) {\r\n  \r\n   \r\n    return (\r\n            <tr>\r\n  \r\n                <th>{relative.illnessInfection}</th>\r\n                <th>{relative.ondateInfection}</th>\r\n                <th></th>\r\n                <th >\r\n                    <IconButton aria-label=\"delete\" size=\"small\" color=\"error\" onClick={() =>removeInfection(index)}>\r\n                        <DeleteIcon fontSize=\"inherit\" />\r\n                    </IconButton>\r\n                    \r\n                </th>\r\n            </tr> \r\n    );\r\n  }\r\n\r\nexport default ADR;\r\n","import React, {useState, Fragment, useEffect } from \"react\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport ConsultationPage from './Home';\r\nimport ClinicHistoryPage from \"./ViewUpdate/ClinicHistory\";\r\n\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst ClinicVisitPage = (props) => {\r\n    const [key, setKey] = useState('home');\r\n    const patientObj = props.patientObj\r\n    \r\n    useEffect ( () => {\r\n      setKey(props.activeContent.activeTab)\r\n    }, [props.activeContent.id]);\r\n\r\n\r\n  return (\r\n    <Fragment>  \r\n      <Row>       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n\r\n                  <Tab eventKey=\"home\" title=\"MOTHER FOLLOW UP VISIT \">                   \r\n                    <ConsultationPage patientObj={patientObj} setActiveContent={props.setActiveContent}/>\r\n                  </Tab>  \r\n                  <Tab eventKey=\"history\" title=\" CHILD FOLLOW UP VISIT\">                   \r\n                   <ConsultationPage patientObj={patientObj} setActiveContent={props.setActiveContent}/>\r\n                  </Tab>                   \r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ClinicVisitPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Segment, Label,} from 'semantic-ui-react'\r\n// Page titie\r\nimport { FormGroup, Label as FormLabelName, InputGroup,\r\n          InputGroupText,\r\n          InputGroupButtonDropdown,\r\n          Input,\r\n          DropdownToggle,\r\n          DropdownMenu,\r\n          DropdownItem\r\n        } from \"reactstrap\";\r\nimport ADR from './../ADR/Index'\r\nimport OpportunisticInfection from './../OpportunisticInfection/Index'\r\nimport TBScreening from './../TBScreening/Index'\r\nimport { url as baseUrl, token } from \"../../../../../api\";\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Row, Col,   } from \"react-bootstrap\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { Button as ButtonSMUI, Icon} from 'semantic-ui-react'\r\nimport {Link} from 'react-router-dom';\r\n//import { objectValues } from \"react-toastify/dist/utils\";\r\n\r\n\r\nlet adherenceLevelObj = []\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1)\r\n    }\r\n  },\r\n  input: {\r\n    display: 'none'\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\n\r\n\r\nconst ClinicVisit = (props) => {\r\n  const patientObj = props.patientObj ? props.patientObj : {}\r\n  const [dropdownOpen, setDropdownOpen] = React.useState(false);\r\n  const [splitButtonOpen, setSplitButtonOpen] = React.useState(false);\r\n  const toggleDropDown = () => setDropdownOpen(!dropdownOpen);\r\n  const toggleSplit = () => setSplitButtonOpen(!splitButtonOpen);\r\n  const [visitId, setVisitId]= useState()\r\n  const [enableUpdateButton, setEnableUpdateButton]=useState(false)\r\n  const [heightValue, setHeightValue]= useState(\"cm\")\r\n  const [enableUpdate, setEnableUpdate]= useState(false) //Enable update for all input field if the user have permission\r\n  const [errors, setErrors] = useState({});\r\n  const [clinicVisitList, setClinicVisitList] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  let temp = { ...errors }\r\n  const classes = useStyles()\r\n  // the visit date history \r\n  //end of the visit date history\r\n  const [getPatientObj, setGetPatientObj] = useState({});\r\n  const [saving, setSaving] = useState(false);\r\n  const [clinicalStage, setClinicalStage] = useState([]);\r\n  const [functionalStatus, setFunctionalStatus] = useState([]);\r\n  const [adherenceLevel, setAdherenceLevel] = useState([]);\r\n  const [tbStatus, setTbStatus] = useState([]);\r\n  const [TBForms, setTBForms] = useState(false)\r\n  const [currentVitalSigns, setcurrentVitalSigns] = useState({})\r\n  const [showCurrentVitalSigns, setShowCurrentVitalSigns] = useState(false)\r\n  //opportunistic infection Object\r\n  const [infection, setInfection] = useState({ illnessInfection: \"\", ondateInfection: \"\" });\r\n  const [infectionList, setInfectionList] = useState([]);\r\n  //ADR array Object \r\n  const [adrObj, setAdrObj] = useState({ adr: \"\", adrOnsetDate: \"\" });\r\n  const [adrList, setAdrList] = useState([]);\r\n  //Vital signs clinical decision support \r\n  const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n                                                                    bodyWeight: \"\",\r\n                                                                    diastolic: \"\",\r\n                                                                    height: \"\",\r\n                                                                    systolic: \"\",\r\n                                                                    pulse:\"\",\r\n                                                                    temperature:\"\",\r\n                                                                    respiratoryRate:\"\" \r\n                                                                  })\r\n  const [objValues, setObjValues] = useState({\r\n    adherenceLevel: \"\",\r\n    adheres: {},\r\n    adrScreened: \"\",\r\n    adverseDrugReactions: {},\r\n    artStatusId: \"\" ,\r\n    cd4: \"\",\r\n    cd4Percentage: \"\",\r\n    clinicalNote: \"\",\r\n    clinicalStageId: \"\",\r\n    facilityId: 0,\r\n    functionalStatusId: \"\",\r\n    hivEnrollmentId: \"\",\r\n    nextAppointment: \"\",\r\n    lmpDate: \"\",\r\n    oiScreened: \"\",\r\n    opportunisticInfections: {},\r\n    personId: patientObj.id,\r\n    tbScreen: {},\r\n    stiIds: \"\",\r\n    stiTreated: \"\",\r\n    uuid: \"\",\r\n    visitDate: \"\",\r\n    whoStagingId: \"\"\r\n  });\r\n  const [vital, setVitalSignDto] = useState({\r\n    bodyWeight: \"\",\r\n    diastolic: \"\",\r\n    encounterDate: \"\",\r\n    facilityId: 1,\r\n    height: \"\",\r\n    personId: props.patientObj.id,\r\n    serviceTypeId: 1,\r\n    systolic: \"\",\r\n    pulse:\"\",\r\n    temperature:\"\",\r\n    respiratoryRate:\"\" \r\n  })\r\n  const [tbObj, setTbObj] = useState({\r\n    currentOnIpt: \"\",\r\n    coughing: \"\",\r\n    antiTBDrug: \"\",\r\n    nightSweat: \"\",\r\n    fever: \"\",\r\n    contactWithTBCase: \"\",\r\n    lethergy: \"\",\r\n    tbStatusId: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    FunctionalStatus();\r\n    WhoStaging();\r\n    AdherenceLevel();\r\n    TBStatus();\r\n    VitalSigns()\r\n    GetPatientObj();\r\n    ClinicVisitListHistory();\r\n    if(props.activeContent.id!==null){\r\n     \r\n      GetVisitById(props.activeContent.id)\r\n      setVisitId(props.activeContent.id)\r\n    }\r\n  }, []);\r\n     //GET LIST Drug Refill\r\n     async function ClinicVisitListHistory() {\r\n      setLoading(true)\r\n      axios\r\n          .get(`${baseUrl}hiv/art/clinic-visit/person?pageNo=0&pageSize=10&personId=${props.patientObj.id}`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n          )\r\n          .then((response) => {\r\n              setLoading(false)\r\n              setClinicVisitList(response.data.filter((x)=> x.isCommencement!==true));              \r\n          })\r\n          .catch((error) => {  \r\n              setLoading(false)  \r\n          });        \r\n    }\r\n  //Check for the last Vital Signs\r\n  const VitalSigns = () => {\r\n    axios\r\n      .get(`${baseUrl}patient/vital-sign/person/${props.patientObj.id}`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n\r\n        const lastVitalSigns = response.data[response.data.length - 1]\r\n        if (lastVitalSigns.encounterDate === moment(new Date()).format(\"YYYY-MM-DD\") === true) {\r\n          setcurrentVitalSigns(lastVitalSigns)\r\n          setShowCurrentVitalSigns(true)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n    //Get The updated patient objeect\r\n    const GetPatientObj = () => {\r\n      axios\r\n        .get(`${baseUrl}hiv/patients`,\r\n          { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n          const patObJ= response.data.filter((x)=> x.id===props.patientObj.id)\r\n\r\n          setGetPatientObj(patObJ[0])\r\n        })\r\n        .catch((error) => {\r\n          //console.log(error);\r\n        });\r\n    }\r\n\r\n  //Get list of WhoStaging\r\n  const WhoStaging = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/CLINICAL_STAGE`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setClinicalStage(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n  ///GET LIST OF FUNCTIONAL%20_STATUS\r\n  // TB STATUS\r\n  const TBStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setTbStatus(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n\r\n  async function FunctionalStatus() {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/FUNCTIONAL%20_STATUS`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n\r\n        setFunctionalStatus(response.data);\r\n        //setValues(response.data)\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  ///Level of Adherence\r\n  async function AdherenceLevel() {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_LEVEL_OF_ADHERENCE`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setAdherenceLevel(response.data);\r\n\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  const handleInputChange = e => {\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    if (e.target.name === \"whoStagingId\") {\r\n      if (e.target.value === \"NO\") {\r\n        setTBForms(true)\r\n      } else {\r\n        setTBForms(false)\r\n      }\r\n    }\r\n  }\r\n  const handleInputChangeVitalSignDto = e => {\r\n    setVitalSignDto({ ...vital, [e.target.name]: e.target.value });\r\n  }\r\n\r\n  //Handle CheckBox \r\n  const handleCheckBox = e => {\r\n    if (e.target.checked) {\r\n      //currentVitalSigns.personId === null ? props.patientObj.id : currentVitalSigns.personId\r\n      setVitalSignDto({ ...currentVitalSigns })\r\n    } else {\r\n      setVitalSignDto({\r\n        bodyWeight: \"\",\r\n        diastolic: \"\",\r\n        encounterDate: \"\",\r\n        facilityId: \"\",\r\n        height: \"\",\r\n        personId: props.patientObj.id,\r\n        serviceTypeId: \"\",\r\n        systolic: \"\",\r\n        pulse:\"\",\r\n        temperature:\"\",\r\n        respiratoryRate:\"\" \r\n      })\r\n    }\r\n  }\r\n  //to check the input value for clinical decision \r\n  const handleInputValueCheckHeight =(e)=>{\r\n    if(e.target.name===\"height\" && (e.target.value < 48.26 || e.target.value>216.408)){\r\n      const message =\"Height cannot be greater than 216.408 and less than 48.26\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, height:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, height:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckBodyWeight =(e)=>{\r\n    if(e.target.name===\"bodyWeight\" && (e.target.value < 3 || e.target.value>150)){      \r\n      const message =\"Body weight must not be greater than 150 and less than 3\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckSystolic =(e)=>{\r\n    if(e.target.name===\"systolic\" && (e.target.value < 90 || e.target.value>240)){      \r\n      const message =\"Blood Pressure systolic must not be greater than 240 and less than 90\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckDiastolic =(e)=>{\r\n    if(e.target.name===\"diastolic\" && (e.target.value < 60 || e.target.value>140)){      \r\n      const message =\"Blood Pressure diastolic must not be greater than 140 and less than 60\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckPulse =(e)=>{\r\n    if(e.target.name===\"pulse\" && (e.target.value < 40 || e.target.value>120)){      \r\n    const message =\"Pulse must not be greater than 120 and less than 40\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:\"\"})\r\n    }\r\n}\r\nconst handleInputValueCheckRespiratoryRate =(e)=>{\r\n    if(e.target.name===\"respiratoryRate\" && (e.target.value < 10 || e.target.value>70)){      \r\n    const message =\"Respiratory Rate must not be greater than 70 and less than 10\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:\"\"})\r\n    }\r\n}\r\nconst handleInputValueCheckTemperature =(e)=>{\r\n    if(e.target.name===\"temperature\" && (e.target.value < 35 || e.target.value>47)){      \r\n    const message =\"Temperature must not be greater than 47 and less than 35\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, temperature:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, temperature:\"\"})\r\n    }\r\n}\r\n  //Validations of the forms\r\n  const validate = () => {        \r\n    temp.encounterDate = vital.encounterDate ? \"\" : \"This field is required\"\r\n    temp.nextAppointment = objValues.nextAppointment ? \"\" : \"This field is required\"\r\n    temp.whoStagingId = objValues.whoStagingId ? \"\" : \"This field is required\"\r\n    temp.clinicalNote = objValues.clinicalNote ? \"\" : \"This field is required\"\r\n    temp.functionalStatusId = objValues.functionalStatusId ? \"\" : \"This field is required\"\r\n    temp.adherenceLevel = objValues.adherenceLevel ? \"\" : \"This field is required\"\r\n    temp.labTestGroupId = vital.diastolic ? \"\" : \"This field is required\"\r\n    temp.systolic = vital.systolic ? \"\" : \"This field is required\"\r\n    temp.height = vital.height ? \"\" : \"This field is required\"\r\n    temp.bodyWeight = vital.bodyWeight ? \"\" : \"This field is required\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n\r\n  const  heightFunction =(e)=>{\r\n    if(e==='cm'){\r\n        setHeightValue('cm')\r\n        if(vital.height!==\"\"){\r\n            const newHeightValue= (vital.height * 100)\r\n            setVitalSignDto ({...vital,  height: newHeightValue});\r\n        }\r\n    }else if(e==='m'){\r\n        setHeightValue('m')\r\n        if(vital.height!==\"\"){\r\n            const newHeightValue= (vital.height/100)\r\n            setVitalSignDto ({...vital,  height: newHeightValue});\r\n        }\r\n        \r\n    }\r\n\r\n  }\r\n  /**** Submit Button Processing  */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(validate()){\r\n    setSaving(true)\r\n    objValues.visitDate = vital.encounterDate\r\n    objValues.adverseDrugReactions = adrList\r\n    objValues.artStatusId = getPatientObj.artCommence.id\r\n    objValues.hivEnrollmentId = getPatientObj.enrollment.id\r\n    objValues.opportunisticInfections = infectionList\r\n    objValues.tbScreen = tbObj\r\n    objValues['vitalSignDto'] = vital\r\n    axios.put(`${baseUrl}hiv/art/clinic-visit/${visitId}`, objValues,\r\n      { headers: { \"Authorization\": `Bearer ${token}` } },\r\n\r\n    )\r\n      .then(response => {\r\n        setSaving(false);\r\n        toast.success(\"Clinic Visit updated successful\");\r\n        //GetVisitById(visitId)\r\n        //props.setActiveContent({...props.activeContent, route:'consultation', id:\"\", activeTab:\"history\", actionType:\"view\", obj:{}})\r\n      })\r\n      .catch(error => {\r\n        setSaving(false);\r\n        if(error.response && error.response.data){\r\n          let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        }\r\n        else{\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n       \r\n      });\r\n    }\r\n  }\r\n  //Get visit by ID\r\n  async function GetVisitById(visitID) {\r\n    axios\r\n      .get(`${baseUrl}hiv/art/clinic-visit/${visitID}`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n          const e = response.data\r\n          setVitalSignDto({ ...e.vitalSignDto })\r\n          objValues.clinicalNote = e.clinicalNote\r\n          objValues.functionalStatusId= e.functionalStatusId\r\n          objValues.whoStagingId= e.whoStagingId \r\n          objValues.nextAppointment= e.nextAppointment\r\n          objValues.adherenceLevel = e.adherenceLevel\r\n          setTbObj({...e.tbScreen})\r\n          setAdrList([...e.adverseDrugReactions])\r\n          setInfectionList([...e.opportunisticInfections])\r\n\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  const getVisitDetail=(e)=>{\r\n      setEnableUpdateButton(true)\r\n      setVisitId(e.id)\r\n      GetVisitById(e.id)      \r\n  }\r\n  const EnableUpdateAction =()=>{\r\n\r\n      setEnableUpdate(true)\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n        <div className=\"row\">\r\n            <div className=\"col-xl-3 col-xxl-3 col-lg-3\" >\r\n                <div className=\"card\" style={{ height: \"500px\" }}>\r\n                    <div className=\"card-header  border-0 pb-2\" style={{backgroundColor:\"#014D88\"}}>\r\n                    <h4 className=\"card-title\" style={{color:\"#fff\"}}> Clinic Visits</h4>\r\n                    </div>\r\n                    <div className=\"card-body\" >\r\n                    <PerfectScrollbar\r\n                        style={{ height: \"370px\" }}\r\n                        id=\"DZ_W_Todo1\"\r\n                        className=\"widget-media dz-scroll ps ps--active-y\"\r\n                    >\r\n                    {clinicVisitList.map((visit,index)=>(\t\r\n                    <div className=\"media pb-3 border-bottom mb-0 align-items-center\" key={index}>\t\t\t\t\t\t\t\t\r\n                      <div className=\"media-body\">\r\n                            <ButtonSMUI\r\n                                color='black'\r\n                                content='Visit Date'\r\n                                icon='calendar alternate'\r\n                                onClick={()=>getVisitDetail(visit)}\r\n                                label={{ basic: true, color: 'grey', pointing: 'left', content: `${visit.visitDate}` }}\r\n                            />\r\n                      </div>\r\n                    </div>\r\n\t\t\t\t\t\t))}\r\n                    </PerfectScrollbar>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"col-xl-9 col-xxl-9 col-lg-9\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header  border-0 pb-2\" style={{backgroundColor:\"#014D88\"}}>\r\n                    <h4 className=\"card-title\" style={{color:\"#fff\"}}> </h4>\r\n                    {enableUpdateButton && (\r\n                    <ButtonSMUI color='facebook' onClick={()=>EnableUpdateAction()} >\r\n                      <Icon name='edit' /> Edit Visit \r\n                    </ButtonSMUI>\r\n                    )}\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                    <Grid columns='equal'>\r\n                    <Grid.Column >\r\n                    <Segment>\r\n                    <Label as='a' color='black' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}> Visit Date - {vital.encounterDate}</h4>\r\n                        </Label>\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <FormLabelName >Date of Visit *</FormLabelName>\r\n                            <Input\r\n                                type=\"date\"\r\n                                name=\"encounterDate\"\r\n                                id=\"encounterDate\"\r\n                                value={vital.encounterDate}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            />\r\n                            {errors.encounterDate !==\"\" ? (\r\n                                <span className={classes.error}>{errors.encounterDate}</span>\r\n                            ) : \"\" }\r\n\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n\r\n                        </div>\r\n                        <div className=\"row\">\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Pulse</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"pulse\"\r\n                                id=\"pulse\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"40\"\r\n                                max=\"120\"\r\n                                value={vital.pulse}\r\n                                onKeyUp={handleInputValueCheckPulse} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.pulse !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.pulse}</span>\r\n                        ) : \"\"}\r\n                        {errors.pulse !==\"\" ? (\r\n                            <span className={classes.error}>{errors.pulse}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Respiratory Rate </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"respiratoryRate\"\r\n                                id=\"respiratoryRate\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"10\"\r\n                                max=\"70\"\r\n                                value={vital.respiratoryRate}\r\n                                onKeyUp={handleInputValueCheckRespiratoryRate} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.respiratoryRate !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.respiratoryRate}</span>\r\n                        ) : \"\"}\r\n                        {errors.respiratoryRate !==\"\" ? (\r\n                            <span className={classes.error}>{errors.respiratoryRate}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Temperature </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"temperature\"\r\n                                id=\"temperature\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"35\"\r\n                                max=\"47\"\r\n                                value={vital.temperature}\r\n                                onKeyUp={handleInputValueCheckTemperature} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                <sup>o</sup>c\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.temperature !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.temperature}</span>\r\n                        ) : \"\"}\r\n                        {errors.temperature !==\"\" ? (\r\n                            <span className={classes.error}>{errors.temperature}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Body Weight</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"bodyWeight\"\r\n                                id=\"bodyWeight\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"3\"\r\n                                max=\"150\"\r\n                                value={vital.bodyWeight}\r\n                                onKeyUp={handleInputValueCheckBodyWeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                kg\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.bodyWeight !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.bodyWeight}</span>\r\n                        ) : \"\"}\r\n                        {errors.bodyWeight !==\"\" ? (\r\n                            <span className={classes.error}>{errors.bodyWeight}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>                                   \r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Height</FormLabelName>\r\n                        <InputGroup> \r\n                        <InputGroupText\r\n                                addonType=\"append\"\r\n                                isOpen={dropdownOpen}\r\n                                toggle={toggleDropDown}\r\n                                style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                cm\r\n                        </InputGroupText>\r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"height\"\r\n                                id=\"height\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                value={vital.height}\r\n                                min=\"48.26\"\r\n                                max=\"216.408\"\r\n                                onKeyUp={handleInputValueCheckHeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                                <InputGroupText\r\n                                addonType=\"append\"\r\n                                isOpen={dropdownOpen}\r\n                                toggle={toggleDropDown}\r\n                                style={{ backgroundColor:\"#992E62\", color:\"#fff\", border: \"1px solid #992E62\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                {vital.height!=='' ? (vital.height/100).toFixed(2) + \"m\" : \"m\"}\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.height !==\"\" ? (\r\n                            <span className={classes.error}>{vitalClinicalSupport.height}</span>\r\n                        ) : \"\"}\r\n                        {errors.height !==\"\" ? (\r\n                            <span className={classes.error}>{errors.height}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 mt-2 col-md-4\">\r\n                        {vital.bodyWeight!==\"\" && vital.height!=='' && (\r\n                            <FormGroup>\r\n                            <Label > {\" \"}</Label>\r\n                            <InputGroup> \r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                BMI : {Math.round(vital.bodyWeight/((vital.height * vital.height)/100))}\r\n                            </InputGroupText>                   \r\n                           \r\n                            </InputGroup>                \r\n                            </FormGroup>\r\n                        )}\r\n                    </div>\r\n              </div>\r\n              <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-8\">\r\n                  <FormGroup>\r\n                  <FormLabelName >Blood Pressure</FormLabelName>\r\n                  <InputGroup>\r\n                  <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                          systolic(mmHg)\r\n                  </InputGroupText> \r\n                      <Input \r\n                          type=\"number\"\r\n                          name=\"systolic\"\r\n                          id=\"systolic\"\r\n                          min=\"90\"\r\n                          max=\"240\"\r\n                          onChange={handleInputChangeVitalSignDto}\r\n                          value={vital.systolic}\r\n                          onKeyUp={handleInputValueCheckSystolic}\r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}} \r\n                      />\r\n                      <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                      diastolic(mmHg)\r\n                      </InputGroupText>\r\n                          <Input \r\n                          type=\"number\"\r\n                          name=\"diastolic\"\r\n                          id=\"diastolic\"\r\n                          min={0}\r\n                          max={140}\r\n                          onChange={handleInputChangeVitalSignDto}\r\n                          value={vital.diastolic}\r\n                          onKeyUp={handleInputValueCheckDiastolic} \r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                          />\r\n                      \r\n                      \r\n                  </InputGroup>\r\n                  {vitalClinicalSupport.systolic !==\"\" ? (\r\n                  <span className={classes.error}>{vitalClinicalSupport.systolic}</span>\r\n                  ) : \"\"}\r\n                  {errors.systolic !==\"\" ? (\r\n                      <span className={classes.error}>{errors.systolic}</span>\r\n                  ) : \"\" }  \r\n                  {vitalClinicalSupport.diastolic !==\"\" ? (\r\n                  <span className={classes.error}>{vitalClinicalSupport.diastolic}</span>\r\n                  ) : \"\"}\r\n                  {errors.diastolic !==\"\" ? (\r\n                      <span className={classes.error}>{errors.diastolic}</span>\r\n                  ) : \"\" }          \r\n                  </FormGroup>\r\n              </div>\r\n\r\n              </div>\r\n                        </div>\r\n                        <Label as='a' color='grey' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>CONSULTATION</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n\r\n                        <div className=\" mb-3\">\r\n                        <FormLabelName >Clinical Notes</FormLabelName>\r\n                        <textarea\r\n                            name=\"clinicalNote\"\r\n                            className=\"form-control\"\r\n                            value={objValues.clinicalNote}\r\n                            onChange={handleInputChange}\r\n                            style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                            disabled={!enableUpdate}\r\n                        ></textarea>\r\n                        {errors.clinicalNote !==\"\" ? (\r\n                                <span className={classes.error}>{errors.clinicalNote}</span>\r\n                            ) : \"\" }\r\n                        </div>\r\n                        <div className=\"row\">\r\n\r\n                        <div className=\" mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <FormLabelName >WHO Staging *</FormLabelName>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"whoStagingId\"\r\n                                id=\"whoStagingId\"\r\n                                value={objValues.whoStagingId}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            >\r\n                                <option value=\"select\">Select </option>\r\n\r\n                                {clinicalStage.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                                ))}\r\n                            </Input>\r\n                            {errors.whoStagingId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.whoStagingId}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\" mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <FormLabelName >Functional Status *</FormLabelName>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"functionalStatusId\"\r\n                                id=\"functionalStatusId\"\r\n                                value={objValues.functionalStatusId}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            >\r\n                                <option value=\"select\">Select </option>\r\n\r\n                                {functionalStatus.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                                ))}\r\n                            </Input>\r\n                            {errors.functionalStatusId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.functionalStatusId}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\" mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <FormLabelName >Level of Adherence *</FormLabelName>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"adherenceLevel\"\r\n                                id=\"adherenceLevel\"\r\n                                value={objValues.adherenceLevel}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            >\r\n                                <option value=\"\">Select </option>\r\n\r\n                                {adherenceLevel.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                                ))}\r\n                            </Input>\r\n                            {errors.adherenceLevel !==\"\" ? (\r\n                                <span className={classes.error}>{errors.adherenceLevel}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n\r\n                        </div>\r\n                        <br />\r\n                        <Label as='a' color='red' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>OPPORTUNISTIC INFECTION</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n                        <OpportunisticInfection setInfection={setInfection} infection={infection} setInfectionList={setInfectionList} infectionList={infectionList} enableUpdate={enableUpdate}/>\r\n                        <br />\r\n                        <Label as='a' color='pink' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>ADR</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n                        <ADR setAdrObj={setAdrObj} adrObj={adrObj} setAdrList={setAdrList} adrList={adrList}  enableUpdate={enableUpdate}/>\r\n                        <br />\r\n                        <Label as='a' color='teal' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>TB SCREENING</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n                        {/* TB Screening Form */}\r\n                        <TBScreening tbObj={tbObj} setTbObj={setTbObj} enableUpdate={enableUpdate}/>\r\n                        <br />\r\n                        <Label as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>NEXT CLINICAL APPOINTMENT DATE</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n                        {/* TB Screening Form */}\r\n                        <Input\r\n                                type=\"date\"\r\n                                name=\"nextAppointment\"\r\n                                id=\"nextAppointment\"\r\n                                className=\"col-md-6\"\r\n                                value={objValues.nextAppointment}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                min={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            />\r\n                        {errors.nextAppointment !==\"\" ? (\r\n                                <span className={classes.error}>{errors.nextAppointment}</span>\r\n                            ) : \"\" }\r\n                        <br />\r\n                        <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        disabled={saving}\r\n                        startIcon={<SaveIcon />}\r\n                        style={{backgroundColor:\"#014d88\"}}\r\n                        onClick={handleSubmit}\r\n                        hidden={!enableUpdate}\r\n                        >\r\n                        {!saving ? (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                        ) : (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                        )}\r\n                        </MatButton>\r\n                    </Segment>\r\n                    </Grid.Column>\r\n\r\n                </Grid>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    </div>    \r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClinicVisit;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Card,CardBody, FormGroup, Label, Input, InputGroup,InputGroupText} from 'reactstrap';\r\nimport {Label as FormLabelName, } from \"reactstrap\";\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\nimport {Message } from 'semantic-ui-react'\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\nconst AncPnc = (props) => {\r\n    const patientObj = props.patientObj;\r\n    //console.log(patientObj)\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [pointOfEntry, setPointOfEntry] = useState([]);\r\n    const [tbStatus, setTbStatus] = useState([]);\r\n    const [timingOfArtInitiation, setTimingOfArtInitiation] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const [enroll, setEnrollDto]= useState({\r\n            ancNo: patientObj.ancNo,\r\n            pmtctEnrollmentDate:\"\",\r\n            pointOfEntry: \"\",\r\n            ga: props.patientObj.gaweeks,\r\n            gravida: props.patientObj.gravida,\r\n            artStartDate: \"\",\r\n            timingOfArtInitiation: \"\",\r\n            id: \"\",\r\n            tbStatus:\"\"            \r\n    })\r\n    useEffect(() => { \r\n        POINT_ENTRY_PMTCT();\r\n        TIME_ART_INITIATION_PMTCT();\r\n        TB_STATUS();\r\n    }, []);\r\n    const POINT_ENTRY_PMTCT =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/POINT_ENTRY_PMTCT`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setPointOfEntry(response.data)\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    const TIME_ART_INITIATION_PMTCT =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TIME_ART_INITIATION_PMTCT`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setTimingOfArtInitiation(response.data)\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    const TB_STATUS =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setTbStatus(response.data)\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    const handleInputChangeEnrollmentDto = e => {            \r\n        setEnrollDto ({...enroll,  [e.target.name]: e.target.value});\r\n    }\r\n\r\n    //FORM VALIDATION\r\n    const validate = () => {\r\n        let temp = { ...errors }        \r\n        temp.pmtctEnrollmentDate = enroll.pmtctEnrollmentDate ? \"\" : \"This field is required\"\r\n        temp.pointOfEntry = enroll.pointOfEntry ? \"\" : \"This field is required\"\r\n        temp.ga = enroll.ga ? \"\" : \"This field is required\"\r\n        temp.gravida = enroll.gravida ? \"\" : \"This field is required\"\r\n        temp.pmtctEnrollmentDate = enroll.pmtctEnrollmentDate ? \"\" : \"This field is required\"\r\n        temp.artStartDate = enroll.artStartDate ? \"\" : \"This field is required\"\r\n        temp.timingOfArtInitiation = enroll.timingOfArtInitiation ? \"\" : \"This field is required\"\r\n        temp.tbStatus = enroll.tbStatus ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        if (validate()){             \r\n        setSaving(true);\r\n        axios.post(`${baseUrl}pmtct/anc/pmtct-enrollment`, enroll,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n        \r\n        )\r\n            .then(response => {\r\n                setSaving(false);\r\n                props.patientObj.pmtctRegStatus=true\r\n                toast.success(\"Enrollment save successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                toast.error(\"Something went wrong\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                \r\n            });\r\n        }\r\n    }\r\n\r\n  return (      \r\n      <div >\r\n                   \r\n        <Card className={classes.root}>\r\n            <CardBody>\r\n            <form >\r\n                <div className=\"row\">\r\n                <h2>PMTCT Enrollment</h2>\r\n                <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                            <Label >ANC ID *</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"ancNo\"\r\n                                    id=\"ancNo\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={patientObj.ancNo} \r\n                                    disabled\r\n                                />\r\n\r\n                            </InputGroup>\r\n                            {errors.ancNo !==\"\" ? (\r\n                                <span className={classes.error}>{errors.ancNo}</span>\r\n                        ) : \"\" }\r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                            <Label >Date of Enrollment *</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"pmtctEnrollmentDate\"\r\n                                    id=\"pmtctEnrollmentDate\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.pmtctEnrollmentDate} \r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                />\r\n\r\n                            </InputGroup>\r\n                            {errors.pmtctEnrollmentDate !==\"\" ? (\r\n                                <span className={classes.error}>{errors.pmtctEnrollmentDate}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <Label >Point of Entry *</Label>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"select\"\r\n                                name=\"pointOfEntry\"\r\n                                id=\"pointOfEntry\"\r\n                                onChange={handleInputChangeEnrollmentDto}\r\n                                value={enroll.pointOfEntry} \r\n                            >\r\n                                <option value=\"\">Select</option>\r\n                                {pointOfEntry.map((value, index) => (\r\n                                    <option key={index} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                            </Input>\r\n\r\n                        </InputGroup>\r\n                        {errors.pointOfEntry !==\"\" ? (\r\n                                <span className={classes.error}>{errors.pointOfEntry}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div> \r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                            <Label >GA *</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"ga\"\r\n                                    id=\"ga\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.ga} \r\n                                    disabled\r\n                                />\r\n\r\n                            </InputGroup>\r\n                            {errors.ga !==\"\" ? (\r\n                                <span className={classes.error}>{errors.ga}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                            <Label >Gravida *</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"gravida\"\r\n                                    id=\"gravida\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.gravida} \r\n                                    disabled\r\n                                />\r\n\r\n                            </InputGroup>\r\n                            {errors.gravida !==\"\" ? (\r\n                                <span className={classes.error}>{errors.gravida}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                            <Label >Art Start Date *</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"artStartDate\"\r\n                                    id=\"artStartDate\"\r\n                                    onChange={handleInputChangeEnrollmentDto}\r\n                                    value={enroll.artStartDate} \r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                />\r\n\r\n                            </InputGroup>\r\n                            {errors.artStartDate !==\"\" ? (\r\n                                <span className={classes.error}>{errors.artStartDate}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <Label >Timing of ART Initiation *</Label>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"select\"\r\n                                name=\"timingOfArtInitiation\"\r\n                                id=\"timingOfArtInitiation\"\r\n                                onChange={handleInputChangeEnrollmentDto}\r\n                                value={enroll.timingOfArtInitiation} \r\n                            >\r\n                                <option value=\"\">Select</option>\r\n                                {timingOfArtInitiation.map((value, index) => (\r\n                                    <option key={index} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                            </Input>\r\n\r\n                        </InputGroup>\r\n                        {errors.timingOfArtInitiation !==\"\" ? (\r\n                                <span className={classes.error}>{errors.timingOfArtInitiation}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div> \r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <Label >TB Status *</Label>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"select\"\r\n                                name=\"tbStatus\"\r\n                                id=\"tbStatus\"\r\n                                onChange={handleInputChangeEnrollmentDto}\r\n                                value={enroll.tbStatus} \r\n                            >\r\n                                <option value=\"\">Select</option>\r\n                                {tbStatus.map((value, index) => (\r\n                                    <option key={index} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                            </Input>\r\n\r\n                        </InputGroup>\r\n                        {errors.tbStatus !==\"\" ? (\r\n                                <span className={classes.error}>{errors.tbStatus}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                </div>\r\n                \r\n                {saving ? <Spinner /> : \"\"}\r\n            <br />\r\n            \r\n            <MatButton\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            startIcon={<SaveIcon />}\r\n            onClick={handleSubmit}\r\n            >\r\n                {!saving ? (\r\n                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                ) : (\r\n                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                )}\r\n            </MatButton>\r\n            \r\n            <MatButton\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                startIcon={<CancelIcon />}\r\n                \r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n            </MatButton>\r\n            \r\n                </form>\r\n            </CardBody>\r\n        </Card> \r\n                  \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AncPnc;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Card,CardBody, FormGroup, Label, Input, InputGroup} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\nconst AncEnrollement = (props) => {\r\n    const patientObj = props.patientObj;\r\n    console.log(patientObj)\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    //const [values, setValues] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const [vital, setVitalSignDto]= useState({\r\n\r\n                                                bodyWeight: \"\",\r\n                                                diastolic: \"\",\r\n                                                encounterDate: \"\",\r\n                                                facilityId: 1,\r\n                                                height: \"\",\r\n                                                personId: \"\",\r\n                                                pulse: \"\",\r\n                                                respiratoryRate: \"\",\r\n                                                systolic:\"\",\r\n                                                temperature: \"\",\r\n                                                visitId:\"\"\r\n                                            })\r\n    \r\n    const handleInputChangeVitalSignDto = e => {            \r\n        setVitalSignDto ({...vital,  [e.target.name]: e.target.value});\r\n    }\r\n\r\n    //FORM VALIDATION\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        //temp.name = details.name ? \"\" : \"This field is required\"\r\n        //temp.description = details.description ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n        \r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();        \r\n        \r\n        setSaving(true);\r\n        axios.post(`${baseUrl}patient/vital-sign/`, vital,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n        \r\n        )\r\n            .then(response => {\r\n                setSaving(false);\r\n                props.patientObj.commenced=true\r\n                toast.success(\"Vital signs save successful\");\r\n                props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                toast.error(\"Something went wrong\");\r\n                \r\n            });\r\n        \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n                   \r\n        <Card className={classes.root}>\r\n            <CardBody>\r\n            <form >\r\n                <div className=\"row\">\r\n                <h2>ANC Enrollment</h2>\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >ANC No *</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date of 1st ANC *</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Gravida</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"number\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Parity</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"number\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date Of Last Menstrual Period* </Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Expected Date Of Delivery </Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"Date\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Gestational Age (Weeks)</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Time of HIV Diagnosis</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Source of Referral</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    \r\n                    <h3>Syphilis Information</h3>\r\n                    <hr/>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Tested for syphilis?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Test Result</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Treated for Syphilis</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Referred for syphilis treatment</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <h3>PMTCT HTS</h3>\r\n                    <hr/>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Previously known HIV positive?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date tested HIV positive</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Accepted HIV Testing?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >HIV test result</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >HIV Restesting?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Received HIV test result?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    \r\n                    <h3>Hepatitis Information</h3>\r\n                    <hr/>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Tested for Hepatitis B</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Hepatitis B test result</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Tested for Hepatitis C</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Hepatitis C test result</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                />\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <h3>Partner Notification</h3>\r\n                    <hr/>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Agreed to partner notification?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                >\r\n                                    <option value=\"\">Select</option>\r\n                                </Input>\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Partner's HIV status</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                >\r\n                                    <option value=\"\">Select</option>\r\n                                </Input>\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Partner referred to?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"encounterDate\"\r\n                                    id=\"encounterDate\"\r\n                                    onChange={handleInputChangeVitalSignDto}\r\n                                    value={vital.encounterDate} \r\n                                >\r\n                                    <option value=\"\">Select</option>\r\n                                </Input>\r\n                            </InputGroup>                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                </div>\r\n                \r\n                {saving ? <Spinner /> : \"\"}\r\n            <br />\r\n            \r\n            <MatButton\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            startIcon={<SaveIcon />}\r\n            onClick={handleSubmit}\r\n            >\r\n                {!saving ? (\r\n                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                ) : (\r\n                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                )}\r\n            </MatButton>\r\n            \r\n            <MatButton\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                startIcon={<CancelIcon />}\r\n                \r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n            </MatButton>\r\n            \r\n                </form>\r\n            </CardBody>\r\n        </Card> \r\n                  \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AncEnrollement;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Card,CardBody, FormGroup, Label, Input, InputGroup} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport { Spinner } from \"reactstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    }, \r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\nconst LabourDelivery = (props) => {\r\n    const patientObj = props.patientObj;\r\n    //let history = useHistory();\r\n    const classes = useStyles()\r\n    const [delieryMode, setDelieryMode] = useState([]);\r\n    const [feedingDecision, setfeedingDecision] = useState([]);\r\n    const [maternalOutCome, setmaternalOutCome] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [childStatus, setChildStatus] = useState([]);\r\n    const [bookingStatus, setBookingStatus] = useState([]);\r\n    const [delivery, setDelivery]= useState({\r\n\r\n                ancNo: patientObj.ancNo,\r\n                artStartedLdWard: \"\",\r\n                bookingStatus: \"\",\r\n                childGivenArvWithin72: \"\",\r\n                childStatus: \"\",\r\n                dateOfDelivery: \"\",\r\n                deliveryTime: \"\",\r\n                episiotomy: \"\",\r\n                feedingDecision: \"\",\r\n                gaweeks: \"\",\r\n                hbstatus: \"\",\r\n                hcstatus: \"\",\r\n                hivExposedInfantGivenHbWithin24hrs: \"\",\r\n                maternalOutcome: \"\",\r\n                modeOfDelivery: \"\",\r\n                onArt: \"\",\r\n                referalSource: \"\",\r\n                romDeliveryInterval: \"\",\r\n                vaginalTear: \"\"\r\n    })\r\n    useEffect(() => {           \r\n        MODE_DELIVERY();\r\n        FEEDING_DECISION();\r\n        MATERNAL_OUTCOME();\r\n        CHILD_STATUS_DELIVERY();\r\n        BOOKING_STATUS();\r\n    }, [props.patientObj.id, ]);\r\n    //Get list \r\n    const BOOKING_STATUS =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/BOOKING STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setBookingStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const MODE_DELIVERY =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/MODE_DELIVERY`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setDelieryMode(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const CHILD_STATUS_DELIVERY =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/CHILD_STATUS_DELIVERY`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setChildStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const FEEDING_DECISION =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/FEEDING DECISION`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setfeedingDecision(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const MATERNAL_OUTCOME =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/MATERNAL_OUTCOME`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setmaternalOutCome(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChangeDeliveryDto = e => {  \r\n        setErrors({...errors, [e.target.name]: \"\"})            \r\n        setDelivery ({...delivery,  [e.target.name]: e.target.value});\r\n    }\r\n\r\n    //FORM VALIDATION\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.artStartedLdWard = delivery.artStartedLdWard ? \"\" : \"This field is required\"\r\n        temp.referalSource = delivery.referalSource ? \"\" : \"This field is required\"\r\n        temp.romDeliveryInterval = delivery.romDeliveryInterval ? \"\" : \"This field is required\"\r\n        temp.vaginalTear = delivery.vaginalTear ? \"\" : \"This field is required\"\r\n        temp.onArt = delivery.onArt ? \"\" : \"This field is required\"\r\n        temp.modeOfDelivery = delivery.modeOfDelivery ? \"\" : \"This field is required\"\r\n        temp.maternalOutcome = delivery.maternalOutcome ? \"\" : \"This field is required\"\r\n        temp.hivExposedInfantGivenHbWithin24hrs = delivery.hivExposedInfantGivenHbWithin24hrs ? \"\" : \"This field is required\"\r\n        temp.hcstatus = delivery.hcstatus ? \"\" : \"This field is required\"\r\n        temp.hbstatus = delivery.hbstatus ? \"\" : \"This field is required\"\r\n        temp.gaweeks = delivery.gaweeks ? \"\" : \"This field is required\"\r\n        temp.feedingDecision = delivery.feedingDecision ? \"\" : \"This field is required\"\r\n        temp.episiotomy = delivery.episiotomy ? \"\" : \"This field is required\"\r\n        temp.deliveryTime = delivery.deliveryTime ? \"\" : \"This field is required\"\r\n        temp.dateOfDelivery = delivery.dateOfDelivery ? \"\" : \"This field is required\"\r\n        temp.childStatus = delivery.childStatus ? \"\" : \"This field is required\"\r\n        temp.childGivenArvWithin72 = delivery.childGivenArvWithin72 ? \"\" : \"This field is required\"\r\n        temp.bookingStatus = delivery.bookingStatus ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();        \r\n        if(validate()){\r\n        setSaving(true);\r\n        axios.post(`${baseUrl}pmtct/anc/pmtct-delivery`, delivery,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n        \r\n        )\r\n            .then(response => {\r\n                setSaving(false);\r\n                //props.patientObj.commenced=true\r\n                toast.success(\"Record save successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                toast.error(\"Something went wrong\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                \r\n            });\r\n        }else{\r\n            toast.error(\"All field are required\", {position: toast.POSITION.BOTTOM_CENTER});\r\n        } \r\n    }\r\n\r\n  return (      \r\n      <div >\r\n                   \r\n        <Card className={classes.root}>\r\n            <CardBody>\r\n            <form >\r\n                <div className=\"row\">\r\n                    <h2>labour and Delivery</h2>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >ANC ID  *</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"ancNo\"\r\n                                    id=\"ancNo\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.ancNo} \r\n                                    disabled\r\n                                />\r\n                            </InputGroup>\r\n                            {errors.ancNo !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.ancNo}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Booking Status</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"bookingStatus\"\r\n                                    id=\"bookingStatus\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.bookingStatus} \r\n                                >\r\n                                <option value=\"\">Select </option>\r\n                                    \r\n                                    {bookingStatus.map((value) => (\r\n                                        <option key={value.id} value={value.code}>\r\n                                            {value.display}\r\n                                        </option>\r\n                                    ))}\r\n\r\n                               </Input>\r\n                            </InputGroup>\r\n                            {errors.bookingStatus !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.bookingStatus}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date of Delivery</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"date\"\r\n                                    name=\"dateOfDelivery\"\r\n                                    id=\"dateOfDelivery\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.dateOfDelivery} \r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                />\r\n\r\n                            </InputGroup>\r\n                            {errors.dateOfDelivery !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfDelivery}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Gestational Age (weeks)</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"number\"\r\n                                    name=\"gaweeks\"\r\n                                    id=\"gaweeks\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.gaweeks} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                            {errors.gaweeks !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.gaweeks}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >ROM to Delivery Interval </Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"number\"\r\n                                    name=\"romDeliveryInterval\"\r\n                                    id=\"romDeliveryInterval\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.romDeliveryInterval} \r\n                                />\r\n\r\n                            </InputGroup>\r\n                            {errors.romDeliveryInterval !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.romDeliveryInterval}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Mode of Delivery</Label>\r\n                            \r\n                            <Input\r\n                                    type=\"select\"\r\n                                    name=\"modeOfDelivery\"\r\n                                    id=\"modeOfDelivery\"\r\n                                    value={delivery.modeOfDelivery}\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    required\r\n                                >\r\n                                     <option value=\"\">Select </option>\r\n                                        \r\n                                        {delieryMode.map((value) => (\r\n                                            <option key={value.id} value={value.code}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                </Input>\r\n                                {errors.modeOfDelivery !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.modeOfDelivery}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Episiotomy</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"episiotomy\"\r\n                                    id=\"episiotomy\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.episiotomy} \r\n                                >\r\n                                    <option value=\"\" >Select</option>\r\n                                    <option value=\"Yes\" >Yes</option>\r\n                                    <option value=\"No\" >No</option>\r\n                                </Input>\r\n\r\n                            </InputGroup>\r\n                            {errors.episiotomy !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.episiotomy}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Vaginal Tear</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"vaginalTear\"\r\n                                    id=\"vaginalTear\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.vaginalTear} \r\n                                >\r\n                                    <option value=\"\" >Select</option>\r\n                                    <option value=\"Yes\" >Yes</option>\r\n                                    <option value=\"No\" >No</option>\r\n                                </Input>\r\n                            </InputGroup>\r\n                            {errors.vaginalTear !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.vaginalTear}</span>\r\n                                ) : \"\" }                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Feeding decision</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"feedingDecision\"\r\n                                    id=\"feedingDecision\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.feedingDecision} \r\n                                >\r\n                                    <option value=\"\">Select </option>\r\n                                        \r\n                                    {feedingDecision.map((value) => (\r\n                                        <option key={value.id} value={value.code}>\r\n                                            {value.display}\r\n                                        </option>\r\n                                    ))}\r\n                                </Input>\r\n\r\n                            </InputGroup>\r\n                            {errors.feedingDecision !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.feedingDecision}</span>\r\n                                ) : \"\" }  \r\n                            </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Maternal Outcome</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"maternalOutcome\"\r\n                                    id=\"maternalOutcome\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.maternalOutcome} \r\n                                >\r\n                                    <option value=\"\">Select </option>    \r\n                                    {maternalOutCome.map((value) => (\r\n                                        <option key={value.id} value={value.code}>\r\n                                            {value.display}\r\n                                        </option>\r\n                                    ))}\r\n                                </Input>\r\n                            </InputGroup> \r\n                            {errors.maternalOutcome !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.maternalOutcome}</span>\r\n                                ) : \"\" }                                       \r\n                            </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Child given ARV within 72 hrs</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"childGivenArvWithin72\"\r\n                                    id=\"childGivenArvWithin72\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.childGivenArvWithin72} \r\n                                >\r\n                                <option value=\"\" >Select</option>\r\n                                <option value=\"Yes\" >Yes</option>\r\n                                <option value=\"No\" >No</option>\r\n                            </Input>\r\n                            </InputGroup>\r\n                            {errors.childGivenArvWithin72 !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.childGivenArvWithin72}</span>\r\n                                ) : \"\" }                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Child status</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"childStatus\"\r\n                                    id=\"childStatus\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.childStatus} \r\n                                >\r\n                                <option value=\"\">Select </option>    \r\n                                {childStatus.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                            </InputGroup>\r\n                            {errors.childStatus !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.childStatus}</span>\r\n                                ) : \"\" }                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >On ART?</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"onArt\"\r\n                                    id=\"onArt\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.onArt} \r\n                                >\r\n                                \r\n                                <option value=\"\" >Select</option>\r\n                                <option value=\"Yes\" >Yes</option>\r\n                                <option value=\"No\" >No</option>\r\n                                </Input>\r\n                            </InputGroup> \r\n                            {errors.onArt !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.onArt}</span>\r\n                                ) : \"\" }                                       \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >HIV exposed infant given Hep B within 24 hrs of birth</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"hivExposedInfantGivenHbWithin24hrs\"\r\n                                    id=\"hivExposedInfantGivenHbWithin24hrs\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.hivExposedInfantGivenHbWithin24hrs} \r\n                                    >\r\n                                    <option value=\"\" >Select</option>\r\n                                    <option value=\"Yes\" >Yes</option>\r\n                                    <option value=\"No\" >No</option>\r\n                                    </Input>\r\n                            </InputGroup>\r\n                            {errors.hivExposedInfantGivenHbWithin24hrs !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.hivExposedInfantGivenHbWithin24hrs}</span>\r\n                                ) : \"\" }                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    \r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Time of Diagnosis</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"time\"\r\n                                    name=\"deliveryTime\"\r\n                                    id=\"deliveryTime\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.deliveryTime} \r\n                                />\r\n                            </InputGroup>\r\n                            {errors.deliveryTime !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.deliveryTime}</span>\r\n                                ) : \"\" }                                          \r\n                            </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >ART started in L&D ward</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"artStartedLdWard\"\r\n                                    id=\"artStartedLdWard\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.artStartedLdWard} \r\n                                >\r\n                                <option value=\"\" >Select</option>\r\n                                <option value=\"Yes\" >Yes</option>\r\n                                <option value=\"No\" >No</option>\r\n                                </Input>\r\n                            </InputGroup>\r\n                            {errors.artStartedLdWard !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.artStartedLdWard}</span>\r\n                                ) : \"\" }                                        \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Source of Referral</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"referalSource\"\r\n                                    id=\"referalSource\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.referalSource} \r\n                                />\r\n                            </InputGroup>\r\n                            {errors.referalSource !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.referalSource}</span>\r\n                                ) : \"\" }                                         \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Hepatitis B Status</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"hbstatus\"\r\n                                    id=\"hbstatus\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.hbstatus} \r\n                                    >\r\n                                    <option value=\"\" >Select</option>\r\n                                    <option value=\"Positive\" >Yes</option>\r\n                                    <option value=\"Negative\" >No</option>\r\n                                    </Input>\r\n                            </InputGroup>\r\n                            {errors.hbstatus !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.hbstatus}</span>\r\n                                ) : \"\" }                                         \r\n                            </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Hepatitis C Status</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"hcstatus\"\r\n                                    id=\"hcstatus\"\r\n                                    onChange={handleInputChangeDeliveryDto}\r\n                                    value={delivery.hcstatus} \r\n                                >\r\n                                <option value=\"\" >Select</option>\r\n                                <option value=\"Positive\" >Yes</option>\r\n                                <option value=\"Negative\" >No</option>\r\n                                </Input>\r\n                            </InputGroup> \r\n                            {errors.hcstatus !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.hcstatus}</span>\r\n                                ) : \"\" }                                        \r\n                            </FormGroup>\r\n                    </div>\r\n  \r\n            </div>\r\n                \r\n                {saving ? <Spinner /> : \"\"}\r\n            <br />\r\n            \r\n            <MatButton\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            startIcon={<SaveIcon />}\r\n            style={{backgroundColor:\"#014d88\"}}\r\n            onClick={handleSubmit}\r\n            >\r\n                {!saving ? (\r\n                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                ) : (\r\n                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                )}\r\n            </MatButton>\r\n            \r\n            <MatButton\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                startIcon={<CancelIcon />}\r\n                style={{backgroundColor:'#992E62'}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n            </MatButton>\r\n            \r\n                </form>\r\n            </CardBody>\r\n        </Card> \r\n                  \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LabourDelivery;\r\n","export default __webpack_public_path__ + \"static/media/fingerprintimage.73ff98ea.png\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport {Dropdown,Badge} from 'react-bootstrap';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport fingerprintimage  from './../../images/fingerprintimage.png';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\r\n            fontFamily:'FontAwesome',\r\n            border:'0',\r\n            verticalAlign:'middle',\r\n            marginLeft:'.25em',\r\n            lineHeight:'1'\r\n        },\r\n        \"& .dropdown-menu .dropdown-item\":{\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            padding: '0.3rem 1.5rem',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .mt-4\":{\r\n            marginTop:'28px !important'\r\n        },\r\n        \"& .form-control\":{\r\n            color:'#992E62'\r\n        },\r\n        \"& .form-control:focus\":{\r\n            color:'#014d88'\r\n        },\r\n        \"& .sharp \":{\r\n            \"min-width\": \"35px\",\r\n            padding:\"5px\",\r\n            height: '35px',\r\n            \"min-height\": \"35px\"\r\n}\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n/*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nfunction Biometrics(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [biometricDevices,setbiometricDevices] = useState([]);\r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageLoading, setPageLoading] = useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n    // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([]);\r\n    const [selectedFingers, setSelectedFingers] = useState([]);\r\n\r\n    const buttonSx = {\r\n        ...(success && {\r\n            bgcolor: green[500],\r\n            '&:hover': {\r\n                bgcolor: green[700],\r\n            },\r\n        }),\r\n    };\r\n\r\n    const getPersonBiometrics = async() =>{\r\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n\r\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\r\n            if(response.data.length > 0){\r\n                setStoredBiometrics(response.data);\r\n                setPageLoading(true);\r\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\r\n                setSelectedFingers(personCapturedFingers);\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\r\n\r\n                });\r\n                setFingerType(biometricItems);\r\n            }else{\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: false});\r\n                    //return item.captured = personCapturedFingers.includes(item.display)\r\n                });\r\n                setFingerType(biometricItems);\r\n\r\n            }\r\n\r\n        }).catch(async (error)=>{\r\n            console.log(\"getPersonBiometrics error\")\r\n            console.log(error)\r\n\r\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                return _.extend({}, item, {captured: false});\r\n            });\r\n            setFingerType(biometricItems);\r\n            setPageLoading(true);\r\n        })\r\n    }\r\n\r\n    const clear_storelist = () =>{\r\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            console.log('cleared store')\r\n        }).catch((error)=>{\r\n            console.log(\"cleared store error\")\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        clear_storelist();\r\n        getPersonBiometrics();\r\n        TemplateType();\r\n        //biometricFingers();\r\n    }, []);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n                            setbiometricDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    //Get list of Finger index\r\n    const biometricFingers =()=>{\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setFingerType(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    //check if device is plugged or not\r\n    const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data.errorType ===\"ERROR\"){\r\n                    toast.error(response.data.errorName + \" is not plug\");\r\n                    //setshowCapture(true)\r\n                }else{\r\n                    setshowCapture(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // handle the input changes\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //to capture  selected index finger\r\n    const captureFinger = (e) => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    setLoading(true);\r\n                    if(response.data.type ===\"ERROR\"){\r\n                        setLoading(false);\r\n                        setTryAgain(true);\r\n                        window.setTimeout(() => {\r\n                            setTryAgain(false);\r\n                        }, 5000);\r\n                        toast.error(response.data.message.ERROR);\r\n                    }else{\r\n                        const templateType= response.data.templateType\r\n                        setTryAgain(false);\r\n                        setSuccess(true)\r\n                        window.setTimeout(() => {\r\n                            setSuccess(false)\r\n                            setLoading(false);\r\n                        }, 5000);\r\n                        let biometricsEnrollments = response.data\r\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\r\n\r\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\r\n                        //fingerType.splice(templateType, 1);\r\n                        _.find(fingerType,{'display':templateType}).captured = true;\r\n                        setFingerType([...fingerType]);\r\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\r\n                        setObjValues({...objValues, templateType:\"\"});\r\n                    }\r\n                    //toast.success(\"Record save successful\");\r\n                })\r\n                .catch(error => {\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteBiometric =(id,finger)=>{\r\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            toast.success(`${finger} deleted successfully`);\r\n            _.find(fingerType,{'display':finger}).captured = false;\r\n            setFingerType([...fingerType]);\r\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\r\n            setStoredBiometrics(newStoredBiometrics);\r\n            clear_storelist();\r\n            if(newStoredBiometrics.length === 0){\r\n                props.updatePatientBiometricStatus(false);\r\n            }\r\n        }).catch((error)=>{\r\n            toast.error(\"Something went wrong\");\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {\r\n        e.preventDefault();\r\n        if(capturedFingered.length >= 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\r\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Biometric save successful\");\r\n                    setCapturedFingered([])\r\n                    getPersonBiometrics();\r\n                    props.patientObj.biometricStatus=true\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    //props.updatePatientBiometricStatus(true);\r\n                })\r\n                .catch(error => {\r\n                    toast.error(\"Something went wrong saving biometrics\");\r\n                    console.log(error);\r\n                });\r\n        }else{\r\n\r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n\r\n            <div style={{display:\"flex\",width:'100%'}}>\r\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\r\n                    {pageLoading && storedBiometrics.length > 0 ? (\r\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\r\n                                {storedBiometrics.map((biometric, index)=>(\r\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\r\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\r\n\r\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\r\n                                                <div>\r\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\r\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                                </div>\r\n\r\n                                                {/*Action button -- Dropdown menu*/}\r\n                                                <Dropdown className=\"dropdown ms-auto\"  >\r\n                                                    <Dropdown.Toggle\r\n                                                        as=\"button\"\r\n                                                        variant=\"\"\r\n                                                        drop=\"up\"\r\n                                                        className=\"btn sharp btn-primary \"\r\n                                                        id=\"tp-btn\"\r\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\r\n                                                    >\r\n                                                        <svg\r\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                                            width=\"18px\"\r\n                                                            height=\"18px\"\r\n                                                            viewBox=\"0 0 24 24\"\r\n                                                            version=\"1.1\"\r\n                                                        >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                    </Dropdown.Toggle>\r\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\r\n                                                            <DeleteIcon /> Delete\r\n                                                        </Dropdown.Item>\r\n\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n\r\n                                            </div>\r\n                                            <div className=\"card-body p-0 pb-2\">\r\n                                                <ul className=\"list-group list-group-flush\">\r\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\r\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\r\n                                                    </li>\r\n\r\n                                                    <li className=\"list-group-item\">\r\n\r\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\r\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\r\n                                                        <span className=\"text-black desc-text ms-2\">\r\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\r\n                                                    </span>\r\n                                                    </li>\r\n\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div className=\"flex-grow-8\">\r\n                                <div  className=\"flex-grow-8\"  >\r\n                                    <Alert severity=\"info\">\r\n                                        <AlertTitle style={{height:'400px'}}>\r\n                                            <strong>No biometrics captured</strong>\r\n                                        </AlertTitle>\r\n                                    </Alert>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <div className=\"col-12\">\r\n                            <ToastContainer />\r\n                            <Col md={12}>\r\n                                <FormGroup>\r\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Device </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"device\"\r\n                                        id=\"device\"\r\n                                        onChange={checkDevice}\r\n                                        value={objValues.device}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Select Device </option>\r\n                                        {biometricDevices.map(({ id, name }) => (\r\n                                            <option key={id} value={name}>\r\n                                                {name}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.device !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.device}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </Col>\r\n                            {showCapture ? (\r\n                                    <div className=\"row col-12\">\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">Select Finger </option>\r\n\r\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\r\n                                                        <option key={value.id} value={value.display}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Input>\r\n                                                {errors.templateType !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.templateType}</span>\r\n                                                ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md={6}>\r\n\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={captureFinger}\r\n                                                className={'mt-4'}\r\n                                                style={{backgroundColor:'#992E62'}}\r\n                                                startIcon={<FingerprintIcon />}\r\n                                            >\r\n                                                Capture Finger\r\n                                            </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\r\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\r\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n\r\n                   \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n            <Form >\r\n\r\n                    <Card>\r\n                         <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader>\r\n                        <CardBody>\r\n                            <Row form>\r\n                                <ToastContainer />\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for='device'>Select Device </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"device\"\r\n                                            id=\"device\"\r\n                                            onChange={checkDevice}\r\n                                            value={objValues.device}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Device </option>\r\n                                            {biometricDevices.map(({ id, name }) => (\r\n                                                <option key={id} value={name}>\r\n                                                    {name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                        {errors.device !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.device}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for='device'>Select Finger</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"templateType\"\r\n                                                        id=\"templateType\"\r\n                                                        onChange={handleInputChange}\r\n                                                        value={objValues.templateType}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\">Select Finger </option>\r\n\r\n                                                        {fingerType.map((value) => (\r\n                                                            <option key={value.id} value={value.display}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                    {errors.templateType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.templateType}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col md={4}>\r\n\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={captureFinger}\r\n                                                    className={'mt-4'}\r\n                                                    startIcon={<FingerprintIcon />}\r\n                                                >\r\n                                                    Capture Finger\r\n                                                </MatButton>\r\n\r\n                                            </Col>\r\n                                            <br/>\r\n\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                 <img width='500' height='200' src={responseImage}/>\r\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                                    {loading && (\r\n                                        <>\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                    </Fab>\r\n                                                    {loading && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: green[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                    {tryAgain && (\r\n                                        <>\r\n\r\n\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        <FingerprintIcon />\r\n                                                    </Fab>\r\n                                                    {tryAgain && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: red[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    Click to Recapture Again\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} >\r\n                                                <h3>Captured Fingerprints</h3>\r\n                                            </Col>\r\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\r\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n            </Form>\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Biometrics;","\r\nimport React, { useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {  Modal } from \"react-bootstrap\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },\r\n    success:{\r\n        color: 'green',\r\n        fontSize: '12.8px',\r\n        fontWeight:'bold'\r\n    }\r\n}));\r\n\r\n\r\nconst BasicInfo = (props) => {\r\n    console.log(props)\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [errors, setErrors] = useState({});\r\n    const [saving, setSaving] = useState(false);\r\n    const [hideNumChild, setHideNumChild] = useState(false);\r\n    const [kP, setKP] = useState([]);\r\n    const [enrollSetting, setEnrollSetting] = useState([]);\r\n    const [sourceReferral, setSourceReferral] = useState([]);\r\n    const [gender, setGender] = useState([])\r\n    const [counselingType, setCounselingType] = useState([]);\r\n    const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n    const [indexTesting, setIndexTesting]= useState([]);\r\n    let temp = { ...errors }\r\n    const [clientCodeetail, setclientCodeetail]= useState(\"\");\r\n    const [clientCodeetail2, setclientCodeetail2]= useState(\"\");\r\n    const [clientCodeCheck, setClientCodeCheck]= useState(\"\");\r\n\r\n    const [objValues, setObjValues]= useState(\r\n        {\r\n            active: true,\r\n            personId: props.patientObj.personId,\r\n            clientCode: props.patientObj && props.patientObj.clientCode ? props.patientObj.clientCode :\"\",  \r\n            breastFeeding:props.patientObj && props.patientObj.breastFeeding ? props.patientObj.breastFeeding :\"\",\r\n            dateVisit: props.patientObj && props.patientObj.dateVisit ? props.patientObj.dateVisit :\"\",\r\n            firstTimeVisit: props.patientObj && props.patientObj.firstTimeVisit ? props.patientObj.firstTimeVisit :\"\",\r\n            indexClient: props.patientObj && props.patientObj.indexClient ? props.patientObj.indexClient :\"\",\r\n            numChildren: props.patientObj && props.patientObj.numChildren ? props.patientObj.numChildren :\"\",\r\n            numWives: props.patientObj && props.patientObj.numWives ? props.patientObj.numWives :\"\",\r\n            pregnant:props.patientObj && props.patientObj.pregnant ? props.patientObj.pregnant :\"\",           \r\n            previouslyTested: props.patientObj ? props.patientObj.previouslyTested :\"\",\r\n            referredFrom: props.patientObj ? props.patientObj.referredFrom :\"\",\r\n            riskAssessment:  props.patientObj && props.patientObj.riskAssessment? props.patientObj.riskAssessment : {},\r\n            riskStratificationCode:props.extra && props.extra.code!=='' ? props.extra.code : \"\",\r\n            targetGroup: props.patientObj && props.patientObj.targetGroup? props.patientObj.targetGroup :\"\",\r\n            testingSetting:props.patientObj ? props.patientObj.testingSetting :\"\",\r\n            typeCounseling: props.patientObj ? props.patientObj.typeCounseling :\"\",\r\n            relationshipWithIndexClient:props.patientObj ? props.patientObj.relationshipWithIndexClient :\"\",\r\n            indexClientCode:props.patientObj ? props.patientObj.indexClientCode :\"\",\r\n        }\r\n    )    \r\n    useEffect(() => { \r\n        KP(); \r\n        EnrollmentSetting(); \r\n        SourceReferral();\r\n        Genders();\r\n        CounselingType();\r\n        PregnancyStatus()\r\n        IndexTesting();\r\n    }, [ props.patientObj]);\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of IndexTesting\r\n    const IndexTesting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/INDEX_TESTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setIndexTesting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    \r\n    //Get list of KP\r\n    const CounselingType =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/COUNSELING_TYPE`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCounselingType(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TEST_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of Genders from \r\n    const Genders =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/GENDER`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setGender(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    const handleInputChange = e => { \r\n        setErrors({...temp, [e.target.name]:\"\"}) \r\n        if(e.target.name==='indexClientCode' && e.target.value!==''){\r\n            async function getIndexClientCode() {\r\n                const indexClientCode=e.target.value\r\n                const response = await axios.get(`${baseUrl}hts/client/${indexClientCode}`,\r\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                    );\r\n                if(response.data!=='Record Not Found'){\r\n                    setclientCodeetail2(\"\")\r\n                    setclientCodeetail(response.data)\r\n                    \r\n                }else{\r\n                    setclientCodeetail(\"\")\r\n                    setclientCodeetail2(response.data)\r\n                }\r\n            }\r\n            getIndexClientCode();\r\n        }         \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});            \r\n    }\r\n\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        //HTS FORM VALIDATION\r\n        \r\n           temp.clientCode = objValues.clientCode ? \"\" : \"This field is required.\"\r\n            temp.typeCounseling = objValues.typeCounseling ? \"\" : \"This field is required.\"\r\n            temp.testingSetting = objValues.testingSetting ? \"\" : \"This field is required.\"\r\n            temp.targetGroup = objValues.targetGroup ? \"\" : \"This field is required.\"\r\n            temp.referredFrom = objValues.referredFrom ? \"\" : \"This field is required.\"\r\n            temp.previouslyTested = objValues.previouslyTested ? \"\" : \"This field is required.\" \r\n            temp.indexClient = objValues.indexClient ? \"\" : \"This field is required.\"  \r\n            temp.firstTimeVisit = objValues.firstTimeVisit ? \"\" : \"This field is required.\" \r\n            temp.dateVisit = objValues.dateVisit ? \"\" : \"This field is required.\"               \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n    }\r\n    //checkClientCode\r\n    const checkClientCode = e => { \r\n\r\n        async function getIndexClientCode() {\r\n            const indexClientCode=objValues.clientCode\r\n            const response = await axios.get(`${baseUrl}hts/client/${indexClientCode}`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                );\r\n            if(response.data!=='Record Not Found'){\r\n                setClientCodeCheck(\"Client code already exist\")\r\n            }else{\r\n                setClientCodeCheck(\"\")\r\n            }\r\n        }\r\n        getIndexClientCode();\r\n                          \r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        const patientForm ={\r\n            clientCode: objValues.clientCode,\r\n            dateVisit: objValues.dateVisit,\r\n            extra: {},\r\n            firstTimeVisit: objValues.firstTimeVisit,\r\n            indexClient: objValues.indexClient,\r\n            numChildren: objValues.numChildren,\r\n            numWives: objValues.numWives,\r\n            personId: props.patientObj.personId,\r\n            hospitalNumber:objValues.clientCode,\r\n            previouslyTested: objValues.previouslyTested,\r\n            referredFrom: objValues.referredFrom,\r\n            targetGroup: objValues.targetGroup,\r\n            testingSetting: objValues.testingSetting,\r\n            typeCounseling:objValues.typeCounseling,\r\n            breastFeeding:objValues.breastFeeding,\r\n            pregnant:objValues.pregnant,\r\n            relationshipWithIndexClient:objValues.relationshipWithIndexClient,\r\n            riskStratificationCode:props.extra && props.extra.code!=='' ? props.extra.code : \"\",\r\n            }\r\n\r\n            if(validate()){\r\n            axios.post(`${baseUrl}hts`,patientForm,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n            .then(response => {\r\n                setSaving(false);\r\n                props.setPatientObj(response.data)\r\n                //toast.success(\"HTS Test successful\");\r\n                if(props.patientAge>15){\r\n                    handleItemClick('pre-test-counsel', 'basic' )\r\n                }else{\r\n                    handleItemClick('hiv-test', 'baisc')\r\n                }\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n            });\r\n            }else{\r\n                toast.error(\"All fields are required\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n            }\r\n    }\r\n\r\n\r\n    return (\r\n        <>  \r\n        \r\n            <Card className={classes.root}>\r\n                <CardBody>   \r\n                <h2 style={{color:'#000'}}>CLIENT INTAKE FORM </h2>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Target Group *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"targetGroup\"\r\n                                        id=\"targetGroup\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.targetGroup}\r\n                                        disabled\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {kP.map((value) => (\r\n                                            <option key={value.id} value={value.code}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    {errors.targetGroup !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroup}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Client Code *</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"clientCode\"\r\n                                    id=\"clientCode\"\r\n                                    value={objValues.clientCode}\r\n                                    onChange={handleInputChange}\r\n                                    //disabled={props.clientCode!==\"\" && props.clientCode!==null? true : false}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                {errors.clientCode !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clientCode}</span>\r\n                                ) : \"\" }                                \r\n                                </FormGroup>\r\n                            </div>                           \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Referred From *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"referredFrom\"\r\n                                        id=\"referredFrom\"\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {sourceReferral.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    {errors.referredFrom !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.referredFrom}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Setting*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"testingSetting\"\r\n                                        id=\"testingSetting\"\r\n                                        value={objValues.testingSetting}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {enrollSetting.map((value) => (\r\n                                            <option key={value.id} value={value.code}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    {errors.testingSetting !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.testingSetting}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Visit Date  </Label>\r\n                                <Input\r\n                                    type=\"date\"\r\n                                    name=\"dateVisit\"\r\n                                    id=\"dateVisit\"\r\n                                    value={objValues.dateVisit}\r\n                                    onChange={handleInputChange}\r\n                                    min={objValues.dateOfRegistration}\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    \r\n                                />\r\n                                {errors.dateVisit !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateVisit}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            {/* {(objValues.targetGroup!=='457' && objValues.targetGroup!==\"\") && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Gender</Label>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name=\"genderId\"\r\n                                    id=\"genderId\"\r\n                                    value={objValues.genderId}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                >\r\n                                    <option value={\"\"}></option>\r\n                                    {gender.map((value) => (\r\n                                        <option key={value.id} value={value.id}>\r\n                                            {value.display}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                               \r\n                            </FormGroup>\r\n                            </div>\r\n                            )} */}\r\n\r\n                            {(objValues.age>9 ) && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Number of Children {'<5'} years</Label>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        name=\"numChildren\"\r\n                                        id=\"numChildren\"\r\n                                        min={0}\r\n                                        value={objValues.numChildren}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                    /> \r\n                                     \r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            {(objValues.age > 9 && objValues.sexId=='376') && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Number of wives/co-wives</Label>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        name=\"numWives\"\r\n                                        id=\"numWives\"\r\n                                        min={0}\r\n                                        value={objValues.numWives}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                    />\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Index Testing</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"indexClient\"\r\n                                        id=\"indexClient\"\r\n                                        value={objValues.indexClient}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">YES</option>\r\n                                        <option value=\"false\">NO</option>\r\n                                    </select>\r\n                                    {errors.indexClient !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.indexClient}</span>\r\n                                    ) : \"\" }   \r\n                                </FormGroup>\r\n                            </div>\r\n                            {objValues.indexClient==='true' && (\r\n                            <>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Relationship of the index client</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"relationshipWithIndexClient\"\r\n                                        id=\"relationshipWithIndexClient\"\r\n                                        value={objValues.relationshipWithIndexClient}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {indexTesting.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                             <div className=\"form-group  col-md-4\">\r\n                             <FormGroup>\r\n                                 <Label>Index Client Code/ID</Label>\r\n                                 <Input\r\n                                     type=\"text\"\r\n                                     name=\"indexClientCode\"\r\n                                     id=\"indexClientCode\"\r\n                                     value={objValues.indexClientCode}\r\n                                     onBlur ={checkClientCode}\r\n                                     onChange={handleInputChange}\r\n                                     style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                \r\n                                 />\r\n                                 {clientCodeCheck!==\"\" ? (\r\n                                <span className={classes.error}>{clientCodeCheck}</span>\r\n                            ) : \"\" }  \r\n                             </FormGroup>\r\n                            </div>\r\n                            </>\r\n                            )}\r\n                            {objValues.sex==='377' && (\r\n                            <>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Pregnant</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"pregnant\"\r\n                                        id=\"pregnant\"\r\n                                        value={objValues.pregnant}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {pregnancyStatus.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Breast Feeding</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"breastFeeding\"\r\n                                        id=\"breastFeeding\"\r\n                                        value={objValues.breastFeeding}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">YES</option>\r\n                                        <option value=\"false\">NO</option>\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            </>\r\n                            )}\r\n                           \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>First time visit</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"firstTimeVisit\"\r\n                                        id=\"firstTimeVisit\"\r\n                                        value={objValues.firstTimeVisit}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">YES</option>\r\n                                        <option value=\"false\">NO</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.firstTimeVisit !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.firstTimeVisit}</span>\r\n                                    ) : \"\" }    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Previously tested within the last 3 months</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"previouslyTested\"\r\n                                        id=\"previouslyTested\"\r\n                                        value={objValues.previouslyTested}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">YES</option>\r\n                                        <option value=\"false\">NO</option>\r\n                                    </select>\r\n                                    {errors.previouslyTested !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.previouslyTested}</span>\r\n                                    ) : \"\" }    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Type of Counseling</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"typeCounseling\"\r\n                                        id=\"typeCounseling\"\r\n                                        value={objValues.typeCounseling}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {counselingType.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                        \r\n                                    </select>\r\n                                    {errors.typeCounseling !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.typeCounseling}</span>\r\n                                    ) : \"\" }   \r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n\r\n                            <Button content='Save & Continue' type=\"submit\" icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>\r\n                                  \r\n        </>\r\n    );\r\n};\r\n\r\nexport default BasicInfo","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Label as LabelRibbon, Button, Message} from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst BasicInfo = (props) => {\r\n    const classes = useStyles();\r\n    const patientID= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.id : \"\";\r\n    const sex= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.sex : \"\";\r\n    const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    let temp = { ...errors }\r\n    const [riskAssessmentPartner, setRiskAssessmentPartner]= useState(\r\n        {\r\n            sexPartnerHivPositive:\"\",\r\n            newDiagnosedHivlastThreeMonths:\"\",\r\n            currentlyArvForPmtct :\"\",\r\n            knowHivPositiveOnArv :\"\",\r\n            knowHivPositiveAfterLostToFollowUp:\"\", \r\n            uprotectedAnalSex  :\"\",\r\n        }\r\n    )\r\n    const [objValues, setObjValues]= useState(\r\n        {\r\n            htsClientId: clientId,\r\n            knowledgeAssessment: {},\r\n            personId: patientID,\r\n            riskAssessment: {},\r\n            stiScreening: {},\r\n            tbScreening: {},\r\n            sexPartnerRiskAssessment:{}\r\n        }\r\n    )\r\n    const [knowledgeAssessment, setKnowledgeAssessment]= useState(\r\n        {\r\n            previousTestedHIVNegative:\"\",\r\n            timeLastHIVNegativeTestResult:\"\",\r\n            clientPregnant:\"\",\r\n            clientInformHivTransRoutes:\"\",\r\n            clientInformRiskkHivTrans:\"\",\r\n            clientInformPreventingsHivTrans:\"\", \r\n            clientInformPossibleTestResult:\"\",\r\n            informConsentHivTest:\"\",\r\n        }\r\n    )\r\n    const [riskAssessment, setRiskAssessment]= useState(\r\n        {\r\n            everHadSexualIntercourse:\"\",\r\n            bloodtransInlastThreeMonths:\"\",\r\n            uprotectedSexWithCasualLastThreeMonths:\"\",\r\n            uprotectedSexWithRegularPartnerLastThreeMonths:\"\", \r\n            unprotectedVaginalSex:\"\",  \r\n            uprotectedAnalSex:\"\",   \r\n            stiLastThreeMonths:\"\",\r\n            sexUnderInfluence :\"\",\r\n            moreThanOneSexPartnerLastThreeMonths:\"\",\r\n            experiencePain:\"\",\r\n            haveSexWithoutCondom:\"\",\r\n            abuseDrug:\"\",\r\n            bloodTransfusion:\"\",\r\n            consistentWeightFeverNightCough:\"\",\r\n            soldPaidVaginalSex:\"\",\r\n        }\r\n    )\r\n    const [stiScreening, setStiScreening]= useState(\r\n        {\r\n            vaginalDischarge:\"\",\r\n            lowerAbdominalPains :\"\",\r\n            urethralDischarge :\"\",\r\n            complaintsOfScrotal:\"\", \r\n            complaintsGenitalSore  :\"\",\r\n                \r\n        }\r\n    )\r\n    const [tbScreening, setTbScreening]= useState(\r\n        {\r\n            currentCough :\"\",\r\n            weightLoss  :\"\",\r\n            lymphadenopathy :\"\", \r\n            fever :\"\",  \r\n            nightSweats :\"\",\r\n        }\r\n    )\r\n    useEffect(() => { \r\n        //console.log(props.patientObj)\r\n        if(props.patientObj){\r\n            setKnowledgeAssessment(props.patientObj.knowledgeAssessment  && props.patientObj.knowledgeAssessment!==null ? props.patientObj.knowledgeAssessment : {})\r\n            setRiskAssessment(props.patientObj.riskAssessment  && props.patientObj.riskAssessment!==null ? props.patientObj.riskAssessment : {})\r\n            setRiskAssessmentPartner(props.patientObj.sexPartnerRiskAssessment && props.patientObj.sexPartnerRiskAssessment!==null ? props.patientObj.sexPartnerRiskAssessment : {})\r\n            setStiScreening(props.patientObj.stiScreening  && props.patientObj.stiScreening!==null? props.patientObj.stiScreening : {})\r\n            setTbScreening(props.patientObj.tbScreening  && props.patientObj.tbScreening!==null? props.patientObj.tbScreening : {})\r\n            //patientAge=calculate_age(moment(props.patientObj.personResponseDto.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            //console.log(props.patientObj.riskStratificationResponseDto.riskAssessment)\r\n            if(props.patientObj.riskStratificationResponseDto && Object.keys(props.patientObj.riskStratificationResponseDto.riskAssessment).length !== 0 && props.patientObj.riskAssessment===null){\r\n                setRiskAssessment({...riskAssessment, ...props.patientObj.riskStratificationResponseDto.riskAssessment})\r\n            }else{\r\n                setRiskAssessment({...riskAssessment, ...props.patientObj.riskAssessment})   \r\n            } \r\n        }\r\n    }, [props.patientObj]);\r\n    const handleItemClick =(page, completedMenu)=>{        \r\n        if(props.completed.includes(completedMenu)) {\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n        props.handleItemClick(page)\r\n    }\r\n\r\n    const handleInputChangeKnowledgeAssessment = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        \r\n        setKnowledgeAssessment ({...knowledgeAssessment,  [e.target.name]: e.target.value}); \r\n          \r\n    }\r\n    \r\n    const handleInputChangeRiskAssessment = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setRiskAssessment ({...riskAssessment,  [e.target.name]: e.target.value});                  \r\n    }\r\n    // Getting the number count of riskAssessment True\r\n    const actualRiskCountTrue=Object.values(riskAssessment)\r\n    const riskCount=actualRiskCountTrue.filter((x)=> x==='true')\r\n   \r\n    const handleInputChangeRiskAssessmentPartner = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setRiskAssessmentPartner ({...riskAssessmentPartner,  [e.target.name]: e.target.value});                       \r\n    }\r\n    // Getting the number count of sexPartRiskCount True\r\n    const actualSexPartRiskCountTrue=Object.values(riskAssessmentPartner)\r\n    const sexPartRiskCount=actualSexPartRiskCountTrue.filter((x)=> x==='true')\r\n\r\n    const handleInputChangeStiScreening = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setStiScreening ({...stiScreening,  [e.target.name]: e.target.value});            \r\n    }\r\n    // Getting the number count of STI True\r\n    const actualStiTrue=Object.values(stiScreening)\r\n    const stiCount=actualStiTrue.filter((x)=> x==='true')\r\n    \r\n    const [tbCount, settbCount] = useState(0);\r\n    const handleInputChangeTbScreening = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        \r\n        if(e.target.value==='true') {\r\n            const newcount = tbCount +1\r\n            if(newcount>=0 && newcount <=5){\r\n                settbCount(newcount)\r\n            }\r\n        }\r\n        if(e.target.value==='false') {\r\n            const newcount = tbCount -1\r\n            //settbCount(newcount)\r\n            //console.log(newcount)\r\n            if(newcount <=0 ){\r\n                \r\n                settbCount(0)\r\n            }else{\r\n                settbCount(newcount)\r\n            }\r\n        } \r\n        setTbScreening ({...tbScreening,  [e.target.name]: e.target.value});          \r\n    }\r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        //HTS FORM VALIDATION\r\n           temp.previousTestedHIVNegative = knowledgeAssessment.previousTestedHIVNegative ? \"\" : \"This field is required.\"\r\n           {knowledgeAssessment.previousTestedHIVNegative==='true' && ( temp.timeLastHIVNegativeTestResult = knowledgeAssessment.timeLastHIVNegativeTestResult ? \"\" : \"This field is required.\")}\r\n           temp.clientPregnant = knowledgeAssessment.clientPregnant ? \"\" : \"This field is required.\"\r\n           temp.clientInformHivTransRoutes = knowledgeAssessment.clientInformHivTransRoutes ? \"\" : \"This field is required.\"\r\n           temp.clientInformRiskkHivTrans = knowledgeAssessment.clientInformRiskkHivTrans ? \"\" : \"This field is required.\"\r\n           temp.clientInformPreventingsHivTrans = knowledgeAssessment.clientInformPreventingsHivTrans ? \"\" : \"This field is required.\"\r\n           temp.clientInformPossibleTestResult = knowledgeAssessment.clientInformPossibleTestResult ? \"\" : \"This field is required.\"\r\n           temp.informConsentHivTest = knowledgeAssessment.informConsentHivTest ? \"\" : \"This field is required.\"  \r\n\r\n            temp.currentCough = tbScreening.currentCough ? \"\" : \"This field is required.\"\r\n            temp.weightLoss = tbScreening.weightLoss ? \"\" : \"This field is required.\"\r\n            temp.lymphadenopathy = tbScreening.lymphadenopathy ? \"\" : \"This field is required.\"\r\n            temp.fever = tbScreening.fever ? \"\" : \"This field is required.\"\r\n            temp.nightSweats = tbScreening.nightSweats ? \"\" : \"This field is required.\"\r\n\r\n            {props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (temp.vaginalDischarge = stiScreening.vaginalDischarge ? \"\" : \"This field is required.\" )}\r\n            {props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (temp.lowerAbdominalPains = stiScreening.lowerAbdominalPains ? \"\" : \"This field is required.\")}\r\n            {props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.urethralDischarge = stiScreening.urethralDischarge ? \"\" : \"This field is required.\")}\r\n            {props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.complaintsOfScrotal = stiScreening.complaintsOfScrotal ? \"\" : \"This field is required.\")}\r\n            {props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (temp.complaintsGenitalSore = stiScreening.complaintsGenitalSore ? \"\" : \"This field is required.\")}\r\n \r\n            {props.patientObj.targetGroup===\"473\" && (temp.everHadSexualIntercourse = riskAssessment.everHadSexualIntercourse ? \"\" : \"This field is required.\")}\r\n            {props.patientObj.targetGroup===\"473\" && (temp.bloodtransInlastThreeMonths = riskAssessment.bloodtransInlastThreeMonths ? \"\" : \"This field is required.\")}\r\n            {props.patientObj.targetGroup===\"473\" && (temp.uprotectedSexWithCasualLastThreeMonths = riskAssessment.uprotectedSexWithCasualLastThreeMonths ? \"\" : \"This field is required.\")}\r\n            {props.patientObj.targetGroup===\"473\" && (temp.uprotectedSexWithRegularPartnerLastThreeMonths = riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths ? \"\" : \"This field is required.\")}\r\n            {props.patientObj.targetGroup===\"473\" && (temp.unprotectedVaginalSex = riskAssessment.unprotectedVaginalSex ? \"\" : \"This field is required.\")}\r\n\r\n            {props.patientObj.targetGroup===\"473\" && (temp.uprotectedAnalSex = riskAssessment.uprotectedAnalSex ? \"\" : \"This field is required.\")}\r\n            {props.patientObj.targetGroup===\"473\" && (temp.sexUnderInfluence = riskAssessment.sexUnderInfluence ? \"\" : \"This field is required.\")}\r\n            {props.patientObj.targetGroup===\"473\" && (temp.uprotectedSexWithCasualLastThreeMonths = riskAssessment.uprotectedSexWithCasualLastThreeMonths ? \"\" : \"This field is required.\")}\r\n            {props.patientObj.targetGroup===\"473\" && (temp.moreThanOneSexPartnerLastThreeMonths = riskAssessment.moreThanOneSexPartnerLastThreeMonths ? \"\" : \"This field is required.\")}\r\n            \r\n            \r\n            {props.patientObj.targetGroup!==\"473\" && (temp.experiencePain = riskAssessment.experiencePain ? \"\" : \"This field is required.\")}\r\n\r\n            {props.patientObj.targetGroup!==\"473\" && (temp.haveSexWithoutCondom = riskAssessment.haveSexWithoutCondom ? \"\" : \"This field is required.\")}\r\n            {props.patientObj.targetGroup!==\"473\" && (temp.abuseDrug = riskAssessment.abuseDrug ? \"\" : \"This field is required.\")}\r\n            {props.patientObj.targetGroup!==\"473\" && (temp.bloodTransfusion = riskAssessment.bloodTransfusion ? \"\" : \"This field is required.\")}\r\n            {props.patientObj.targetGroup!==\"473\" && (temp.consistentWeightFeverNightCough = riskAssessment.consistentWeightFeverNightCough ? \"\" : \"This field is required.\")}\r\n            {props.patientObj.targetGroup!==\"473\" && (temp.soldPaidVaginalSex = riskAssessment.soldPaidVaginalSex ? \"\" : \"This field is required.\")}\r\n\r\n            temp.sexPartnerHivPositive = tbScreening.sexPartnerHivPositive ? \"\" : \"This field is required.\"\r\n            {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.newDiagnosedHivlastThreeMonths = tbScreening.newDiagnosedHivlastThreeMonths ? \"\" : \"This field is required.\")}\r\n            {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.currentlyArvForPmtct = tbScreening.currentlyArvForPmtct ? \"\" : \"This field is required.\")}\r\n            {riskAssessmentPartner.sexPartnerHivPositive==='true' && ( temp.knowHivPositiveOnArv = tbScreening.knowHivPositiveOnArv ? \"\" : \"This field is required.\")}\r\n            {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.knowHivPositiveAfterLostToFollowUp = tbScreening.knowHivPositiveAfterLostToFollowUp ? \"\" : \"This field is required.\")}\r\n            {riskAssessmentPartner.sexPartnerHivPositive==='true' && (temp.uprotectedAnalSex = tbScreening.uprotectedAnalSex ? \"\" : \"This field is required.\")}\r\n            \r\n            setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n\r\n            objValues.htsClientId= clientId\r\n            objValues.knowledgeAssessment= knowledgeAssessment\r\n            objValues.personId= patientID\r\n            objValues.riskAssessment= riskAssessment\r\n            objValues.stiScreening=stiScreening\r\n            objValues.tbScreening=tbScreening\r\n            objValues.sexPartnerRiskAssessment=riskAssessmentPartner\r\n            axios.put(`${baseUrl}hts/${clientId}/pre-test-counseling`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n            .then(response => {\r\n                setSaving(false);\r\n                props.setPatientObj(response.data)\r\n                //toast.success(\"Risk Assesment successful\");\r\n                handleItemClick('hiv-test', 'pre-test-counsel' )\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n            });\r\n            \r\n    }\r\n    console.log(riskAssessmentPartner)\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n               \r\n                <h2>PRE TEST COUNSELING</h2>\r\n                    <form >\r\n                        <div className=\"row\">\r\n\r\n                        <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'rgb(0,181,173)', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Knowledge Assessment</div>\r\n                     \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Previously tested HIV negative *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"previousTestedHIVNegative\"\r\n                                        id=\"previousTestedHIVNegative\"\r\n                                        value={knowledgeAssessment.previousTestedHIVNegative}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.previousTestedHIVNegative !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.previousTestedHIVNegative}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            {knowledgeAssessment.previousTestedHIVNegative==='true' && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Time of last HIV Negative test Result*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"timeLastHIVNegativeTestResult\"\r\n                                        id=\"timeLastHIVNegativeTestResult\"\r\n                                        value={knowledgeAssessment.timeLastHIVNegativeTestResult}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"<1\"> {\"< 1\"} month</option>\r\n                                        <option value=\"1-3 Months\">1-3 Months</option>\r\n                                        <option value=\"4-6 Months\">4-6 Months</option>\r\n                                        <option value=\">6 Months\"> {\">6\"} Months</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.timeLastHIVNegativeTestResult !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.timeLastHIVNegativeTestResult}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            {sex ==='Female' && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client pregnant *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clientPregnant\"\r\n                                        id=\"clientPregnant\"\r\n                                        value={knowledgeAssessment.clientPregnant}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.clientPregnant !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clientPregnant}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                             )}\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client informed about HIV transmission routes *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clientInformHivTransRoutes\"\r\n                                        id=\"clientInformHivTransRoutes\"\r\n                                        value={knowledgeAssessment.clientInformHivTransRoutes}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.clientInformHivTransRoutes !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clientInformHivTransRoutes}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client informed about risk factors for HIV transmission *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clientInformRiskkHivTrans\"\r\n                                        id=\"clientInformRiskkHivTrans\"\r\n                                        value={knowledgeAssessment.clientInformRiskkHivTrans}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.clientInformRiskkHivTrans !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clientInformRiskkHivTrans}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client informed on preventing HIV transmission methods *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clientInformPreventingsHivTrans\"\r\n                                        id=\"clientInformPreventingsHivTrans\"\r\n                                        value={knowledgeAssessment.clientInformPreventingsHivTrans}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.clientInformPreventingsHivTrans !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clientInformPreventingsHivTrans}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client informed about possible test results *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clientInformPossibleTestResult\"\r\n                                        id=\"clientInformPossibleTestResult\"\r\n                                        value={knowledgeAssessment.clientInformPossibleTestResult}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.clientInformPossibleTestResult !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clientInformPossibleTestResult}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Informed consent for HIV testing given *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"informConsentHivTest\"\r\n                                        id=\"informConsentHivTest\"\r\n                                        value={knowledgeAssessment.informConsentHivTest}\r\n                                        onChange={handleInputChangeKnowledgeAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.informConsentHivTest !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.informConsentHivTest}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <hr/>\r\n                            <br/>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#000', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Clinical TB screening</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Current cough *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"currentCough\"\r\n                                        id=\"currentCough\"\r\n                                        value={tbScreening.currentCough}\r\n                                        onChange={handleInputChangeTbScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.currentCough !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.currentCough}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Weight loss *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"weightLoss\"\r\n                                        id=\"weightLoss\"\r\n                                        value={tbScreening.weightLoss}\r\n                                        onChange={handleInputChangeTbScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.weightLoss !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.weightLoss}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Lymphadenopathy (swelling of the lymph nodes) *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lymphadenopathy\"\r\n                                        id=\"lymphadenopathy\"\r\n                                        value={tbScreening.lymphadenopathy}\r\n                                        onChange={handleInputChangeTbScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lymphadenopathy !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lymphadenopathy}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Fever *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"fever\"\r\n                                        id=\"fever\"\r\n                                        value={tbScreening.fever}\r\n                                        onChange={handleInputChangeTbScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.fever !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.fever}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Night sweats*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"nightSweats\"\r\n                                        id=\"nightSweats\"\r\n                                        value={tbScreening.nightSweats}\r\n                                        onChange={handleInputChangeTbScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.nightSweats !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.nightSweats}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <Message warning>\r\n                                <h4>TB Screening score (calculate the sum of the TB assessment) If score {\">= 1\"}, test for Xper MTB RIF or refer to TB service </h4>\r\n                                <b>Score : {tbCount}</b>\r\n                            </Message>\r\n                            <hr/>\r\n                            <br/>\r\n                           {props.patientObj.targetGroup===\"TARGET_GROUP_GEN_POP\" && ( <>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Ever had sexual intercourse </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"everHadSexualIntercourse\"\r\n                                        id=\"everHadSexualIntercourse\"\r\n                                        value={riskAssessment.everHadSexualIntercourse}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.everHadSexualIntercourse !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.everHadSexualIntercourse}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Blood transfusion in last 3 months *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"bloodtransInlastThreeMonths\"\r\n                                        id=\"bloodtransInlastThreeMonths\"\r\n                                        value={riskAssessment.bloodtransInlastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.bloodtransInlastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.bloodtransInlastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected sex with casual partner in last 3 months *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedSexWithCasualLastThreeMonths\"\r\n                                        id=\"uprotectedSexWithCasualLastThreeMonths\"\r\n                                        value={riskAssessment.uprotectedSexWithCasualLastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.uprotectedSexWithCasualLastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedSexWithCasualLastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected sex with regular partner in the last 3months</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\r\n                                        id=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\r\n                                        value={riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.uprotectedSexWithRegularPartnerLastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedSexWithRegularPartnerLastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected vaginal sex</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedVaginalSex\"\r\n                                        id=\"unprotectedVaginalSex\"\r\n                                        value={riskAssessment.unprotectedVaginalSex}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.unprotectedVaginalSex !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.unprotectedVaginalSex}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Anal sex</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedAnalSex\"\r\n                                        id=\"uprotectedAnalSex\"\r\n                                        value={riskAssessment.uprotectedAnalSex}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.uprotectedAnalSex !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedAnalSex}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>         \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>STI in last 3 months *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"stiLastThreeMonths\"\r\n                                        id=\"stiLastThreeMonths\"\r\n                                        value={riskAssessment.stiLastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.stiLastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.stiLastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Sex under the influence of drugs or alcohol*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sexUnderInfluence\"\r\n                                        id=\"sexUnderInfluence\"\r\n                                        value={riskAssessment.sexUnderInfluence}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.sexUnderInfluence !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.sexUnderInfluence}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>More than 1 sex partner during last 3 months*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                                        id=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                                        value={riskAssessment.moreThanOneSexPartnerLastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.moreThanOneSexPartnerLastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.moreThanOneSexPartnerLastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <Message warning>\r\n                                <h4>Personal HIV Risk assessment score (sum of all 7 answers)</h4>\r\n                                <b>Score : {riskCount.length}</b>\r\n                            </Message>\r\n                            <hr/>\r\n                            <br/>\r\n                            </>)}\r\n                            {props.patientObj.targetGroup!==\"TARGET_GROUP_GEN_POP\" && ( <>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you/your partner experienced lower abdominal pain, smelly discharge, blisters and wounds around you/partner vagina, penis anus or mouth?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"experiencePain\"\r\n                                        id=\"experiencePain\"\r\n                                        value={riskAssessment.experiencePain}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.experiencePain !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.experiencePain}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you/partner had sex without a condom with someone of unknown HIV status, or you/partner raped by person with unknown HIV status? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveSexWithoutCondom\"\r\n                                        id=\"haveSexWithoutCondom\"\r\n                                        value={riskAssessment.haveSexWithoutCondom}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveSexWithoutCondom !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveSexWithoutCondom}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had a condom burst with your partner during sexual intercourse?  *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveCondomBurst\"\r\n                                        id=\"haveCondomBurst\"\r\n                                        value={riskAssessment.haveCondomBurst}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveCondomBurst !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveCondomBurst}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Do you/partner share needles/syringes, other sharp objects or used abuse drug substances of any kind?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"abuseDrug\"\r\n                                        id=\"abuseDrug\"\r\n                                        value={riskAssessment.abuseDrug}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.abuseDrug !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.abuseDrug}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you/partner had any blood or blood product transfusion?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"bloodTransfusion\"\r\n                                        id=\"bloodTransfusion\"\r\n                                        value={riskAssessment.bloodTransfusion}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.bloodTransfusion !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.bloodTransfusion}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you/partner experienced coughing, weight loss, fever, night sweats consistently?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"consistentWeightFeverNightCough\"\r\n                                        id=\"consistentWeightFeverNightCough\"\r\n                                        value={riskAssessment.consistentWeightFeverNightCough}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.consistentWeightFeverNightCough !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.consistentWeightFeverNightCough}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>            \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you/partner paid or sold vaginal, anal or oral sex? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"soldPaidVaginalSex\"\r\n                                        id=\"soldPaidVaginalSex\"\r\n                                        value={riskAssessment.soldPaidVaginalSex}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.soldPaidVaginalSex !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.soldPaidVaginalSex}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <Message warning>\r\n                                <h4>Personal HIV Risk assessment score (sum of all 7 answers)</h4>\r\n                                <b>Score :{riskCount.length}</b>\r\n                            </Message>\r\n                            <hr/>\r\n                            <br/>\r\n                            </>)}\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Sex Partner Risk Assessment (Last 3 months)</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had sex with a partner who is HIV positive? </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sexPartnerHivPositive\"\r\n                                        id=\"sexPartnerHivPositive\"\r\n                                        value={riskAssessmentPartner.sexPartnerHivPositive}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.sexPartnerHivPositive !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.sexPartnerHivPositive}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            {riskAssessmentPartner.sexPartnerHivPositive==='true' && (<>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Is sex partner newly diagnosed with HIV and started treatment less than 3-6 months ago?*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"newDiagnosedHivlastThreeMonths\"\r\n                                        id=\"newDiagnosedHivlastThreeMonths\"\r\n                                        value={riskAssessmentPartner.newDiagnosedHivlastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.newDiagnosedHivlastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.newDiagnosedHivlastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Is sex partner pregnant and currently receiving ARV for PMTCT?*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"currentlyArvForPmtct\"\r\n                                        id=\"currentlyArvForPmtct\"\r\n                                        value={riskAssessmentPartner.currentlyArvForPmtct}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.currentlyArvForPmtct !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.currentlyArvForPmtct}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Known HIV positive partner on ARV with an unsurpressed VL</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"knowHivPositiveOnArv\"\r\n                                        id=\"knowHivPositiveOnArv\"\r\n                                        value={riskAssessmentPartner.knowHivPositiveOnArv}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.knowHivPositiveOnArv !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.knowHivPositiveOnArv}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Known HIV positive recently returned to treatment after being lost to follow up</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"knowHivPositiveAfterLostToFollowUp\"\r\n                                        id=\"knowHivPositiveAfterLostToFollowUp\"\r\n                                        value={riskAssessmentPartner.knowHivPositiveAfterLostToFollowUp}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.knowHivPositiveAfterLostToFollowUp !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.knowHivPositiveAfterLostToFollowUp}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Anal sex</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedAnalSex\"\r\n                                        id=\"uprotectedAnalSex\"\r\n                                        value={riskAssessmentPartner.uprotectedAnalSex}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.uprotectedAnalSex !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedAnalSex}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            </>)}\r\n                            <Message warning>\r\n                                <h4>Sex Partner Risk Assessment score (sum of all 6 answers)</h4>\r\n                                <b>Score :{sexPartRiskCount.length}</b>\r\n                            </Message>        \r\n                            \r\n                            <hr/>\r\n                            <br/>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#014D88', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Syndromic STI Screening</div>\r\n                            {props.patientObj && props.patientObj.personResponseDto.sex==='Female' && (\r\n                            <>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of vaginal discharge or burning when urinating?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"vaginalDischarge\"\r\n                                        id=\"vaginalDischarge\"\r\n                                        value={stiScreening.vaginalDischarge}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.vaginalDischarge !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.vaginalDischarge}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of lower abdominal pains with or without vaginal discharge?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lowerAbdominalPains\"\r\n                                        id=\"lowerAbdominalPains\"\r\n                                        value={stiScreening.lowerAbdominalPains}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lowerAbdominalPains !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lowerAbdominalPains}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            </>)}\r\n                            {props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (\r\n                            <>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of urethral discharge or burning when urinating?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"urethralDischarge\"\r\n                                        id=\"urethralDischarge\"\r\n                                        value={stiScreening.urethralDischarge}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.urethralDischarge !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.urethralDischarge}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of scrotal swelling and pain</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"complaintsOfScrotal\"\r\n                                        id=\"complaintsOfScrotal\"\r\n                                        value={stiScreening.complaintsOfScrotal}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.complaintsOfScrotal !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.complaintsOfScrotal}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of genital sore(s) or swollen inguinal lymph nodes with or without pains?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"complaintsGenitalSore\"\r\n                                        id=\"complaintsGenitalSore\"\r\n                                        value={stiScreening.complaintsGenitalSore}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.complaintsGenitalSore !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.complaintsGenitalSore}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            </>)} \r\n                            <Message warning>\r\n                                <h4>Calculate the sum of the STI screening. If {\">= \"}1, should be referred for STI test </h4>\r\n                                <b>Score :{stiCount.length}</b>\r\n                            </Message>\r\n                           \r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-12\">\r\n                            <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('basic','basic')}/>\r\n                            <Button content='Save & Continue' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default BasicInfo","import React, {useCallback, useEffect, useState} from \"react\";\r\n\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {toast} from \"react-toastify\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Label as LabelRibbon, Button} from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst HivTestResult = (props) => {\r\n    const classes = useStyles();\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    let temp = { ...errors }\r\n    console.log(props.patientObj)\r\n    const patientID= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.id : \"\";\r\n    const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n    const [hivTestDate, setHivTestDate] = useState(\"\");\r\n    const [showCD4Count, setShowCD4Count] = useState(true);\r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n    };\r\n    const patientAge=calculate_age(moment(props.patientObj.personResponseDto && props.patientObj.personResponseDto.dateOfBirth ? props.patientObj.personResponseDto.dateOfBirth : 0).format(\"DD-MM-YYYY\"))\r\n   \r\n    const [objValues, setObjValues]= useState(\r\n        {\r\n            confirmatoryTest: {},\r\n            confirmatoryTest2: {},\r\n            hivTestResult: \"\",\r\n            hivTestResult2: \"\",\r\n            htsClientId:\"\",\r\n            personId: props.patientObj  ? props.patientObj.id : \"\",\r\n            test1: {},\r\n            test2: {},\r\n            tieBreakerTest: {},\r\n            tieBreakerTest2: {},\r\n            syphilisTesting:{},\r\n            hepatitisTesting:{},\r\n            others:{},\r\n            cd4:{},\r\n        }\r\n    )\r\n    const handleInputChange = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});            \r\n    }\r\n    const [initialTest1, setInitailTest]= useState(\r\n        {\r\n            date:\"\",\r\n            result:\"\",            \r\n        }\r\n    )\r\n    const [initialTest12, setInitailTest2]= useState(\r\n        {\r\n            date2 :\"\",\r\n            result2  :\"\",            \r\n        }\r\n    )\r\n    const handleInputChangeCd4Count = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setCd4Count ({...cd4Count,  [e.target.name]: e.target.value});            \r\n    }\r\n    const [cd4Count, setCd4Count]= useState(\r\n        {\r\n            cd4Count:\"\",\r\n            cd4SemiQuantitative:\"\",\r\n            cd4FlowCyteometry:\"\"            \r\n        }\r\n    )\r\n    const handleInputChangeInitial = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        if(e.target.value==='No'){\r\n            setInitailTest ({...initialTest1,  [e.target.name]: e.target.value}); \r\n            setConfirmatoryTest({\r\n                date :\"\",\r\n                result  :\"\",            \r\n            })\r\n            setTieBreakerTest({\r\n                date :\"\",\r\n                result  :\"\",            \r\n            })\r\n            //This is to show cd4 count section\r\n            setShowCD4Count(false)\r\n                \r\n        }else{\r\n            setInitailTest ({...initialTest1,  [e.target.name]: e.target.value});\r\n            //This is to show cd4 count section \r\n            setShowCD4Count(true)\r\n        }            \r\n    }\r\n    const handleInputChangeInitial2 = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        if(e.target.value==='No'){\r\n            setInitailTest2 ({...initialTest12,  [e.target.name]: e.target.value});  \r\n            setConfirmatoryTest2({\r\n                date :\"\",\r\n                result  :\"\",            \r\n            })\r\n            setTieBreakerTest2({\r\n                date :\"\",\r\n                result  :\"\",            \r\n            })\r\n            //This is to show cd4 count section\r\n            setShowCD4Count(false)\r\n        }else{\r\n            setInitailTest2 ({...initialTest12,  [e.target.name]: e.target.value});\r\n            //This is to show cd4 count section \r\n            setShowCD4Count(true) \r\n        }           \r\n    }\r\n    const [confirmatoryTest, setConfirmatoryTest]= useState(\r\n        {\r\n            date :\"\",\r\n            result  :\"\",            \r\n        }\r\n    )\r\n    const [confirmatoryTest2, setConfirmatoryTest2]= useState(\r\n        {\r\n            date2 :\"\",\r\n            result2  :\"\",            \r\n        }\r\n    )\r\n    const handleInputChangeConfirmatory = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setConfirmatoryTest ({...confirmatoryTest,  [e.target.name]: e.target.value});\r\n        //This is to show cd4 count section \r\n        if(initialTest1.result==='Yes' && e.target.value==='Yes'){\r\n            setShowCD4Count(true)\r\n\r\n        }else{\r\n            setShowCD4Count(true)\r\n        }              \r\n    }\r\n    const handleInputChangeConfirmatory2 = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setConfirmatoryTest2 ({...confirmatoryTest2,  [e.target.name]: e.target.value}); \r\n        //This is to show cd4 count section \r\n        if(initialTest12.result2==='Yes' && e.target.value==='Yes'){\r\n            setShowCD4Count(true)\r\n\r\n        }else{\r\n            setShowCD4Count(true)\r\n        }                 \r\n    }\r\n    const [tieBreakerTest, setTieBreakerTest]= useState(\r\n        {\r\n            date :\"\",\r\n            result  :\"\",            \r\n        }\r\n    )\r\n    const [tieBreakerTest2, setTieBreakerTest2]= useState(\r\n        {\r\n            date2 :\"\",\r\n            result2  :\"\",            \r\n        }\r\n    )\r\n    const handleInputChangeTie = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setTieBreakerTest ({...tieBreakerTest,  [e.target.name]: e.target.value});  \r\n        //This is to show cd4 count section\r\n        if(confirmatoryTest.result==='No' && e.target.value==='Yes'){\r\n            setShowCD4Count(true)\r\n        }else if(confirmatoryTest.result==='No' && e.target.value==='No'){\r\n            setShowCD4Count(false)\r\n        }else{\r\n            setShowCD4Count(true)\r\n        }         \r\n    }\r\n    const handleInputChangeTie2 = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setTieBreakerTest2 ({...tieBreakerTest2,  [e.target.name]: e.target.value});\r\n        //This is to show cd4 count section\r\n        if(confirmatoryTest2.result2==='No' && e.target.value==='Yes'){\r\n            setShowCD4Count(true)\r\n        }else if(confirmatoryTest2.result2==='No' && e.target.value==='No'){\r\n            setShowCD4Count(false)\r\n        }else{\r\n            setShowCD4Count(true)\r\n        }                     \r\n    }\r\n    const [syphills, setSyphills]= useState(\r\n        {\r\n            syphilisTestResult :\"\",\r\n           // result  :\"\",            \r\n        }\r\n    )\r\n    const handleInputChangeSyphills = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setSyphills ({...syphills,  [e.target.name]: e.target.value});            \r\n    }\r\n    const [hepatitis, setHepatitis]= useState(\r\n        {\r\n            hepatitisCTestResult :\"\",\r\n            hepatitisBTestResult  :\"\", \r\n            longitude:\"\",\r\n            latitude:\"\",\r\n            adhocCode :\"\"                       \r\n        }\r\n    )\r\n    const handleInputChangeHepatitis = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setHepatitis ({...hepatitis,  [e.target.name]: e.target.value});            \r\n    }\r\n    const [others, setOthers]= useState(\r\n        {\r\n            longitude:\"\",\r\n            latitude:\"\",\r\n            adhocCode :\"\"                       \r\n        }\r\n    )\r\n    useEffect(() => { \r\n        //console.log(props.patientObj)\r\n        if(props.patientObj){\r\n            if(props.patientObj.dateVisit && props.patientObj.dateVisit!=='' ){\r\n                setHivTestDate(props.patientObj.dateVisit)\r\n            }else{\r\n                setHivTestDate(\"\")\r\n            }\r\n            setCd4Count(props.patientObj  && props.patientObj.cd4!==null? props.patientObj.cd4 : {})\r\n            setInitailTest(props.patientObj  && props.patientObj.test1!==null? props.patientObj.test1 : {})\r\n            setConfirmatoryTest(props.patientObj  && props.patientObj.confirmatoryTest!==null? props.patientObj.confirmatoryTest : {})\r\n            setTieBreakerTest(props.patientObj && props.patientObj.tieBreakerTest!==null ? props.patientObj.tieBreakerTest : {})\r\n            setSyphills(props.patientObj  && props.patientObj.syphilisTesting!==null ? props.patientObj.syphilisTesting : {})\r\n            setHepatitis(props.patientObj  && props.patientObj.hepatitisTesting!==null ? props.patientObj.hepatitisTesting : {})\r\n            setOthers(props.patientObj  && props.patientObj.others!==null ? props.patientObj.others : {})\r\n            \r\n            setInitailTest2(props.patientObj  && props.patientObj.test2!==null? props.patientObj.test2 : {})\r\n            setConfirmatoryTest2(props.patientObj  && props.patientObj.confirmatoryTest2!==null? props.patientObj.confirmatoryTest2 : {})\r\n            setTieBreakerTest2(props.patientObj && props.patientObj.tieBreakerTest2!==null ? props.patientObj.tieBreakerTest2 : {})\r\n        }\r\n    }, [props.patientObj]);//initialTest12, tieBreakerTest2, confirmatoryTest2, \r\n\r\n    const handleInputChangeOthers = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setOthers ({...others,  [e.target.name]: e.target.value});            \r\n    }\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n    }\r\n    const validate = () => {\r\n        //HTS FORM VALIDATION\r\n        initialTest1.date!==\"\" &&  (temp.date = initialTest1.result ? \"\" : \"This field is required.\")\r\n        // initialTest1.result!==\"\"  && (temp.date = confirmatoryTest.date ? \"\" : \"This field is required.\")\r\n        // initialTest1.result!==\"\"  && (temp.date = tieBreakerTest.date ? \"\" : \"This field is required.\")\r\n              \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        if(validate()){\r\n                    //logic to get Hiv result test\r\n        if(initialTest12.result2==='No' ){\r\n            objValues.hivTestResult2=\"Negative\"\r\n        }else if(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='Yes'){\r\n            objValues.hivTestResult2=\"Positive\" \r\n        }\r\n        // else if(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='No' && tieBreakerTest2.result2===''){\r\n        //     objValues.hivTestResult2=\"Negative\" \r\n        // }\r\n        else if(confirmatoryTest2.result2==='No' && tieBreakerTest2.result2==='Yes'){\r\n            objValues.hivTestResult2=\"Positive\" \r\n        }else if(confirmatoryTest2.result2==='No' && tieBreakerTest2.result2==='No'){\r\n            objValues.hivTestResult2=\"Negative\" \r\n        }else{\r\n            objValues.hivTestResult2=\"\"\r\n        }\r\n      \r\n        if(initialTest1.result==='No' ){\r\n            objValues.hivTestResult=\"Negative\"\r\n        }else if(initialTest1.result==='Yes' && confirmatoryTest.result==='Yes'){\r\n            objValues.hivTestResult=\"Positive\"\r\n        }\r\n        // else if(initialTest1.result==='Yes' && confirmatoryTest.result==='No' && tieBreakerTest.result===''){\r\n        //     objValues.hivTestResult=\"Negative\"\r\n        // }\r\n        else if(confirmatoryTest.result==='No' && tieBreakerTest.result==='Yes'){\r\n            objValues.hivTestResult=\"Positive\"\r\n        }else if(confirmatoryTest.result==='No' && tieBreakerTest.result==='No'){\r\n            objValues.hivTestResult=\"Negative\"\r\n        }else{\r\n            objValues.hivTestResult=\"\"\r\n        }\r\n            objValues.htsClientId= clientId\r\n            objValues.confirmatoryTest= confirmatoryTest\r\n            objValues.confirmatoryTest2= confirmatoryTest2\r\n            objValues.personId= patientID\r\n            objValues.test1= initialTest1\r\n            objValues.test2= initialTest12\r\n            objValues.tieBreakerTest=tieBreakerTest\r\n            objValues.tieBreakerTest2=tieBreakerTest2\r\n            objValues.syphilisTesting=syphills\r\n            objValues.hepatitisTesting=hepatitis\r\n           \r\n            objValues.cd4=cd4Count\r\n            objValues.others=others\r\n            axios.put(`${baseUrl}hts/${clientId}/request-result`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}}, )\r\n            .then(response => {\r\n                setSaving(false);\r\n                props.setPatientObj(response.data)\r\n                //console.log(response.data)\r\n                //props.setPatientObj(props && props.patientObj ? props.patientObj : \"\")\r\n                //toast.success(\"HIV test successful\");\r\n                handleItemClick('post-test', 'hiv-test')\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n            });\r\n        }   \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n               \r\n                <h2 style={{color:'#000'}}>REQUEST AND RESULT FORM</h2>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>HIV TEST RESULT</h4>\r\n                        </LabelRibbon>\r\n                           <br/>\r\n                           <div className=\"form-group  col-md-2\"></div>\r\n                            <h4>Initial HIV Test 1:</h4>\r\n                            <div className=\"form-group mb-3 col-md-5\">\r\n                                <FormGroup>\r\n                                <Label for=\"\"> Date  </Label>\r\n                                <Input\r\n                                    type=\"date\"\r\n                                    name=\"date\"\r\n                                    id=\"date\"\r\n                                    value={initialTest1.date}\r\n                                    onChange={handleInputChangeInitial}\r\n                                    min={hivTestDate!==\"\" && hivTestDate!==null ? hivTestDate  :\"\"}\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    required\r\n                                />\r\n                                {errors.date !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.date}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            {initialTest1.date && (\r\n                            <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                    <Label>Result </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"result\"\r\n                                        id=\"result\"\r\n                                        value={initialTest1.result}\r\n                                        onChange={handleInputChangeInitial}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={ initialTest1.date===\"\"? true : false}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Reactive</option>\r\n                                        <option value=\"No\">Non Reactive</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.result !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.result}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            <div className=\"form-group  col-md-2\"></div>\r\n                            {initialTest1.result ==='Yes' && (\r\n                            <>\r\n                            <h4>Confirmatory Test:</h4>\r\n                            <div className=\"form-group mb-3 col-md-5\">\r\n                                <FormGroup>\r\n                                <Label for=\"\"> Date  </Label>\r\n                                <Input\r\n                                    type=\"date\"\r\n                                    name=\"date\"\r\n                                    id=\"date\"\r\n                                    value={confirmatoryTest.date}\r\n                                    onChange={handleInputChangeConfirmatory}\r\n                                    min={initialTest1.date}\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    required\r\n                                />\r\n                                {errors.dateOfEac1 !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfEac1}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            {confirmatoryTest.date && (\r\n                            <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                    <Label>Result </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"result\"\r\n                                        id=\"result\"\r\n                                        value={confirmatoryTest.result}\r\n                                        onChange={handleInputChangeConfirmatory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={confirmatoryTest.date===''? true : false}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Reactive</option>\r\n                                        <option value=\"No\">Non Reactive</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            <div className=\"form-group  col-md-2\"></div>\r\n                            </>\r\n                            )}\r\n                            {confirmatoryTest.result ==='No' && (\r\n                            <>\r\n                            <h4>Tie Breaker Test:</h4>\r\n                            <div className=\"form-group mb-3 col-md-5\">\r\n                                <FormGroup>\r\n                                <Label for=\"\"> Date  </Label>\r\n                                <Input\r\n                                    type=\"date\"\r\n                                    name=\"date\"\r\n                                    id=\"date\"\r\n                                    value={tieBreakerTest.date}\r\n                                    onChange={handleInputChangeTie}\r\n                                    min={confirmatoryTest.date}\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    required\r\n                                />\r\n                               \r\n                                </FormGroup>\r\n                            </div>\r\n                            {tieBreakerTest.date && (\r\n                            <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                    <Label>Result </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"result\"\r\n                                        id=\"result\"\r\n                                        value={tieBreakerTest.result}\r\n                                        onChange={handleInputChangeTie}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={tieBreakerTest.date===''? true : false}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Reactive</option>\r\n                                        <option value=\"No\">Non Reactive</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            <div className=\"form-group  col-md-2\"></div>\r\n\r\n                            </>)}\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group  col-md-12\">  \r\n                                {initialTest1.result==='No' &&  (\r\n                                    <LabelRibbon color=\"green\" >\r\n                                        Negative\r\n                                    </LabelRibbon>\r\n                                )}                       \r\n                                {initialTest1.result==='No' && confirmatoryTest.result==='No' &&  (\r\n                                    <LabelRibbon color=\"green\" >\r\n                                    Negative\r\n                                </LabelRibbon>\r\n                                )}\r\n                                \r\n                                {(initialTest1.result==='Yes' && confirmatoryTest.result==='Yes' ) && (\r\n                                    <>\r\n                                    <LabelRibbon color=\"red\" >\r\n                                        Positive\r\n                                    </LabelRibbon>\r\n                                    <br/>\r\n                                    <hr/>\r\n                                    <div className=\"row\">\r\n                                        <h4>Initial HIV Test 2:</h4>\r\n                                        <div className=\"form-group mb-3 col-md-5\">\r\n                                            <FormGroup>\r\n                                            <Label for=\"\"> Date </Label>\r\n                                            <Input\r\n                                                type=\"date\"\r\n                                                name=\"date2\"\r\n                                                id=\"date2\"\r\n                                                value={initialTest12.date2}\r\n                                                onChange={handleInputChangeInitial2}\r\n                                                min={confirmatoryTest.date}\r\n                                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                                required\r\n                                            />\r\n                                            {errors.date2 !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.date2}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-5\">\r\n                                            <FormGroup>\r\n                                                <Label>Result  </Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    name=\"result2\"\r\n                                                    id=\"result2\"\r\n                                                    value={initialTest12.result2}\r\n                                                    onChange={handleInputChangeInitial2}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    disabled={initialTest12.date2===''? true : false}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    <option value=\"Yes\">Reactive</option>\r\n                                                    <option value=\"No\">Non Reactive</option>\r\n                                                    \r\n                                                </select>\r\n                                                {errors.result2 !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.result2}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                   \r\n                                        <div className=\"form-group  col-md-2\"></div>\r\n                                        {initialTest12.result2 ==='Yes' && (\r\n                                        <>\r\n                                        <h4>Confirmatory Test 2:</h4>\r\n                                        <div className=\"form-group mb-3 col-md-5\">\r\n                                            <FormGroup>\r\n                                            <Label for=\"\"> Date  </Label>\r\n                                            <Input\r\n                                                type=\"date\"\r\n                                                name=\"date2\"\r\n                                                id=\"date2\"\r\n                                                value={confirmatoryTest2.date2}\r\n                                                onChange={handleInputChangeConfirmatory2}\r\n                                                min={initialTest12.date2}\r\n                                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                                required\r\n                                            />\r\n                                           \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group  col-md-5\">\r\n                                            <FormGroup>\r\n                                                <Label>Result </Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    name=\"result2\"\r\n                                                    id=\"result2\"\r\n                                                    value={confirmatoryTest2.result2}\r\n                                                    onChange={handleInputChangeConfirmatory2}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    disabled={confirmatoryTest2.date2===''? true : false}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    <option value=\"Yes\">Reactive</option>\r\n                                                    <option value=\"No\">Non Reactive</option>\r\n                                                    \r\n                                                </select>\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group  col-md-2\"></div>\r\n                                        </>\r\n                                        )}\r\n                                        {confirmatoryTest2.result2 ==='No' && (\r\n                                        <>\r\n                                        <h4>Tie Breaker Test 2:</h4>\r\n                                        <div className=\"form-group mb-3 col-md-5\">\r\n                                            <FormGroup>\r\n                                            <Label for=\"\"> Date  </Label>\r\n                                            <Input\r\n                                                type=\"date\"\r\n                                                name=\"date2\"\r\n                                                id=\"date2\"\r\n                                                value={tieBreakerTest2.date2}\r\n                                                onChange={handleInputChangeTie2}\r\n                                                min={confirmatoryTest2.date2}\r\n                                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                                required\r\n                                            />\r\n                                        \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group  col-md-5\">\r\n                                            <FormGroup>\r\n                                                <Label>Result </Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    name=\"result2\"\r\n                                                    id=\"result2\"\r\n                                                    value={tieBreakerTest2.result2}\r\n                                                    onChange={handleInputChangeTie2}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    disabled={tieBreakerTest2.date2===''?true : false}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    <option value=\"Yes\">Reactive</option>\r\n                                                    <option value=\"No\">Non Reactive</option>\r\n                                                    \r\n                                                </select>\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group  col-md-2\"></div>\r\n            \r\n                                        </>)}\r\n                                    </div>\r\n                                    </>\r\n                                )}\r\n                                {/* This is result for Test 1 */}\r\n                                {/* {(initialTest1.result==='Yes' && confirmatoryTest.result==='No' && tieBreakerTest.result==='' ) && (\r\n                                    <LabelRibbon color=\"green\" >\r\n                                        Negative\r\n                                    </LabelRibbon>\r\n                                )} */}\r\n                                {(confirmatoryTest.result==='No' && tieBreakerTest.result==='Yes' ) && (<>\r\n                                    <LabelRibbon color=\"red\" >\r\n                                        Positive\r\n                                    </LabelRibbon>\r\n                                    <br/>\r\n                                    <hr/>\r\n                                   \r\n                                    <div className=\"row\">\r\n                                        <h4>Initial HIV Test 2:</h4>\r\n                                        <div className=\"form-group mb-3 col-md-5\">\r\n                                            <FormGroup>\r\n                                            <Label for=\"\"> Date  </Label>\r\n                                            <Input\r\n                                                type=\"date\"\r\n                                                name=\"date2\"\r\n                                                id=\"date2\"\r\n                                                value={initialTest12.date2}\r\n                                                onChange={handleInputChangeInitial2}\r\n                                                min={ tieBreakerTest.date}\r\n                                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                                required\r\n                                            />\r\n                                            {errors.date2 !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.date2}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group  col-md-5\">\r\n                                            <FormGroup>\r\n                                                <Label>Result  </Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    name=\"result2\"\r\n                                                    id=\"result2\"\r\n                                                    value={initialTest12.result2}\r\n                                                    onChange={handleInputChangeInitial2}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    disabled={initialTest12.date2===''?true : false}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    <option value=\"Yes\">Reactive</option>\r\n                                                    <option value=\"No\">Non Reactive</option>\r\n                                                    \r\n                                                </select>\r\n                                                {errors.result2 !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.result2}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group  col-md-2\"></div>\r\n                                        {initialTest12.result2 ==='Yes' && (\r\n                                        <>\r\n                                        <h4>Confirmatory Test 2:</h4>\r\n                                        <div className=\"form-group mb-3 col-md-5\">\r\n                                            <FormGroup>\r\n                                            <Label for=\"\"> Date  </Label>\r\n                                            <Input\r\n                                                type=\"date\"\r\n                                                name=\"date2\"\r\n                                                id=\"date2\"\r\n                                                value={confirmatoryTest2.date2}\r\n                                                onChange={handleInputChangeConfirmatory2}\r\n                                                min={initialTest12.date2}\r\n                                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                                required\r\n                                            />\r\n                                           \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group  col-md-5\">\r\n                                            <FormGroup>\r\n                                                <Label>Result </Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    name=\"result2\"\r\n                                                    id=\"result2\"\r\n                                                    value={confirmatoryTest2.result2}\r\n                                                    onChange={handleInputChangeConfirmatory2}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    disabled={confirmatoryTest2.date2===''?true : false}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    <option value=\"Yes\">Reactive</option>\r\n                                                    <option value=\"No\">Non Reactive</option>\r\n                                                    \r\n                                                </select>\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group  col-md-2\"></div>\r\n                                        </>\r\n                                        )}\r\n                                        {confirmatoryTest2.result2 ==='No' && (\r\n                                        <>\r\n                                        <h4>Tie Breaker Test 2:</h4>\r\n                                        <div className=\"form-group mb-3 col-md-5\">\r\n                                            <FormGroup>\r\n                                            <Label for=\"\"> Date  </Label>\r\n                                            <Input\r\n                                                type=\"date\"\r\n                                                name=\"date2\"\r\n                                                id=\"date2\"\r\n                                                value={tieBreakerTest2.date2}\r\n                                                onChange={handleInputChangeTie2}\r\n                                                min={confirmatoryTest2.date2}\r\n                                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                                required\r\n                                            />\r\n                                        \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group  col-md-5\">\r\n                                            <FormGroup>\r\n                                                <Label>Result </Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    name=\"result2\"\r\n                                                    id=\"result2\"\r\n                                                    value={tieBreakerTest2.result2}\r\n                                                    onChange={handleInputChangeTie2}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    disabled={tieBreakerTest2.date2===''?true : false}\r\n                                                >\r\n                                                    <option value={\"\"}></option>\r\n                                                    <option value=\"Yes\">Reactive</option>\r\n                                                    <option value=\"No\">Non Reactive</option>\r\n                                                    \r\n                                                </select>\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"form-group  col-md-2\"></div>\r\n            \r\n                                        </>)}\r\n                                    </div>\r\n                                    </>\r\n                                )}\r\n                                {(confirmatoryTest.result==='No' && tieBreakerTest.result==='No' && (initialTest1.result==='Yes' || initialTest1.result==='Yes' || initialTest1.result==='')) && (\r\n                                    <LabelRibbon color=\"green\" >\r\n                                        Negative\r\n                                    </LabelRibbon>\r\n                                )}\r\n                                 {/* END of  result for Test 1 */}\r\n                                {/* This is result for Test 2 */}\r\n                                {initialTest12.result2==='No' &&  (\r\n                                    <LabelRibbon color=\"green\" >\r\n                                        Negative\r\n                                    </LabelRibbon>\r\n                                )} \r\n                                {initialTest12.result2==='No' && confirmatoryTest2.result2==='No'  && (\r\n                                    <LabelRibbon color=\"green\" >\r\n                                        Negative\r\n                                    </LabelRibbon>\r\n                                )}\r\n                                \r\n                                {(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='Yes' ) && (\r\n                                    <>\r\n                                    <LabelRibbon color=\"red\" >\r\n                                        Positive\r\n                                    </LabelRibbon>\r\n                                    <br/>\r\n                                    </>\r\n                                )}\r\n                                {/* {(initialTest12.result2==='Yes' && confirmatoryTest2.result2==='No' && tieBreakerTest2.result2==='' ) && (\r\n                                    <LabelRibbon color=\"green\" >\r\n                                        Negative\r\n                                    </LabelRibbon>\r\n                                )} */}\r\n                                {(confirmatoryTest2.result2==='No' && tieBreakerTest2.result2==='Yes' ) && (\r\n                                    <LabelRibbon color=\"red\" >\r\n                                        Positive\r\n                                    </LabelRibbon>\r\n                                )}\r\n                                {(confirmatoryTest2.result2==='No' && tieBreakerTest2.result2==='No' && (initialTest12.result2==='Yes' || initialTest12.result2==='Yes' || initialTest12.result2==='')) && (\r\n                                    <LabelRibbon color=\"green\" >\r\n                                        Negative\r\n                                    </LabelRibbon>\r\n                                )}\r\n                                \r\n                                 {/* END of  result for Test 2*/}\r\n                            </div>\r\n                            </div>\r\n                            {showCD4Count && (<>\r\n                            <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                                <h5 style={{color:'#fff'}}>CD4 Count</h5>\r\n                            </LabelRibbon>\r\n                            <br/> <br/>\r\n                            <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                    <Label>CD4 Count </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"cd4Count\"\r\n                                        id=\"cd4Count\"\r\n                                        value={cd4Count.cd4Count}\r\n                                        onChange={handleInputChangeCd4Count}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Semi-Quantitative\">Semi-Quantitative</option>\r\n                                        <option value=\"Flow Cyteometry\">Flow Cyteometry</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            {cd4Count.cd4Count ==='Semi-Quantitative' && (\r\n                            <div className=\"form-group  col-md-5\">\r\n                                <FormGroup>\r\n                                    <Label>CD4 Count Value</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"cd4SemiQuantitative\"\r\n                                        id=\"cd4SemiQuantitative\"\r\n                                        value={cd4Count.cd4SemiQuantitative}\r\n                                        onChange={handleInputChangeCd4Count}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Semi-Quantitative\">{\"<200\"}</option>\r\n                                        <option value=\"Flow Cyteometry\">{\">=200\"}</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            {cd4Count.cd4Count ==='Flow Cyteometry' && (\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">CD4 Count Value</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"cd4FlowCyteometry\"\r\n                                    id=\"cd4FlowCyteometry\"\r\n                                    value={cd4Count.cd4FlowCyteometry}\r\n                                    onChange={handleInputChangeCd4Count}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    \r\n                                />\r\n                                 \r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            <div className=\"form-group  col-md-7\"></div>\r\n                           \r\n                            </>)}\r\n                            <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                            <h5 style={{color:'#fff'}}>Syphilis Testing</h5>\r\n                        </LabelRibbon>\r\n                        <br/> <br/>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Syphilis test result *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"syphilisTestResult\"\r\n                                        id=\"syphilisTestResult\"\r\n                                        value={syphills.syphilisTestResult}\r\n                                        onChange={handleInputChangeSyphills}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Reactive</option>\r\n                                        <option value=\"No\">Non-Reactive</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n \r\n                            <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                            <h5 style={{color:'#fff'}}>Hepatitis Testing</h5>\r\n                            </LabelRibbon>\r\n                            <br/> <br/>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Hepatitis B virus test result *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hepatitisBTestResult\"\r\n                                        id=\"hepatitisBTestResult\"\r\n                                        value={hepatitis.hepatitisBTestResult}\r\n                                        onChange={handleInputChangeHepatitis}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Positive</option>\r\n                                        <option value=\"No\">Negative</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Hepatitis C virus test result *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hepatitisCTestResult\"\r\n                                        id=\"hepatitisCTestResult\"\r\n                                        value={hepatitis.hepatitisCTestResult}\r\n                                        onChange={handleInputChangeHepatitis}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                       <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Positive</option>\r\n                                        <option value=\"No\">Negative</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                            <h5 style={{color:'#fff'}}>Others</h5>\r\n                            </LabelRibbon>\r\n                            <br/> <br/>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Longitude</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"longitude\"\r\n                                    id=\"longitude\"\r\n                                    value={others.longitude}\r\n                                    onChange={handleInputChangeOthers}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Latitude</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"latitude\"\r\n                                    id=\"latitude\"\r\n                                    value={others.latitude}\r\n                                    onChange={handleInputChangeOthers}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Adhoc Code</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"adhocCode\"\r\n                                    id=\"adhocCode\"\r\n                                    value={others.adhocCode}\r\n                                    onChange={handleInputChangeOthers}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-12\">\r\n                            {patientAge<=15 ? \r\n                            (<>\r\n                                <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('basic', 'basic')}/>\r\n                            </>)\r\n                            :\r\n                            (<>\r\n                                <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('pre-test-counsel', 'pre-test-counsel')}/>\r\n                            </>)\r\n                            }\r\n                            \r\n                            <Button content='Save & Continue' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default HivTestResult","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl } from \"../../../../api\";\r\nimport { toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\n// import {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Button} from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst AddIndexContact = (props) => {\r\n    const classes = useStyles();\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [sexs, setSexs] = useState([])\r\n    const [notificationContact, setNotificationContact] = useState([])\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [indexTesting, setIndexTesting]= useState([]);\r\n    const [consent, setConsent]= useState([]);\r\n    const [hivTestDate, setHivTestDate] = useState(\"\");\r\n   \r\n    const [objValuesIndex, setObjValuesIndex]= useState( {\r\n        htsClientId: null,\r\n        indexNotificationServicesElicitation: {},\r\n        personId: null\r\n      })\r\n   \r\n    const [objValues, setObjValues]= useState(\r\n        {\r\n            firstName: \"\",\r\n            middleName: \"\",\r\n            lastName:\"\",\r\n            dob:\"\",\r\n            phoneNumber:\"\",\r\n            altPhoneNumber: \"\",\r\n            sex: \"\",\r\n            htsClientId:props  && props.patientObj ? props.patientObj.id : \"\",\r\n            physicalHurt: \"\",\r\n            threatenToHurt: \"\",\r\n            address: \"\", \r\n            hangOutSpots: \"\",\r\n            relativeToIndexClient: \"\",\r\n            currentlyLiveWithPartner: \"\", \r\n            partnerTestedPositive: \"\",\r\n            sexuallyUncomfortable: \"\", \r\n            notificationMethod : \"\",\r\n            datePartnerCameForTesting: \"\",\r\n        }\r\n    )\r\n           \r\n    useEffect(() => { \r\n        Sex();\r\n        NotificationContact();\r\n        IndexTesting();\r\n        Consent();\r\n        if(props.patientObj){\r\n\r\n            if(props.patientObj.dateVisit && props.patientObj.dateVisit!=='' ){\r\n                setHivTestDate(props.patientObj.dateVisit)\r\n            }else{\r\n                setHivTestDate(\"\")\r\n            }\r\n        }\r\n    }, [props.patientObj]);\r\n\r\n    //Get list of Genders from \r\n    const Sex =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/SEX`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setSexs(response.data);\r\n\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    //Get list of IndexTesting\r\n    const IndexTesting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/INDEX_TESTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setIndexTesting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    ///CONSENT\tYes\t\ten\tCONSENT\r\n    const Consent =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/CONSENT`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setConsent(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const NotificationContact =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/NOTIFICATION_CONTACT`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setNotificationContact(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n        \r\n    }\r\n    const handleItemClickPage =(page)=>{\r\n        props.handleIClickPage(page)\r\n    }\r\n    const handleInputChange = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"})\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setObjValues ({...objValues,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setObjValues ({...objValues,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setObjValues ({...objValues,  [e.target.name]: name});\r\n        } \r\n        // if((e.target.name !=='maritalStatusId' && e.target.value!=='5' )){//logic for marital status\r\n        //     setHideNumChild(true)\r\n        // }else{\r\n        //     setHideNumChild(false)\r\n        // }         \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});            \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            objValues.age=age_now\r\n            \r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setObjValues({...objValues, age:  \"\"});\r\n        }\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n   \r\n        setObjValues({...objValues, dob: e.target.value});\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            objValues.isDateOfBirthEstimated=false\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            objValues.isDateOfBirthEstimated=true\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            setObjValues({...objValues, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            objValues.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setObjValues({...objValues, age: e.target.value});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n        setObjValues({...objValues,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();     \r\n        objValues.isDateOfBirthEstimated=objValues.isDateOfBirthEstimated==true ? 1 : 0\r\n            axios.post(`${baseUrl}index-elicitation`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n            .then(response => {\r\n                setSaving(false);\r\n                toast.success(\"Record save successful\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n                handleItemClickPage('list')\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage,  {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n            });\r\n            \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n                \r\n                <h2 style={{color:'#000'}}>Index Notification Services - Elicitation \r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\" float-end  mr-2 mt-2\"\r\n                    onClick={()=>handleItemClickPage('list')}\r\n                    //startIcon={<FaUserPlus size=\"10\"/>}\r\n                >\r\n                    <span style={{ textTransform: \"capitalize\" }}> Back To Client Index List</span>\r\n                </Button>\r\n                </h2>\r\n                <br/><br/>    \r\n                    <form >\r\n                        <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">First Name</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"firstName\"\r\n                                    id=\"firstName\"\r\n                                    value={objValues.firstName}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Middle Name</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"middleName\"\r\n                                    id=\"middleName\"\r\n                                    value={objValues.middleName}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Last Name</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"lastName\"\r\n                                    id=\"lastName\"\r\n                                    value={objValues.lastName}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-2 col-md-2\">\r\n                                <FormGroup>\r\n                                    <Label>Date Of Birth</Label>\r\n                                    <div className=\"radio\">\r\n                                        <label>\r\n                                            <input\r\n                                                type=\"radio\"\r\n                                                value=\"Actual\"\r\n                                                name=\"dateOfBirth\"\r\n                                                defaultChecked\r\n                                                \r\n                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            /> Actual\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"radio\">\r\n                                        <label>\r\n                                            <input\r\n                                                type=\"radio\"\r\n                                                value=\"Estimated\"\r\n                                                name=\"dateOfBirth\"\r\n                                                \r\n                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            /> Estimated\r\n                                        </label>\r\n                                    </div>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Date</Label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dob\"\r\n                                        id=\"dob\"\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        value={objValues.dob}\r\n                                        onChange={handleDobChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Age</Label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"number\"\r\n                                        name=\"age\"\r\n                                        id=\"age\"\r\n                                        value={objValues.age}\r\n                                        disabled={ageDisabled}\r\n                                        onChange={handleAgeChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Phone Number</Label>\r\n                                \r\n                                    <PhoneInput\r\n                                        containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                        inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                        country={'ng'}\r\n                                        placeholder=\"(234)7099999999\"\r\n                                        minLength={10}\r\n                                        name=\"phoneNumber\"\r\n                                        id=\"phoneNumber\"\r\n                                        masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                        value={objValues.phoneNumber}\r\n                                        onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                    />\r\n                                    {errors.phoneNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                        ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Alternative Phone Number</Label>\r\n                                <PhoneInput\r\n                                        containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                        inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                        country={'ng'}\r\n                                        placeholder=\"(234)7099999999\"\r\n                                        minLength={10}\r\n                                        name=\"altPhoneNumber\"\r\n                                        id=\"altPhoneNumber\"\r\n                                        masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                        value={objValues.altPhoneNumber}\r\n                                        onChange={(e)=>{checkPhoneNumberBasic(e,'altPhoneNumber')}}\r\n                                        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                    />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Sex *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sex\"\r\n                                        id=\"sex\"\r\n                                        value={objValues.sex}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {sexs.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>                           \r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Address</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"address\"\r\n                                    id=\"address\"\r\n                                    value={objValues.address}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}                                   \r\n                                />                                \r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Hang-out spots</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"hangOutSpots\"\r\n                                    id=\"hangOutSpots\"\r\n                                    value={objValues.hangOutSpots}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}                                   \r\n                                />                                \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Relationship to Index Client *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"relativeToIndexClient\"\r\n                                        id=\"relativeToIndexClient\"\r\n                                        value={objValues.relativeToIndexClient}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {indexTesting.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                            ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Do you currently live with this partner? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"currentlyLiveWithPartner\"\r\n                                        id=\"currentlyLiveWithPartner\"\r\n                                        value={objValues.currentlyLiveWithPartner}\r\n                                        onChange={handleInputChange}        \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value={\"true\"}>Yes</option>\r\n                                        <option value={\"false\"}>No</option>\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>As far as you know, as this partner ever tested positive for HIV *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"partnerTestedPositive\"\r\n                                        id=\"partnerTestedPositive\"\r\n                                        value={objValues.partnerTestedPositive}\r\n                                        onChange={handleInputChange} \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {consent.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Has this partner ever hit, kick, slapped or otherwise physical hurt you? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"physicalHurt\"\r\n                                        id=\"physicalHurt\"\r\n                                        value={objValues.physicalHurt}\r\n                                        onChange={handleInputChange} \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                         <option value={\"\"}></option>\r\n                                        {consent.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Has this partner ever threaten to hurt you? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"threatenToHurt\"\r\n                                        id=\"threatenToHurt\"\r\n                                        value={objValues.threatenToHurt}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {consent.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                           \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Has this partner ever threaten force you to do something sexually that made you uncomfortable ?  *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sexuallyUncomfortable\"\r\n                                        id=\"sexuallyUncomfortable\"\r\n                                        value={objValues.sexuallyUncomfortable}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                         <option value={\"\"}></option>\r\n                                        {consent.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Notification Method selected*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"notificationMethod\"\r\n                                        id=\"notificationMethod\"\r\n                                        value={objValues.notificationMethod}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {notificationContact.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">If contract by which date will partner come for testing?</Label>\r\n                                <Input\r\n                                    type=\"date\"\r\n                                    name=\"datePartnerCameForTesting\"\r\n                                    id=\"datePartnerCameForTesting\"\r\n                                    value={objValues.datePartnerCameForTesting}\r\n                                    onChange={handleInputChange}\r\n                                    min={hivTestDate}\r\n                                    //max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    \r\n                                />\r\n                                {errors.datePartnerComeForTesting !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.datePartnerComeForTesting}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                           \r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                           \r\n                            <Button content='Save' icon='save' labelPosition='left' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddIndexContact","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../../api\";\r\n//import { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\nimport moment from \"moment\";\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n\r\n    const [indexClientList, setIndexClientList] = useState([])\r\n    //const [patientObj, setpatientObj] = useState([])\r\n    const patientId = props.patientObj && props.patientObj.id ? props.patientObj.id: null\r\n    //const [key, setKey] = useState('home');\r\n    //console.log(props)\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n    ///GET LIST OF Patients\r\n    async function patients() {\r\n        axios\r\n            .get(`${baseUrl}hts/${props.patientObj.id}/index-elicitation`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                console.log(response.data)\r\n                setIndexClientList(response.data);\r\n            })\r\n            .catch((error) => {    \r\n            });        \r\n    }\r\n    const handleItemClickPage =(page)=>{\r\n        props.handleIClickPage(page)\r\n    }\r\n    const handleIEditIndex =(page, activePage)=> {\r\n        console.log(page)\r\n        console.log(activePage)\r\n        //props.setActivePage({...props.activePage, activePage:\"activePage\", activeObject:row, actionType:actionType})\r\n        //props.handleIClickPage(page)\r\n    }\r\n\r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now + \" year(s)\";\r\n      };\r\n\r\n\r\n  return (\r\n    <div>     \r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\" float-end  mr-2 mt-2\"\r\n            onClick={()=>handleItemClickPage('add')}\r\n            //startIcon={<FaUserPlus size=\"10\"/>}\r\n        >\r\n            <span style={{ textTransform: \"capitalize\" }}>New Index Client </span>\r\n        </Button>\r\n        <br/><br/><br/><br/>\r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"List of index client \"\r\n              columns={[\r\n              { title: \"Name\", field: \"name\" },\r\n              { title: \"Age\", field: \"age\" },\r\n              { title: \"Phone Number\", field: \"phone\" },  \r\n              {title: \"Adress\",field: \"address\",},   \r\n              { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              data={ indexClientList.map((row) => ({\r\n                name: row.firstName + \" \" + row.lastName,\r\n                age:calculate_age(moment(row.dob).format(\"DD-MM-YYYY\")),\r\n                phone:row.phoneNumber, \r\n                address:row.address,  \r\n                actions:(\r\n                        <>\r\n                        {/* <Menu.Menu position='right'  >\r\n                            <Menu.Item >\r\n                                <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                                <Dropdown item text='Action'>\r\n\r\n                                <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                \r\n                                <Dropdown.Item  \r\n                                //onClick={()=>handleIEditIndex(row, 'update')}\r\n                                >\r\n                                    <Icon name='edit' />Edit</Dropdown.Item>\r\n                                <Dropdown.Item  \r\n                                //onClick={()=>LoadDeletePage(row, 'delete')}\r\n                                > <Icon name='trash' /> Delete</Dropdown.Item>\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                                </Button>\r\n                            </Menu.Item>\r\n                        </Menu.Menu> */}\r\n                        </>\r\n                        )\r\n                    }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              //backgroundColor: \"#9F9FA5\",\r\n                              color: \"#000\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientnHistory;\r\n\r\n\r\n","import React, {useState, Fragment } from \"react\";\r\n\r\nimport { Row, Col, Card, } from \"react-bootstrap\";\r\nimport AddIndexContact from './AddIndexContact';\r\nimport IndexContactList from './IndexContactList'\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport { Link } from 'react-router-dom';\r\n//import Button from '@material-ui/core/Button';\r\nimport {Label as LabelRibbon, Button} from 'semantic-ui-react'\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\n\r\nconst Elicitation = (props) => {\r\n    //console.log(props.patientObj)\r\n    const [activePage, setActivePage]= useState('list')\r\n    const handleIClickPage =(activeItem)=>{\r\n        setActivePage(activeItem)\r\n    }\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n    }\r\n    const handleDone=()=>{\r\n      props.setActivePage({...props.activePage, activePage:\"recent-history\",})\r\n    }\r\n\r\n  return (\r\n    <Fragment>  \r\n     \r\n      <Row>       \r\n        <Col md={12}>\r\n            {activePage==='list' &&\r\n                (\r\n                    <IndexContactList activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>\r\n                )\r\n            }\r\n            {activePage==='add' && (\r\n                  <AddIndexContact activePage={activePage} setActivePage={setActivePage} handleIClickPage={handleIClickPage} patientObj={props.patientObj}/>        \r\n            )}\r\n            <br />\r\n                <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                <Button content='Done' icon='list' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleDone()}/>\r\n                \r\n                </div>\r\n                </div>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Elicitation;\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\n// import {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\n// import {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Label as LabelRibbon} from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst BasicInfo = (props) => {\r\n    const classes = useStyles();\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n               \r\n                <h3 >OTHERS - (Resquest {\"& \"} Result Form)</h3>\r\n               <hr/>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                            <h5 style={{color:'#fff'}}>Syphilis Testing</h5>\r\n                        </LabelRibbon>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Syphilis test result *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"syphilisTestResult\"\r\n                                        id=\"syphilisTestResult\"\r\n                                        \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Reactive</option>\r\n                                        <option value=\"No\">Non-Reactive</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <hr/>\r\n                            <br/>\r\n                            <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                            <h5 style={{color:'#fff'}}>Hepatitis B Testing</h5>\r\n                            </LabelRibbon>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Hepatitis B virus test result *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hepatitisBTestResult\"\r\n                                        id=\"hepatitisBTestResult\"\r\n                                        \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Positive</option>\r\n                                        <option value=\"No\">Negative</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Hepatitis C virus test result *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hepatitisCTestResult\"\r\n                                        id=\"hepatitisCTestResult\"\r\n                                        \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                       <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Positive</option>\r\n                                        <option value=\"No\">Negative</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>HIV Request and Result form filled with CT Intake Form *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivRequestResultCT\"\r\n                                        id=\"hivRequestResultCT\"\r\n                                        \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Yes</option>\r\n                                        <option value=\"No\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Completed By</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"completedBy\"\r\n                                    id=\"completedBy\"\r\n                                    // value={objValues.lastViralLoad}\r\n                                    // onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Longitude</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"longitude\"\r\n                                    id=\"longitude\"\r\n                                    // value={objValues.lastViralLoad}\r\n                                    // onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Latitude</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"latitude\"\r\n                                    id=\"latitude\"\r\n                                    // value={objValues.lastViralLoad}\r\n                                    // onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Adhoc Code</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"adhocCode\"\r\n                                    id=\"adhocCode\"\r\n                                    // value={objValues.lastViralLoad}\r\n                                    // onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                   \r\n                                />\r\n                                \r\n                                </FormGroup>\r\n                            </div>\r\n                                                      \r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                            <MatButton\r\n                            type=\"button\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon />}\r\n                            onClick={()=>handleItemClick('basic','others')}\r\n                            style={{backgroundColor:\"#014d88\"}}\r\n                            //disabled={objValues.dateOfEac1===\"\" ? true : false}\r\n                            >\r\n                            {!saving ? (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                            ) : (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                            )}\r\n                            </MatButton>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default BasicInfo","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useHistory, } from \"react-router-dom\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Label as LabelRibbon, Button, Message} from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst PostTest = (props) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const patientID= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.id : \"\";\r\n    const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n    const [saving, setSaving] = useState(false);\r\n    console.log(props.patientObj)\r\n    ///const [errors, setErrors] = useState({});\r\n    const [objValues, setObjValues]= useState(\r\n        {\r\n            htsClientId: clientId,\r\n            postTestCounselingKnowledgeAssessment: {},\r\n            personId: patientID,\r\n        }\r\n    )\r\n\r\n    const [postTest, setPostTest]= useState(\r\n        {\r\n            hivTestResult:\"\", \r\n            hivTestBefore:\"\", \r\n            hivRequestResult:\"\", \r\n            hivRequestResultCt:\"\",                             \r\n            clientReceivedHivTestResult:\"\", \r\n            postTestCounseling:\"\", \r\n            riskReduction:\"\", \r\n            postTestDisclosure:\"\",\r\n            bringPartnerHivtesting:\"\", \r\n            childrenHivtesting:\"\", \r\n            informationFp:\"\", \r\n            partnerFpThanCondom:\"\", \r\n            partnerFpUseCondom:\"\",\r\n            correctCondomUse:\"\", \r\n            condomProvidedToClient:\"\", \r\n            unprotectedSexRegularPartnerLastThreeMonth:\"\", \r\n            referredToServices:\"\",\r\n        }\r\n    )\r\n    useEffect(() => { \r\n        //console.log(props.patientObj)\r\n        if(props.patientObj && props.patientObj.postTestCounselingKnowledgeAssessment){\r\n            setPostTest(props.patientObj.postTestCounselingKnowledgeAssessment) \r\n        }else{\r\n            ///setPostTest(props.patientObj && props.patientObj.postTestCounselingKnowledgeAssessment!==null ? props.patientObj.postTestCounselingKnowledgeAssessment : {}) \r\n            if(postTest.hivTestResult===\"\" && props.patientObj.hivTestResult!==\"\" && props.patientObj.hivTestResult!==null && (props.patientObj.hivTestResult==='Positive' || props.patientObj.hivTestResult2==='Positive')){\r\n                postTest.hivTestResult='True'\r\n                setPostTest({...postTest, hivTestResult:'True' })\r\n            }else if(postTest.hivTestResult===\"\"  && props.patientObj.hivTestResult!==\"\" && props.patientObj.hivTestResult!==null && (props.patientObj.hivTestResult==='Negative' || props.patientObj.hivTestResult2==='Negative')){\r\n                postTest.hivTestResult='False'\r\n                setPostTest({...postTest, hivTestResult:'False' })\r\n            }\r\n        }\r\n    }, [props.patientObj,postTest.hivTestResult]);\r\n    const handleInputChangePostTest = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"})        \r\n        setPostTest ({...postTest,  [e.target.name]: e.target.value});           \r\n    }\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        //handleItemClick('recency-testing', 'post-test')\r\n        if(!(Object.values(postTest).every(x => x === \"\"))){\r\n            objValues.htsClientId=  props.patientObj.id\r\n            objValues.postTestCounselingKnowledgeAssessment= postTest\r\n            objValues.personId= props.patientObj.personResponseDto.id\r\n            axios.put(`${baseUrl}hts/${ props.patientObj.id}/post-test-counseling`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n            .then(response => {\r\n                setSaving(false);\r\n                props.setPatientObj(response.data)\r\n                //toast.success(\"Risk Assesment successful\");\r\n                if(postTest.hivTestResult==='True'){\r\n                    handleItemClick('recency-testing', 'post-test')\r\n                }else if(postTest.hivTestResult==='False'){\r\n                    history.push('/');\r\n                }\r\n                \r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n            });\r\n        }else{\r\n            toast.error(\"All post test fields are required\")  \r\n        \r\n        }\r\n            \r\n    }\r\n\r\n    console.log(postTest.hivTestResult)\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n               \r\n                <h2 >POST TEST COUNSELING</h2>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                            {/* <h5 style={{color:'#fff'}}>Knowledge Assessment</h5> */}\r\n                        </LabelRibbon>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>HIV test result *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivTestResult\"\r\n                                        id=\"hivTestResult\"\r\n                                        value={postTest.hivTestResult}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"True\">Positive</option>\r\n                                        <option value=\"False\">Negative</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you been tested for HIV before within this year? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivTestBefore\"\r\n                                        id=\"hivTestBefore\"\r\n                                        value={postTest.hivTestBefore}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Not previously tested\">Not previously tested</option>\r\n                                        <option value=\"Previously tested negative\">Previously tested negative</option>\r\n                                        <option value=\"Previously tested positive in HIV care\">Previously tested positive in HIV care</option>\r\n                                        <option value=\"Previously tested positive not in HIV care\">Previously tested positive not in HIV care</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>HIV Request and Result form signed by tester *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivRequestResult\"\r\n                                        id=\"hivRequestResult\"\r\n                                        value={postTest.hivRequestResult}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>HIV Request and Result form filled with CT Intake Form *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivRequestResultCt\"\r\n                                        id=\"hivRequestResultCt\"\r\n                                        value={postTest.hivRequestResultCt}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client received HIV test result *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clientReceivedHivTestResult\"\r\n                                        id=\"clientReceivedHivTestResult\"\r\n                                        value={postTest.clientReceivedHivTestResult}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Post test counseling done *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"postTestCounseling\"\r\n                                        id=\"postTestCounseling\"\r\n                                        value={postTest.postTestCounseling}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Risk reduction plan developed *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"riskReduction\"\r\n                                        id=\"riskReduction\"\r\n                                        value={postTest.riskReduction}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Post test disclosure plan developed *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"postTestDisclosure\"\r\n                                        id=\"postTestDisclosure\"\r\n                                        value={postTest.postTestDisclosure}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>                            \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Will bring partner(s) for HIV testing *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"bringPartnerHivtesting\"\r\n                                        id=\"bringPartnerHivtesting\"\r\n                                        value={postTest.bringPartnerHivtesting}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Will bring own children {'<5'} years for HIV testing *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"childrenHivtesting\"\r\n                                        id=\"childrenHivtesting\"\r\n                                        value={postTest.childrenHivtesting}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Provided with information on FP and dual contraception *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"informationFp\"\r\n                                        id=\"informationFp\"\r\n                                        value={postTest.informationFp}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client/Partner use FP methods (other than condom)*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"partnerFpThanCondom\"\r\n                                        id=\"partnerFpThanCondom\"\r\n                                        value={postTest.partnerFpThanCondom}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client/Partner use condoms as (one) FP method </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"partnerFpUseCondom\"\r\n                                        id=\"partnerFpUseCondom\"\r\n                                        value={postTest.partnerFpUseCondom}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Correct condom use demonstrated *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"correctCondomUse\"\r\n                                        id=\"correctCondomUse\"\r\n                                        value={postTest.correctCondomUse}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Condoms provided to client *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"condomProvidedToClient\"\r\n                                        id=\"condomProvidedToClient\"\r\n                                        value={postTest.condomProvidedToClient}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            {/* <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected sex with regular partner in the last 3months</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedSexRegularPartnerLastThreeMonth\"\r\n                                        id=\"unprotectedSexRegularPartnerLastThreeMonth\"\r\n                                        value={postTest.unprotectedSexRegularPartnerLastThreeMonth}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div> */}\r\n                            {/* <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected sex with regular particular in the last 3 months</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sex\"\r\n                                        id=\"sex\"\r\n                                        \r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Yes\">Yes</option>\r\n                                        <option value=\"No\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div> */}\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Client referred to other services *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"referredToServices\"\r\n                                        id=\"referredToServices\"\r\n                                        value={postTest.referredToServices}\r\n                                        onChange={handleInputChangePostTest}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <Message success>\r\n                                <h4>If client tests HIV negative, and HIV Risk Assessment Score {\">0\"} or\r\n                                    there is evidence for a STI syndrome, recommend re-testing after 3 months</h4>\r\n                                \r\n                            </Message>\r\n                                                \r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-12\">\r\n                                <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('hiv-test', 'hiv-test')}/>\r\n                                {postTest.hivTestResult==='True' && (\r\n                                    <Button content='Save & Continue' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\r\n                                )}\r\n                                {postTest.hivTestResult==='False' && (\r\n                                    <Button content='Save & Finish' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\r\n                                )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default PostTest","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport { toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Label as LabelRibbon, Button} from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nconst Recency = (props) => {\r\n    const classes = useStyles();\r\n    const patientID= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.id : \"\";\r\n    const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [hivTestDate, setHivTestDate] = useState(\"\");\r\n    let temp = { ...errors }\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n    }\r\n\r\n    const [objValues, setObjValues]= useState(\r\n        {\r\n            htsClientId: clientId,\r\n            recency: {},\r\n            personId: patientID,\r\n        }\r\n    )\r\n    const [recency, setRecency]= useState(\r\n        {\r\n            optOutRTRI:\"\", \r\n            optOutRTRITestName:\"\", \r\n            optOutRTRITestDate:\"\", \r\n            rencencyId:\"\",  \r\n            controlLine:\"\",  \r\n            verififcationLine:\"\", \r\n            longTermLine:\"\",  \r\n            rencencyInterpretation:\"\", \r\n            hasViralLoad:\"\", \r\n            sampleCollectedDate:\"\",\r\n            sampleReferanceNumber:\"\",\r\n            dateSampleSentToPCRLab:\"\",\r\n            sampleTestDate:\"\",\r\n            sampleType:\"\", \r\n            receivingPcrLab:\"\", \r\n            viralLoadResultClassification:\"\",\r\n            recencyResult:\"\", \r\n            finalRecencyResult:\"\",\r\n        }\r\n    )\r\n    \r\n    useEffect(() => { \r\n        if(props.patientObj){\r\n            setRecency(props.patientObj && props.patientObj.recency!==null ? props.patientObj.recency : {})\r\n            if(props.patientObj.confirmatoryTest && props.patientObj.confirmatoryTest.date!=='' ){\r\n                setHivTestDate(props.patientObj.confirmatoryTest.date)\r\n            }else if(props.patientObj.confirmatoryTest2 && props.patientObj.confirmatoryTest2.date2!=='' ){\r\n                setHivTestDate(props.patientObj.confirmatoryTest2.date2)\r\n            }else{\r\n                setHivTestDate(\"\")\r\n            }\r\n        }\r\n        if(recency.longTermLine==='true' && recency.verififcationLine==='true' && recency.controlLine==='true'){\r\n            recency.rencencyInterpretation=\"Long Term\"\r\n            setRecency ({...recency,  ['rencencyInterpretation']: 'Long Term'}); \r\n        \r\n        }else if(recency.longTermLine==='false' && recency.verififcationLine==='true' && recency.controlLine==='true'){\r\n            recency.rencencyInterpretation=\"Recent\"\r\n            setRecency ({...recency,  ['rencencyInterpretation']: 'Recent'});\r\n            //setRecency ({...recency,  ['hasViralLoad']: 'true'});\r\n            \r\n        }else if(recency.longTermLine==='false' && recency.verififcationLine==='false' && recency.controlLine==='true'){\r\n            recency.rencencyInterpretation=\"Negative\"\r\n            setRecency ({...recency,  ['rencencyInterpretation']: 'Negative'});\r\n            \r\n        }else if(recency.longTermLine==='true' && recency.verififcationLine==='true' && recency.controlLine==='false'){\r\n            recency.rencencyInterpretation=\"Invalid\"\r\n            setRecency ({...recency,  ['rencencyInterpretation']: 'Invalid'});\r\n           \r\n        }else if(recency.longTermLine==='true' && recency.verififcationLine==='false' && recency.controlLine==='true'){\r\n            recency.rencencyInterpretation=\"Invalid\"\r\n            setRecency ({...recency,  ['rencencyInterpretation']: 'Invalid'});\r\n            \r\n        }else{\r\n            \r\n            setRecency ({...recency,  ['rencencyInterpretation']: ''});\r\n        }\r\n    },[recency.longTermLine,recency.verififcationLine, recency.controlLine, props.patientObj]);\r\n    console.log(props.patientObj)\r\n    const handleInputChangeRecency = e => { \r\n        setErrors({...temp, [e.target.name]:\"\"})        \r\n        if(e.target.name ==='viralLoadResultClassification'){\r\n             \r\n            if(e.target.value ==='>=1000'){\r\n                recency.finalRecencyResult='RITA Recent'\r\n                setRecency ({...recency,  [e.target.name]: e.target.value}); \r\n            \r\n            }else if(e.target.value ==='<1000') {\r\n                recency.finalRecencyResult='RITA Long term'\r\n                setRecency ({...recency,  [e.target.name]: e.target.value}); \r\n            }else if(e.target.value ==='Failed run') {\r\n                recency.finalRecencyResult='RITA Inconclusive'\r\n                setRecency ({...recency,  [e.target.name]: e.target.value}); \r\n            }else if(e.target.value ==='Invalid viral load result') {\r\n                recency.finalRecencyResult='RITA Inconclusive'\r\n                setRecency ({...recency,  [e.target.name]: e.target.value}); \r\n            }else{\r\n                setRecency ({...recency,  [e.target.name]: e.target.value}); \r\n            }\r\n        }else if(e.target.name==='rencencyId' && e.target.value!==''){\r\n            const recencyIdNumberValue = checkRecencyLimit(e.target.value)\r\n            setRecency ({...recency,  [e.target.name]: recencyIdNumberValue});\r\n        }else {\r\n            setRecency ({...recency,  [e.target.name]: e.target.value}); \r\n        }\r\n         \r\n    }\r\n    const checkRecencyLimit=(e)=>{\r\n        const limit = 10;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        //HTS FORM VALIDATION\r\n            {recency.sampleCollectedDate!=='' && (temp.sampleReferanceNumber = recency.sampleReferanceNumber ? \"\" : \"This field is required.\")}\r\n            {  recency.sampleCollectedDate!=='' && (temp.dateSampleSentToPCRLab = recency.dateSampleSentToPCRLab ? \"\" : \"This field is required.\")}\r\n            { recency.sampleCollectedDate!=='' && (temp.sampleType = recency.sampleType ? \"\" : \"This field is required.\")}\r\n            setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n       \r\n\r\n            objValues.htsClientId= clientId\r\n            objValues.recency= recency\r\n            objValues.personId= patientID\r\n            console.log(recency)\r\n            axios.put(`${baseUrl}hts/${clientId}/recency`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n            .then(response => {\r\n                setSaving(false);\r\n                props.setPatientObj(response.data)\r\n                //toast.success(\"Risk Assesment successful\");\r\n                handleItemClick('indexing', 'recency-testing' )\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n            });\r\n        \r\n            \r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>               \r\n                <h2>RECENCY FORM</h2>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <LabelRibbon as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                            <h5 style={{color:'#fff'}}>RENCENCY</h5>\r\n                        </LabelRibbon>\r\n                        <br/><br/><br/>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Opt Out of RTRI?*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"optOutRTRI\"\r\n                                        id=\"optOutRTRI\"\r\n                                        value={recency.optOutRTRI}\r\n                                        onChange={handleInputChangeRecency}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-8\"></div>\r\n                            {recency.optOutRTRI==='false' && (\r\n                            <>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Test Name *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"optOutRTRITestName\"\r\n                                        id=\"optOutRTRITestName\"\r\n                                        value={recency.optOutRTRITestName}\r\n                                        onChange={handleInputChangeRecency}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Asante\">Asante</option>\r\n                                        <option value=\"Others\">Others</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Test Date *</Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"optOutRTRITestDate\"\r\n                                        id=\"optOutRTRITestDate\"\r\n                                        value={recency.optOutRTRITestDate}\r\n                                        onChange={handleInputChangeRecency}\r\n                                        min={hivTestDate!==\"\" && hivTestDate!==null ? hivTestDate :\"\"}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    \r\n                                    />\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Recency ID *</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        name=\"rencencyId\"\r\n                                        id=\"rencencyId\"\r\n                                        type=\"text\"\r\n                                        value={recency.rencencyId}\r\n                                        onChange={handleInputChangeRecency}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                 \r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Control Line *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"controlLine\"\r\n                                        id=\"controlLine\"\r\n                                        value={recency.controlLine}\r\n                                        onChange={handleInputChangeRecency}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Verification Line *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"verififcationLine\"\r\n                                        id=\"verififcationLine\"\r\n                                        value={recency.verififcationLine}\r\n                                        onChange={handleInputChangeRecency}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Long Term Line *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"longTermLine\"\r\n                                        id=\"longTermLine\"\r\n                                        value={recency.longTermLine}\r\n                                        onChange={handleInputChangeRecency}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Recency Interpretation *</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        name=\"rencencyInterpretation\"\r\n                                        id=\"rencencyInterpretation\"\r\n                                        type=\"text\"\r\n                                        value={recency.rencencyInterpretation}\r\n                                        disabled\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    />\r\n                                       \r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            {recency.rencencyInterpretation==='Recent' && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Has viral load request been made? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hasViralLoad\"\r\n                                        id=\"hasViralLoad\"\r\n                                        value={recency.hasViralLoad}\r\n                                        onChange={handleInputChangeRecency}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    \r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            {recency.hasViralLoad==='true' && (\r\n                            <>\r\n                                <div className=\"row\">\r\n                                    <h4>Viral Load Classification :</h4>\r\n                                    <br/>\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Sample Collected Date</Label>\r\n                                        <Input\r\n                                            className=\"form-control\"\r\n                                            name=\"sampleCollectedDate\"\r\n                                            id=\"sampleCollectedDate\"\r\n                                            type=\"date\"\r\n                                            value={recency.sampleCollectedDate}\r\n                                            min={recency.optOutRTRITestDate}\r\n                                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        />\r\n                                    \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Sample Refernce Number</Label>\r\n                                        <Input\r\n                                            className=\"form-control\"\r\n                                            name=\"sampleReferanceNumber\"\r\n                                            id=\"sampleReferanceNumber\"\r\n                                            type=\"text\"\r\n                                            value={recency.sampleReferanceNumber}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        />\r\n                                        {errors.sampleReferanceNumber !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sampleReferanceNumber}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Sample Type</Label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name=\"sampleType\"\r\n                                            id=\"sampleType\"\r\n                                            value={recency.sampleType}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        >\r\n                                            <option value={\"\"}></option>\r\n                                            <option value=\"DBS\">DBS</option>\r\n                                            <option value=\"Plasma\">Plasma</option>\r\n                                            \r\n                                        </select>\r\n                                        {errors.sampleType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sampleType}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Date Sample Sent to PCR Lab</Label>\r\n                                        <Input\r\n                                            className=\"form-control\"\r\n                                            name=\"dateSampleSentToPCRLab\"\r\n                                            id=\"dateSampleSentToPCRLab\"\r\n                                            type=\"date\"\r\n                                            min={recency.optOutRTRITestDate}\r\n                                            value={recency.dateSampleSentToPCRLab}\r\n                                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        />\r\n                                         {errors.dateSampleSentToPCRLab !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateSampleSentToPCRLab}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Sample Test Date</Label>\r\n                                        <Input\r\n                                            className=\"form-control\"\r\n                                            name=\"sampleTestDate\"\r\n                                            id=\"sampleTestDate\"\r\n                                            type=\"date\"\r\n                                            min={recency.optOutRTRITestDate}\r\n                                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                            value={recency.sampleTestDate}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        />\r\n                                        \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Receiving PCR Lab</Label>\r\n                                        <Input\r\n                                            className=\"form-control\"\r\n                                            name=\"receivingPcrLab\"\r\n                                            id=\"receivingPcrLab\"\r\n                                            type=\"text\"\r\n                                            value={recency.receivingPcrLab}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        />\r\n                                        \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Viral Load Result Classification and Result (copies/ml)</Label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name=\"viralLoadResultClassification\"\r\n                                            id=\"viralLoadResultClassification\"\r\n                                            value={recency.viralLoadResultClassification}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        >\r\n                                            <option value={\"\"}>Select</option>\r\n                                            <option value=\">=1000\">{\">= \"} 1000</option>\r\n                                            <option value=\"<1000\">{\"< \"} 1000</option>\r\n                                            <option value=\"Failed run\">Failed run</option>\r\n                                            <option value=\"Invalid viral load result\">Invalid viral load result</option>\r\n                                            \r\n                                        </select>\r\n                                        \r\n                                    </FormGroup>\r\n                                </div>\r\n                                {/* <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Result (copies/ml)</Label>\r\n                                        <Input\r\n                                            className=\"form-control\"\r\n                                            name=\"recencyResult\"\r\n                                            id=\"recencyResult\"\r\n                                            type=\"text\"\r\n                                            value={recency.recencyResult}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        />\r\n                                        \r\n                                    </FormGroup>\r\n                                </div> */}\r\n                                <div className=\"form-group  col-md-4\">\r\n                                    <FormGroup>\r\n                                        <Label>Final Recency Result</Label>\r\n                                        <Input\r\n                                            className=\"form-control\"\r\n                                            name=\"finalRecencyResult\"\r\n                                            id=\"finalRecencyResult\"\r\n                                            type=\"text\"\r\n                                            disabled\r\n                                            value={recency.finalRecencyResult}\r\n                                            onChange={handleInputChangeRecency}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        />\r\n\r\n                                    </FormGroup>\r\n                                </div>\r\n                                </div>\r\n                            </>\r\n                            )}\r\n                            </>)}\r\n                                                      \r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-12\">\r\n                            <Button content='Back' icon='left arrow' labelPosition='left' style={{backgroundColor:\"#992E62\", color:'#fff'}} onClick={()=>handleItemClick('post-test','post-test')}/>\r\n                            <Button content='Save & Continue' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default Recency","\r\nimport React, { useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card,} from \"@material-ui/core\";\r\nimport { toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useHistory, } from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Button} from 'semantic-ui-react'\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport {Label as LabelRibbon, Message} from 'semantic-ui-react'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },\r\n    success:{\r\n        color: 'green',\r\n        fontSize: '12.8px',\r\n        fontWeight:'bold'\r\n    }\r\n}));\r\n\r\n\r\nconst RiskStratification = (props) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    console.log(props)\r\n    const [enrollSetting, setEnrollSetting] = useState([]);\r\n    let riskCountQuestion=[]\r\n    const [kP, setKP] = useState([]);\r\n    const [errors, setErrors] = useState({});\r\n    const [saving, setSaving] = useState(false);\r\n    let temp = { ...errors }\r\n    const [open, setOpen] = React.useState(false)\r\n    const toggle = () => setOpen(!open);\r\n    const [setting, setSetting] = useState([]);\r\n    const [riskCount, setRiskCount] = useState(0);\r\n    const [objValues, setObjValues]= useState(\r\n        {\r\n            age:props.patientAge,\r\n            dob:\"\",//props.patientObj.dateOfBirth && props.patientObj.dateOfBirth!==null ? props.patientObj.dateOfBirth :\"\",\r\n            visitDate: \"\",         \r\n            dateOfBirth: \"\",//props.patientObj.dateOfBirth && props.patientObj.dateOfBirth!==null ? props.patientObj.dateOfBirth :\"\",\r\n            dateOfRegistration: \"\",//props.patientObj.dateOfRegistration,\r\n            isDateOfBirthEstimated: \"\",//props.patientObj.isDateOfBirthEstimated,//\r\n            targetGroup:\"\",\r\n            testingSetting:\"\",//\r\n            modality  :\"\", //\r\n            code:\"\",\r\n            personId: props.patientObj.personId,\r\n            riskAssessment: {},\r\n            entryPoint:\"\"\r\n\r\n        }\r\n    )\r\n    const [riskAssessment, setRiskAssessment]= useState(\r\n        {\r\n            everHadSexualIntercourse:\"\",\r\n            bloodtransInlastThreeMonths:\"\",\r\n            uprotectedSexWithCasualLastThreeMonths:\"\",\r\n            uprotectedSexWithRegularPartnerLastThreeMonths:\"\", \r\n            unprotectedVaginalSex:\"\",  \r\n            uprotectedAnalSex:\"\",   \r\n            stiLastThreeMonths:\"\",\r\n            sexUnderInfluence :\"\",\r\n            moreThanOneSexPartnerLastThreeMonths:\"\",\r\n            experiencePain:\"\",\r\n            haveSexWithoutCondom:\"\",\r\n            abuseDrug:\"\",\r\n            bloodTransfusion:\"\",\r\n            consistentWeightFeverNightCough:\"\",\r\n            soldPaidVaginalSex:\"\",\r\n            //New Question\r\n            lastHivTestForceToHaveSex:\"\", \r\n            lastHivTestHadAnal:\"\",\r\n            lastHivTestInjectedDrugs:\"\",\r\n            whatWasTheResult:\"\",\r\n            lastHivTestDone:\"\",\r\n            diagnosedWithTb:\"\",\r\n            lastHivTestPainfulUrination:\"\",\r\n            lastHivTestBloodTransfusion:\"\",\r\n            lastHivTestVaginalOral:\"\",\r\n            lastHivTestBasedOnRequest:\"\"\r\n        }\r\n    )\r\n    useEffect(() => { \r\n        KP();\r\n        EnrollmentSetting();\r\n    }, [props.patientObj]);\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TEST_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => { \r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        if(e.target.name==='testingSetting' && e.target.value!==\"\"){\r\n            SettingModality(e.target.value)\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value}); \r\n        }\r\n        if(e.target.name==='modality' && e.target.value!==\"\"){\r\n            //SettingModality(e.target.value)\r\n            if(e.target.value===\"TEST_SETTING_STANDALONE_HTS_PMTCT_(ANC1_ONLY)\"){\r\n                setRiskCount(1)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value}); \r\n            }else if(e.target.value===\"TEST_SETTING_STANDALONE_HTS_EMERGENCY\"){\r\n                //setRiskCount(1)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n            }else if(e.target.value===\"TEST_SETTING_STANDALONE_HTS_INDEX\"){\r\n                setRiskCount(1)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n            }else if(e.target.value===\"TEST_SETTING_STANDALONE_HTS_PMTCT_(POST_ANC1:_PREGNANCYL&DBF)\"){\r\n                setRiskCount(1)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n            }else if(e.target.value===\"TEST_SETTING_STANDALONE_HTS_STI\"){\r\n                setRiskCount(1)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n            }else if(e.target.value===\"TEST_SETTING_STANDALONE_HTS_TB\"){\r\n                setRiskCount(1)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n            }else if(e.target.value===\"TEST_SETTING_CT_STI\"){\r\n                setRiskCount(1)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n            }else if(e.target.value===\"TEST_SETTING_CT_PMTCT\"){\r\n                setRiskCount(1)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n            }else if(e.target.value===\"TEST_SETTING_CT_TB\"){\r\n                setRiskCount(1)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n            }else if(e.target.value===\"TEST_SETTING_TB_TB\"){\r\n                setRiskCount(1)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n            }else if(e.target.value===\"TEST_SETTING_STI_STI\"){\r\n                setRiskCount(1)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n            }else if(e.target.value===\"TEST_SETTING_OPD_STI\"){\r\n                //setRiskCount(1)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n            }else if(e.target.value===\"TEST_SETTING_OUTREACH_INDEX\"){\r\n                setRiskCount(1)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n            }else{\r\n                setRiskCount(0)\r\n                setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n            }\r\n            \r\n        }\r\n        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});            \r\n    }\r\n    //Date of Birth and Age handle \r\n    //Get list of DSD Model Type\r\n    function SettingModality (settingId) {\r\n        const setting = settingId\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/${setting}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setSetting(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });\r\n       \r\n    }\r\n    //End of Date of Birth and Age handling \r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        //HTS FORM VALIDATION\r\n            temp.dateVisit = objValues.visitDate ? \"\" : \"This field is required.\"  \r\n            temp.testingSetting = objValues.testingSetting ? \"\" : \"This field is required.\"\r\n            temp.modality = objValues.modality ? \"\" : \"This field is required.\"  \r\n            props.patientObj.age>15 && (temp.targetGroup = objValues.targetGroup ? \"\" : \"This field is required.\" )             \r\n            //targetGroup            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleItemClick =(page, completedMenu)=>{\r\n        props.handleItemClick(page)\r\n        if(props.completed.includes(completedMenu)) {\r\n\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n    }\r\n         // Getting the number count of riskAssessment True\r\n    const actualRiskCountTrue=Object.values(riskAssessment)\r\n    riskCountQuestion=actualRiskCountTrue.filter((x)=> x==='true')\r\n    const handleInputChangeRiskAssessment = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setRiskAssessment ({...riskAssessment,  [e.target.name]: e.target.value}); \r\n                            \r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n            //console.log(riskAssessment)\r\n            props.patientObj.targetGroup = objValues.targetGroup\r\n            props.patientObj.testingSetting = objValues.testingSetting\r\n            props.patientObj.dateVisit= objValues.visitDate\r\n            props.patientObj.riskAssessment =riskAssessment \r\n            \r\n            objValues.riskAssessment=riskAssessment\r\n            if((riskCount>0 || riskCountQuestion.length>0) && props.patientAge>15){\r\n                if(validate()){\r\n                    axios.post(`${baseUrl}risk-stratification`,objValues,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n                    \r\n                    )\r\n                    .then(response => {\r\n                        setSaving(false);\r\n                        objValues.code=response.data.code\r\n                        props.setExtra(objValues)\r\n                        handleItemClick('basic', 'risk' )\r\n                        props.setHideOtherMenu(false)\r\n                        //toast.success(\"Risk stratification save succesfully!\");\r\n                    })\r\n                    .catch(error => {\r\n                        setSaving(false);\r\n                        if(error.response && error.response.data){\r\n                            let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                            toast.error(errorMessage,  {position: toast.POSITION.BOTTOM_CENTER});\r\n                        }\r\n                        else{\r\n                            toast.error(\"Something went wrong. Please try again...\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n                        }\r\n                    });\r\n                }else{\r\n                    toast.error(\"All fields are required\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n                }  \r\n            }\r\n            // else{\r\n            //     if(validate()){\r\n            //         axios.post(`${baseUrl}risk-stratification`,objValues,\r\n            //         { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n                    \r\n            //         )\r\n            //         .then(response => {\r\n            //             setSaving(false);\r\n            //             objValues.code=response.data.code\r\n            //             props.patientObj.riskStratificationResponseDto = response.data\r\n            //             props.setActivePage({...props.activePage, activePage:\"home\"})\r\n            //             //props.setExtra(objValues)\r\n            //             //handleItemClick('basic', 'risk' )\r\n            //             //props.setHideOtherMenu(false)\r\n            //             // history.push({\r\n            //             //     pathname: '/patient-history',\r\n            //             //     state: {patientObject: props.patientObj, patientObj: props.patientObj.personResponseDto, clientCode:props.patientObj.clientCode}\r\n            //             // });\r\n            //             toast.success(\"Risk stratification save succesfully!\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n            //         })\r\n            //         .catch(error => {\r\n            //             console.log(error)\r\n            //             setSaving(false);\r\n            //             if(error.response && error.response.data){\r\n            //                 let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n            //                 toast.error(errorMessage,  {position: toast.POSITION.BOTTOM_CENTER});\r\n            //             }\r\n            //             else{\r\n            //                 toast.error(\"Something went wrong. Please try again...\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n            //             }\r\n            //         });\r\n            //     }else{\r\n            //         toast.error(\"All fields are required\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n            //     } \r\n            // }\r\n            if(props.patientAge<15){\r\n                if(validate()){\r\n                    axios.post(`${baseUrl}risk-stratification`,objValues,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n                    \r\n                    )\r\n                    .then(response => {\r\n                        setSaving(false);\r\n                        props.patientObj.riskStratificationResponseDto=response.data\r\n                        objValues.code=response.data.code\r\n                        props.setExtra(objValues)\r\n                        props.setHideOtherMenu(false)\r\n                        handleItemClick('basic', 'risk' )\r\n                        //toast.success(\"Risk stratification save succesfully!\");\r\n                    })\r\n                    .catch(error => {\r\n                        setSaving(false);\r\n                        if(error.response && error.response.data){\r\n                            let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                            toast.error(errorMessage,  {position: toast.POSITION.BOTTOM_CENTER});\r\n                        }\r\n                        else{\r\n                            toast.error(\"Something went wrong. Please try again...\");\r\n                        }\r\n                    });\r\n                }else{\r\n                    toast.error(\"All fields are required\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n                \r\n            }else{\r\n                props.setExtra(objValues)\r\n                if(validate()){\r\n                    axios.post(`${baseUrl}risk-stratification`,objValues,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n                    \r\n                    )\r\n                    .then(response => {\r\n                        setSaving(false);\r\n                        props.patientObj.riskStratificationResponseDto=response.data\r\n                        objValues.code=response.data.code\r\n                        props.setExtra(objValues)\r\n                        //toast.success(\"Risk stratification save succesfully!\");\r\n                    })\r\n                    .catch(error => {\r\n                        setSaving(false);\r\n                        if(error.response && error.response.data){\r\n                            let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                            toast.error(errorMessage,  {position: toast.POSITION.BOTTOM_CENTER});\r\n                        }\r\n                        else{\r\n                            toast.error(\"Something went wrong. Please try again...\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n                        }\r\n                    });\r\n                }else{\r\n                    toast.error(\"All fields are required\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n            }\r\n            \r\n    }\r\n\r\n    return (\r\n        <>  \r\n        \r\n            <Card className={classes.root}>\r\n                <CardBody>   \r\n                <h2 style={{color:'#000'}}>RISK STRATIFICATION</h2>\r\n                <br/>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Modality</div>\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Entry Point </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"entryPoint\"\r\n                                        id=\"entryPoint\"\r\n                                        value={objValues.entryPoint}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>                                      \r\n                                        <option value=\"Facility\">Facility</option>\r\n                                        <option value=\"Community\">Community</option>\r\n                                    </select>\r\n                                    {errors.entryPoint !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.entryPoint}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Visit Date * </Label>\r\n                                <Input\r\n                                    type=\"date\"\r\n                                    name=\"visitDate\"\r\n                                    id=\"visitDate\"\r\n                                    value={objValues.visitDate}\r\n                                    onChange={handleInputChange}\r\n                                    min=\"1983-12-31\"\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                    \r\n                                />\r\n                                {errors.dateVisit !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateVisit}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Setting</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"testingSetting\"\r\n                                        id=\"testingSetting\"\r\n                                        value={objValues.testingSetting}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        {enrollSetting.map((value) => (\r\n                                            <option key={value.id} value={value.code}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                        {/* <option value=\"TEST_SETTING_CT\">CT</option>\r\n                                        <option value=\"TEST_SETTING_TB\">TB</option>\r\n                                        <option value=\"TEST_SETTING_STI\">STI</option>\r\n                                        <option value=\"TEST_SETTING_OPD\">OPD</option>\r\n                                        <option value=\"TEST_SETTING_WARD\">WARD</option>\r\n                                        <option value=\"TEST_SETTING_STANDALONE_HTS\">STANDALONE HTS</option>\r\n                                        \r\n                                        <option value=\"TEST_SETTING_FP\">FP</option>\r\n                                        <option value=\"TEST_SETTING_OUTREACH\">OUTREACH</option>\r\n                                        <option value=\"TEST_SETTING_OTHERS\">OTHERS</option> */}\r\n\r\n                                    </select>\r\n                                    {errors.testingSetting !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.testingSetting}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Modality</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"modality\"\r\n                                        id=\"modality\"\r\n                                        value={objValues.modality}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        {setting.map((value) => (\r\n                                            <option key={value.code} value={value.code}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                        \r\n                                    </select>\r\n                                    {errors.modality !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.modality}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            </div>\r\n                            <br/>\r\n                           \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Target Group *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"targetGroup\"\r\n                                        id=\"targetGroup\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.targetGroup}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        {kP.map((value) => (\r\n                                            <option key={value.id} value={value.code}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    {errors.targetGroup !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroup}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                           \r\n\r\n                            <br />\r\n                             \r\n                            {props.patientAge>15 && ( <>\r\n                            {/* {(objValues.targetGroup!==\"\" && objValues.targetGroup===\"TARGET_GROUP_GEN_POP\" )&& ( <>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Ever had sexual intercourse </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"everHadSexualIntercourse\"\r\n                                        id=\"everHadSexualIntercourse\"\r\n                                        value={riskAssessment.everHadSexualIntercourse}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.everHadSexualIntercourse !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.everHadSexualIntercourse}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Blood transfusion in last 3 months *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"bloodtransInlastThreeMonths\"\r\n                                        id=\"bloodtransInlastThreeMonths\"\r\n                                        value={riskAssessment.bloodtransInlastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.bloodtransInlastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.bloodtransInlastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected sex with casual partner in last 3 months *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedSexWithCasualLastThreeMonths\"\r\n                                        id=\"uprotectedSexWithCasualLastThreeMonths\"\r\n                                        value={riskAssessment.uprotectedSexWithCasualLastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.uprotectedSexWithCasualLastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedSexWithCasualLastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected sex with regular partner in the last 3months</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\r\n                                        id=\"uprotectedSexWithRegularPartnerLastThreeMonths\"\r\n                                        value={riskAssessment.uprotectedSexWithRegularPartnerLastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.uprotectedSexWithRegularPartnerLastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedSexWithRegularPartnerLastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected vaginal sex</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedVaginalSex\"\r\n                                        id=\"unprotectedVaginalSex\"\r\n                                        value={riskAssessment.unprotectedVaginalSex}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.unprotectedVaginalSex !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.unprotectedVaginalSex}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Anal sex</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedAnalSex\"\r\n                                        id=\"uprotectedAnalSex\"\r\n                                        value={riskAssessment.uprotectedAnalSex}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.uprotectedAnalSex !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedAnalSex}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>         \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>STI in last 3 months *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"stiLastThreeMonths\"\r\n                                        id=\"stiLastThreeMonths\"\r\n                                        value={riskAssessment.stiLastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.stiLastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.stiLastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Sex under the influence of drugs or alcohol*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sexUnderInfluence\"\r\n                                        id=\"sexUnderInfluence\"\r\n                                        value={riskAssessment.sexUnderInfluence}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.sexUnderInfluence !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.sexUnderInfluence}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>More than 1 sex partner during last 3 months*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                                        id=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                                        value={riskAssessment.moreThanOneSexPartnerLastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.moreThanOneSexPartnerLastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.moreThanOneSexPartnerLastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                          \r\n                            <br/>\r\n                            </>)} */}\r\n                            {(objValues.targetGroup!==\"\" && objValues.targetGroup===\"TARGET_GROUP_GEN_POP\" ) && ( <>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Is this HIV test based on a Clinician/Doctor/Health Care Provider’s  request? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lastHivTestBasedOnRequest\"\r\n                                        id=\"lastHivTestBasedOnRequest\"\r\n                                        value={riskAssessment.lastHivTestBasedOnRequest}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lastHivTestBasedOnRequest !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lastHivTestBasedOnRequest}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>When was your last HIV test done?  *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lastHivTestDone\"\r\n                                        id=\"lastHivTestDone\"\r\n                                        value={riskAssessment.lastHivTestDone}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lastHivTestDone !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lastHivTestDone}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>What was the result? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"whatWasTheResult\"\r\n                                        id=\"whatWasTheResult\"\r\n                                        value={riskAssessment.whatWasTheResult}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.whatWasTheResult !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.whatWasTheResult}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Since your last HIV test, have you had anal or vaginal or oral sex without a condom with someone who was HIV positive or unaware of their HIV status? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lastHivTestVaginalOral\"\r\n                                        id=\"lastHivTestVaginalOral\"\r\n                                        value={riskAssessment.lastHivTestVaginalOral}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lastHivTestVaginalOral !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lastHivTestVaginalOral}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Since your last HIV test, have you had a blood or blood product transfusion? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lastHivTestBloodTransfusion\"\r\n                                        id=\"lastHivTestBloodTransfusion\"\r\n                                        value={riskAssessment.lastHivTestBloodTransfusion}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lastHivTestBloodTransfusion !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lastHivTestBloodTransfusion}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>    \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Since your last HIV test, have you experienced painful urination, lower abdominal pain, vaginal or penile discharge, pain during sexual intercourse, thick, cloudy, or foul smelling discharge and/or small bumps or blisters near the mouth, penis, vagina, or anal areas? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lastHivTestPainfulUrination\"\r\n                                        id=\"lastHivTestPainfulUrination\"\r\n                                        value={riskAssessment.lastHivTestPainfulUrination}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lastHivTestPainfulUrination !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lastHivTestPainfulUrination}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>   \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you been diagnosed with TB or currently have any of the following symptoms : cough, fever, weight loss, night sweats? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"diagnosedWithTb\"\r\n                                        id=\"diagnosedWithTb\"\r\n                                        value={riskAssessment.diagnosedWithTb}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.diagnosedWithTb !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.diagnosedWithTb}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Since your last HIV test, have you ever injected drugs, shared needles or other sharp objects with someone known to be HIV positive or who you didn’t know their HIV status? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lastHivTestInjectedDrugs\"\r\n                                        id=\"sexUnderInfluence\"\r\n                                        value={riskAssessment.lastHivTestInjectedDrugs}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lastHivTestInjectedDrugs !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lastHivTestInjectedDrugs}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Since your last HIV test, have you had anal, oral or vaginal sex in exchange for money or other benefits? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lastHivTestHadAnal\"\r\n                                        id=\"lastHivTestHadAnal\"\r\n                                        value={riskAssessment.lastHivTestHadAnal}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lastHivTestHadAnal !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lastHivTestHadAnal}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Since your last HIV test, have you been forced to have sex? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lastHivTestForceToHaveSex\"\r\n                                        id=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                                        value={riskAssessment.lastHivTestForceToHaveSex}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lastHivTestForceToHaveSex !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lastHivTestForceToHaveSex}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <br/>\r\n                            </>)}\r\n                            {(objValues.targetGroup!==\"\" && objValues.targetGroup!==\"TARGET_GROUP_GEN_POP\" ) && ( <>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you/your partner experienced lower abdominal pain, smelly discharge, blisters and wounds around you/partner vagina, penis anus or mouth?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"experiencePain\"\r\n                                        id=\"experiencePain\"\r\n                                        value={riskAssessment.experiencePain}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.experiencePain !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.experiencePain}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you/partner had sex without a condom with someone of unknown HIV status, or you/partner raped by person with unknown HIV status? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveSexWithoutCondom\"\r\n                                        id=\"haveSexWithoutCondom\"\r\n                                        value={riskAssessment.haveSexWithoutCondom}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveSexWithoutCondom !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveSexWithoutCondom}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had a condom burst with your partner during sexual intercourse?  *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveCondomBurst\"\r\n                                        id=\"haveCondomBurst\"\r\n                                        value={riskAssessment.haveCondomBurst}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveCondomBurst !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveCondomBurst}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Do you/partner share needles/syringes, other sharp objects or used abuse drug substances of any kind?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"abuseDrug\"\r\n                                        id=\"abuseDrug\"\r\n                                        value={riskAssessment.abuseDrug}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.abuseDrug !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.abuseDrug}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you/partner had any blood or blood product transfusion?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"bloodTransfusion\"\r\n                                        id=\"bloodTransfusion\"\r\n                                        value={riskAssessment.bloodTransfusion}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.bloodTransfusion !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.bloodTransfusion}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you/partner experienced coughing, weight loss, fever, night sweats consistently?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"consistentWeightFeverNightCough\"\r\n                                        id=\"consistentWeightFeverNightCough\"\r\n                                        value={riskAssessment.consistentWeightFeverNightCough}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.consistentWeightFeverNightCough !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.consistentWeightFeverNightCough}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>            \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you/partner paid or sold vaginal, anal or oral sex? *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"soldPaidVaginalSex\"\r\n                                        id=\"soldPaidVaginalSex\"\r\n                                        value={riskAssessment.soldPaidVaginalSex}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.soldPaidVaginalSex !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.soldPaidVaginalSex}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                           \r\n                            <br/>\r\n                            </>)}\r\n                            </>)}\r\n                            <br/>\r\n                            <Message warning>\r\n                                <h4>Personal HIV Risk assessment score </h4>\r\n                                <b>Score :{riskCount + (props.patientAge>15 ?riskCountQuestion.length : 0)}</b>\r\n                            </Message>\r\n                            <hr/>\r\n                            <br/>\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                           \r\n                            <Button content='Save' type=\"submit\" icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    \r\n                </CardBody>\r\n            </Card> \r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered>\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal>                             \r\n        </>\r\n    );\r\n};\r\n\r\nexport default RiskStratification","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport { Button} from 'semantic-ui-react'\r\nimport {Card, CardBody} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\n\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Icon, Menu, Sticky } from 'semantic-ui-react'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport BasicInfo from './BasicInfo'\r\nimport PreTest from './PreTest'\r\nimport HivTestResult from './HivTestResult'\r\nimport IndexingContactTracing from './Elicitation/Index'\r\nimport Others from './Others'\r\nimport PostTest from './PostTest'\r\nimport RecencyTesting from './RecencyTesting'\r\nimport RiskStratification from './RiskStratification'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },  \r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\n\r\nconst PmtctHts = (props) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const locationState = location.state;\r\n    const [saving, setSaving] = useState(false);\r\n    const [activeItem, setactiveItem] = useState('risk');\r\n    const [completed, setCompleted] = useState([]);\r\n    const [hideOtherMenu, setHideOtherMenu] = useState(true);\r\n    const [patientObj, setPatientObj] = useState({\r\n        breastFeeding: \"\",\r\n        capturedBy: \"\",\r\n        cd4: {},\r\n        clientCode: \"\",\r\n        riskStratificationCode:\"\",\r\n        confirmatoryTest: {},\r\n        dateVisit: \"\",\r\n        extra: {},\r\n        firstTimeVisit: \"\",\r\n        hepatitisTesting: {},\r\n        hivTestResult: \"\",\r\n        id: \"\",\r\n        indexClient: \"\",\r\n        indexClientCode: \"\",\r\n        indexElicitation: [\r\n          {\r\n            address: \"\",\r\n            altPhoneNumber: \"\",\r\n            archived: 0,\r\n            currentlyLiveWithPartner: true,\r\n            datePartnerCameForTesting: \"\",\r\n            dob: \"\",\r\n            extra: {},\r\n            facilityId: 0,\r\n            firstName: \"\",\r\n            hangOutSpots: \"\",\r\n            htsClient: {\r\n              archived: 0,\r\n              breastFeeding: 0,\r\n              capturedBy: \"\",\r\n              cd4: {},\r\n              clientCode: \"\",\r\n              confirmatoryTest: {},\r\n              dateVisit: \"\",\r\n              extra: {},\r\n              facilityId: 0,\r\n              firstTimeVisit: true,\r\n              hepatitisTesting: {},\r\n              hivTestResult: \"\",\r\n              id: 0,\r\n              indexClient: true,\r\n              indexClientCode: \"\",\r\n              indexNotificationServicesElicitation: {},\r\n              knowledgeAssessment: {},\r\n              numChildren: 0,\r\n              numWives: 0,\r\n              others: {},\r\n              person: {\r\n                active: \"\",\r\n                address: {},\r\n                archived: 0,\r\n                contact: {},\r\n                contactPoint: {},\r\n                createdDate: \"\",\r\n                dateOfBirth: \"\",\r\n                dateOfRegistration: \"\",\r\n                deceased: true,\r\n                deceasedDateTime: \"\",\r\n                education: {},\r\n                employmentStatus: {},\r\n                emrId: \"\",\r\n                facilityId: 0,\r\n                firstName: \"string\",\r\n                gender: {},\r\n                hospitalNumber: \"\",\r\n                id: \"\",\r\n                identifier: {},\r\n                isDateOfBirthEstimated: true,\r\n                lastModifiedDate: \"\",\r\n                maritalStatus: {},\r\n                new: true,\r\n                ninNumber: \"\",\r\n                organization: {},\r\n                otherName: \"\",\r\n                sex: \"\",\r\n                surname: \"\",\r\n                uuid: \"\"\r\n              },\r\n              personUuid: \"\",\r\n              postTestCounselingKnowledgeAssessment: {},\r\n              pregnant: \"\",\r\n              previouslyTested: true,\r\n              recency: {},\r\n              referredFrom: \"\",\r\n              relationWithIndexClient: \"\",\r\n              riskAssessment: {},\r\n              sexPartnerRiskAssessment: {},\r\n              stiScreening: {},\r\n              syphilisTesting: {},\r\n              targetGroup: 0,\r\n              tbScreening: {},\r\n              test1: {},\r\n              testingSetting: \"\",\r\n              tieBreakerTest: {},\r\n              typeCounseling: \"\",\r\n              uuid: \"\"\r\n            },\r\n            htsClientUuid: \"\",\r\n            id: \"\",\r\n            isDateOfBirthEstimated: true,\r\n            lastName: \"\",\r\n            middleName: \"\",\r\n            notificationMethod: \"\",\r\n            partnerTestedPositive: \"\",\r\n            phoneNumber: \"\",\r\n            physicalHurt: \"\",\r\n            relationshipToIndexClient: \"\",\r\n            sex: \"\",\r\n            sexuallyUncomfortable: \"\",\r\n            threatenToHurt: \"\",\r\n            uuid: \"\"\r\n          }\r\n        ],\r\n        indexNotificationServicesElicitation: {},\r\n        knowledgeAssessment: {},\r\n        numChildren: \"\",\r\n        numWives: \"\",\r\n        others: {},\r\n        personId: props.patientObj.personId,\r\n        personResponseDto: {\r\n          active: true,\r\n          \r\n        address: {\r\n            address: [\r\n              {\r\n                city: \"\",\r\n                line: [\r\n                  \"\"\r\n                ],\r\n                stateId: \"\",\r\n                district: \"\",\r\n                countryId: 1,\r\n                postalCode: \"\",\r\n                organisationUnitId: 0\r\n              }\r\n            ]\r\n          },\r\n          biometricStatus: true,\r\n          checkInDate: \"\",\r\n          contact: {},\r\n          contactPoint:{contactPoint:[\r\n            {\r\n                type: \"phone\",\r\n                value: \"\"\r\n            }\r\n            ]},\r\n          dateOfBirth: \"\",\r\n          dateOfRegistration: \"\",\r\n          deceased: true,\r\n          deceasedDateTime: \"\",\r\n          education: {},\r\n          employmentStatus: {},\r\n          emrId: \"\",\r\n          encounterDate: \"\",\r\n          facilityId: \"\",\r\n          firstName: \"\",\r\n          gender: {},\r\n          id: \"\",\r\n          identifier: {},\r\n          isDateOfBirthEstimated: true,\r\n          maritalStatus: {},\r\n          ninNumber: \"\",\r\n          organization: {},\r\n          otherName: \"\",\r\n          sex: \"\",\r\n          surname: \"\",\r\n          visitId: \"\"\r\n        },\r\n        postTestCounselingKnowledgeAssessment: {},\r\n        pregnant: \"\",\r\n        previouslyTested: \"\",\r\n        recency: {},\r\n        referredFrom: \"\",\r\n        relationWithIndexClient: \"\",\r\n        riskAssessment: {},\r\n        sexPartnerRiskAssessment: {},\r\n        stiScreening: {},\r\n        syphilisTesting: {},\r\n        targetGroup: \"\",\r\n        tbScreening: {},\r\n        test1: {},\r\n        testingSetting: \"\",\r\n        tieBreakerTest: {},\r\n        typeCounseling: \"\",\r\n        riskStratificationResponseDto:null\r\n        \r\n    });\r\n    const [extra, setExtra] = useState({\r\n    risk:\"\",\r\n    index:\"\",\r\n    pre:\"\",\r\n    post:\"\",\r\n    recency:\"\",\r\n    elicitation:\"\"\r\n});\r\n    const handleItemClick =(activeItem)=>{\r\n        setactiveItem(activeItem)\r\n        //setCompleted({...completed, ...completedMenu})\r\n    }\r\n    useEffect(() => { \r\n        // if(locationState && locationState.patientObj){\r\n        //     setPatientObj(locationState.patientObject)           \r\n        // }\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n           \r\n            <Card >\r\n                <CardBody>\r\n                <form >\r\n                    <div className=\"row\">\r\n                    <h3>HIV COUNSELLING AND TESTING \r\n                    </h3>\r\n                        <br/>\r\n                        <br/>\r\n                        \r\n                        <div className=\"col-md-3 col-sm-3 col-lg-3\">                       \r\n                        <Menu  size='large'  vertical  style={{backgroundColor:\"#014D88\"}}>\r\n                        <Menu.Item\r\n                                name='inbox'\r\n                                active={activeItem === 'risk'}\r\n                                onClick={()=>handleItemClick('risk')}\r\n                                style={{backgroundColor:activeItem === 'risk' ? '#000': \"\"}}\r\n                            >               \r\n                                <span style={{color:'#fff'}}> Risk Stratification\r\n                                {completed.includes('risk') && (\r\n                                    <Icon name='check' color='green' />\r\n                                )}\r\n                                </span>\r\n                                \r\n                            </Menu.Item>\r\n                            {hideOtherMenu===false && (<>\r\n                                <Menu.Item\r\n                                    name='inbox'\r\n                                    active={activeItem === 'basic'}\r\n                                    onClick={()=>handleItemClick('basic')}\r\n                                    style={{backgroundColor:activeItem === 'basic' ? '#000': \"\"}}\r\n                                    disabled={activeItem !== 'basic' ? true : false}\r\n                                >               \r\n                                    <span style={{color:'#fff'}}> Basic Information\r\n                                    {completed.includes('basic') && (\r\n                                        <Icon name='check' color='green' />\r\n                                    )}\r\n                                    </span>\r\n                                \r\n                                </Menu.Item>\r\n                            {props.patientObj.age>=15 && (\r\n                                <Menu.Item\r\n                                    name='spam'\r\n                                    active={activeItem === 'pre-test-counsel'}\r\n                                    onClick={()=>handleItemClick('pre-test-counsel')}\r\n                                    style={{backgroundColor:activeItem === 'pre-test-counsel' ? '#000': \"\"}}\r\n                                    disabled={activeItem !== 'pre-test-counsel' ? true : false}\r\n                                >\r\n                                {/* <Label>2</Label> */}\r\n                                <span style={{color:'#fff'}}>Pre Test Counseling\r\n                                {completed.includes('pre-test-counsel') && (\r\n                                    <Icon name='check' color='green' />\r\n                                )}\r\n                                </span>\r\n                                </Menu.Item>\r\n                            )}\r\n                            <Menu.Item\r\n                                name='inbox'\r\n                                active={activeItem === 'hiv-test'}\r\n                                onClick={()=>handleItemClick('hiv-test')}\r\n                                style={{backgroundColor:activeItem === 'hiv-test' ? '#000': \"\"}}\r\n                                //disabled={activeItem !== 'hiv-test' ? true : false}\r\n                            >               \r\n                                <span style={{color:'#fff'}}>Request {\"&\"} Result Form\r\n                                {completed.includes('hiv-test') && (\r\n                                    <Icon name='check' color='green' />\r\n                                )}\r\n                                </span>\r\n                                \r\n                                {/* <Label color='teal'>3</Label> */}\r\n                            </Menu.Item>\r\n                            <Menu.Item\r\n                                name='spam'\r\n                                active={activeItem === 'post-test'}\r\n                                onClick={()=>handleItemClick('post-test')}\r\n                                style={{backgroundColor:activeItem === 'post-test' ? '#000': \"\"}}\r\n                                disabled={activeItem !== 'post-test' ? true : false}\r\n                            >\r\n                            {/* <Label>4</Label> */}\r\n                            <span style={{color:'#fff'}}>Post Test Counseling\r\n                            {completed.includes('post-test') && (\r\n                                <Icon name='check' color='green' />\r\n                            )}\r\n                            </span>\r\n                            \r\n                            </Menu.Item>\r\n                            \r\n                            <Menu.Item\r\n                                name='spam'\r\n                                active={activeItem === 'recency-testing'}\r\n                                onClick={()=>handleItemClick('recency-testing')}\r\n                                style={{backgroundColor:activeItem === 'recency-testing' ? '#000': \"\"}}\r\n                                disabled={activeItem !== 'recency-testing' ? true : false}\r\n                            >\r\n                            {/* <Label>4</Label> */}\r\n                            <span style={{color:'#fff'}}>HIV Recency Testing\r\n                                {completed.includes('recency-testing') && (\r\n                                    <Icon name='check' color='green' />\r\n                                )}\r\n                            </span>\r\n                           \r\n                            </Menu.Item>\r\n                           \r\n                            <Menu.Item\r\n                                name='spam'\r\n                                active={activeItem === 'indexing'}\r\n                                onClick={()=>handleItemClick('indexing')}\r\n                                style={{backgroundColor:activeItem === 'indexing' ? '#000': \"\"}}\r\n                                disabled={activeItem !== 'indexing' ? true : false}\r\n                            >\r\n                            {/* <Label>4</Label> */}\r\n                            <span style={{color:'#fff'}}>Index Notification Services - Elicitation\r\n                            {completed.includes('indexing') && (\r\n                                <Icon name='check' color='green' />\r\n                            )}\r\n                            </span>\r\n                            \r\n                            </Menu.Item>\r\n                           </>\r\n                            )}\r\n                        </Menu>\r\n                        </div>\r\n                        \r\n                        <div className=\"col-md-9 col-sm-9 col-lg-9 \" style={{ backgroundColor:\"#fff\", margingLeft:\"-50px\", paddingLeft:\"-20px\"}}>\r\n                            {activeItem==='risk' && (<RiskStratification handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj}  setHideOtherMenu={setHideOtherMenu} patientAge={props.patientObj.age} setExtra={setExtra} extra={extra} activePage={props.activePage} setActivePage={props.setActivePage}/>)}\r\n                            {activeItem==='basic' && (<BasicInfo handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} clientCode={props.clientCode} patientAge={props.patientObj.age} setExtra={setExtra} extra={extra}/>)}\r\n                            {activeItem==='pre-test-counsel' && (<PreTest handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} clientCode={props.clientCode} patientAge={props.patientObj.age}/>)}\r\n                            {activeItem==='hiv-test' && (<HivTestResult handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} clientCode={props.clientCode} patientAge={props.patientObj.age}/>)}\r\n                            {activeItem==='post-test' && (<PostTest handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} clientCode={props.clientCode} patientAge={props.patientObj.age} patientsHistory={props.patients}/>)}\r\n                            {activeItem==='indexing' && (<IndexingContactTracing handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} clientCode={props.clientCode} patientAge={props.patientObj.age}/>)}\r\n                            {activeItem==='recency-testing' && (<RecencyTesting  handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} clientCode={props.clientCode} patientAge={props.patientObj.age}/>)}\r\n                            {activeItem==='others' && (<Others handleItemClick={handleItemClick} setCompleted={setCompleted} completed={completed} setPatientObj={setPatientObj} patientObj={patientObj} clientCode={props.clientCode} patientAge={props.patientObj.age}/>)}\r\n                            \r\n                        </div>                                   \r\n                    </div>\r\n\r\n                \r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default PmtctHts","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './PatientCard'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SubMenu from './SubMenu';\r\n//import RecentHistory from './../History/RecentHistory';\r\nimport ClinicVisit from '../Consultation/Index'\r\nimport PmtctEnrollment from './../PmtctServices/PmtctEnrollment';\r\nimport AncEnrollement from './../PmtctServices/AncEnrollement';\r\nimport LabourDelivery from './../PmtctServices/LabourDelivery';\r\nimport Biometrics from './Biometric'\r\nimport PmtctHts from './../PMTCTHTSEnrollment/Index'\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction PatientCard(props) {\r\n    let history = useHistory();\r\n    const [art, setArt] = useState(false);\r\n    const [activeContent, setActiveContent] = useState({route:\"recent-history\", id:\"\", activeTab:\"home\", actionType:\"create\", obj:{}});\r\n    const { classes } = props;\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    //console.log(patientObj)\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PMTCT /</Link> Patient Dashboard</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Card >\r\n        <CardContent>\r\n            <PatientCardDetail patientObj={patientObj} setArt={setArt} setActiveContent={setActiveContent}/>            \r\n            <SubMenu patientObj={patientObj} art={art} setActiveContent={setActiveContent}/>\r\n            <br/>\r\n          {/* {activeContent.route==='recent-history' &&(<RecentHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)} */}\r\n          {activeContent.route==='biometrics' &&(<Biometrics patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='consultation' &&( <ClinicVisit patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='anc-pnc' &&( <PmtctEnrollment patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='anc-enrollment' &&( <AncEnrollement patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='labour-delivery' &&( <LabourDelivery patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {activeContent.route==='pmtct-hts' &&( <PmtctHts patientObj={patientObj} patientAge={patientObj.age} setActiveContent={setActiveContent} activeContent={activeContent}/>)}\r\n          {/* History Pages */}\r\n         \r\n         </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form, InputGroup} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport  './patient.css'\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },  \r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n                \r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState(\r\n        {   ancNo:\"\",\r\n            gaweeks: \"\",\r\n            gravida: \"\",\r\n            expectedDeliveryDate:\"\",\r\n            lmp: \"\",\r\n            parity: \"\",\r\n            hivDiognosicTime:\"\",\r\n            referredSyphilisTreatment: \"\",\r\n            testResultSyphilis: \"\",\r\n            testedSyphilis: \"\",\r\n            treatedSyphilis: \"\",\r\n            personDto:{},\r\n            pmtctHtsInfo:{},\r\n            syphilisInfo:{},\r\n            partnerNotification:{}\r\n        });\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [ancNumberCheck, setAncNumberCheck] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n\r\n     //status for hospital Number \r\n     const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n     const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    patientId = locationState ? locationState.patientId : null;\r\n    let temp = { ...errors }\r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n    \r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n          \r\n    }, [basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            \r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n        //console.log(getCountryId)\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }   \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n                if(m<18){\r\n                    alert(\"The child is less than 18months\")\r\n                    setDisabledAgeBaseOnAge(true)\r\n                }else{\r\n                    setDisabledAgeBaseOnAge(false)\r\n                }\r\n                if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n                basicInfo.age=age_now\r\n                //setBasicInfo({...basicInfo, age: age_now});        \r\n                } else {\r\n                    setBasicInfo({...basicInfo, age:  \"\"});\r\n                }\r\n                setBasicInfo({...basicInfo, dob: e.target.value});\r\n                if(basicInfo.age!=='' && basicInfo.age>=60){\r\n                    toggle()\r\n                }\r\n           \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            if(e.target.value!=='' && e.target.value>=60){\r\n                toggle()\r\n            }\r\n            if(e.target.value <=1){\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {  \r\n        setErrors({...temp, [e.target.name]:\"\"})      \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='377') {\r\n            setfemaleStatus(true)\r\n        } \r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n        if(e.target.name==='ancNo' && e.target.value!==''){\r\n\r\n        async function getAncNumber() {\r\n            const ancNumber=e.target.value\r\n            const response = await axios.get(`${baseUrl}pmtct/anc/exist/anc-number/${ancNumber}`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                );\r\n            if(response.data===true){\r\n                console.log(response.data)\r\n                \r\n                toast.error(\"ANC number already exist\")\r\n                setAncNumberCheck(response.data)\r\n            }else{\r\n                setAncNumberCheck(false)\r\n            }\r\n        }\r\n        getAncNumber();\r\n        } \r\n                \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.phone = relatives.phone ? \"\" : \"Phone Number  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n            setRelatives({ \r\n                address:\"\",\r\n                phone:\"\",\r\n                firstName: \"\",\r\n                email: \"\",\r\n                relationshipId: \"\",\r\n                lastName: \"\",\r\n                middleName: \"\"\r\n            })\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        \r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Gender is required.\"\r\n            temp.dateOfRegistration = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //ANC FORM VALIDATION\r\n            temp.gaweeks = objValues.gaweeks ? \"\" : \"This field is required\"\r\n            temp.gravida = objValues.gravida ? \"\" : \"This field is required\"\r\n            temp.referredSyphilisTreatment = objValues.referredSyphilisTreatment ? \"\" : \"This field is required\"\r\n            temp.lmp = objValues.lmp ? \"\" : \"This field is required\"\r\n            temp.parity = objValues.parity ? \"\" : \"This field is required\"\r\n            temp.testedSyphilis = objValues.testedSyphilis ? \"\" : \"This field is required\"\r\n            temp.treatedSyphilis = objValues.treatedSyphilis ? \"\" : \"This field is required\"\r\n            temp.sourceOfReferral = objValues.sourceOfReferral ? \"\" : \"This field is required\"\r\n            temp.testResultSyphilis = objValues.testResultSyphilis ? \"\" : \"This field is required\"\r\n            temp.ancNo = objValues.ancNo ? \"\" : \"This field is required\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                objValues.personDto=patientForm;\r\n                //patientDTO.personDto=objValues;\r\n                //console.log(objValues)\r\n                const response = await axios.post(`${baseUrl}pmtct/anc/anc-new-registration`, objValues, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Register successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    if(error.response.data.apierror && error.response.data.apierror.message!==\"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message!==\"\"){\r\n                        toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }else{\r\n                        toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL_PMTCT`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {  \r\n        setErrors({...temp, [e.target.name]:\"\"})        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});          \r\n    }      \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Handle CheckBox \r\n    // const handleCheckBox =e =>{\r\n    //     if(e.target.checked){\r\n    //         setOvcEnrolled(true)\r\n    //     }else{\r\n    //         setOvcEnrolled(false)\r\n    //     }\r\n    // }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <ToastContainer autoClose={3000} hideProgressBar />\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PMTCT /</Link> Patient Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n          <Link\r\n                to={{\r\n                    pathname: \"/\",\r\n                    state: 'users'\r\n                }}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\" float-end mr-10 pr-10\"\r\n                    style={{backgroundColor:'#014d88',fontWeight:\"bolder\", margingRight:\"-40px\"}}\r\n                    startIcon={<TiArrowBack />}\r\n                >\r\n                    <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                </Button>\r\n            </Link>\r\n            <br /><br/>\r\n  \r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    \r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {/* {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"} */}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={1094328}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.id}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                \r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                \r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        id=\"dob\"\r\n                                                        max={basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        \r\n                                                        type=\"number\"\r\n                                                        name=\"age\"                                                       \r\n                                                        className=\"form-control\"                                                        \r\n                                                        id=\"age\"\r\n                                                        min=\"1\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        id=\"ninNumber\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                   onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                   //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                ) : \"\" } */}\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    \r\n                                                />\r\n                                                 {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                ) : \"\" } */}\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    required\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e,'phone')}}\r\n                                                                        />\r\n                                                                    {errors.phone !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.phone}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"email\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            required\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            \r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>ANC  Enrollment</h5>\r\n                                </div>\r\n\r\n                            <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                              \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >ANC No *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"text\"\r\n                                                    name=\"ancNo\"\r\n                                                    id=\"ancNo\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.ancNo} \r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                            {errors.ancNo !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.ancNo}</span>\r\n                                            ) : \"\" }  \r\n                                            {ancNumberCheck===true ? (\r\n                                                        <span className={classes.error}>{\"ANC number already exist\"}</span>\r\n                                                    ) : \"\" }         \r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Gravida *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"number\"\r\n                                                    name=\"gravida\"\r\n                                                    id=\"gravida\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.gravida} \r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                            {errors.gravida !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.gravida}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Parity *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"number\"\r\n                                                    name=\"parity\"\r\n                                                    id=\"parity\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.parity} \r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                            {errors.parity !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.parity}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Date Of Last Menstrual Period* </Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"date\"\r\n                                                    name=\"lmp\"\r\n                                                    id=\"lmp\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.lmp} \r\n                                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                            {errors.lmp !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lmp}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                    </div>\r\n                                   \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Gestational Age (Weeks)*</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"number\"\r\n                                                    name=\"gaweeks\"\r\n                                                    id=\"gaweeks\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.gaweeks} \r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                            {errors.gaweeks !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.gaweeks}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Source of Referral*</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"select\"\r\n                                                    name=\"sourceOfReferral\"\r\n                                                    id=\"sourceOfReferral\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.sourceOfReferral} \r\n                                                >\r\n                                                {/* sourceReferral */}\r\n                                                <option value=\"\">Select</option>\r\n                                                {sourceReferral.map((value, index) => (\r\n                                                    <option key={index} value={value.code}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                            </InputGroup>\r\n                                            {errors.sourceOfReferral !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sourceOfReferral}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                    </div>                                \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Tested for syphilis *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"select\"\r\n                                                    name=\"testedSyphilis\"\r\n                                                    id=\"testedSyphilis\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.testedSyphilis} \r\n                                                >\r\n                                                     <option value=\"\" >Select</option>\r\n                                                    <option value=\"Yes\" >Yes</option>\r\n                                                    <option value=\"No\" >No</option>\r\n                                                </Input>\r\n                                            </InputGroup> \r\n                                            {errors.testedSyphilis !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.testedSyphilis}</span>\r\n                                            ) : \"\" }                                       \r\n                                            </FormGroup>\r\n                                    </div>\r\n                                \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Syphilis test result *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"select\"\r\n                                                    name=\"testResultSyphilis\"\r\n                                                    id=\"testResultSyphilis\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.testResultSyphilis} \r\n                                                >\r\n                                                    <option value=\"\" >Select</option>\r\n                                                    <option value=\"Positive\" >Positive</option>\r\n                                                    <option value=\"Negative\" >Negative</option>\r\n                                                </Input>\r\n                                            </InputGroup> \r\n                                            {errors.testResultSyphilis !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.testResultSyphilis}</span>\r\n                                            ) : \"\" }                                        \r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Treated for syphilis (penicillin) *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"select\"\r\n                                                    name=\"treatedSyphilis\"\r\n                                                    id=\"treatedSyphilis\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.encounterDate} \r\n                                                >\r\n                                                    <option value=\"\" >Select</option>\r\n                                                    <option value=\"Yes\" >Yes</option>\r\n                                                    <option value=\"No\" >No</option>\r\n                                                </Input>\r\n                                            </InputGroup> \r\n                                            {errors.treatedSyphilis !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.treatedSyphilis}</span>\r\n                                            ) : \"\" }                                        \r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Referred Syphilis +ve client *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"select\"\r\n                                                    name=\"referredSyphilisTreatment\"\r\n                                                    id=\"referredSyphilisTreatment\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.referredSyphilisTreatment} \r\n                                                >\r\n                                                    <option value=\"\" >Select</option>\r\n                                                    <option value=\"Yes\" >Yes</option>\r\n                                                    <option value=\"No\" >No</option>\r\n                                                </Input>\r\n                                            </InputGroup>\r\n                                            {errors.referredSyphilisTreatment !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.referredSyphilisTreatment}</span>\r\n                                            ) : \"\" }                                         \r\n                                            </FormGroup>\r\n                                    </div>\r\n                                   \r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                                onClick={handleCancel}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal> \r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form, InputGroup} from \"reactstrap\";\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\nimport {  Modal } from \"react-bootstrap\";\r\n\r\n\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [genders, setGenders]= useState([]);\r\n    const [ancNumberCheck, setAncNumberCheck] = useState(false);\r\n    const [errors, setErrors] = useState({})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({   ancNo:\"\",\r\n            gaweeks: \"\",\r\n            gravida: \"\",\r\n            expectedDeliveryDate:\"\",\r\n            lmp: \"\",\r\n            parity: \"\",\r\n            person_uuid:\"\",\r\n            hivDiognosicTime:\"\",\r\n            referredSyphilisTreatment: \"\",\r\n            testResultSyphilis: \"\",\r\n            testedSyphilis: \"\",\r\n            treatedSyphilis: \"\",\r\n            personDto:{},\r\n            pmtctHtsInfo:{},\r\n            syphilisInfo:{},\r\n            partnerNotification:{},\r\n            sourceOfReferral:\"\"\r\n    });\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n    const [sourceOfReferral, setSourceOfReferral] = useState([]);\r\n    useEffect(() => { \r\n        loadGenders();\r\n        getSex();\r\n        PregnancyStatus();\r\n        if(patientObj){\r\n            const identifiers = patientObj.identifier;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type === 'HospitalNumber');\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.hospitalNumber=hospitalNumber && hospitalNumber ? hospitalNumber.value : ''\r\n            setObjValues ({...objValues,  uniqueId: hospitalNumber ? hospitalNumber.value : ''});\r\n            basicInfo.genderId=patientObj && patientObj.gender ? patientObj.gender.id : null\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            objValues.personId=patientObj.id\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        SOURCE_REFERRAL_PMTCT() \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n    //Get list of Source of Referral\r\n    const SOURCE_REFERRAL_PMTCT =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL_PMTCT`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setSourceOfReferral(response.data)\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    const getSex =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/SEX`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            let patientSex=\"\"\r\n            if(patientObj.sex==='female' || patientObj.sex==='Female' || patientObj.sex==='FEMALE'){\r\n                 patientSex= 'Female'\r\n            }\r\n            if(patientObj.sex==='Male' || patientObj.sex==='male' || patientObj.sex==='MALE' ){\r\n                 patientSex= 'Male'\r\n            }\r\n            const getSexId=  response.data.find((x)=> x.display===patientSex)//get patient sex ID by filtering the request\r\n            basicInfo.sexId=getSexId.display\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n    };\r\n\r\n    const handleAgeChange = (e) => {\r\n        const ageNumber = e.target.value.replace(/\\D/g, '')\r\n        if (!ageDisabled && ageNumber) {\r\n            if(ageNumber!=='' && ageNumber>=60){\r\n                toggle()\r\n            }\r\n            if(ageNumber <=1){\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((ageNumber * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: ageNumber});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.gaweeks = objValues.gaweeks ? \"\" : \"This field is required\"\r\n            temp.gravida = objValues.gravida ? \"\" : \"This field is required\"\r\n            temp.referredSyphilisTreatment = objValues.referredSyphilisTreatment ? \"\" : \"This field is required\"\r\n            temp.lmp = objValues.lmp ? \"\" : \"This field is required\"\r\n            temp.parity = objValues.parity ? \"\" : \"This field is required\"\r\n            temp.testedSyphilis = objValues.testedSyphilis ? \"\" : \"This field is required\"\r\n            temp.treatedSyphilis = objValues.treatedSyphilis ? \"\" : \"This field is required\"\r\n            temp.sourceOfReferral = objValues.sourceOfReferral ? \"\" : \"This field is required\"\r\n            temp.testResultSyphilis = objValues.testResultSyphilis ? \"\" : \"This field is required\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => { \r\n        \r\n        setErrors({...errors, [e.target.name]: \"\"})        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value});              \r\n    } \r\n\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"}) \r\n        if(e.target.name==='ancNo' && e.target.value!==''){\r\n\r\n            async function getAncNumber() {\r\n                const ancNumber=e.target.value\r\n                const ancNo= {\r\n                    ancNo:ancNumber\r\n                }\r\n                const response = await axios.post(`${baseUrl}pmtct/anc/exist/anc-number/${ancNumber}`,ancNo,\r\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                    );\r\n                if(response.data===true){\r\n                    \r\n                    toast.error(\"ANC number already exist\")\r\n                    setAncNumberCheck(response.data)\r\n                }else{\r\n                    setAncNumberCheck(false)\r\n                }\r\n            }\r\n            getAncNumber();\r\n            }       \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});                \r\n    }    \r\n\r\n    //Handle CheckBox \r\n\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n\r\n         if(validate()){\r\n            try {\r\n\r\n                objValues.person_uuid = patientObj.uuid;\r\n                console.log(objValues)\r\n                const response = await axios.post(`${baseUrl}pmtct/anc/anc-enrollement`, objValues, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Register successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    if(error.response.data.apierror && error.response.data.apierror.message!==\"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message!==\"\"){\r\n                        toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }else{\r\n                        toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }\r\n                }\r\n                else{\r\n                    toast.error(\"Something went wrong. Please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\nconsole.log(errors)\r\n    return (\r\n        <>\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >HIV /</Link> Patient Enrollment</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <Link\r\n                        to={{\r\n                            pathname: \"/\",\r\n                            state: 'users'\r\n                        }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName + \" \"+ basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: 'none', backgroundColor: 'transparent', outline:'none'}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: 'none', backgroundColor: 'transparent', outline:'none'}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>            \r\n\r\n                                            <div className=\"form-group  col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex </Label>\r\n                                                    <Input\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: 'none', backgroundColor: 'transparent', outline:'none'}}\r\n                                                            \r\n                                                        />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: 'none', backgroundColor: 'transparent', outline:'none'}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>                                     \r\n                                    </div>\r\n                                </div>\r\n                           \r\n                            </div>\r\n\r\n                            {/* Adding  ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                            <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                <h5 className=\"card-title\"  style={{color:'#fff'}}>ANC  Enrollment</h5>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                              \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >ANC No *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"text\"\r\n                                                    name=\"ancNo\"\r\n                                                    id=\"ancNo\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.ancNo} \r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                            {errors.ancNo !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.ancNo}</span>\r\n                                            ) : \"\" }  \r\n                                            {ancNumberCheck===true ? (\r\n                                                        <span className={classes.error}>{\"ANC number already exist\"}</span>\r\n                                                    ) : \"\" }         \r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Gravida *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"number\"\r\n                                                    name=\"gravida\"\r\n                                                    id=\"gravida\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.gravida} \r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                            {errors.gravida !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.gravida}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Parity *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"number\"\r\n                                                    name=\"parity\"\r\n                                                    id=\"parity\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.parity} \r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                            {errors.parity !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.parity}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Date Of Last Menstrual Period * </Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"date\"\r\n                                                    name=\"lmp\"\r\n                                                    id=\"lmp\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.lmp} \r\n                                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                            {errors.lmp !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lmp}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                    </div>\r\n                                   \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Gestational Age (Weeks) *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"number\"\r\n                                                    name=\"gaweeks\"\r\n                                                    id=\"gaweeks\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.gaweeks} \r\n                                                />\r\n\r\n                                            </InputGroup>\r\n                                            {errors.gaweeks !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.gaweeks}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Source of Referral *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"select\"\r\n                                                    name=\"sourceOfReferral\"\r\n                                                    id=\"sourceOfReferral\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.sourceOfReferral} \r\n                                                >\r\n                                                     <option value=\"\">Select</option>\r\n                                                    {sourceOfReferral.map((value, index) => (\r\n                                                        <option key={index} value={value.code}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Input>\r\n\r\n                                            </InputGroup>\r\n                                            {errors.sourceOfReferral !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sourceOfReferral}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                    </div>                                \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Tested for syphilis *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"select\"\r\n                                                    name=\"testedSyphilis\"\r\n                                                    id=\"testedSyphilis\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.testedSyphilis} \r\n                                                >\r\n                                                     <option value=\"\" >Select</option>\r\n                                                    <option value=\"Yes\" >Yes</option>\r\n                                                    <option value=\"No\" >No</option>\r\n                                                </Input>\r\n                                            </InputGroup> \r\n                                            {errors.testedSyphilis !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.testedSyphilis}</span>\r\n                                            ) : \"\" }                                       \r\n                                            </FormGroup>\r\n                                    </div>\r\n                                \r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Syphilis test result *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"select\"\r\n                                                    name=\"testResultSyphilis\"\r\n                                                    id=\"testResultSyphilis\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.testResultSyphilis} \r\n                                                >\r\n                                                    <option value=\"\" >Select</option>\r\n                                                    <option value=\"Positive\" >Positive</option>\r\n                                                    <option value=\"Negative\" >Negative</option>\r\n                                                </Input>\r\n                                            </InputGroup> \r\n                                            {errors.testResultSyphilis !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.testResultSyphilis}</span>\r\n                                            ) : \"\" }                                        \r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Treated for syphilis (penicillin) *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"select\"\r\n                                                    name=\"treatedSyphilis\"\r\n                                                    id=\"treatedSyphilis\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.encounterDate} \r\n                                                >\r\n                                                    <option value=\"\" >Select</option>\r\n                                                    <option value=\"Yes\" >Yes</option>\r\n                                                    <option value=\"No\" >No</option>\r\n                                                </Input>\r\n                                            </InputGroup> \r\n                                            {errors.treatedSyphilis !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.treatedSyphilis}</span>\r\n                                            ) : \"\" }                                        \r\n                                            </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                            <FormGroup>\r\n                                            <Label >Referred Syphilis +ve client *</Label>\r\n                                            <InputGroup> \r\n                                                <Input \r\n                                                    type=\"select\"\r\n                                                    name=\"referredSyphilisTreatment\"\r\n                                                    id=\"referredSyphilisTreatment\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.referredSyphilisTreatment} \r\n                                                >\r\n                                                    <option value=\"\" >Select</option>\r\n                                                    <option value=\"Yes\" >Yes</option>\r\n                                                    <option value=\"No\" >No</option>\r\n                                                </Input>\r\n                                            </InputGroup>\r\n                                            {errors.referredSyphilisTreatment !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.referredSyphilisTreatment}</span>\r\n                                            ) : \"\" }                                         \r\n                                            </FormGroup>\r\n                                    </div>\r\n                                   \r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                onClick={handleCancel}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\"  }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    console.log(props)\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrerId:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\",\r\n     householdNumber:\"\", referredToOVCPartner:\"\", dateReferredToOVCPartner:\"\",\r\n     referredFromOVCPartner:\"\", dateReferredFromOVCPartner:\"\",\r\n     careEntryPointOther:\"\"});\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n    \r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n    //status for hospital Number \r\n    const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n    const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n    \r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n            const contacts = patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(contacts.contact);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type == 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber ? hospitalNumber.value : ''\r\n            basicInfo.maritalStatusId=patientObj.maritalStatus.id\r\n            basicInfo.employmentStatusId=patientObj.employmentStatus.id\r\n            basicInfo.genderId=patientObj.gender ? patientObj.gender.id : null\r\n            basicInfo.sexId=patientObj.sex \r\n            basicInfo.educationId=patientObj.education.id\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value : \"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value : \"\"\r\n            basicInfo.email=email && email.value ? email.value : \"\"\r\n            basicInfo.address=country && country.city ? country.city : \"\"\r\n            basicInfo.landmark=country.line[0]\r\n            basicInfo.countryId=country.countryId\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country.stateId)\r\n            basicInfo.stateId=country.stateId\r\n            basicInfo.district=country.district\r\n            setObjValues(patientObj.enrollment)\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n      };\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: e.target.value});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n            async function getCharacters() {\r\n                const hosiptalNumber=e.target.value\r\n                const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                    );\r\n                if(response.data!==true){\r\n                    setHospitalNumStatus(false)\r\n                    setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                    setHospitalNumStatus2(true)\r\n                }else{\r\n                    setHospitalNumStatus(false)\r\n                    setHospitalNumStatus2(true)\r\n                }\r\n            }\r\n            getCharacters();\r\n            }  \r\n             \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };     \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.targetGroupId = objValues.targetGroupId ? \"\" : \"Target group is required.\"\r\n            temp.dateConfirmedHiv = objValues.dateConfirmedHiv ? \"\" : \"date confirm HIV is required.\"\r\n            temp.sourceOfReferrerId = objValues.sourceOfReferrerId ? \"\" : \"Source of referrer is required.\"\r\n            temp.enrollmentSettingId = objValues.enrollmentSettingId ? \"\" : \"Enrollment Setting Number  is required.\"\r\n            temp.tbStatusId = objValues.tbStatusId ? \"\" : \"TB status is required.\"    \r\n            temp.statusAtRegistrationId = objValues.statusAtRegistrationId ? \"\" : \"Status at Registration is required.\"  \r\n            temp.entryPointId = objValues.entryPointId ? \"\" : \"Care Entry Point is required.\" \r\n            temp.dateOfRegistration = objValues.dateOfRegistration ? \"\" : \"Date of Registration is required.\"  \r\n            temp.uniqueId = objValues.uniqueId ? \"\" : \"Unique ID is required.\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId.id\r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.genderId,\r\n                    sexId:basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber: basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.hivEnrollment=objValues;\r\n                const response = await axios.put(`${baseUrl}hiv/patient/${patientObj.id}`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Updated successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage); \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n        if(e.target.name ===\"pregnancyStatusId\" ){\r\n            console.log(e.target.value)\r\n            if(e.target.value===\"72\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }                  \r\n    }    \r\n    \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.cardBottom}>\r\n                <CardContent>\r\n                <Link\r\n                    to={{\r\n                        pathname: \"/patient-history\",\r\n                        state: { patientObj: patientObj  }\r\n                    }}\r\n                >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Edit User Information</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={Math.floor(Math.random() * 1094328)}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        max={today}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"nin\"\r\n                                                        id=\"nin\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>HIV Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"uniqueId\">Unique ID No  * </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"uniqueId\"\r\n                                        id=\"uniqueId\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.uniqueId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled\r\n                                        \r\n                                    />\r\n                                    {errors.uniqueId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"dateOfRegistration\">Date of Enrollment * </Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateOfRegistration\"\r\n                                        id=\"dateOfRegistration\"\r\n                                        min={basicInfo.dateOfRegistration}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateOfRegistration}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    />\r\n                                    {errors.dateOfRegistration !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">Care Entry Point * </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"entryPointId\"\r\n                                    id=\"entryPointId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.entryPointId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> </option>                  \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                {transferIn===true ? \r\n                                    (\r\n                                        <FormGroup>\r\n                                        <Label >Facility Name</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"facilityName\"\r\n                                            id=\"facilityName\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.facilityName}  \r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        </FormGroup>\r\n                                    ):\"\"}\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Status at Registration *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"statusAtRegistrationId\"\r\n                                    id=\"statusAtRegistrationId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.statusAtRegistrationId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> Select</option>                  \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of Confirmed HIV Test *</Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateConfirmedHiv\"\r\n                                        id=\"dateConfirmedHiv\"\r\n                                        min={basicInfo.dob}\r\n                                        max={objValues.dateOfRegistration}\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateConfirmedHiv}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    /> \r\n                                    {errors.dateConfirmedHiv !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                        ) : \"\" } \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Source of Referral *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"sourceOfReferrerId\"\r\n                                        id=\"sourceOfReferrerId\"\r\n                                        value={objValues.sourceOfReferrerId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    >\r\n                                        <option value=\"\">Select </option>                 \r\n                                            {sourceReferral.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.sourceOfReferrerId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sourceOfReferrerId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Enrollment Setting *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"enrollmentSettingId\"\r\n                                        id=\"enrollmentSettingId\"\r\n                                        value={objValues.enrollmentSettingId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        onChange={handleInputChange}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n\r\n                                            {enrollSetting.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.enrollmentSettingId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.enrollmentSettingId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {(femaleStatus && basicInfo.age > 9) && (\r\n                                    <>\r\n                                   \r\n                                    <div className = \"form-group mb-3 col-md-6\" >\r\n                                        <FormGroup>\r\n                                        <Label> Pregnancy </Label>\r\n                                        <Input\r\n                                            type = \"select\"\r\n                                            name = \"pregnancyStatusId\"\r\n                                            id = \"pregnancyStatusId\"\r\n                                            value = {objValues.pregnancyStatusId}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            onChange = {handleInputChange}  \r\n                                            //disabled={locationState.actionType==='update'? false : true}                                      \r\n                                        >\r\n                                        < option value = \"\" >Select </option>\r\n                                        {pregnancyStatus.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>                                                                        \r\n                                    </FormGroup>  \r\n                                    </div>\r\n                                    {objValues.pregnancyStatusId!=='72' && (\r\n                                    <>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of LMP </Label>                                    \r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateOfLpm\"\r\n                                            id=\"dateOfLpm\"\r\n                                            max={today}\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateOfLpm}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />  \r\n                                            \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    </>\r\n                                    )}\r\n                                    </>\r\n                                )}\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >TB Status * </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"tbStatusId\"\r\n                                        id=\"tbStatusId\"\r\n                                        value={objValues.tbStatusId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n                                            {tbStatus.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                    </Input>\r\n                                    {errors.tbStatusId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.tbStatusId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {hideTargetGroup===\"false\" ? (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Target Group *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"targetGroupId\"\r\n                                        id=\"targetGroupId\"\r\n                                        value={objValues.targetGroupId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>                    \r\n                                                {kP.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                    </Input>\r\n                                    {errors.targetGroupId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroupId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                ) : \"\"}\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                {basicInfo.age <=14 && (\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                )}\r\n                                {/* <div className=\"form-group mb-3 col-md-3\">\r\n                                    {ovcEnrolled===true ? \r\n                                        (\r\n                                        <FormGroup>\r\n                                        <Label >OVC Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"ovcNumber\"\r\n                                            id=\"ovcNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.ovcNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div> */}\r\n                                \r\n                                {ovcEnrolled===true && \r\n                                (\r\n                                <>        \r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Household Unique Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"householdNumber\"\r\n                                            id=\"householdNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.householdNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\"></div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredToOVCPartner\"\r\n                                            id=\"referredToOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredToOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredToOVCPartner\"\r\n                                            id=\"dateReferredToOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredToOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredFromOVCPartner\"\r\n                                            id=\"referredFromOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredFromOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredFromOVCPartner\"\r\n                                            id=\"dateReferredFromOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredFromOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                </>\r\n                                )}\r\n                            \r\n                            </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n                            {locationState.actionType ==='update' ?\r\n                            (\r\n                                <>\r\n                                    <MatButton\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<SaveIcon />}\r\n                                        onClick={handleSubmit}\r\n                                        style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                    >\r\n                                        {!saving ? (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                                        ) : (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                                        )}\r\n                                    </MatButton>\r\n            \r\n                                    <MatButton\r\n                                        variant=\"contained\"\r\n                                        className={classes.button}\r\n                                        startIcon={<CancelIcon />}\r\n                                        onClick={handleCancel}\r\n                                        style={{backgroundColor:'#992E62'}}\r\n                                    >\r\n                                        <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                                    </MatButton>\r\n                            </>\r\n                            ):\"\"}\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Home from './main/webapp/jsx/components/Home'\r\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail'\r\nimport RegisterPatientPage from './main/webapp/jsx/components/Patient/RegisterPatient';\r\nimport EnrollPatientPage from './main/webapp/jsx/components/Patient/EnrollPatient';\r\nimport UpdatePatientEnrollment from './main/webapp/jsx/components/Patient/UpdatePatientEnrollment';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/patient-history\">\r\n            <PatientDetail />\r\n          </Route> \r\n          <Route path=\"/register-patient\">\r\n            <RegisterPatientPage />\r\n          </Route>\r\n          <Route path=\"/enroll-patient\">\r\n            <EnrollPatientPage />\r\n          </Route>\r\n          <Route path=\"/update-patient\">\r\n            <UpdatePatientEnrollment />\r\n          </Route>\r\n\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>       \r\n          \r\n        </Switch>\r\n      </div>\r\n </Router>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}